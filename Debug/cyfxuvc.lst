
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f438  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  40012438  40012438  00012438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012588  40012588  00012588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  40012620  40012620  00012620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012a8c  40012a8c  00012a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012ab8  40012ab8  00012ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012bb0  40012bb0  00012bb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012bbc  40012bbc  00012bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012bc8  40012bc8  00012bc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012bf0  40012bf0  00012bf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012c00  40012c00  00012c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012c10  40012c10  00012c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012c20  40012c20  00012c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012c34  40012c34  00012c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012c44  40012c44  00012c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012c50  40012c50  00012c50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012c64  40012c64  00012c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012ca0  40012ca0  00012ca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012cc8  40012cc8  00012cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012d00  40012d00  00012d00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012d34  40012d34  00012d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012d4c  40012d4c  00012d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012d64  40012d64  00012d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012d80  40012d80  00012d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012e04  40012e04  00012e04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012ed8  40012ed8  00012ed8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012f20  40012f20  00012f20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  400130b0  400130b0  000130b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40013130  40013130  00013130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40013140  40013140  00013140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  40013374  40013374  00013374  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  4001346c  4001346c  0001346c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013704  40013704  00013704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  4001373c  4001373c  0001373c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013798  40013798  00013798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  400137b8  400137b8  000137b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013814  40013814  00013814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013838  40013838  00013838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013858  40013858  00013858  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  4001394c  4001394c  0001394c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  400139d8  400139d8  000139d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  400139dc  400139dc  000139dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013a00  40013a00  00013a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013b14  40013b14  00013b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013bb4  40013bb4  00013bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013c0c  40013c0c  00013c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013c5c  40013c5c  00013c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013d58  40013d58  00013d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013e08  40013e08  00013e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013ebc  40013ebc  00013ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013ee4  40013ee4  00013ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013ef4  40013ef4  00013ef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40014094  40014094  00014094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  400141ac  400141ac  000141ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  400141fc  400141fc  000141fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  4001436c  4001436c  0001436c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014444  40014444  00014444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  400144c8  400144c8  000144c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  400144e0  400144e0  000144e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  40014660  40014660  00014660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  400146a0  400146a0  000146a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  400146b0  400146b0  000146b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  400146c0  400146c0  000146c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  400146d0  400146d0  000146d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  400146e0  400146e0  000146e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  400147b0  400147b0  000147b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  400149e0  400149e0  000149e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014a70  40014a70  00014a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014ae4  40014ae4  00014ae4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014b0c  40014b0c  00014b0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014b48  40014b48  00014b48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014b70  40014b70  00014b70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014b98  40014b98  00014b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014bc0  40014bc0  00014bc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014be8  40014be8  00014be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014c10  40014c10  00014c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014c38  40014c38  00014c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014c64  40014c64  00014c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014ccc  40014ccc  00014ccc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014ce0  40014ce0  00014ce0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014d34  40014d34  00014d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014d94  40014d94  00014d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014e34  40014e34  00014e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014f14  40014f14  00014f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014ff4  40014ff4  00014ff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  4001503c  4001503c  0001503c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  400150e8  400150e8  000150e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  4001512c  4001512c  0001512c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  400151a0  400151a0  000151a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015304  40015304  00015304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015358  40015358  00015358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  400153ac  400153ac  000153ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  4001569c  4001569c  0001569c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  4001572c  4001572c  0001572c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015998  40015998  00015998  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015d80  40015d80  00015d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015e30  40015e30  00015e30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015f04  40015f04  00015f04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  400160b8  400160b8  000160b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  400163ec  400163ec  000163ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  4001650c  4001650c  0001650c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016578  40016578  00016578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  40016670  40016670  00016670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  4001674c  4001674c  0001674c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  400168ec  400168ec  000168ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016ad8  40016ad8  00016ad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016cf8  40016cf8  00016cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016f30  40016f30  00016f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40017060  40017060  00017060  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40017204  40017204  00017204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017304  40017304  00017304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  40017420  40017420  00017420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  40017474  40017474  00017474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017834  40017834  00017834  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017b20  40017b20  00017b20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017e18  40017e18  00017e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  4001855c  4001855c  0001855c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  400186b0  400186b0  000186b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  400187e0  400187e0  000187e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018910  40018910  00018910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018a4c  40018a4c  00018a4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018cbc  40018cbc  00018cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018f18  40018f18  00018f18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40019098  40019098  00019098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40019220  40019220  00019220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  400192d4  400192d4  000192d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  4001938c  4001938c  0001938c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019428  40019428  00019428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  400194c8  400194c8  000194c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019834  40019834  00019834  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019dc4  40019dc4  00019dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a3a4  4001a3a4  0001a3a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001aa2c  4001aa2c  0001aa2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001aa90  4001aa90  0001aa90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001aae0  4001aae0  0001aae0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001abd8  4001abd8  0001abd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001acf0  4001acf0  0001acf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001ad6c  4001ad6c  0001ad6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001aea0  4001aea0  0001aea0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001b004  4001b004  0001b004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001b054  4001b054  0001b054  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b304  4001b304  0001b304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b488  4001b488  0001b488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b4c8  4001b4c8  0001b4c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b580  4001b580  0001b580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b610  4001b610  0001b610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b898  4001b898  0001b898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b8a8  4001b8a8  0001b8a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b9fc  4001b9fc  0001b9fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001bb7c  4001bb7c  0001bb7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bde0  4001bde0  0001bde0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bdf0  4001bdf0  0001bdf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bebc  4001bebc  0001bebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bf7c  4001bf7c  0001bf7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bf8c  4001bf8c  0001bf8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c584  4001c584  0001c584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c608  4001c608  0001c608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c7d0  4001c7d0  0001c7d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c8f4  4001c8f4  0001c8f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001ca3c  4001ca3c  0001ca3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001cbb0  4001cbb0  0001cbb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001cc7c  4001cc7c  0001cc7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001ce44  4001ce44  0001ce44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001ce54  4001ce54  0001ce54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001ce64  4001ce64  0001ce64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001ceb0  4001ceb0  0001ceb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cf1c  4001cf1c  0001cf1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001cf98  4001cf98  0001cf98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001d04c  4001d04c  0001d04c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d224  4001d224  0001d224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d544  4001d544  0001d544  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d550  4001d550  0001d550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d634  4001d634  0001d634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d80c  4001d80c  0001d80c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d900  4001d900  0001d900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d9f0  4001d9f0  0001d9f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001dbc8  4001dbc8  0001dbc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001dd8c  4001dd8c  0001dd8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dee0  4001dee0  0001dee0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e270  4001e270  0001e270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e5e8  4001e5e8  0001e5e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e660  4001e660  0001e660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e6d8  4001e6d8  0001e6d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e874  4001e874  0001e874  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001ea58  4001ea58  0001ea58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ecc8  4001ecc8  0001ecc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ed80  4001ed80  0001ed80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001edb0  4001edb0  0001edb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001ee50  4001ee50  0001ee50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f230  4001f230  0001f230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f31c  4001f31c  0001f31c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f938  4001f938  0001f938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f9d4  4001f9d4  0001f9d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001fa44  4001fa44  0001fa44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001fac0  4001fac0  0001fac0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fc34  4001fc34  0001fc34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fca0  4001fca0  0001fca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fed4  4001fed4  0001fed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fef0  4001fef0  0001fef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  400200e8  400200e8  000200e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  4002035c  4002035c  0002035c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020414  40020414  00020414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  4002052c  4002052c  0002052c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020928  40020928  00020928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020a20  40020a20  00020a20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020b2c  40020b2c  00020b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020cf8  40020cf8  00020cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020d4c  40020d4c  00020d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020dac  40020dac  00020dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020ef0  40020ef0  00020ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020f40  40020f40  00020f40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40021134  40021134  00021134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  400212c4  400212c4  000212c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  4002145c  4002145c  0002145c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  4002166c  4002166c  0002166c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021e78  40021e78  00021e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021ec8  40021ec8  00021ec8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021fcc  40021fcc  00021fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  400220e0  400220e0  000220e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  400220ec  400220ec  000220ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  400220fc  400220fc  000220fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40022110  40022110  00022110  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40022124  40022124  00022124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40022130  40022130  00022130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40022170  40022170  00022170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40022188  40022188  00022188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  400221a0  400221a0  000221a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  400221dc  400221dc  000221dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  4002220c  4002220c  0002220c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40022238  40022238  00022238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  400222b8  400222b8  000222b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002234c  4002234c  0002234c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  4002249c  4002249c  0002249c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022528  40022528  00022528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022608  40022608  00022608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022618  40022618  00022618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002266c  4002266c  0002266c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022708  40022708  00022708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  40022774  40022774  00022774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  400227e0  400227e0  000227e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022958  40022958  00022958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022a74  40022a74  00022a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022c38  40022c38  00022c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022d28  40022d28  00022d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022e00  40022e00  00022e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022e84  40022e84  00022e84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022e94  40022e94  00022e94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022ea4  40022ea4  00022ea4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022f00  40022f00  00022f00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022fe8  40022fe8  00022fe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  400230a0  400230a0  000230a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  400230e4  400230e4  000230e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023300  40023300  00023300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023350  40023350  00023350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  400234dc  400234dc  000234dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  40023538  40023538  00023538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  4002362c  4002362c  0002362c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002371c  4002371c  0002371c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  400238d8  400238d8  000238d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  4002391c  4002391c  0002391c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023b34  40023b34  00023b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023d64  40023d64  00023d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023d74  40023d74  00023d74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00001390  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  400313a0  400313a0  00029390  2**5
                  ALLOC
266 .debug_abbrev 0000115b  00000000  00000000  00029390  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d438  00000000  00000000  0002a4eb  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   0002305f  00000000  00000000  000a7923  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca982  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d6827  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d685c  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    00004365  00000000  00000000  000d7615  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000eb8b  00000000  00000000  000db97a  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 00007702  00000000  00000000  000ea505  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1c08  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a714  00000000  00000000  000f1ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000548  00000000  00000000  000fc3bc  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fc904  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031a80 	.word	0x40031a80

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp_.debug_frame$20>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp_.debug_frame$20+0x4>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_frame$69+0x3c>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <__ARM_grp_.debug_frame$20+0x14>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x2c>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$20+0xc>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x44>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$20+0xc>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$34+0x8>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x34>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$41+0x8>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$41+0x34>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x1c>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x48>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0x24>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_frame$62+0x4>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp_.debug_frame$20>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_frame$62+0x34>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp_.debug_frame$20>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_frame$62+0x48>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_frame$69+0x28>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$20+0x8>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$38+0x10>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp_.debug_frame$20>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x5>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$38+0x4>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x5>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$45+0x15>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x5>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$45+0x9>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x5>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$45+0x21>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$52+0xb>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp_.debug_pubnames$59+0x8>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp_.debug_frame$20>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp_.debug_pubnames$66+0x5>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp_.debug_frame$20>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp_.debug_pubnames$66+0x29>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp_.debug_frame$20>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x2>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp_.debug_frame$20>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	400311c4 	.word	0x400311c4
     af8:	400311ac 	.word	0x400311ac
     afc:	40031ebc 	.word	0x40031ebc
     b00:	40031dec 	.word	0x40031dec
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	400311c0 	.word	0x400311c0
     b10:	e0010000 	.word	0xe0010000
     b14:	400311c8 	.word	0x400311c8

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_pubnames$38+0x22>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x8>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$122+0x21>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$41+0xc>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0xd>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_line$1+0x19>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55+0x18>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_line$1+0x19>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55+0x18>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_line$1+0x1d>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$94+0x8>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_frame$13>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$59+0x15>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x11>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$80+0x10>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$94+0x1c>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_frame$62+0x2c>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_frame$62+0x34>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_line$1+0x25>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_frame$69+0x30>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_line$1+0x25>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_line$1+0x29>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_line$1+0x2d>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0xd>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0xd>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_line$1+0x25>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_line$1+0x25>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_line$1+0x29>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_line$15+0x5>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$31+0x9>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$31+0x9>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_line$1+0x2d>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$52+0x19>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_line$15+0x9>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$38+0x27>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_line$15+0x9>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$38+0x27>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_line$15+0xd>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$52+0x19>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$52+0x19>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$52+0x5>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$52+0x19>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_line$15+0xd>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$59+0x11>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_frame$27>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$73+0x16>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_line$1+0x2d>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$80+0xc>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_line$1+0x25>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_line$1+0x29>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_frame$27>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_frame$27+0x4>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$108+0x24>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$101+0x19>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$108+0x20>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_line$1+0x1d>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$115+0xd>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$122+0x15>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_frame$27+0x8>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$122+0x21>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$122+0x21>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$122+0x21>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_line$1+0x1d>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_frame$41>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_frame$48+0x8>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_pubnames$38+0x22>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$73+0x6>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp_.debug_frame$55+0x1c>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp_.debug_pubnames$52+0x7>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp_.debug_frame$62+0xc>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_frame$27+0xc>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_pubnames$59+0x18>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_frame$27+0xc>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27+0x20>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x18>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_frame$27+0x14>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_line$15+0x5>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_frame$27+0x14>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$27+0x8>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_frame$27+0x14>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$10+0x34>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_line$15+0xd>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$52+0xb>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_frame$27+0x10>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_line$15+0xd>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_line$15+0x5>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$38+0xb>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$38+0xb>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$38+0xb>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_line$1+0x2d>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$38+0xb>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$55>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$52+0x3>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$59+0x14>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$73+0x6>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_line$1+0x11>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$73+0x6>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$73+0x6>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x27>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_frame$76+0x10>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_frame$83>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_frame$27+0x18>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_frame$27+0x1c>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_pubnames$129+0x13>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_frame$27+0x20>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$90+0x8>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_pubnames$129+0xb>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp_.debug_pubnames$136+0x10>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Hm3000__709$SAOzQ5_H00000+0x4>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Hm3000__709$SAOzQ5_H00000+0x20>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Hm3000__709$SAOzQ5_H00000+0x3c>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xf>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_frame$27+0x14>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xf>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xf>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_line$15+0x1>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x27>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_frame$111+0x8>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$24+0x2>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$31+0x3>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$38>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_frame$125+0x1c>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$52+0x3>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$59+0x9>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$139+0x8>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_pubnames$73+0x16>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_line$1+0xd>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_frame$27+0x24>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_frame$27+0x24>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_line$1+0x9>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_frame$27+0x24>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_line$1+0x21>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_line$1+0x1d>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_line$1+0x15>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	400321c0 	.word	0x400321c0
    17cc:	40031210 	.word	0x40031210
    17d0:	400311f0 	.word	0x400311f0
    17d4:	40032338 	.word	0x40032338
    17d8:	400311fc 	.word	0x400311fc
    17dc:	00001005 	.word	0x00001005
    17e0:	400311f8 	.word	0x400311f8
    17e4:	40031228 	.word	0x40031228
    17e8:	400311cc 	.word	0x400311cc
    17ec:	40031230 	.word	0x40031230
    17f0:	40031240 	.word	0x40031240
    17f4:	40031200 	.word	0x40031200
    17f8:	00000908 	.word	0x00000908
    17fc:	400311f4 	.word	0x400311f4
    1800:	80008000 	.word	0x80008000
    1804:	4003123c 	.word	0x4003123c
    1808:	e0031000 	.word	0xe0031000
    180c:	40031ef8 	.word	0x40031ef8
    1810:	40031f98 	.word	0x40031f98
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$31+0x14>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$31+0x18>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_line$22+0x1>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_line$22+0x5>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_line$22+0x9>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_line$22+0xd>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_line$22+0x11>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$38+0x1>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$38+0x5>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$38+0x9>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_frame$48>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_frame$48+0x4>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$48+0x8>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$48+0xc>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_frame$48+0x10>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_frame$48+0x14>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$48+0x18>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$48+0x1c>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_pubnames$45>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	400123ec 	.word	0x400123ec
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$52+0x1d>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$52+0x21>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_frame$90+0x10>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_frame$90+0x10>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_pubnames$52+0x3>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40031248 	.word	0x40031248

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <CyU3PSib1IntHandler+0x20>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <CyU3PSib1IntHandler+0x20>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	40031a30 	.word	0x40031a30

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$108+0x2e>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x1>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <CyU3PLppDmaIntHandler+0x2c>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <CyU3PLppDmaIntHandler+0x14>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$115+0x2>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_frame$27+0x14>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_frame$27+0xc>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_frame$27+0x4>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <CyU3PPportDmaIntHandler+0x20>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$80+0x2>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_frame$34>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$73+0x21>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$73+0x9>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$115+0x6>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$87+0x13>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$87+0xb>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <CyU3PSibDmaIntHandler+0x14>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_frame$27>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$101+0xb>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$101+0x3>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$94+0x13>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_frame$27+0x4>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$108+0x2a>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_pubnames$108+0x22>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_pubnames$108+0x1a>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$108+0x2>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000ad5c 	.word	0x4000ad5c

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__CyU3PBusyWait_veneer+0x4>
    1fb4:	40013704 	.word	0x40013704

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__ARM_grp_.debug_pubnames$122+0x1>
    1fbc:	40022188 	.word	0x40022188

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a4f0 	.word	0x4000a4f0

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	400220fc 	.word	0x400220fc

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000ae4c 	.word	0x4000ae4c

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	400222b8 	.word	0x400222b8

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__ARM_grp_.debug_pubnames$129+0x2>
    1fe4:	400144c8 	.word	0x400144c8

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <___tx_thread_irq_nesting_end_veneer+0x4>
    1fec:	4000af64 	.word	0x4000af64

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000af88 	.word	0x4000af88

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	400220e0 	.word	0x400220e0

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fc34 	.word	0x4001fc34

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <__ARM_grp_.debug_pubnames$143+0x2>
    200c:	4000ad08 	.word	0x4000ad08

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x1>
    2014:	4000a3b0 	.word	0x4000a3b0

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009e24 	.word	0x40009e24

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40013ebc 	.word	0x40013ebc

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c7d0 	.word	0x4001c7d0

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b488 	.word	0x4001b488

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	400227e0 	.word	0x400227e0

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__ARM_grp_.debug_frame$41>
    2044:	40021134 	.word	0x40021134

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	400163ec 	.word	0x400163ec

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea00404b 	b	40013140 <CyU3PDebugPrint>
40003010:	40010be0 	.word	0x40010be0

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb004042 	bl	40013140 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb004035 	bl	40013140 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb004027 	bl	40013140 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb00401a 	bl	40013140 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb00400d 	bl	40013140 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb004000 	bl	40013140 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003ff2 	bl	40013140 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003fe5 	bl	40013140 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003fd8 	bl	40013140 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003fcb 	bl	40013140 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003fbe 	bl	40013140 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003fb1 	bl	40013140 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003fa4 	bl	40013140 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003f97 	bl	40013140 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003f8a 	bl	40013140 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003f7d 	bl	40013140 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003f70 	bl	40013140 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003f64 	bl	40013140 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010bf8 	.word	0x40010bf8
400033b8:	40010c14 	.word	0x40010c14
400033bc:	40010c74 	.word	0x40010c74

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001aa7 	bl	40009e8c <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010ccc 	.word	0x40010ccc

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb00156b 	bl	40008a44 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb001567 	bl	40008a44 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003f01 	bl	40013140 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010b60 	.word	0x40010b60
40003548:	40010ce0 	.word	0x40010ce0

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006828 	b	4001d634 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	400313a0 	.word	0x400313a0

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea001447 	b	4000872c <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	400313a0 	.word	0x400313a0
40003614:	400336c4 	.word	0x400336c4

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea00408b 	b	40013858 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb0018a9 	bl	40009908 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	400313c0 	.word	0x400313c0
4000366c:	4003330c 	.word	0x4003330c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb00146a 	bl	40008830 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb001856 	bl	400097f8 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	4003330c 	.word	0x4003330c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea001917 	b	40009b18 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb0018a5 	bl	40009e8c <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb001309 	bl	40008830 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0016f5 	bl	400097f8 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb0018c2 	bl	4000a004 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	400313c0 	.word	0x400313c0
40003d00:	400313c4 	.word	0x400313c4
40003d04:	4003330c 	.word	0x4003330c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb0012c6 	bl	40008830 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0018d7 	bl	4000a084 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001776 	bl	40009b18 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb001900 	bl	4000a158 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea0018a8 	b	4000a004 <_txe_mutex_delete>
40003d60:	400313c4 	.word	0x400313c4
40003d64:	400313c0 	.word	0x400313c0

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb0012ae 	bl	40008830 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb0018bf 	bl	4000a084 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb0018c1 	bl	4000a158 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb00189c 	bl	4000a158 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	400313c4 	.word	0x400313c4
40003ef0:	400313c0 	.word	0x400313c0

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb00124b 	bl	40008830 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb00185c 	bl	4000a084 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001887 	bl	4000a158 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	400313c4 	.word	0x400313c4
40004024:	400313c0 	.word	0x400313c0

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0011ff 	bl	40008830 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb001810 	bl	4000a084 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb0016ae 	bl	40009b18 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb001838 	bl	4000a158 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0017e1 	bl	4000a004 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001684 	bl	40009a98 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	400313c4 	.word	0x400313c4
40004094:	400313c0 	.word	0x400313c0
40004098:	4003330c 	.word	0x4003330c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007e94 	bl	40023b34 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400040e8:	e3a00064 	mov	r0, #100	; 0x64
400040ec:	eb003d84 	bl	40013704 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007d7f 	bl	4002371c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004124:	e3a00064 	mov	r0, #100	; 0x64
40004128:	eb003d75 	bl	40013704 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003bfa 	bl	40013140 <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003bf3 	bl	40013140 <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40011040 	.word	0x40011040
40004178:	40011024 	.word	0x40011024

4000417c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000022 	bne	40004238 <SensorWrite2B+0xbc>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041d8:	eb007e55 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000011 	beq	4000422c <SensorWrite2B+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041e4:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041ec:	e1a0000d 	mov	r0, sp
400041f0:	e28d100c 	add	r1, sp, #12
400041f4:	e1a0200c 	mov	r2, ip
400041f8:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400041fc:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004204:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004208:	eb007e49 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000420c:	e2504000 	subs	r4, r0, #0
40004210:	0a000002 	beq	40004220 <SensorWrite2B+0xa4>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004214:	e1a00004 	mov	r0, r4
40004218:	e28dd014 	add	sp, sp, #20
4000421c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004220:	e3a00064 	mov	r0, #100	; 0x64
40004224:	eb003d36 	bl	40013704 <CyU3PBusyWait>
40004228:	eafffff9 	b	40004214 <SensorWrite2B+0x98>
4000422c:	e3a00064 	mov	r0, #100	; 0x64
40004230:	eb003d33 	bl	40013704 <CyU3PBusyWait>
40004234:	eaffffea 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004238:	e3a00004 	mov	r0, #4
4000423c:	e59f1008 	ldr	r1, [pc, #8]	; 4000424c <SensorWrite2B+0xd0>
40004240:	eb003bbe 	bl	40013140 <CyU3PDebugPrint>
		return 1;
40004244:	e3a04001 	mov	r4, #1
40004248:	eafffff1 	b	40004214 <SensorWrite2B+0x98>
4000424c:	4001105c 	.word	0x4001105c

40004250 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004250:	e35000a0 	cmp	r0, #160	; 0xa0
40004254:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004258:	e92d4010 	push	{r4, lr}
4000425c:	e1a0c000 	mov	ip, r0
40004260:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004264:	03a0e000 	moveq	lr, #0
40004268:	13a0e001 	movne	lr, #1
4000426c:	1a00001a 	bne	400042dc <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
40004270:	e3530040 	cmp	r3, #64	; 0x40
40004274:	8a000013 	bhi	400042c8 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004278:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
4000427c:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004280:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004284:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004288:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
4000428c:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004290:	e28d0004 	add	r0, sp, #4
40004294:	e59d1018 	ldr	r1, [sp, #24]
40004298:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
4000429c:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
400042a0:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a4:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a8:	eb007e21 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042ac:	e2504000 	subs	r4, r0, #0
400042b0:	1a000001 	bne	400042bc <SensorWrite+0x6c>
	{
		CyU3PBusyWait(100); //change into 100us.
400042b4:	e3a00064 	mov	r0, #100	; 0x64
400042b8:	eb003d11 	bl	40013704 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042bc:	e1a00004 	mov	r0, r4
400042c0:	e28dd010 	add	sp, sp, #16
400042c4:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c8:	e3a00004 	mov	r0, #4
400042cc:	e59f101c 	ldr	r1, [pc, #28]	; 400042f0 <SensorWrite+0xa0>
400042d0:	eb003b9a 	bl	40013140 <CyU3PDebugPrint>
		return 1;
400042d4:	e3a04001 	mov	r4, #1
400042d8:	eafffff7 	b	400042bc <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042dc:	e3a00004 	mov	r0, #4
400042e0:	e59f100c 	ldr	r1, [pc, #12]	; 400042f4 <SensorWrite+0xa4>
400042e4:	eb003b95 	bl	40013140 <CyU3PDebugPrint>
		return 1;
400042e8:	e3a04001 	mov	r4, #1
400042ec:	eafffff2 	b	400042bc <SensorWrite+0x6c>
400042f0:	40011080 	.word	0x40011080
400042f4:	4001105c 	.word	0x4001105c

400042f8 <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400042f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042fc:	e35000a1 	cmp	r0, #161	; 0xa1
40004300:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004304:	e24dd01c 	sub	sp, sp, #28
40004308:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000430c:	03a0c000 	moveq	ip, #0
40004310:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004314:	e1a06001 	mov	r6, r1
40004318:	e1a0e002 	mov	lr, r2
4000431c:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007df6 	bl	40023b34 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004360:	e3a00064 	mov	r0, #100	; 0x64
40004364:	eb003ce6 	bl	40013704 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004368:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
4000436c:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004370:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004374:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a0200e 	mov	r2, lr
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
4000438c:	eb007ce2 	bl	4002371c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004398:	e3a00064 	mov	r0, #100	; 0x64
4000439c:	eb003cd8 	bl	40013704 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd01c 	add	sp, sp, #28
400043a8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x104>
400043b4:	eb003b61 	bl	40013140 <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x108>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003b59 	bl	40013140 <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x10c>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003b51 	bl	40013140 <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xa8>
400043fc:	4001105c 	.word	0x4001105c
40004400:	40011024 	.word	0x40011024
40004404:	40011040 	.word	0x40011040

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007cab 	bl	4002371c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(100); //change into 100us.
40004474:	e3a00064 	mov	r0, #100	; 0x64
40004478:	eb003ca1 	bl	40013704 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003b2a 	bl	40013140 <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003b25 	bl	40013140 <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	40011080 	.word	0x40011080
400044b4:	4001105c 	.word	0x4001105c

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb007a17 	bl	40022d28 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003b18 	bl	40013140 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb00134a 	bl	4000920c <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb001155 	bl	40008a44 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb001346 	bl	4000920c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003b0c 	bl	40013140 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb00133e 	bl	4000920c <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb001149 	bl	40008a44 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb00133a 	bl	4000920c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003b00 	bl	40013140 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb0079f7 	bl	40022d28 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea001139 	b	40008a44 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003af4 	b	40013140 <CyU3PDebugPrint>
4000456c:	400110c8 	.word	0x400110c8
40004570:	400110dc 	.word	0x400110dc
40004574:	400110a0 	.word	0x400110a0

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003ae2 	bl	40013140 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	400110f0 	.word	0x400110f0

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003ac4 	bl	40013140 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40011114 	.word	0x40011114

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a04000 	mov	r4, r0
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
40004650:	e5cd1002 	strb	r1, [sp, #2]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004654:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
40004658:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000465c:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004660:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004664:	e1a05002 	mov	r5, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004668:	e1a0000d 	mov	r0, sp
4000466c:	e28d100c 	add	r1, sp, #12
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004678:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
4000467c:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
40004680:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004684:	eb007d2a 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004688:	e3500000 	cmp	r0, #0
4000468c:	0a000016 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004690:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004694:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004698:	e1a0000d 	mov	r0, sp
4000469c:	e28d100c 	add	r1, sp, #12
400046a0:	e1a0200c 	mov	r2, ip
400046a4:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400046a8:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400046b0:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400046b4:	eb007d1e 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02004 	mov	r2, r4
400046c8:	e1a03005 	mov	r3, r5
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb003a9a 	bl	40013140 <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd014 	add	sp, sp, #20
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400046e0:	e3a00064 	mov	r0, #100	; 0x64
400046e4:	eb003c06 	bl	40013704 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00064 	mov	r0, #100	; 0x64
400046f0:	eb003c03 	bl	40013704 <CyU3PBusyWait>
400046f4:	eaffffe5 	b	40004690 <SensorSetControl+0x54>
400046f8:	40011134 	.word	0x40011134

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd010 	sub	sp, sp, #16
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004730:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004734:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004738:	e5cd000c 	strb	r0, [sp, #12]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
4000473c:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004740:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004744:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004748:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000474c:	e1a0000d 	mov	r0, sp
40004750:	e28d100c 	add	r1, sp, #12
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004764:	eb007cf2 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000011 	beq	400047b8 <SensorSetIrisControl+0x94>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004778:	e1a0000d 	mov	r0, sp
4000477c:	e28d100c 	add	r1, sp, #12
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004788:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
4000478c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004790:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004794:	eb007ce6 	bl	40023b34 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004798:	e3500000 	cmp	r0, #0
4000479c:	0a000002 	beq	400047ac <SensorSetIrisControl+0x88>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400047a0:	e3a00000 	mov	r0, #0
400047a4:	e28dd010 	add	sp, sp, #16
400047a8:	e8bd8010 	pop	{r4, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400047ac:	e3a00064 	mov	r0, #100	; 0x64
400047b0:	eb003bd3 	bl	40013704 <CyU3PBusyWait>
400047b4:	eafffff9 	b	400047a0 <SensorSetIrisControl+0x7c>
400047b8:	e3a00064 	mov	r0, #100	; 0x64
400047bc:	eb003bd0 	bl	40013704 <CyU3PBusyWait>
400047c0:	eaffffea 	b	40004770 <SensorSetIrisControl+0x4c>

400047c4 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c8:	e59f2210 	ldr	r2, [pc, #528]	; 400049e0 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047cc:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047d0:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d4:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d8:	e284c02c 	add	ip, r4, #44	; 0x2c
400047dc:	e3a0300b 	mov	r3, #11
400047e0:	e1a01004 	mov	r1, r4
400047e4:	e59f01f8 	ldr	r0, [pc, #504]	; 400049e4 <I2cAppThread_Entry+0x220>
400047e8:	e58de000 	str	lr, [sp]
400047ec:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047f0:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f4:	e58d4004 	str	r4, [sp, #4]
400047f8:	e58d4008 	str	r4, [sp, #8]
400047fc:	eb001890 	bl	4000aa44 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004800:	eb001281 	bl	4000920c <_tx_time_get>
40004804:	e59f11dc 	ldr	r1, [pc, #476]	; 400049e8 <I2cAppThread_Entry+0x224>
40004808:	e59f51dc 	ldr	r5, [pc, #476]	; 400049ec <I2cAppThread_Entry+0x228>
4000480c:	e1a02000 	mov	r2, r0
40004810:	e3a00004 	mov	r0, #4
40004814:	eb003a49 	bl	40013140 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004818:	e3a00032 	mov	r0, #50	; 0x32
4000481c:	eb001088 	bl	40008a44 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004820:	e59f01bc 	ldr	r0, [pc, #444]	; 400049e4 <I2cAppThread_Entry+0x220>
40004824:	eb001854 	bl	4000a97c <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004828:	ea000000 	b	40004830 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000482c:	eb001835 	bl	4000a908 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004830:	e5d5201a 	ldrb	r2, [r5, #26]
40004834:	e3520000 	cmp	r2, #0
40004838:	0afffffb 	beq	4000482c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000483c:	e59f01a8 	ldr	r0, [pc, #424]	; 400049ec <I2cAppThread_Entry+0x228>
40004840:	e59f11a8 	ldr	r1, [pc, #424]	; 400049f0 <I2cAppThread_Entry+0x22c>
40004844:	e5903010 	ldr	r3, [r0, #16]
40004848:	e3a00004 	mov	r0, #4
4000484c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004850:	eb003a3a 	bl	40013140 <CyU3PDebugPrint>
40004854:	e59f7198 	ldr	r7, [pc, #408]	; 400049f4 <I2cAppThread_Entry+0x230>
40004858:	e59fb198 	ldr	fp, [pc, #408]	; 400049f8 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000485c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004860:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004864:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004868:	e3a02003 	mov	r2, #3
4000486c:	e28d3014 	add	r3, sp, #20
40004870:	e3a01020 	mov	r1, #32
40004874:	e59f0180 	ldr	r0, [pc, #384]	; 400049fc <I2cAppThread_Entry+0x238>
40004878:	e58d6000 	str	r6, [sp]
4000487c:	eb001538 	bl	40009d64 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004880:	e1a01006 	mov	r1, r6
40004884:	e597001c 	ldr	r0, [r7, #28]
40004888:	eb0015fd 	bl	4000a084 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
4000488c:	e597001c 	ldr	r0, [r7, #28]
40004890:	eb001630 	bl	4000a158 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004894:	e595001c 	ldr	r0, [r5, #28]
40004898:	e1a01006 	mov	r1, r6
4000489c:	eb0015f8 	bl	4000a084 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400048a0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a8:	e3520000 	cmp	r2, #0
400048ac:	1a000008 	bne	400048d4 <I2cAppThread_Entry+0x110>
400048b0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048bc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048c0:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c4:	e353003f 	cmp	r3, #63	; 0x3f
400048c8:	93520000 	cmpls	r2, #0
400048cc:	0afffff8 	beq	400048b4 <I2cAppThread_Entry+0xf0>
400048d0:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d4:	e3520000 	cmp	r2, #0
400048d8:	0a00002d 	beq	40004994 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048dc:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e0:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e4:	e083e083 	add	lr, r3, r3, lsl #1
400048e8:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048ec:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048f0:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f4:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f8:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048fc:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
40004900:	e35c0003 	cmp	ip, #3
40004904:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004908:	ea00001a 	b	40004978 <I2cAppThread_Entry+0x1b4>
4000490c:	40004984 	.word	0x40004984
40004910:	40004968 	.word	0x40004968
40004914:	4000491c 	.word	0x4000491c
40004918:	4000491c 	.word	0x4000491c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
4000491c:	e3a03082 	mov	r3, #130	; 0x82
40004920:	ebffff7f 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
40004924:	e3a01f4b 	mov	r1, #300	; 0x12c
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004928:	e3a02000 	mov	r2, #0
4000492c:	e59f00b0 	ldr	r0, [pc, #176]	; 400049e4 <I2cAppThread_Entry+0x220>
40004930:	eb001821 	bl	4000a9bc <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004934:	e59f00a8 	ldr	r0, [pc, #168]	; 400049e4 <I2cAppThread_Entry+0x220>
40004938:	eb00180f 	bl	4000a97c <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
4000493c:	e5d40001 	ldrb	r0, [r4, #1]
40004940:	e5d41002 	ldrb	r1, [r4, #2]
40004944:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004948:	12800001 	addne	r0, r0, #1
4000494c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004950:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004954:	0a000014 	beq	400049ac <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004958:	e595001c 	ldr	r0, [r5, #28]
4000495c:	eb0015fd 	bl	4000a158 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004960:	eb0017e8 	bl	4000a908 <_txe_thread_relinquish>
		}
40004964:	eaffffbf 	b	40004868 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004968:	e3a03052 	mov	r3, #82	; 0x52
4000496c:	ebffff6c 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004970:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004974:	eaffffeb 	b	40004928 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004978:	ebffff2f 	bl	4000463c <SensorSetControl>
4000497c:	e1a0100a 	mov	r1, sl
							break;
40004980:	eaffffe8 	b	40004928 <I2cAppThread_Entry+0x164>
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004984:	e3a03082 	mov	r3, #130	; 0x82
40004988:	ebffff65 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
4000498c:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004990:	eaffffe4 	b	40004928 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004994:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004998:	e59f0044 	ldr	r0, [pc, #68]	; 400049e4 <I2cAppThread_Entry+0x220>
4000499c:	eb001806 	bl	4000a9bc <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
400049a0:	e59f003c 	ldr	r0, [pc, #60]	; 400049e4 <I2cAppThread_Entry+0x220>
400049a4:	eb0017f4 	bl	4000a97c <_txe_timer_activate>
400049a8:	eaffffea 	b	40004958 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049ac:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
400049b0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049b4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049b8:	824cc020 	subhi	ip, ip, #32
400049bc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049c0:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049c4:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049c8:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049cc:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049d0:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049d4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049d8:	e5854010 	str	r4, [r5, #16]
400049dc:	eaffffdd 	b	40004958 <I2cAppThread_Entry+0x194>
400049e0:	40004a00 	.word	0x40004a00
400049e4:	40033444 	.word	0x40033444
400049e8:	400111bc 	.word	0x400111bc
400049ec:	40033344 	.word	0x40033344
400049f0:	400111d0 	.word	0x400111d0
400049f4:	40033590 	.word	0x40033590
400049f8:	40030000 	.word	0x40030000
400049fc:	40031410 	.word	0x40031410

40004a00 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004a00:	e59f0008 	ldr	r0, [pc, #8]	; 40004a10 <I2CCmdCb+0x10>
40004a04:	e3a01020 	mov	r1, #32
40004a08:	e3a02000 	mov	r2, #0
40004a0c:	ea001504 	b	40009e24 <_txe_event_flags_set>
40004a10:	40031410 	.word	0x40031410

40004a14 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004a14:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004a18:	e92d4010 	push	{r4, lr}
40004a1c:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004a20:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004a24:	e59f10c4 	ldr	r1, [pc, #196]	; 40004af0 <CyFxGpifCB+0xdc>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004a28:	e5d1302c 	ldrb	r3, [r1, #44]	; 0x2c
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004a2c:	e5810028 	str	r0, [r1, #40]	; 0x28
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004a30:	e3530003 	cmp	r3, #3
40004a34:	0a00000d 	beq	40004a70 <CyFxGpifCB+0x5c>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004a38:	e3530002 	cmp	r3, #2
40004a3c:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004a40:	e352000d 	cmp	r2, #13
40004a44:	08bd8010 	popeq	{r4, pc}
40004a48:	8a000021 	bhi	40004ad4 <CyFxGpifCB+0xc0>
40004a4c:	e3520008 	cmp	r2, #8
40004a50:	0a00000f 	beq	40004a94 <CyFxGpifCB+0x80>
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
40004a54:	e59f1098 	ldr	r1, [pc, #152]	; 40004af4 <CyFxGpifCB+0xe0>
40004a58:	e3a00001 	mov	r0, #1
40004a5c:	eb0039b7 	bl	40013140 <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40004a60:	e59f1090 	ldr	r1, [pc, #144]	; 40004af8 <CyFxGpifCB+0xe4>
40004a64:	e3a00004 	mov	r0, #4
    }
    //CyU3PDebugPrint(4,"\r\n evt %d state = %d",event, currentState);
}
40004a68:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40004a6c:	ea0039b3 	b	40013140 <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
40004a70:	e242300b 	sub	r3, r2, #11
40004a74:	e3530003 	cmp	r3, #3
40004a78:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40004a7c:	eafffff4 	b	40004a54 <CyFxGpifCB+0x40>
40004a80:	40004a94 	.word	0x40004a94
40004a84:	40004acc 	.word	0x40004acc
40004a88:	40004a90 	.word	0x40004a90
40004a8c:	40004a90 	.word	0x40004a90
40004a90:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40004a94:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40004a98:	e59f005c 	ldr	r0, [pc, #92]	; 40004afc <CyFxGpifCB+0xe8>
40004a9c:	eb0051df 	bl	40019220 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40004aa0:	e2504000 	subs	r4, r0, #0
40004aa4:	0afffff9 	beq	40004a90 <CyFxGpifCB+0x7c>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40004aa8:	e59f1050 	ldr	r1, [pc, #80]	; 40004b00 <CyFxGpifCB+0xec>
40004aac:	e1a02004 	mov	r2, r4
40004ab0:	e3a00004 	mov	r0, #4
40004ab4:	eb0039a1 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40004ab8:	e3a00004 	mov	r0, #4
40004abc:	e59f1040 	ldr	r1, [pc, #64]	; 40004b04 <CyFxGpifCB+0xf0>
40004ac0:	e1a02004 	mov	r2, r4
40004ac4:	eb00399d 	bl	40013140 <CyU3PDebugPrint>
40004ac8:	eafffffe 	b	40004ac8 <CyFxGpifCB+0xb4>
            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
                break;

            case PARTIAL_BUF_IN_SCK1:
                socket = 1;
40004acc:	e3a01001 	mov	r1, #1
40004ad0:	eafffff0 	b	40004a98 <CyFxGpifCB+0x84>
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
        switch (stateId)
40004ad4:	e3520012 	cmp	r2, #18
40004ad8:	0a000002 	beq	40004ae8 <CyFxGpifCB+0xd4>
40004adc:	e3520016 	cmp	r2, #22
40004ae0:	1affffdb 	bne	40004a54 <CyFxGpifCB+0x40>
40004ae4:	e8bd8010 	pop	{r4, pc}
            case 8:
                socket = 0;
                break;

            case 18://20:
                socket = 1;
40004ae8:	e1a01000 	mov	r1, r0
40004aec:	eaffffe9 	b	40004a98 <CyFxGpifCB+0x84>
40004af0:	40031410 	.word	0x40031410
40004af4:	400111f4 	.word	0x400111f4
40004af8:	40011254 	.word	0x40011254
40004afc:	40033364 	.word	0x40033364
40004b00:	4001120c 	.word	0x4001120c
40004b04:	4001123c 	.word	0x4001123c

40004b08 <CyFxUvcApplnDmaCallback>:
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                      type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b08:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004b0c:	e92d4030 	push	{r4, r5, lr}
40004b10:	e1a04002 	mov	r4, r2
40004b14:	e24dd00c 	sub	sp, sp, #12
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                      type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b18:	0a00000b 	beq	40004b4c <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x, full %d\r\n",
                        status, input->buffer_p.count, prodCount - consCount, takeFull);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004b1c:	e3510010 	cmp	r1, #16
40004b20:	1a000007 	bne	40004b44 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004b24:	e59f3118 	ldr	r3, [pc, #280]	; 40004c44 <CyFxUvcApplnDmaCallback+0x13c>
        streamingStarted = CyTrue;
40004b28:	e3a01001 	mov	r1, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b2c:	e1d3c3b8 	ldrh	ip, [r3, #56]	; 0x38
        streamingStarted = CyTrue;
40004b30:	e583103c 	str	r1, [r3, #60]	; 0x3c
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b34:	e08c0001 	add	r0, ip, r1
40004b38:	e1a02800 	lsl	r2, r0, #16
40004b3c:	e1a01822 	lsr	r1, r2, #16
40004b40:	e1c313b8 	strh	r1, [r3, #56]	; 0x38
        streamingStarted = CyTrue;
        //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
                             //                       type, input->buffer_p.count, prodCount - consCount);
    }
}
40004b44:	e28dd00c 	add	sp, sp, #12
40004b48:	e8bd8030 	pop	{r4, r5, pc}
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                      type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
40004b4c:	e1d230b4 	ldrh	r3, [r2, #4]
40004b50:	e3530eb7 	cmp	r3, #2928	; 0xb70
40004b54:	0a00002d 	beq	40004c10 <CyFxUvcApplnDmaCallback+0x108>
                takeFull = 1;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004b58:	e5925000 	ldr	r5, [r2]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004b5c:	e59f10e4 	ldr	r1, [pc, #228]	; 40004c48 <CyFxUvcApplnDmaCallback+0x140>
40004b60:	e245000c 	sub	r0, r5, #12
40004b64:	e3a0200c 	mov	r2, #12
40004b68:	ebfffb59 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004b6c:	e555200b 	ldrb	r2, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004b70:	e59f30cc 	ldr	r3, [pc, #204]	; 40004c44 <CyFxUvcApplnDmaCallback+0x13c>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004b74:	e3821002 	orr	r1, r2, #2
40004b78:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004b7c:	e1d303b2 	ldrh	r0, [r3, #50]	; 0x32
                pbc = input->buffer_p.count;
40004b80:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004b84:	e2802001 	add	r2, r0, #1
                pbc = input->buffer_p.count;
                takeFull = 0;
40004b88:	e3a0c000 	mov	ip, #0
40004b8c:	e1c3c3b0 	strh	ip, [r3, #48]	; 0x30
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004b90:	e1c323b2 	strh	r2, [r3, #50]	; 0x32
                pbc = input->buffer_p.count;
40004b94:	e1c313b4 	strh	r1, [r3, #52]	; 0x34
                //                        status, input->buffer_p.count, prodCount, consCount);
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004b98:	e1d3e3b6 	ldrh	lr, [r3, #54]	; 0x36
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004b9c:	e281000c 	add	r0, r1, #12
                //                        status, input->buffer_p.count, prodCount, consCount);
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ba0:	e28e2001 	add	r2, lr, #1
40004ba4:	e1a0c802 	lsl	ip, r2, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ba8:	e1a01800 	lsl	r1, r0, #16
                //                        status, input->buffer_p.count, prodCount, consCount);
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bac:	e1a0e82c 	lsr	lr, ip, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bb0:	e1a01821 	lsr	r1, r1, #16
40004bb4:	e3a02000 	mov	r2, #0
40004bb8:	e59f008c 	ldr	r0, [pc, #140]	; 40004c4c <CyFxUvcApplnDmaCallback+0x144>
                //                        status, input->buffer_p.count, prodCount, consCount);
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bbc:	e1c3e3b6 	strh	lr, [r3, #54]	; 0x36
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bc0:	eb004a2b 	bl	40017474 <CyU3PDmaMultiChannelCommitBuffer>
                //                        status, input->buffer_p.count, prodCount, consCount);
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bc4:	e59f1078 	ldr	r1, [pc, #120]	; 40004c44 <CyFxUvcApplnDmaCallback+0x13c>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1 ,"\r\n %d",input->buffer_p.count);
            if (1 & (status != CY_U3P_SUCCESS))
40004bc8:	e2502000 	subs	r2, r0, #0
40004bcc:	0affffdc 	beq	40004b44 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004bd0:	e1d1c3b6 	ldrh	ip, [r1, #54]	; 0x36
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x, full %d\r\n",
40004bd4:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1 ,"\r\n %d",input->buffer_p.count);
            if (1 & (status != CY_U3P_SUCCESS))
            {
                prodCount--;
40004bd8:	e24c0001 	sub	r0, ip, #1
40004bdc:	e1a0e800 	lsl	lr, r0, #16
40004be0:	e1a0c82e 	lsr	ip, lr, #16
40004be4:	e1c1c3b6 	strh	ip, [r1, #54]	; 0x36
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x, full %d\r\n",
40004be8:	e1d1e3b6 	ldrh	lr, [r1, #54]	; 0x36
40004bec:	e1d103b8 	ldrh	r0, [r1, #56]	; 0x38
40004bf0:	e1d1c3b0 	ldrh	ip, [r1, #48]	; 0x30
40004bf4:	e060e00e 	rsb	lr, r0, lr
40004bf8:	e59f1050 	ldr	r1, [pc, #80]	; 40004c50 <CyFxUvcApplnDmaCallback+0x148>
40004bfc:	e3a00004 	mov	r0, #4
40004c00:	e58de000 	str	lr, [sp]
40004c04:	e58dc004 	str	ip, [sp, #4]
40004c08:	eb00394c 	bl	40013140 <CyU3PDebugPrint>
40004c0c:	eaffffcc 	b	40004b44 <CyFxUvcApplnDmaCallback+0x3c>

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004c10:	e592e000 	ldr	lr, [r2]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004c14:	e59f102c 	ldr	r1, [pc, #44]	; 40004c48 <CyFxUvcApplnDmaCallback+0x140>
40004c18:	e24e000c 	sub	r0, lr, #12
40004c1c:	e3a0200c 	mov	r2, #12
40004c20:	ebfffb2b 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c24:	e59f3018 	ldr	r3, [pc, #24]	; 40004c44 <CyFxUvcApplnDmaCallback+0x13c>
                takeFull = 1;
40004c28:	e3a00001 	mov	r0, #1
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c2c:	e1d3c2be 	ldrh	ip, [r3, #46]	; 0x2e
                takeFull = 1;
40004c30:	e1d410b4 	ldrh	r1, [r4, #4]
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c34:	e28c2001 	add	r2, ip, #1
                takeFull = 1;
40004c38:	e1c303b0 	strh	r0, [r3, #48]	; 0x30
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == 0xB70/*CY_FX_UVC_BUF_FULL_SIZE*/)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c3c:	e1c322be 	strh	r2, [r3, #46]	; 0x2e
40004c40:	eaffffd4 	b	40004b98 <CyFxUvcApplnDmaCallback+0x90>
40004c44:	40031410 	.word	0x40031410
40004c48:	40030480 	.word	0x40030480
40004c4c:	40033364 	.word	0x40033364
40004c50:	40011268 	.word	0x40011268

40004c54 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004c54:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004c58:	e92d4070 	push	{r4, r5, r6, lr}
40004c5c:	e1a03001 	mov	r3, r1
40004c60:	e24dd010 	sub	sp, sp, #16
40004c64:	e1a04000 	mov	r4, r0
    switch (evtype)
40004c68:	0a000036 	beq	40004d48 <CyFxUVCApplnUSBEventCB+0xf4>
40004c6c:	e3500004 	cmp	r0, #4
40004c70:	0a00001f 	beq	40004cf4 <CyFxUVCApplnUSBEventCB+0xa0>
40004c74:	e3500001 	cmp	r0, #1
40004c78:	0a000001 	beq	40004c84 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004c7c:	e28dd010 	add	sp, sp, #16
40004c80:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c84:	e59f5128 	ldr	r5, [pc, #296]	; 40004db4 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004c88:	e1a02000 	mov	r2, r0
40004c8c:	e59f1124 	ldr	r1, [pc, #292]	; 40004db8 <CyFxUVCApplnUSBEventCB+0x164>
40004c90:	e3a00004 	mov	r0, #4
40004c94:	eb003929 	bl	40013140 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c98:	e1a00004 	mov	r0, r4
40004c9c:	eb005a37 	bl	4001b580 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ca0:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ca4:	e1a01004 	mov	r1, r4
40004ca8:	e1a00005 	mov	r0, r5
40004cac:	e3a02002 	mov	r2, #2
40004cb0:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cb4:	e585c040 	str	ip, [r5, #64]	; 0x40
            isUsbConnected = CyFalse;
40004cb8:	e585c044 	str	ip, [r5, #68]	; 0x44
            streamingStarted = CyFalse;
40004cbc:	e585c03c 	str	ip, [r5, #60]	; 0x3c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004cc0:	e58dc000 	str	ip, [sp]
40004cc4:	eb001426 	bl	40009d64 <_txe_event_flags_get>
40004cc8:	e2504000 	subs	r4, r0, #0
40004ccc:	1affffea 	bne	40004c7c <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004cd0:	e3e01001 	mvn	r1, #1
40004cd4:	e3a02002 	mov	r2, #2
40004cd8:	e1a00005 	mov	r0, r5
40004cdc:	eb001450 	bl	40009e24 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004ce0:	e1a00005 	mov	r0, r5
40004ce4:	e3a01002 	mov	r1, #2
40004ce8:	e1a02004 	mov	r2, r4
40004cec:	eb00144c 	bl	40009e24 <_txe_event_flags_set>
40004cf0:	eaffffe1 	b	40004c7c <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cf4:	e59f50b8 	ldr	r5, [pc, #184]	; 40004db4 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004cf8:	e59f10bc 	ldr	r1, [pc, #188]	; 40004dbc <CyFxUVCApplnUSBEventCB+0x168>
40004cfc:	e1a02000 	mov	r2, r0
40004d00:	eb00390e 	bl	40013140 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004d04:	e3a00001 	mov	r0, #1
40004d08:	eb005a1c 	bl	4001b580 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004d0c:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d10:	e3a01001 	mov	r1, #1
40004d14:	e3a02002 	mov	r2, #2
40004d18:	e1a00005 	mov	r0, r5
40004d1c:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d20:	e585c040 	str	ip, [r5, #64]	; 0x40
            streamingStarted = CyFalse;
40004d24:	e585c03c 	str	ip, [r5, #60]	; 0x3c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d28:	e58dc000 	str	ip, [sp]
40004d2c:	eb00140c 	bl	40009d64 <_txe_event_flags_get>
40004d30:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d34:	01a00005 	moveq	r0, r5
40004d38:	03e01001 	mvneq	r1, #1
40004d3c:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d40:	1affffcd 	bne	40004c7c <CyFxUVCApplnUSBEventCB+0x28>
40004d44:	eaffffe4 	b	40004cdc <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d48:	e59f5064 	ldr	r5, [pc, #100]	; 40004db4 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d4c:	e1a02000 	mov	r2, r0
40004d50:	e59f1068 	ldr	r1, [pc, #104]	; 40004dc0 <CyFxUVCApplnUSBEventCB+0x16c>
40004d54:	e3a00004 	mov	r0, #4
40004d58:	eb0038f8 	bl	40013140 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004d5c:	e3a00001 	mov	r0, #1
40004d60:	eb005a06 	bl	4001b580 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004d64:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d68:	e1a00005 	mov	r0, r5
40004d6c:	e3a01001 	mov	r1, #1
40004d70:	e1a02004 	mov	r2, r4
40004d74:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d78:	e5856040 	str	r6, [r5, #64]	; 0x40
            streamingStarted = CyFalse;
40004d7c:	e585603c 	str	r6, [r5, #60]	; 0x3c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d80:	e58d6000 	str	r6, [sp]
40004d84:	eb0013f6 	bl	40009d64 <_txe_event_flags_get>
40004d88:	e2506000 	subs	r6, r0, #0
40004d8c:	1affffba 	bne	40004c7c <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d90:	e1a02004 	mov	r2, r4
40004d94:	e1a00005 	mov	r0, r5
40004d98:	e3e01001 	mvn	r1, #1
40004d9c:	eb001420 	bl	40009e24 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004da0:	e1a00005 	mov	r0, r5
40004da4:	e1a01004 	mov	r1, r4
40004da8:	e1a02006 	mov	r2, r6
40004dac:	eb00141c 	bl	40009e24 <_txe_event_flags_set>
40004db0:	eaffffb1 	b	40004c7c <CyFxUVCApplnUSBEventCB+0x28>
40004db4:	40031410 	.word	0x40031410
40004db8:	400112fc 	.word	0x400112fc
40004dbc:	400112b8 	.word	0x400112b8
40004dc0:	400112d8 	.word	0x400112d8

40004dc4 <CyFxUVCApplnUSBSetupCB>:
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004dc4:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004dc8:	e59f22e4 	ldr	r2, [pc, #740]	; 400050b4 <CyFxUVCApplnUSBSetupCB+0x2f0>
40004dcc:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004dd0:	e200acff 	and	sl, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004dd4:	e1a06820 	lsr	r6, r0, #16
40004dd8:	e59f72d8 	ldr	r7, [pc, #728]	; 400050b8 <CyFxUVCApplnUSBSetupCB+0x2f4>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ddc:	e59f82d8 	ldr	r8, [pc, #728]	; 400050bc <CyFxUVCApplnUSBSetupCB+0x2f8>
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004de0:	e59f02d8 	ldr	r0, [pc, #728]	; 400050c0 <CyFxUVCApplnUSBSetupCB+0x2fc>
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004de4:	e59f32d8 	ldr	r3, [pc, #728]	; 400050c4 <CyFxUVCApplnUSBSetupCB+0x300>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004de8:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004dec:	e1a0a42a 	lsr	sl, sl, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004df0:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004df4:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004df8:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004dfc:	e24dd014 	sub	sp, sp, #20
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e00:	e5c24000 	strb	r4, [r2]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e04:	e5c0a000 	strb	sl, [r0]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e08:	e1c760b0 	strh	r6, [r7]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e0c:	e1c850b0 	strh	r5, [r8]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e10:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e14:	0a000022 	beq	40004ea4 <CyFxUVCApplnUSBSetupCB+0xe0>
40004e18:	9a000007 	bls	40004e3c <CyFxUVCApplnUSBSetupCB+0x78>
40004e1c:	e3540021 	cmp	r4, #33	; 0x21
40004e20:	0a000015 	beq	40004e7c <CyFxUVCApplnUSBSetupCB+0xb8>
40004e24:	e35400a1 	cmp	r4, #161	; 0xa1
40004e28:	0a000013 	beq	40004e7c <CyFxUVCApplnUSBSetupCB+0xb8>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004e2c:	e3a05000 	mov	r5, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004e30:	e1a00005 	mov	r0, r5
40004e34:	e28dd014 	add	sp, sp, #20
40004e38:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, sl, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e3c:	e3540001 	cmp	r4, #1
40004e40:	1afffff9 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004e44:	e35a000b 	cmp	sl, #11
40004e48:	1afffff7 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004e4c:	e3550001 	cmp	r5, #1
40004e50:	1afffff5 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
40004e54:	e3560000 	cmp	r6, #0
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004e58:	13a05000 	movne	r5, #0
        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004e5c:	0a000034 	beq	40004f34 <CyFxUVCApplnUSBSetupCB+0x170>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
                    CyFxUVCApplnAbortHandler ();

                }
                if((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue != 0))
40004e60:	e1d720b0 	ldrh	r2, [r7]
40004e64:	e3520000 	cmp	r2, #0
40004e68:	0afffff0 	beq	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                {
                	CyU3PDebugPrint (4, "Alternate setting %d..\r\n", wValue);
40004e6c:	e59f1254 	ldr	r1, [pc, #596]	; 400050c8 <CyFxUVCApplnUSBSetupCB+0x304>
40004e70:	e3a00004 	mov	r0, #4
40004e74:	eb0038b1 	bl	40013140 <CyU3PDebugPrint>
40004e78:	eaffffec 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e7c:	e21550ff 	ands	r5, r5, #255	; 0xff
40004e80:	1a000012 	bne	40004ed0 <CyFxUVCApplnUSBSetupCB+0x10c>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e84:	e1a02005 	mov	r2, r5
40004e88:	e59f023c 	ldr	r0, [pc, #572]	; 400050cc <CyFxUVCApplnUSBSetupCB+0x308>
40004e8c:	e3a01004 	mov	r1, #4
40004e90:	eb0013e3 	bl	40009e24 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e94:	e2502000 	subs	r2, r0, #0
40004e98:	1a00001c 	bne	40004f10 <CyFxUVCApplnUSBSetupCB+0x14c>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
                    CyFxUVCApplnAbortHandler ();

                }
                if((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue != 0))
40004e9c:	e3a05001 	mov	r5, #1
40004ea0:	eaffffe2 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004ea4:	e35a0001 	cmp	sl, #1
40004ea8:	1affffdf 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004eac:	e3550083 	cmp	r5, #131	; 0x83
40004eb0:	1affffdd 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004eb4:	e59f7210 	ldr	r7, [pc, #528]	; 400050cc <CyFxUVCApplnUSBSetupCB+0x308>
40004eb8:	e597603c 	ldr	r6, [r7, #60]	; 0x3c
40004ebc:	e3560001 	cmp	r6, #1
40004ec0:	0a00004c 	beq	40004ff8 <CyFxUVCApplnUSBSetupCB+0x234>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004ec4:	eb005e41 	bl	4001c7d0 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004ec8:	e1a0500a 	mov	r5, sl
40004ecc:	eaffffd7 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004ed0:	e3550001 	cmp	r5, #1
40004ed4:	1affffd4 	bne	40004e2c <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004ed8:	e3a02000 	mov	r2, #0
40004edc:	e59f01e8 	ldr	r0, [pc, #488]	; 400050cc <CyFxUVCApplnUSBSetupCB+0x308>
40004ee0:	e3a01008 	mov	r1, #8
40004ee4:	eb0013ce 	bl	40009e24 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004ee8:	e2502000 	subs	r2, r0, #0
40004eec:	0affffcf 	beq	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004ef0:	e59f11d8 	ldr	r1, [pc, #472]	; 400050d0 <CyFxUVCApplnUSBSetupCB+0x30c>
40004ef4:	e3a00004 	mov	r0, #4
40004ef8:	eb003890 	bl	40013140 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004efc:	e3a00000 	mov	r0, #0
40004f00:	e1a01005 	mov	r1, r5
40004f04:	e1a02000 	mov	r2, r0
40004f08:	eb0063f4 	bl	4001dee0 <CyU3PUsbStall>
40004f0c:	eaffffc7 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004f10:	e59f11bc 	ldr	r1, [pc, #444]	; 400050d4 <CyFxUVCApplnUSBSetupCB+0x310>
40004f14:	e3a00004 	mov	r0, #4
40004f18:	eb003888 	bl	40013140 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004f1c:	e1a00005 	mov	r0, r5
40004f20:	e1a02005 	mov	r2, r5
40004f24:	e3a01001 	mov	r1, #1
40004f28:	eb0063ec 	bl	4001dee0 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f2c:	e3a05001 	mov	r5, #1
40004f30:	eaffffbe 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004f34:	e59f4190 	ldr	r4, [pc, #400]	; 400050cc <CyFxUVCApplnUSBSetupCB+0x308>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004f38:	e59f1198 	ldr	r1, [pc, #408]	; 400050d8 <CyFxUVCApplnUSBSetupCB+0x314>
40004f3c:	e3a00004 	mov	r0, #4
40004f40:	eb00387e 	bl	40013140 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004f44:	e1a00005 	mov	r0, r5
40004f48:	eb00598c 	bl	4001b580 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f4c:	e1a01005 	mov	r1, r5
40004f50:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004f54:	e5846040 	str	r6, [r4, #64]	; 0x40
                    streamingStarted = CyFalse;
40004f58:	e584603c 	str	r6, [r4, #60]	; 0x3c
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f5c:	eb006319 	bl	4001dbc8 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004f60:	e3a00064 	mov	r0, #100	; 0x64
40004f64:	eb0039e6 	bl	40013704 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004f68:	e59f016c 	ldr	r0, [pc, #364]	; 400050dc <CyFxUVCApplnUSBSetupCB+0x318>
40004f6c:	eb004d7a 	bl	4001855c <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004f70:	e3a00083 	mov	r0, #131	; 0x83
40004f74:	eb005f0d 	bl	4001cbb0 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004f78:	e1a01006 	mov	r1, r6
40004f7c:	e3a00083 	mov	r0, #131	; 0x83
40004f80:	eb006310 	bl	4001dbc8 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004f84:	e3a00064 	mov	r0, #100	; 0x64
40004f88:	eb0039dd 	bl	40013704 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f8c:	e1a02005 	mov	r2, r5
40004f90:	e1a01006 	mov	r1, r6
40004f94:	e3a00083 	mov	r0, #131	; 0x83
40004f98:	eb0063d0 	bl	4001dee0 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004f9c:	eb005e0b 	bl	4001c7d0 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004fa0:	e5845048 	str	r5, [r4, #72]	; 0x48
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004fa4:	e1a01005 	mov	r1, r5
40004fa8:	e1a00004 	mov	r0, r4
40004fac:	e3a02002 	mov	r2, #2
40004fb0:	e28d300c 	add	r3, sp, #12
40004fb4:	e58d6000 	str	r6, [sp]
40004fb8:	eb001369 	bl	40009d64 <_txe_event_flags_get>
40004fbc:	e2505000 	subs	r5, r0, #0
40004fc0:	1a000007 	bne	40004fe4 <CyFxUVCApplnUSBSetupCB+0x220>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004fc4:	e3e01001 	mvn	r1, #1
40004fc8:	e3a02002 	mov	r2, #2
40004fcc:	e1a00004 	mov	r0, r4
40004fd0:	eb001393 	bl	40009e24 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004fd4:	e1a00004 	mov	r0, r4
40004fd8:	e3a01002 	mov	r1, #2
40004fdc:	e1a02005 	mov	r2, r5
40004fe0:	eb00138f 	bl	40009e24 <_txe_event_flags_set>
40004fe4:	e1d850b0 	ldrh	r5, [r8]
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
                    CyFxUVCApplnAbortHandler ();

                }
                if((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue != 0))
40004fe8:	e3550001 	cmp	r5, #1
40004fec:	0affff9b 	beq	40004e60 <CyFxUVCApplnUSBSetupCB+0x9c>
40004ff0:	e3a05001 	mov	r5, #1
40004ff4:	eaffff8d 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004ff8:	e59f10e0 	ldr	r1, [pc, #224]	; 400050e0 <CyFxUVCApplnUSBSetupCB+0x31c>
40004ffc:	e3a00004 	mov	r0, #4
40005000:	eb00384e 	bl	40013140 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005004:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40005008:	e1a00006 	mov	r0, r6
4000500c:	eb00595b 	bl	4001b580 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40005010:	e1a01006 	mov	r1, r6
40005014:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005018:	e5878040 	str	r8, [r7, #64]	; 0x40
                        streamingStarted = CyFalse;
4000501c:	e587803c 	str	r8, [r7, #60]	; 0x3c

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40005020:	eb0062e8 	bl	4001dbc8 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005024:	e3a00064 	mov	r0, #100	; 0x64
40005028:	eb0039b5 	bl	40013704 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
4000502c:	e59f00a8 	ldr	r0, [pc, #168]	; 400050dc <CyFxUVCApplnUSBSetupCB+0x318>
40005030:	eb004d49 	bl	4001855c <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40005034:	e1a00005 	mov	r0, r5
40005038:	eb005edc 	bl	4001cbb0 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
4000503c:	e1a01008 	mov	r1, r8
40005040:	e1a00005 	mov	r0, r5
40005044:	eb0062df 	bl	4001dbc8 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005048:	e3a00064 	mov	r0, #100	; 0x64
4000504c:	eb0039ac 	bl	40013704 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40005050:	e1a01008 	mov	r1, r8
40005054:	e1a02006 	mov	r2, r6
40005058:	e1a00005 	mov	r0, r5
4000505c:	eb00639f 	bl	4001dee0 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40005060:	eb005dda 	bl	4001c7d0 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40005064:	e5876048 	str	r6, [r7, #72]	; 0x48
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40005068:	e1a00007 	mov	r0, r7
4000506c:	e1a01006 	mov	r1, r6
40005070:	e1a02004 	mov	r2, r4
40005074:	e28d300c 	add	r3, sp, #12
40005078:	e58d8000 	str	r8, [sp]
4000507c:	eb001338 	bl	40009d64 <_txe_event_flags_get>
40005080:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40005084:	11a05006 	movne	r5, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40005088:	1affff68 	bne	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
4000508c:	e3e01001 	mvn	r1, #1
40005090:	e1a02004 	mov	r2, r4
40005094:	e1a00007 	mov	r0, r7
40005098:	eb001361 	bl	40009e24 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
4000509c:	e1a02005 	mov	r2, r5
400050a0:	e1a00007 	mov	r0, r7
400050a4:	e1a01004 	mov	r1, r4
400050a8:	eb00135d 	bl	40009e24 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050ac:	e1a05006 	mov	r5, r6
400050b0:	eaffff5e 	b	40004e30 <CyFxUVCApplnUSBSetupCB+0x6c>
400050b4:	40033340 	.word	0x40033340
400050b8:	40033440 	.word	0x40033440
400050bc:	40033470 	.word	0x40033470
400050c0:	4003358c 	.word	0x4003358c
400050c4:	40033472 	.word	0x40033472
400050c8:	400113a0 	.word	0x400113a0
400050cc:	40031410 	.word	0x40031410
400050d0:	40011354 	.word	0x40011354
400050d4:	4001131c 	.word	0x4001131c
400050d8:	40011388 	.word	0x40011388
400050dc:	40033364 	.word	0x40033364
400050e0:	400113bc 	.word	0x400113bc

400050e4 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050e4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050e8:	e59f4150 	ldr	r4, [pc, #336]	; 40005240 <I2CCmdHandler+0x15c>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050ec:	e24dd03c 	sub	sp, sp, #60	; 0x3c
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050f0:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050f4:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050f8:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050fc:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005100:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
40005104:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
40005108:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
4000510c:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
40005110:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
40005114:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
40005118:	e58d201c 	str	r2, [sp, #28]
4000511c:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
40005120:	e3a00004 	mov	r0, #4
40005124:	e59f1118 	ldr	r1, [pc, #280]	; 40005244 <I2CCmdHandler+0x160>
40005128:	e1a02005 	mov	r2, r5
4000512c:	e88d4080 	stm	sp, {r7, lr}
40005130:	e58d8008 	str	r8, [sp, #8]
40005134:	e58da00c 	str	sl, [sp, #12]
40005138:	e58d9010 	str	r9, [sp, #16]
4000513c:	e58db014 	str	fp, [sp, #20]
40005140:	e58d6018 	str	r6, [sp, #24]
40005144:	e58dc020 	str	ip, [sp, #32]
40005148:	eb0037fc 	bl	40013140 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
4000514c:	e3550000 	cmp	r5, #0
40005150:	0a000010 	beq	40005198 <I2CCmdHandler+0xb4>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005154:	e3550001 	cmp	r5, #1
40005158:	0a000001 	beq	40005164 <I2CCmdHandler+0x80>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
4000515c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40005160:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005164:	e5d4204f 	ldrb	r2, [r4, #79]	; 0x4f
40005168:	e20210fe 	and	r1, r2, #254	; 0xfe
4000516c:	e3510082 	cmp	r1, #130	; 0x82
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
40005170:	15d45050 	ldrbne	r5, [r4, #80]	; 0x50
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005174:	0a00001a 	beq	400051e4 <I2CCmdHandler+0x100>
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
40005178:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
4000517c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005180:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005184:	e1a02005 	mov	r2, r5
40005188:	e20000fe 	and	r0, r0, #254	; 0xfe
4000518c:	e58de000 	str	lr, [sp]
40005190:	ebfffbf9 	bl	4000417c <SensorWrite2B>
40005194:	eafffff0 	b	4000515c <I2CCmdHandler+0x78>
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005198:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000519c:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
400051a0:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
400051a4:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400051a8:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
400051ac:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
400051b0:	e28dc034 	add	ip, sp, #52	; 0x34
400051b4:	e3800001 	orr	r0, r0, #1
400051b8:	e3811001 	orr	r1, r1, #1
400051bc:	e58dc000 	str	ip, [sp]
400051c0:	ebfffc4c 	bl	400042f8 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
400051c4:	e5dd0034 	ldrb	r0, [sp, #52]	; 0x34
			if(CmdDataLen == 2){
400051c8:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
400051cc:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051d0:	05dd0035 	ldrbeq	r0, [sp, #53]	; 0x35
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051d4:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051d8:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051dc:	e5c43057 	strb	r3, [r4, #87]	; 0x57
400051e0:	eaffffdd 	b	4000515c <I2CCmdHandler+0x78>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400051e4:	e5d45050 	ldrb	r5, [r4, #80]	; 0x50
400051e8:	e3550030 	cmp	r5, #48	; 0x30
400051ec:	1affffe1 	bne	40005178 <I2CCmdHandler+0x94>
400051f0:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400051f4:	e3530010 	cmp	r3, #16
400051f8:	1affffdf 	bne	4000517c <I2CCmdHandler+0x98>
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
400051fc:	e59f4044 	ldr	r4, [pc, #68]	; 40005248 <I2CCmdHandler+0x164>
40005200:	e3e01000 	mvn	r1, #0
40005204:	e594001c 	ldr	r0, [r4, #28]
40005208:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000520c:	eb00139c 	bl	4000a084 <_txe_mutex_get>
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
40005210:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40005214:	e3a0c000 	mov	ip, #0
40005218:	e1a02003 	mov	r2, r3
4000521c:	e1a00004 	mov	r0, r4
40005220:	e3a01017 	mov	r1, #23
40005224:	e1a03005 	mov	r3, r5
40005228:	e58dc000 	str	ip, [sp]
4000522c:	e58dc004 	str	ip, [sp, #4]
40005230:	ebfff8a0 	bl	400034b8 <cmdSet>
				CyU3PMutexPut(cmdQuptr->ringMux);
40005234:	e594001c 	ldr	r0, [r4, #28]
40005238:	eb0013c6 	bl	4000a158 <_txe_mutex_put>
4000523c:	eaffffc6 	b	4000515c <I2CCmdHandler+0x78>
40005240:	40031410 	.word	0x40031410
40005244:	400113e0 	.word	0x400113e0
40005248:	40033344 	.word	0x40033344

4000524c <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000524c:	e92d4070 	push	{r4, r5, r6, lr}
40005250:	e1a06001 	mov	r6, r1
40005254:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005258:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000525c:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005260:	e3e01000 	mvn	r1, #0
40005264:	e590001c 	ldr	r0, [r0, #28]
40005268:	eb001385 	bl	4000a084 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
4000526c:	e0650006 	rsb	r0, r5, r6
40005270:	e270c000 	rsbs	ip, r0, #0
40005274:	e0acc000 	adc	ip, ip, r0
40005278:	e3a01014 	mov	r1, #20
4000527c:	e3a02027 	mov	r2, #39	; 0x27
40005280:	e3a03030 	mov	r3, #48	; 0x30
40005284:	e1a00004 	mov	r0, r4
40005288:	e58dc000 	str	ip, [sp]
4000528c:	e58d5004 	str	r5, [sp, #4]
40005290:	ebfff888 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005294:	e1560005 	cmp	r6, r5
40005298:	03a06002 	moveq	r6, #2
4000529c:	11a06005 	movne	r6, r5
400052a0:	e1a00004 	mov	r0, r4
400052a4:	e3a01015 	mov	r1, #21
400052a8:	e3a02025 	mov	r2, #37	; 0x25
400052ac:	e3a03030 	mov	r3, #48	; 0x30
400052b0:	e58d6000 	str	r6, [sp]
400052b4:	e58d5004 	str	r5, [sp, #4]
400052b8:	ebfff87e 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400052bc:	e594001c 	ldr	r0, [r4, #28]
}
400052c0:	e28dd008 	add	sp, sp, #8
400052c4:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400052c8:	ea0013a2 	b	4000a158 <_txe_mutex_put>

400052cc <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
400052cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052d0:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400052d4:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400052d8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400052dc:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400052e0:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052e4:	9a000023 	bls	40005378 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400052e8:	e59f6ec0 	ldr	r6, [pc, #3776]	; 400061b0 <ControlHandle+0xee4>
400052ec:	e0872087 	add	r2, r7, r7, lsl #1
400052f0:	e1a02182 	lsl	r2, r2, #3
400052f4:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400052f8:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400052fc:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005300:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005304:	e59f3ea8 	ldr	r3, [pc, #3752]	; 400061b4 <ControlHandle+0xee8>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005308:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000530c:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005310:	e3550083 	cmp	r5, #131	; 0x83
40005314:	0a000022 	beq	400053a4 <ControlHandle+0xd8>
40005318:	9a00002b 	bls	400053cc <ControlHandle+0x100>
4000531c:	e3550085 	cmp	r5, #133	; 0x85
40005320:	0a000084 	beq	40005538 <ControlHandle+0x26c>
40005324:	3a000072 	bcc	400054f4 <ControlHandle+0x228>
40005328:	e3550086 	cmp	r5, #134	; 0x86
4000532c:	0a0000bd 	beq	40005628 <ControlHandle+0x35c>
40005330:	e3550087 	cmp	r5, #135	; 0x87
40005334:	0a0000b1 	beq	40005600 <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005338:	e3a00000 	mov	r0, #0
4000533c:	e3a01001 	mov	r1, #1
40005340:	e1a02000 	mov	r2, r0
40005344:	eb0062e5 	bl	4001dee0 <CyU3PUsbStall>
			  break;
40005348:	e3a0e0ff 	mov	lr, #255	; 0xff
4000534c:	e1a0400e 	mov	r4, lr
40005350:	e1a0c00e 	mov	ip, lr
40005354:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005358:	e59f1e58 	ldr	r1, [pc, #3672]	; 400061b8 <ControlHandle+0xeec>
4000535c:	e1a02005 	mov	r2, r5
40005360:	e3a00004 	mov	r0, #4
40005364:	e58dc000 	str	ip, [sp]
40005368:	e98d4010 	stmib	sp, {r4, lr}
4000536c:	eb003773 	bl	40013140 <CyU3PDebugPrint>
}
40005370:	e28dd02c 	add	sp, sp, #44	; 0x2c
40005374:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005378:	e59f6e30 	ldr	r6, [pc, #3632]	; 400061b0 <ControlHandle+0xee4>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000537c:	e59f3e30 	ldr	r3, [pc, #3632]	; 400061b4 <ControlHandle+0xee8>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005380:	e0805080 	add	r5, r0, r0, lsl #1
40005384:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005388:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
4000538c:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005390:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005394:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005398:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
4000539c:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400053a0:	1affffdc 	bne	40005318 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400053a4:	e354001f 	cmp	r4, #31
400053a8:	9a0000bc 	bls	400056a0 <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
400053ac:	e0877087 	add	r7, r7, r7, lsl #1
400053b0:	e0866187 	add	r6, r6, r7, lsl #3
400053b4:	e59fae00 	ldr	sl, [pc, #3584]	; 400061bc <ControlHandle+0xef0>
400053b8:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
400053bc:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
400053c0:	e5ca0058 	strb	r0, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
400053c4:	e5cac059 	strb	ip, [sl, #89]	; 0x59
400053c8:	ea00000b 	b	400053fc <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400053cc:	e3550081 	cmp	r5, #129	; 0x81
400053d0:	0a000064 	beq	40005568 <ControlHandle+0x29c>
400053d4:	9a000010 	bls	4000541c <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400053d8:	e354001f 	cmp	r4, #31
400053dc:	9a0000a3 	bls	40005670 <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053e0:	e0877087 	add	r7, r7, r7, lsl #1
400053e4:	e0866187 	add	r6, r6, r7, lsl #3
400053e8:	e59fadcc 	ldr	sl, [pc, #3532]	; 400061bc <ControlHandle+0xef0>
400053ec:	e5d64003 	ldrb	r4, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053f0:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053f4:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053f8:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400053fc:	e1a00008 	mov	r0, r8
40005400:	e59f1db8 	ldr	r1, [pc, #3512]	; 400061c0 <ControlHandle+0xef4>
40005404:	eb00608a 	bl	4001d634 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005408:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000540c:	e5da4058 	ldrb	r4, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005410:	e1a0c00e 	mov	ip, lr
40005414:	e1a0300e 	mov	r3, lr
40005418:	eaffffce 	b	40005358 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000541c:	e3550001 	cmp	r5, #1
40005420:	1affffc4 	bne	40005338 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40005424:	e59f1d90 	ldr	r1, [pc, #3472]	; 400061bc <ControlHandle+0xef0>
40005428:	e28d2026 	add	r2, sp, #38	; 0x26
4000542c:	e3a00020 	mov	r0, #32
40005430:	e2811058 	add	r1, r1, #88	; 0x58
40005434:	eb005e10 	bl	4001cc7c <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005438:	e2502000 	subs	r2, r0, #0
4000543c:	1a000320 	bne	400060c4 <ControlHandle+0xdf8>
			   {
				  Data0 = glEp0Buffer[0];
40005440:	e59fed74 	ldr	lr, [pc, #3444]	; 400061bc <ControlHandle+0xef0>
40005444:	e5de3058 	ldrb	r3, [lr, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
40005448:	e59fed6c 	ldr	lr, [pc, #3436]	; 400061bc <ControlHandle+0xef0>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
4000544c:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005450:	e5de005a 	ldrb	r0, [lr, #90]	; 0x5a
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005454:	e5dec059 	ldrb	ip, [lr, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005458:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
4000545c:	e3540022 	cmp	r4, #34	; 0x22
40005460:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
40005464:	ea0002fd 	b	40006060 <ControlHandle+0xd94>
40005468:	40006010 	.word	0x40006010
4000546c:	40005f54 	.word	0x40005f54
40005470:	40006060 	.word	0x40006060
40005474:	40006060 	.word	0x40006060
40005478:	40005ef0 	.word	0x40005ef0
4000547c:	40005dac 	.word	0x40005dac
40005480:	40005d2c 	.word	0x40005d2c
40005484:	40006060 	.word	0x40006060
40005488:	40006060 	.word	0x40006060
4000548c:	40006060 	.word	0x40006060
40005490:	40006060 	.word	0x40006060
40005494:	40005ca8 	.word	0x40005ca8
40005498:	40006060 	.word	0x40006060
4000549c:	40006060 	.word	0x40006060
400054a0:	40006060 	.word	0x40006060
400054a4:	40006060 	.word	0x40006060
400054a8:	40005bb0 	.word	0x40005bb0
400054ac:	40006060 	.word	0x40006060
400054b0:	40006060 	.word	0x40006060
400054b4:	40006060 	.word	0x40006060
400054b8:	40006060 	.word	0x40006060
400054bc:	40006060 	.word	0x40006060
400054c0:	40006060 	.word	0x40006060
400054c4:	40006060 	.word	0x40006060
400054c8:	40006060 	.word	0x40006060
400054cc:	40005af4 	.word	0x40005af4
400054d0:	40006060 	.word	0x40006060
400054d4:	40006060 	.word	0x40006060
400054d8:	40005c38 	.word	0x40005c38
400054dc:	40006060 	.word	0x40006060
400054e0:	40005a98 	.word	0x40005a98
400054e4:	40005a14 	.word	0x40005a14
400054e8:	4000597c 	.word	0x4000597c
400054ec:	40005964 	.word	0x40005964
400054f0:	40005900 	.word	0x40005900
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400054f4:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400054f8:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054fc:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005500:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005504:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005508:	859facac 	ldrhi	sl, [pc, #3244]	; 400061bc <ControlHandle+0xef0>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000550c:	959faca8 	ldrls	sl, [pc, #3240]	; 400061bc <ControlHandle+0xef0>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005510:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
40005514:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005518:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
4000551c:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
40005520:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005524:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
40005528:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
4000552c:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40005530:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
40005534:	eaffffb0 	b	400053fc <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005538:	e59f4c7c 	ldr	r4, [pc, #3196]	; 400061bc <ControlHandle+0xef0>
			  glEp0Buffer[1] = 0;
4000553c:	e3a0c000 	mov	ip, #0
40005540:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005544:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005548:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000554c:	e3a00002 	mov	r0, #2
40005550:	eb006037 	bl	4001d634 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005554:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005558:	e5d44058 	ldrb	r4, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
4000555c:	e1a0c00e 	mov	ip, lr
40005560:	e1a0300e 	mov	r3, lr
40005564:	eaffff7b 	b	40005358 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005568:	e2441001 	sub	r1, r4, #1
4000556c:	e3510021 	cmp	r1, #33	; 0x21
40005570:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005574:	ea0000d8 	b	400058dc <ControlHandle+0x610>
40005578:	40005898 	.word	0x40005898
4000557c:	400058dc 	.word	0x400058dc
40005580:	400058dc 	.word	0x400058dc
40005584:	400058dc 	.word	0x400058dc
40005588:	40005878 	.word	0x40005878
4000558c:	400058dc 	.word	0x400058dc
40005590:	400058dc 	.word	0x400058dc
40005594:	400058dc 	.word	0x400058dc
40005598:	400058dc 	.word	0x400058dc
4000559c:	400058dc 	.word	0x400058dc
400055a0:	40005854 	.word	0x40005854
400055a4:	400058dc 	.word	0x400058dc
400055a8:	400058dc 	.word	0x400058dc
400055ac:	400058dc 	.word	0x400058dc
400055b0:	400058dc 	.word	0x400058dc
400055b4:	400058dc 	.word	0x400058dc
400055b8:	400058dc 	.word	0x400058dc
400055bc:	400058dc 	.word	0x400058dc
400055c0:	400058dc 	.word	0x400058dc
400055c4:	400058dc 	.word	0x400058dc
400055c8:	400058dc 	.word	0x400058dc
400055cc:	400058dc 	.word	0x400058dc
400055d0:	400058dc 	.word	0x400058dc
400055d4:	400058dc 	.word	0x400058dc
400055d8:	40005818 	.word	0x40005818
400055dc:	400058dc 	.word	0x400058dc
400055e0:	400058dc 	.word	0x400058dc
400055e4:	400057f0 	.word	0x400057f0
400055e8:	400058dc 	.word	0x400058dc
400055ec:	400058dc 	.word	0x400058dc
400055f0:	40005754 	.word	0x40005754
400055f4:	4000571c 	.word	0x4000571c
400055f8:	4000571c 	.word	0x4000571c
400055fc:	4000571c 	.word	0x4000571c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005600:	e354001f 	cmp	r4, #31
40005604:	9a000031 	bls	400056d0 <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005608:	e0877087 	add	r7, r7, r7, lsl #1
4000560c:	e0866187 	add	r6, r6, r7, lsl #3
40005610:	e59faba4 	ldr	sl, [pc, #2980]	; 400061bc <ControlHandle+0xef0>
40005614:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005618:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
4000561c:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005620:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
40005624:	eaffff74 	b	400053fc <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005628:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
4000562c:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005630:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005634:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005638:	80866187 	addhi	r6, r6, r7, lsl #3
4000563c:	859f8b78 	ldrhi	r8, [pc, #2936]	; 400061bc <ControlHandle+0xef0>
40005640:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005644:	959f8b70 	ldrls	r8, [pc, #2928]	; 400061bc <ControlHandle+0xef0>
40005648:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000564c:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005650:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005654:	e59f1b64 	ldr	r1, [pc, #2916]	; 400061c0 <ControlHandle+0xef4>
40005658:	eb005ff5 	bl	4001d634 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000565c:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005660:	e5d84058 	ldrb	r4, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005664:	e1a0c00e 	mov	ip, lr
40005668:	e1a0300e 	mov	r3, lr
4000566c:	eaffff39 	b	40005358 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005670:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005674:	10844084 	addne	r4, r4, r4, lsl #1
40005678:	10866184 	addne	r6, r6, r4, lsl #3
4000567c:	159fab38 	ldrne	sl, [pc, #2872]	; 400061bc <ControlHandle+0xef0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005680:	059fab34 	ldreq	sl, [pc, #2868]	; 400061bc <ControlHandle+0xef0>
40005684:	059f3b38 	ldreq	r3, [pc, #2872]	; 400061c4 <ControlHandle+0xef8>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005688:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
4000568c:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005690:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005694:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005698:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000569c:	eaffff56 	b	400053fc <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
400056a0:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056a4:	10844084 	addne	r4, r4, r4, lsl #1
400056a8:	10866184 	addne	r6, r6, r4, lsl #3
400056ac:	159fab08 	ldrne	sl, [pc, #2824]	; 400061bc <ControlHandle+0xef0>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
400056b0:	059fab04 	ldreq	sl, [pc, #2820]	; 400061bc <ControlHandle+0xef0>
400056b4:	059f3b0c 	ldreq	r3, [pc, #2828]	; 400061c8 <ControlHandle+0xefc>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056b8:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
400056bc:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
400056c0:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056c4:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
400056c8:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
400056cc:	eaffff4a 	b	400053fc <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
400056d0:	e354000b 	cmp	r4, #11
400056d4:	0a000007 	beq	400056f8 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056d8:	e084a084 	add	sl, r4, r4, lsl #1
400056dc:	e086618a 	add	r6, r6, sl, lsl #3
400056e0:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400056e4:	e59faad0 	ldr	sl, [pc, #2768]	; 400061bc <ControlHandle+0xef0>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400056e8:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056ec:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400056f0:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
400056f4:	eaffff40 	b	400053fc <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056f8:	e59faabc 	ldr	sl, [pc, #2748]	; 400061bc <ControlHandle+0xef0>
400056fc:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005700:	e5d64294 	ldrb	r4, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
40005704:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005708:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
4000570c:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005710:	e5ca405a 	strb	r4, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
40005714:	e5cae05b 	strb	lr, [sl, #91]	; 0x5b
40005718:	eaffff37 	b	400053fc <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
4000571c:	e0877087 	add	r7, r7, r7, lsl #1
40005720:	e0866187 	add	r6, r6, r7, lsl #3
40005724:	e59fea90 	ldr	lr, [pc, #2704]	; 400061bc <ControlHandle+0xef0>
40005728:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
4000572c:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
40005730:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005734:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005738:	e1a00008 	mov	r0, r8
4000573c:	e59f1a7c 	ldr	r1, [pc, #2684]	; 400061c0 <ControlHandle+0xef4>
40005740:	eb005fbb 	bl	4001d634 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005744:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005748:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
4000574c:	e1a0300c 	mov	r3, ip
40005750:	eaffff00 	b	40005358 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005754:	e3580000 	cmp	r8, #0
40005758:	0a00028d 	beq	40006194 <ControlHandle+0xec8>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
4000575c:	e1a0e128 	lsr	lr, r8, #2
40005760:	e35e0000 	cmp	lr, #0
40005764:	13580003 	cmpne	r8, #3
40005768:	83a02000 	movhi	r2, #0
4000576c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005770:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005774:	9a00028a 	bls	400061a4 <ControlHandle+0xed8>
40005778:	e59f1a40 	ldr	r1, [pc, #2624]	; 400061c0 <ControlHandle+0xef4>
4000577c:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005780:	e4904004 	ldr	r4, [r0], #4
40005784:	e282c001 	add	ip, r2, #1
40005788:	e20c20ff 	and	r2, ip, #255	; 0xff
4000578c:	e15e0002 	cmp	lr, r2
40005790:	e4814004 	str	r4, [r1], #4
40005794:	8afffff9 	bhi	40005780 <ControlHandle+0x4b4>
40005798:	e1580003 	cmp	r8, r3
4000579c:	159f0a18 	ldrne	r0, [pc, #2584]	; 400061bc <ControlHandle+0xef0>
400057a0:	0a00027b 	beq	40006194 <ControlHandle+0xec8>
400057a4:	e080e003 	add	lr, r0, r3
400057a8:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400057ac:	e2836001 	add	r6, r3, #1
400057b0:	e20630ff 	and	r3, r6, #255	; 0xff
400057b4:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
400057b8:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400057bc:	8afffff8 	bhi	400057a4 <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057c0:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
400057c4:	e59f39f0 	ldr	r3, [pc, #2544]	; 400061bc <ControlHandle+0xef0>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057c8:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
400057cc:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
400057d0:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057d4:	0affffd7 	beq	40005738 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400057d8:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
400057dc:	e59f19e8 	ldr	r1, [pc, #2536]	; 400061cc <ControlHandle+0xf00>
400057e0:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
400057e4:	e3a00004 	mov	r0, #4
400057e8:	eb003654 	bl	40013140 <CyU3PDebugPrint>
400057ec:	eaffffd1 	b	40005738 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
400057f0:	e59f79c4 	ldr	r7, [pc, #2500]	; 400061bc <ControlHandle+0xef0>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
400057f4:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
400057f8:	e5d72078 	ldrb	r2, [r7, #120]	; 0x78
400057fc:	e3520001 	cmp	r2, #1
40005800:	0a000237 	beq	400060e4 <ControlHandle+0xe18>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
40005804:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
40005808:	e5c74058 	strb	r4, [r7, #88]	; 0x58
					 glEp0Buffer[1] = 0;
4000580c:	e5c70059 	strb	r0, [r7, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005810:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005814:	eaffffc7 	b	40005738 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005818:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
4000581c:	e59fc998 	ldr	ip, [pc, #2456]	; 400061bc <ControlHandle+0xef0>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005820:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
40005824:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005828:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
4000582c:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005830:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005834:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005838:	e59f1990 	ldr	r1, [pc, #2448]	; 400061d0 <ControlHandle+0xf04>
4000583c:	e1a02004 	mov	r2, r4
40005840:	e1a0300e 	mov	r3, lr
40005844:	e3a00004 	mov	r0, #4
40005848:	e88d4040 	stm	sp, {r6, lr}
4000584c:	eb00363b 	bl	40013140 <CyU3PDebugPrint>
					 break;
40005850:	eaffffb8 	b	40005738 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005854:	e59f0960 	ldr	r0, [pc, #2400]	; 400061bc <ControlHandle+0xef0>
40005858:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
4000585c:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005860:	e3a0c000 	mov	ip, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005864:	e5c04058 	strb	r4, [r0, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005868:	e5c0c059 	strb	ip, [r0, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
4000586c:	e5c0605a 	strb	r6, [r0, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005870:	e5c0c05b 	strb	ip, [r0, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005874:	eaffffaf 	b	40005738 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005878:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
4000587c:	e59fe938 	ldr	lr, [pc, #2360]	; 400061bc <ControlHandle+0xef0>
40005880:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005884:	e3a02000 	mov	r2, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005888:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
					 glEp0Buffer[1] = 0;
4000588c:	e5ce2059 	strb	r2, [lr, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005890:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005894:	eaffffa7 	b	40005738 <ControlHandle+0x46c>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005898:	e5d611a6 	ldrb	r1, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
4000589c:	e5d661a5 	ldrb	r6, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
400058a0:	e3110002 	tst	r1, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058a4:	01a06126 	lsreq	r6, r6, #2
400058a8:	01e06c86 	mvneq	r6, r6, lsl #25
400058ac:	01e06ca6 	mvneq	r6, r6, lsr #25
					 }
					 glEp0Buffer[0] = Data1;
400058b0:	e59f3904 	ldr	r3, [pc, #2308]	; 400061bc <ControlHandle+0xef0>

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400058b4:	11a01301 	lslne	r1, r1, #6
400058b8:	12014040 	andne	r4, r1, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058bc:	01861301 	orreq	r1, r6, r1, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400058c0:	11844126 	orrne	r4, r4, r6, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058c4:	020140ff 	andeq	r4, r1, #255	; 0xff
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
400058c8:	e3a00000 	mov	r0, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
400058cc:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400058d0:	e5c30059 	strb	r0, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400058d4:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
400058d8:	eaffff96 	b	40005738 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058dc:	e0842084 	add	r2, r4, r4, lsl #1
400058e0:	e0866182 	add	r6, r6, r2, lsl #3
400058e4:	e59f38d0 	ldr	r3, [pc, #2256]	; 400061bc <ControlHandle+0xef0>
400058e8:	e5d6418d 	ldrb	r4, [r6, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
400058ec:	e3a01000 	mov	r1, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400058f0:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058f4:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400058f8:	e5c31059 	strb	r1, [r3, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
400058fc:	eaffff8d 	b	40005738 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005900:	e59f48cc 	ldr	r4, [pc, #2252]	; 400061d4 <ControlHandle+0xf08>
40005904:	e3e01000 	mvn	r1, #0
40005908:	e594001c 	ldr	r0, [r4, #28]
4000590c:	eb0011dc 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005910:	e3a01022 	mov	r1, #34	; 0x22
40005914:	e59dc018 	ldr	ip, [sp, #24]
40005918:	e3a0e000 	mov	lr, #0
4000591c:	e1a0300a 	mov	r3, sl
40005920:	e1a02009 	mov	r2, r9
40005924:	e1a00004 	mov	r0, r4
40005928:	e88d5000 	stm	sp, {ip, lr}
4000592c:	ebfff6e1 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005930:	e594001c 	ldr	r0, [r4, #28]
40005934:	eb001207 	bl	4000a158 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005938:	e59d1018 	ldr	r1, [sp, #24]
4000593c:	e0877087 	add	r7, r7, r7, lsl #1
40005940:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005944:	e3a03001 	mov	r3, #1
							 break;
40005948:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
4000594c:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005950:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005954:	e1a03001 	mov	r3, r1
40005958:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
4000595c:	e1a0400e 	mov	r4, lr
40005960:	eafffe7c 	b	40005358 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005964:	e59f4868 	ldr	r4, [pc, #2152]	; 400061d4 <ControlHandle+0xf08>
40005968:	e3e01000 	mvn	r1, #0
4000596c:	e594001c 	ldr	r0, [r4, #28]
40005970:	eb0011c3 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005974:	e3a01021 	mov	r1, #33	; 0x21
40005978:	eaffffe5 	b	40005914 <ControlHandle+0x648>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000597c:	e59f4850 	ldr	r4, [pc, #2128]	; 400061d4 <ControlHandle+0xf08>
40005980:	e3e01000 	mvn	r1, #0
40005984:	e594001c 	ldr	r0, [r4, #28]
40005988:	e58dc014 	str	ip, [sp, #20]
4000598c:	eb0011bc 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005990:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005994:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005998:	e202807f 	and	r8, r2, #127	; 0x7f
4000599c:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
400059a0:	e59dc01c 	ldr	ip, [sp, #28]
400059a4:	e3a01020 	mov	r1, #32
400059a8:	e1a02009 	mov	r2, r9
400059ac:	e1a0300a 	mov	r3, sl
400059b0:	e1a00004 	mov	r0, r4
400059b4:	e88d5000 	stm	sp, {ip, lr}
400059b8:	ebfff6be 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
400059bc:	e59dc014 	ldr	ip, [sp, #20]
400059c0:	e1a0300a 	mov	r3, sl
400059c4:	e3a08001 	mov	r8, #1
400059c8:	e3a01020 	mov	r1, #32
400059cc:	e1a0200b 	mov	r2, fp
400059d0:	e1a00004 	mov	r0, r4
400059d4:	e58dc000 	str	ip, [sp]
400059d8:	e58d8004 	str	r8, [sp, #4]
400059dc:	ebfff6b5 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400059e0:	e594001c 	ldr	r0, [r4, #28]
400059e4:	eb0011db 	bl	4000a158 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
400059e8:	e59d001c 	ldr	r0, [sp, #28]
400059ec:	e0877087 	add	r7, r7, r7, lsl #1
400059f0:	e0866187 	add	r6, r6, r7, lsl #3
400059f4:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
400059f8:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
400059fc:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005a00:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005a04:	e5c68010 	strb	r8, [r6, #16]
40005a08:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005a0c:	e1a0400e 	mov	r4, lr
40005a10:	eafffe50 	b	40005358 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a14:	e3580000 	cmp	r8, #0
40005a18:	0a000018 	beq	40005a80 <ControlHandle+0x7b4>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a1c:	e1a0e128 	lsr	lr, r8, #2
40005a20:	e35e0000 	cmp	lr, #0
40005a24:	13580003 	cmpne	r8, #3
40005a28:	83a02000 	movhi	r2, #0
40005a2c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005a30:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a34:	9a0001d8 	bls	4000619c <ControlHandle+0xed0>
40005a38:	e59f1798 	ldr	r1, [pc, #1944]	; 400061d8 <ControlHandle+0xf0c>
40005a3c:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a40:	e4904004 	ldr	r4, [r0], #4
40005a44:	e2822001 	add	r2, r2, #1
40005a48:	e20220ff 	and	r2, r2, #255	; 0xff
40005a4c:	e15e0002 	cmp	lr, r2
40005a50:	e4814004 	str	r4, [r1], #4
40005a54:	8afffff9 	bhi	40005a40 <ControlHandle+0x774>
40005a58:	e1580003 	cmp	r8, r3
40005a5c:	0a000007 	beq	40005a80 <ControlHandle+0x7b4>
40005a60:	e59fc754 	ldr	ip, [pc, #1876]	; 400061bc <ControlHandle+0xef0>
40005a64:	e08ce003 	add	lr, ip, r3
40005a68:	e5de1058 	ldrb	r1, [lr, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a6c:	e2833001 	add	r3, r3, #1
40005a70:	e20330ff 	and	r3, r3, #255	; 0xff
40005a74:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a78:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a7c:	8afffff7 	bhi	40005a60 <ControlHandle+0x794>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a80:	ebfffd97 	bl	400050e4 <I2CCmdHandler>
							 break;
40005a84:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a88:	e59d3018 	ldr	r3, [sp, #24]
40005a8c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005a90:	e1a0400e 	mov	r4, lr
40005a94:	eafffe2f 	b	40005358 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a98:	e59f4734 	ldr	r4, [pc, #1844]	; 400061d4 <ControlHandle+0xf08>
40005a9c:	e3e01000 	mvn	r1, #0
40005aa0:	e594001c 	ldr	r0, [r4, #28]
40005aa4:	eb001176 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005aa8:	e59d0018 	ldr	r0, [sp, #24]
40005aac:	e3a0e000 	mov	lr, #0
40005ab0:	e270c001 	rsbs	ip, r0, #1
40005ab4:	33a0c000 	movcc	ip, #0
40005ab8:	e1a0300a 	mov	r3, sl
40005abc:	e3a0101e 	mov	r1, #30
40005ac0:	e1a02009 	mov	r2, r9
40005ac4:	e1a00004 	mov	r0, r4
40005ac8:	e88d5000 	stm	sp, {ip, lr}
40005acc:	ebfff679 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ad0:	e594001c 	ldr	r0, [r4, #28]
40005ad4:	eb00119f 	bl	4000a158 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ad8:	e3a03001 	mov	r3, #1
							 break;
40005adc:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ae0:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005ae4:	e59dc01c 	ldr	ip, [sp, #28]
40005ae8:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005aec:	e1a0400e 	mov	r4, lr
40005af0:	eafffe18 	b	40005358 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005af4:	e59f46d8 	ldr	r4, [pc, #1752]	; 400061d4 <ControlHandle+0xf08>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005af8:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005afc:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b00:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b04:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005b08:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b0c:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b10:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b14:	eb00115a 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005b18:	e59dc018 	ldr	ip, [sp, #24]
40005b1c:	e1a00004 	mov	r0, r4
40005b20:	e58dc000 	str	ip, [sp]
40005b24:	e3a01019 	mov	r1, #25
40005b28:	e3a0c000 	mov	ip, #0
40005b2c:	e1a02009 	mov	r2, r9
40005b30:	e1a0300a 	mov	r3, sl
40005b34:	e58dc004 	str	ip, [sp, #4]
40005b38:	ebfff65e 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005b3c:	e59d0018 	ldr	r0, [sp, #24]
40005b40:	e3500000 	cmp	r0, #0
40005b44:	0a000007 	beq	40005b68 <ControlHandle+0x89c>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005b48:	e59de01c 	ldr	lr, [sp, #28]
40005b4c:	e1a00004 	mov	r0, r4
40005b50:	e3a01019 	mov	r1, #25
40005b54:	e1a0200b 	mov	r2, fp
40005b58:	e1a0300a 	mov	r3, sl
40005b5c:	e58de000 	str	lr, [sp]
40005b60:	e58d7004 	str	r7, [sp, #4]
40005b64:	ebfff653 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b68:	e594001c 	ldr	r0, [r4, #28]
40005b6c:	eb001179 	bl	4000a158 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005b70:	e59f0644 	ldr	r0, [pc, #1604]	; 400061bc <ControlHandle+0xef0>
40005b74:	e59f1640 	ldr	r1, [pc, #1600]	; 400061bc <ControlHandle+0xef0>
40005b78:	e5d0c05a 	ldrb	ip, [r0, #90]	; 0x5a
40005b7c:	e5d1405b 	ldrb	r4, [r1, #91]	; 0x5b
40005b80:	e5d03059 	ldrb	r3, [r0, #89]	; 0x59
40005b84:	e5d02058 	ldrb	r2, [r0, #88]	; 0x58
40005b88:	e59f164c 	ldr	r1, [pc, #1612]	; 400061dc <ControlHandle+0xf10>
40005b8c:	e3a00004 	mov	r0, #4
40005b90:	e58dc000 	str	ip, [sp]
40005b94:	e58d4004 	str	r4, [sp, #4]
40005b98:	eb003568 	bl	40013140 <CyU3PDebugPrint>
							 break;
40005b9c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005ba0:	e59d3018 	ldr	r3, [sp, #24]
40005ba4:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005ba8:	e1a0400e 	mov	r4, lr
40005bac:	eafffde9 	b	40005358 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005bb0:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005bb4:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005bb8:	e59f35f0 	ldr	r3, [pc, #1520]	; 400061b0 <ControlHandle+0xee4>
							 if(Data0 == 0){//set exposure mode auto
40005bbc:	1a000155 	bne	40006118 <ControlHandle+0xe4c>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005bc0:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005bc4:	e3520002 	cmp	r2, #2
40005bc8:	13520008 	cmpne	r2, #8
40005bcc:	0a000003 	beq	40005be0 <ControlHandle+0x914>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005bd0:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005bd4:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005bd8:	13a02002 	movne	r2, #2
40005bdc:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005be0:	e59f45ec 	ldr	r4, [pc, #1516]	; 400061d4 <ControlHandle+0xf08>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005be4:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005be8:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005bec:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005bf0:	e594001c 	ldr	r0, [r4, #28]
40005bf4:	eb001122 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005bf8:	e59dc018 	ldr	ip, [sp, #24]
40005bfc:	e3a01010 	mov	r1, #16
40005c00:	e58dc000 	str	ip, [sp]
40005c04:	e1a02009 	mov	r2, r9
40005c08:	e1a0300a 	mov	r3, sl
40005c0c:	e1a00004 	mov	r0, r4
40005c10:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c14:	e58dc004 	str	ip, [sp, #4]
40005c18:	ebfff626 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c1c:	e594001c 	ldr	r0, [r4, #28]
40005c20:	eb00114c 	bl	4000a158 <_txe_mutex_put>

					 		 break;
40005c24:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c28:	e59d3018 	ldr	r3, [sp, #24]
40005c2c:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005c30:	e1a0400e 	mov	r4, lr
40005c34:	eafffdc7 	b	40005358 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005c38:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005c3c:	959f2578 	ldrls	r2, [pc, #1400]	; 400061bc <ControlHandle+0xef0>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c40:	859fe574 	ldrhi	lr, [pc, #1396]	; 400061bc <ControlHandle+0xef0>
40005c44:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005c48:	93a03000 	movls	r3, #0
40005c4c:	95c23078 	strbls	r3, [r2, #120]	; 0x78
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c50:	83a02001 	movhi	r2, #1
40005c54:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005c58:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c5c:	85ce2078 	strbhi	r2, [lr, #120]	; 0x78
40005c60:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c64:	e59f4568 	ldr	r4, [pc, #1384]	; 400061d4 <ControlHandle+0xf08>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005c68:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005c6c:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c70:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c74:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005c78:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c7c:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c80:	e594001c 	ldr	r0, [r4, #28]
40005c84:	eb0010fe 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c88:	e59dc018 	ldr	ip, [sp, #24]
40005c8c:	e3a0101c 	mov	r1, #28
40005c90:	e58dc000 	str	ip, [sp]
40005c94:	e1a02009 	mov	r2, r9
40005c98:	e1a0300a 	mov	r3, sl
40005c9c:	e1a00004 	mov	r0, r4
40005ca0:	e3a0c000 	mov	ip, #0
40005ca4:	eaffffda 	b	40005c14 <ControlHandle+0x948>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ca8:	e59f4524 	ldr	r4, [pc, #1316]	; 400061d4 <ControlHandle+0xf08>
40005cac:	e3e01000 	mvn	r1, #0
40005cb0:	e594001c 	ldr	r0, [r4, #28]
40005cb4:	eb0010f2 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005cb8:	e59dc018 	ldr	ip, [sp, #24]
40005cbc:	e3a0100b 	mov	r1, #11
40005cc0:	e1a02009 	mov	r2, r9
40005cc4:	e1a0300a 	mov	r3, sl
40005cc8:	e1a00004 	mov	r0, r4
40005ccc:	e58dc000 	str	ip, [sp]
40005cd0:	e3a0c000 	mov	ip, #0
40005cd4:	e58dc004 	str	ip, [sp, #4]
40005cd8:	ebfff5f6 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005cdc:	e59de01c 	ldr	lr, [sp, #28]
40005ce0:	e1a0200b 	mov	r2, fp
40005ce4:	e1a0300a 	mov	r3, sl
40005ce8:	e3a07001 	mov	r7, #1
40005cec:	e3a0100b 	mov	r1, #11
40005cf0:	e1a00004 	mov	r0, r4
40005cf4:	e58de000 	str	lr, [sp]
40005cf8:	e58d7004 	str	r7, [sp, #4]
40005cfc:	ebfff5ed 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d00:	e594001c 	ldr	r0, [r4, #28]
40005d04:	eb001113 	bl	4000a158 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
40005d08:	e59d201c 	ldr	r2, [sp, #28]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005d0c:	e59d3018 	ldr	r3, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d10:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005d14:	e5c6348c 	strb	r3, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005d18:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d1c:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005d20:	e1a0c002 	mov	ip, r2
							 break;
40005d24:	e1a0400e 	mov	r4, lr
40005d28:	eafffd8a 	b	40005358 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d2c:	e59f44a0 	ldr	r4, [pc, #1184]	; 400061d4 <ControlHandle+0xf08>
40005d30:	e3e01000 	mvn	r1, #0
40005d34:	e594001c 	ldr	r0, [r4, #28]
40005d38:	eb0010d1 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005d3c:	e59dc018 	ldr	ip, [sp, #24]
40005d40:	e3a01006 	mov	r1, #6
40005d44:	e1a02009 	mov	r2, r9
40005d48:	e1a0300a 	mov	r3, sl
40005d4c:	e1a00004 	mov	r0, r4
40005d50:	e58dc000 	str	ip, [sp]
40005d54:	e3a0c000 	mov	ip, #0
40005d58:	e58dc004 	str	ip, [sp, #4]
40005d5c:	ebfff5d5 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005d60:	e59de018 	ldr	lr, [sp, #24]
40005d64:	e1a0300a 	mov	r3, sl
40005d68:	e3a07001 	mov	r7, #1
40005d6c:	e3a01006 	mov	r1, #6
40005d70:	e1a0200b 	mov	r2, fp
40005d74:	e1a00004 	mov	r0, r4
40005d78:	e58de000 	str	lr, [sp]
40005d7c:	e58d7004 	str	r7, [sp, #4]
40005d80:	ebfff5cc 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d84:	e594001c 	ldr	r0, [r4, #28]
40005d88:	eb0010f2 	bl	4000a158 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005d8c:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d90:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005d94:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d98:	e1a03004 	mov	r3, r4
40005d9c:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005da0:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005da4:	e1a0400e 	mov	r4, lr
40005da8:	eafffd6a 	b	40005358 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005dac:	e59f4420 	ldr	r4, [pc, #1056]	; 400061d4 <ControlHandle+0xf08>
40005db0:	e3e01000 	mvn	r1, #0
40005db4:	e594001c 	ldr	r0, [r4, #28]
40005db8:	eb0010b1 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005dbc:	e59d1018 	ldr	r1, [sp, #24]
40005dc0:	e3a0e000 	mov	lr, #0
40005dc4:	e2412080 	sub	r2, r1, #128	; 0x80
40005dc8:	e202c0ff 	and	ip, r2, #255	; 0xff
40005dcc:	e3a01005 	mov	r1, #5
40005dd0:	e1a02009 	mov	r2, r9
40005dd4:	e1a0300a 	mov	r3, sl
40005dd8:	e1a00004 	mov	r0, r4
40005ddc:	e88d5000 	stm	sp, {ip, lr}
40005de0:	ebfff5b4 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005de4:	e59d0018 	ldr	r0, [sp, #24]
40005de8:	e3a01005 	mov	r1, #5
40005dec:	e2407076 	sub	r7, r0, #118	; 0x76
40005df0:	e207c0ff 	and	ip, r7, #255	; 0xff
40005df4:	e3a020dc 	mov	r2, #220	; 0xdc
40005df8:	e3a07001 	mov	r7, #1
40005dfc:	e1a0300a 	mov	r3, sl
40005e00:	e1a00004 	mov	r0, r4
40005e04:	e58dc000 	str	ip, [sp]
40005e08:	e58d7004 	str	r7, [sp, #4]
40005e0c:	ebfff5a9 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005e10:	e59d3018 	ldr	r3, [sp, #24]
40005e14:	e3a020de 	mov	r2, #222	; 0xde
40005e18:	e283107e 	add	r1, r3, #126	; 0x7e
40005e1c:	e201c0ff 	and	ip, r1, #255	; 0xff
40005e20:	e1a0300a 	mov	r3, sl
40005e24:	e3a01005 	mov	r1, #5
40005e28:	e1a00004 	mov	r0, r4
40005e2c:	e58dc000 	str	ip, [sp]
40005e30:	e3a0c002 	mov	ip, #2
40005e34:	e58dc004 	str	ip, [sp, #4]
40005e38:	ebfff59e 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005e3c:	e59d2018 	ldr	r2, [sp, #24]
40005e40:	e3a01005 	mov	r1, #5
40005e44:	e2820072 	add	r0, r2, #114	; 0x72
40005e48:	e200c0ff 	and	ip, r0, #255	; 0xff
40005e4c:	e3a020e0 	mov	r2, #224	; 0xe0
40005e50:	e1a0300a 	mov	r3, sl
40005e54:	e1a00004 	mov	r0, r4
40005e58:	e58dc000 	str	ip, [sp]
40005e5c:	e3a0c003 	mov	ip, #3
40005e60:	e58dc004 	str	ip, [sp, #4]
40005e64:	ebfff593 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005e68:	e59d3018 	ldr	r3, [sp, #24]
40005e6c:	e3a020dd 	mov	r2, #221	; 0xdd
40005e70:	e243106f 	sub	r1, r3, #111	; 0x6f
40005e74:	e201c0ff 	and	ip, r1, #255	; 0xff
40005e78:	e1a0300a 	mov	r3, sl
40005e7c:	e3a01005 	mov	r1, #5
40005e80:	e1a00004 	mov	r0, r4
40005e84:	e58dc000 	str	ip, [sp]
40005e88:	e3a0c004 	mov	ip, #4
40005e8c:	e58dc004 	str	ip, [sp, #4]
40005e90:	ebfff588 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005e94:	e59f2320 	ldr	r2, [pc, #800]	; 400061bc <ControlHandle+0xef0>
40005e98:	e3a0e005 	mov	lr, #5
40005e9c:	e5d20058 	ldrb	r0, [r2, #88]	; 0x58
40005ea0:	e1a0100e 	mov	r1, lr
40005ea4:	e280307f 	add	r3, r0, #127	; 0x7f
40005ea8:	e203c0ff 	and	ip, r3, #255	; 0xff
40005eac:	e1a0200b 	mov	r2, fp
40005eb0:	e1a0300a 	mov	r3, sl
40005eb4:	e1a00004 	mov	r0, r4
40005eb8:	e88d5000 	stm	sp, {ip, lr}
40005ebc:	ebfff57d 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ec0:	e594001c 	ldr	r0, [r4, #28]
40005ec4:	eb0010a3 	bl	4000a158 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ec8:	e59f12ec 	ldr	r1, [pc, #748]	; 400061bc <ControlHandle+0xef0>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ecc:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ed0:	e5d1c058 	ldrb	ip, [r1, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ed4:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ed8:	e24c2080 	sub	r2, ip, #128	; 0x80
40005edc:	e5c62205 	strb	r2, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ee0:	e59d3018 	ldr	r3, [sp, #24]
40005ee4:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005ee8:	e1a0400e 	mov	r4, lr
40005eec:	eafffd19 	b	40005358 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ef0:	e59f42dc 	ldr	r4, [pc, #732]	; 400061d4 <ControlHandle+0xf08>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005ef4:	e2437001 	sub	r7, r3, #1
40005ef8:	e20770ff 	and	r7, r7, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005efc:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f00:	e3e01000 	mvn	r1, #0
40005f04:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005f08:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f0c:	eb00105c 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f10:	e3a0c000 	mov	ip, #0
40005f14:	e1a0300a 	mov	r3, sl
40005f18:	e3a01004 	mov	r1, #4
40005f1c:	e1a02009 	mov	r2, r9
40005f20:	e1a00004 	mov	r0, r4
40005f24:	e88d1080 	stm	sp, {r7, ip}
40005f28:	ebfff562 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f2c:	e594001c 	ldr	r0, [r4, #28]
40005f30:	eb001088 	bl	4000a158 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f34:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f38:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005f3c:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f40:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
40005f44:	e59d3018 	ldr	r3, [sp, #24]
40005f48:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005f4c:	e1a0400e 	mov	r4, lr
40005f50:	eafffd00 	b	40005358 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f54:	e59f7278 	ldr	r7, [pc, #632]	; 400061d4 <ControlHandle+0xf08>
40005f58:	e3e01000 	mvn	r1, #0
40005f5c:	e597001c 	ldr	r0, [r7, #28]
40005f60:	eb001047 	bl	4000a084 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f64:	e59d8018 	ldr	r8, [sp, #24]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f68:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f6c:	e3180080 	tst	r8, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f70:	01a04328 	lsreq	r4, r8, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f74:	11a04c88 	lslne	r4, r8, #25
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f78:	03844002 	orreq	r4, r4, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f7c:	13c00003 	bicne	r0, r0, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f80:	03c00003 	biceq	r0, r0, #3
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f84:	11804fa4 	orrne	r4, r0, r4, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f88:	01844000 	orreq	r4, r4, r0
							  }
							 Data1 |= ~0x03;
40005f8c:	e1e03f04 	mvn	r3, r4, lsl #30
40005f90:	e1e01f23 	mvn	r1, r3, lsr #30
							 Data1 &= 0xC7;
40005f94:	e201c0c7 	and	ip, r1, #199	; 0xc7
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f98:	e3a0e000 	mov	lr, #0
40005f9c:	e3a01001 	mov	r1, #1
40005fa0:	e1a0200b 	mov	r2, fp
40005fa4:	e1a0300a 	mov	r3, sl
40005fa8:	e59f0224 	ldr	r0, [pc, #548]	; 400061d4 <ControlHandle+0xf08>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005fac:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005fb0:	e88d5000 	stm	sp, {ip, lr}
40005fb4:	e58dc014 	str	ip, [sp, #20]
40005fb8:	ebfff53e 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005fbc:	e59d2018 	ldr	r2, [sp, #24]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005fc0:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005fc4:	e1a08102 	lsl	r8, r2, #2
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005fc8:	e1a0300a 	mov	r3, sl
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005fcc:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005fd0:	e1a02009 	mov	r2, r9
40005fd4:	e59f01f8 	ldr	r0, [pc, #504]	; 400061d4 <ControlHandle+0xf08>
40005fd8:	e58d4004 	str	r4, [sp, #4]
40005fdc:	e58d8000 	str	r8, [sp]
40005fe0:	ebfff534 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005fe4:	e597001c 	ldr	r0, [r7, #28]
40005fe8:	eb00105a 	bl	4000a158 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40005fec:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
40005ff0:	e59d0014 	ldr	r0, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005ff4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ff8:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005ffc:	e5c601a6 	strb	r0, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40006000:	e59d3018 	ldr	r3, [sp, #24]
40006004:	e59dc01c 	ldr	ip, [sp, #28]

							 break;
40006008:	e1a0400e 	mov	r4, lr
4000600c:	eafffcd1 	b	40005358 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006010:	e59f21a4 	ldr	r2, [pc, #420]	; 400061bc <ControlHandle+0xef0>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006014:	e3a01001 	mov	r1, #1
							 if(CamMode == 1) //mode 720p
40006018:	e5d22078 	ldrb	r2, [r2, #120]	; 0x78

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
4000601c:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006020:	e3520001 	cmp	r2, #1
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006024:	e5c61190 	strb	r1, [r6, #400]	; 0x190
40006028:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
4000602c:	0a00004e 	beq	4000616c <ControlHandle+0xea0>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006030:	e59f419c 	ldr	r4, [pc, #412]	; 400061d4 <ControlHandle+0xf08>
40006034:	e3e01000 	mvn	r1, #0
40006038:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
4000603c:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006040:	eb00100f 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006044:	e3a0c000 	mov	ip, #0
40006048:	e1a0100c 	mov	r1, ip
4000604c:	e1a02009 	mov	r2, r9
40006050:	e1a0300a 	mov	r3, sl
40006054:	e1a00004 	mov	r0, r4
40006058:	e58d7000 	str	r7, [sp]
4000605c:	eafffeec 	b	40005c14 <ControlHandle+0x948>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006060:	e59f716c 	ldr	r7, [pc, #364]	; 400061d4 <ControlHandle+0xf08>
40006064:	e3e01000 	mvn	r1, #0
40006068:	e597001c 	ldr	r0, [r7, #28]
4000606c:	eb001004 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006070:	e59dc018 	ldr	ip, [sp, #24]
40006074:	e3a0e000 	mov	lr, #0
40006078:	e1a01004 	mov	r1, r4
4000607c:	e1a0300a 	mov	r3, sl
40006080:	e1a02009 	mov	r2, r9
40006084:	e1a00007 	mov	r0, r7
40006088:	e88d5000 	stm	sp, {ip, lr}
4000608c:	ebfff509 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006090:	e597001c 	ldr	r0, [r7, #28]
40006094:	eb00102f 	bl	4000a158 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40006098:	e59d0018 	ldr	r0, [sp, #24]
4000609c:	e0844084 	add	r4, r4, r4, lsl #1
400060a0:	e0866184 	add	r6, r6, r4, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a4:	e3a03001 	mov	r3, #1
							 break;
400060a8:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400060ac:	e5c63190 	strb	r3, [r6, #400]	; 0x190

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400060b0:	e5c6018d 	strb	r0, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
400060b4:	e1a03000 	mov	r3, r0
400060b8:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400060bc:	e1a0400e 	mov	r4, lr
400060c0:	eafffca4 	b	40005358 <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
400060c4:	e3a00004 	mov	r0, #4
400060c8:	e59f1110 	ldr	r1, [pc, #272]	; 400061e0 <ControlHandle+0xf14>
400060cc:	eb00341b 	bl	40013140 <CyU3PDebugPrint>
400060d0:	e3a0e0ff 	mov	lr, #255	; 0xff
400060d4:	e1a0400e 	mov	r4, lr
400060d8:	e1a0c00e 	mov	ip, lr
400060dc:	e1a0300e 	mov	r3, lr
400060e0:	eafffc9c 	b	40005358 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
400060e4:	e3540002 	cmp	r4, #2
400060e8:	92844004 	addls	r4, r4, #4
400060ec:	920440ff 	andls	r4, r4, #255	; 0xff
400060f0:	9afffdc3 	bls	40005804 <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
400060f4:	e1a03004 	mov	r3, r4
400060f8:	e3a00004 	mov	r0, #4
400060fc:	e59f10e0 	ldr	r1, [pc, #224]	; 400061e4 <ControlHandle+0xf18>
40006100:	eb00340e 	bl	40013140 <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
40006104:	e59f30a4 	ldr	r3, [pc, #164]	; 400061b0 <ControlHandle+0xee4>
40006108:	e3a02000 	mov	r2, #0
4000610c:	e3a04004 	mov	r4, #4
40006110:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
40006114:	eafffdba 	b	40005804 <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006118:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
4000611c:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006120:	e3520004 	cmp	r2, #4
40006124:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006128:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
4000612c:	0a000003 	beq	40006140 <ControlHandle+0xe74>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
40006130:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
40006134:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
40006138:	13a02004 	movne	r2, #4
4000613c:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
40006140:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006144:	959f309c 	ldrls	r3, [pc, #156]	; 400061e8 <ControlHandle+0xf1c>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006148:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
4000614c:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006150:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006154:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006158:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
4000615c:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006160:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006164:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006168:	eafffe9c 	b	40005be0 <ControlHandle+0x914>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
4000616c:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
40006170:	92837004 	addls	r7, r3, #4
40006174:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
40006178:	9affffac 	bls	40006030 <ControlHandle+0xd64>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
4000617c:	e3a00004 	mov	r0, #4
40006180:	e59f105c 	ldr	r1, [pc, #92]	; 400061e4 <ControlHandle+0xf18>
40006184:	e59d3018 	ldr	r3, [sp, #24]
40006188:	eb0033ec 	bl	40013140 <CyU3PDebugPrint>
									Data0 = 4; //set to default.
4000618c:	e3a07004 	mov	r7, #4
40006190:	eaffffa6 	b	40006030 <ControlHandle+0xd64>
40006194:	e59f0020 	ldr	r0, [pc, #32]	; 400061bc <ControlHandle+0xef0>
40006198:	eafffd88 	b	400057c0 <ControlHandle+0x4f4>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000619c:	e3a03000 	mov	r3, #0
400061a0:	eafffe2e 	b	40005a60 <ControlHandle+0x794>
400061a4:	e59f0010 	ldr	r0, [pc, #16]	; 400061bc <ControlHandle+0xef0>
400061a8:	e3a03000 	mov	r3, #0
400061ac:	eafffd7c 	b	400057a4 <ControlHandle+0x4d8>
400061b0:	40030000 	.word	0x40030000
400061b4:	4003358c 	.word	0x4003358c
400061b8:	40011524 	.word	0x40011524
400061bc:	40031410 	.word	0x40031410
400061c0:	40031468 	.word	0x40031468
400061c4:	00010001 	.word	0x00010001
400061c8:	00ff00ff 	.word	0x00ff00ff
400061cc:	40011464 	.word	0x40011464
400061d0:	400114a0 	.word	0x400114a0
400061d4:	40033344 	.word	0x40033344
400061d8:	4003145c 	.word	0x4003145c
400061dc:	400114c8 	.word	0x400114c8
400061e0:	400114f4 	.word	0x400114f4
400061e4:	4001142c 	.word	0x4001142c
400061e8:	40011158 	.word	0x40011158

400061ec <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061f0:	e59fa960 	ldr	sl, [pc, #2400]	; 40006b58 <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061f4:	e59f8960 	ldr	r8, [pc, #2400]	; 40006b5c <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061f8:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061fc:	e1a09080 	lsl	r9, r0, #1
40006200:	e0892000 	add	r2, r9, r0
40006204:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006208:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
4000620c:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006210:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006214:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
40006218:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
4000621c:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006220:	0a000076 	beq	40006400 <CTControlHandle+0x214>
40006224:	9a000021 	bls	400062b0 <CTControlHandle+0xc4>
40006228:	e3550085 	cmp	r5, #133	; 0x85
4000622c:	0a000059 	beq	40006398 <CTControlHandle+0x1ac>
40006230:	3a00004e 	bcc	40006370 <CTControlHandle+0x184>
40006234:	e3550086 	cmp	r5, #134	; 0x86
40006238:	0a000080 	beq	40006440 <CTControlHandle+0x254>
4000623c:	e3550087 	cmp	r5, #135	; 0x87
40006240:	0a000076 	beq	40006420 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40006244:	e3a00000 	mov	r0, #0
40006248:	e3a01001 	mov	r1, #1
4000624c:	e1a02000 	mov	r2, r0
40006250:	eb005f22 	bl	4001dee0 <CyU3PUsbStall>
40006254:	e59f4904 	ldr	r4, [pc, #2308]	; 40006b60 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006258:	e1a02006 	mov	r2, r6
4000625c:	e3a00004 	mov	r0, #4
40006260:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006b64 <CTControlHandle+0x978>
40006264:	e5da3000 	ldrb	r3, [sl]
40006268:	eb0033b4 	bl	40013140 <CyU3PDebugPrint>
			  break;
4000626c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006270:	e1a0600c 	mov	r6, ip
40006274:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006278:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
4000627c:	e58dc008 	str	ip, [sp, #8]
40006280:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006b68 <CTControlHandle+0x97c>
40006284:	e3a0c0ff 	mov	ip, #255	; 0xff
40006288:	e1a02005 	mov	r2, r5
4000628c:	e1a03008 	mov	r3, r8
40006290:	e3a00004 	mov	r0, #4
40006294:	e88d4040 	stm	sp, {r6, lr}
40006298:	e58dc00c 	str	ip, [sp, #12]
4000629c:	e58de010 	str	lr, [sp, #16]
400062a0:	e58d7014 	str	r7, [sp, #20]
400062a4:	eb0033a5 	bl	40013140 <CyU3PDebugPrint>
}
400062a8:	e28dd05c 	add	sp, sp, #92	; 0x5c
400062ac:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062b0:	e3550081 	cmp	r5, #129	; 0x81
400062b4:	0a000042 	beq	400063c4 <CTControlHandle+0x1d8>
400062b8:	9a000011 	bls	40006304 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062bc:	e59f489c 	ldr	r4, [pc, #2204]	; 40006b60 <CTControlHandle+0x974>
400062c0:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062c4:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062c8:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062cc:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062d0:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062d4:	0a00002c 	beq	4000638c <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
400062d8:	e3a0e000 	mov	lr, #0
400062dc:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400062e0:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062e4:	e1a00007 	mov	r0, r7
400062e8:	e59f187c 	ldr	r1, [pc, #2172]	; 40006b6c <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
400062ec:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
400062f0:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400062f4:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062f8:	eb005ccd 	bl	4001d634 <CyU3PUsbSendEP0Data>
400062fc:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006300:	eaffffdc 	b	40006278 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006304:	e3550001 	cmp	r5, #1
40006308:	1affffcd 	bne	40006244 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000630c:	e59f484c 	ldr	r4, [pc, #2124]	; 40006b60 <CTControlHandle+0x974>
40006310:	e28d2056 	add	r2, sp, #86	; 0x56
40006314:	e3a00020 	mov	r0, #32
40006318:	e2841058 	add	r1, r4, #88	; 0x58
4000631c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006320:	eb005a55 	bl	4001cc7c <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006324:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
40006328:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
4000632c:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006330:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006334:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
40006338:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000633c:	e3520009 	cmp	r2, #9
40006340:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006344:	ea000155 	b	400068a0 <CTControlHandle+0x6b4>
40006348:	4000685c 	.word	0x4000685c
4000634c:	400068a0 	.word	0x400068a0
40006350:	4000656c 	.word	0x4000656c
40006354:	400068a0 	.word	0x400068a0
40006358:	400068a0 	.word	0x400068a0
4000635c:	400068a0 	.word	0x400068a0
40006360:	400064e8 	.word	0x400064e8
40006364:	400068a0 	.word	0x400068a0
40006368:	400068a0 	.word	0x400068a0
4000636c:	4000646c 	.word	0x4000646c
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006370:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006b60 <CTControlHandle+0x974>
40006374:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006378:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000637c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006380:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006384:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006388:	1affffd2 	bne	400062d8 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000638c:	e3a01001 	mov	r1, #1
40006390:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006394:	eaffffd1 	b	400062e0 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006398:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006b60 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
4000639c:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063a0:	e3a00002 	mov	r0, #2
400063a4:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063a8:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400063ac:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
400063b0:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400063b4:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063b8:	eb005c9d 	bl	4001d634 <CyU3PUsbSendEP0Data>
400063bc:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063c0:	eaffffac 	b	40006278 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063c4:	e59f4794 	ldr	r4, [pc, #1940]	; 40006b60 <CTControlHandle+0x974>
400063c8:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063cc:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
400063d0:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063d4:	e1a00007 	mov	r0, r7
400063d8:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063dc:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063e0:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
400063e4:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400063e8:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063ec:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063f0:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063f4:	eb005c8e 	bl	4001d634 <CyU3PUsbSendEP0Data>
400063f8:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063fc:	eaffff9d 	b	40006278 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006400:	e59f4758 	ldr	r4, [pc, #1880]	; 40006b60 <CTControlHandle+0x974>
40006404:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006408:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000640c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006410:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006414:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006418:	1affffae 	bne	400062d8 <CTControlHandle+0xec>
4000641c:	eaffffda 	b	4000638c <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006420:	e59f4738 	ldr	r4, [pc, #1848]	; 40006b60 <CTControlHandle+0x974>
40006424:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006428:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000642c:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006430:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006434:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006438:	1affffa6 	bne	400062d8 <CTControlHandle+0xec>
4000643c:	eaffffd2 	b	4000638c <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
40006440:	e59f4718 	ldr	r4, [pc, #1816]	; 40006b60 <CTControlHandle+0x974>
40006444:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
40006448:	e1a01004 	mov	r1, r4
4000644c:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006450:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006454:	e3a00001 	mov	r0, #1
40006458:	eb005c75 	bl	4001d634 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000645c:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006460:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006464:	e3a07001 	mov	r7, #1
40006468:	eaffff82 	b	40006278 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000646c:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006b70 <CTControlHandle+0x984>
40006470:	e3e01000 	mvn	r1, #0
40006474:	e596001c 	ldr	r0, [r6, #28]
40006478:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000647c:	eb000f00 	bl	4000a084 <_txe_mutex_get>
					  if(getData == 1)
40006480:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006484:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006488:	e35e0001 	cmp	lr, #1
4000648c:	0a0001a9 	beq	40006b38 <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006490:	e35e00ff 	cmp	lr, #255	; 0xff
40006494:	0a00019e 	beq	40006b14 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
40006498:	e3a08000 	mov	r8, #0
4000649c:	e1a00006 	mov	r0, r6
400064a0:	e3a01017 	mov	r1, #23
400064a4:	e1a0200b 	mov	r2, fp
400064a8:	e58d8000 	str	r8, [sp]
400064ac:	e58d8004 	str	r8, [sp, #4]
400064b0:	ebfff400 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400064b4:	e596001c 	ldr	r0, [r6, #28]
400064b8:	eb000f26 	bl	4000a158 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
400064bc:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
400064c0:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
400064c4:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
400064c8:	e3a00004 	mov	r0, #4
400064cc:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006b74 <CTControlHandle+0x988>
400064d0:	e1a02008 	mov	r2, r8
400064d4:	e1a03006 	mov	r3, r6
400064d8:	e58dc000 	str	ip, [sp]
400064dc:	eb003317 	bl	40013140 <CyU3PDebugPrint>
					  break;
400064e0:	e3a0c0ff 	mov	ip, #255	; 0xff
400064e4:	eaffff63 	b	40006278 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
400064e8:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
400064ec:	e3580001 	cmp	r8, #1
400064f0:	13580008 	cmpne	r8, #8
400064f4:	13a00000 	movne	r0, #0
400064f8:	03a00001 	moveq	r0, #1
400064fc:	1a000180 	bne	40006b04 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006500:	e59f8668 	ldr	r8, [pc, #1640]	; 40006b70 <CTControlHandle+0x984>
40006504:	e3e01000 	mvn	r1, #0
40006508:	e598001c 	ldr	r0, [r8, #28]
4000650c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006510:	eb000edb 	bl	4000a084 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006514:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006518:	e3a01016 	mov	r1, #22
4000651c:	e1a0200b 	mov	r2, fp
40006520:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006524:	e3a0c000 	mov	ip, #0
40006528:	e1a00008 	mov	r0, r8
4000652c:	e88d1400 	stm	sp, {sl, ip}
40006530:	ebfff3e0 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006534:	e598001c 	ldr	r0, [r8, #28]
40006538:	eb000f06 	bl	4000a158 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
4000653c:	e59f0618 	ldr	r0, [pc, #1560]	; 40006b5c <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
40006540:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006544:	e0891006 	add	r1, r9, r6
40006548:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
4000654c:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006550:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006554:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006558:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
4000655c:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006560:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006564:	e3a0c0ff 	mov	ip, #255	; 0xff
40006568:	eaffff42 	b	40006278 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
4000656c:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006570:	e3500001 	cmp	r0, #1
40006574:	13500004 	cmpne	r0, #4
40006578:	1a00015c 	bne	40006af0 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
4000657c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006580:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006584:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006588:	e35200f9 	cmp	r2, #249	; 0xf9
4000658c:	8a000157 	bhi	40006af0 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006590:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006594:	e1a0c80a 	lsl	ip, sl, #16
40006598:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
4000659c:	e262a027 	rsb	sl, r2, #39	; 0x27
400065a0:	e58da038 	str	sl, [sp, #56]	; 0x38
400065a4:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400065a8:	e26210c8 	rsb	r1, r2, #200	; 0xc8
400065ac:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065b0:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
400065b4:	e1a01801 	lsl	r1, r1, #16
400065b8:	e262e064 	rsb	lr, r2, #100	; 0x64
400065bc:	81a0182a 	lsrhi	r1, sl, #16
400065c0:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065c4:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065c8:	e3520064 	cmp	r2, #100	; 0x64
400065cc:	e1a0080e 	lsl	r0, lr, #16
400065d0:	81a0082c 	lsrhi	r0, ip, #16
400065d4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065d8:	e242a014 	sub	sl, r2, #20
400065dc:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065e0:	91a00820 	lsrls	r0, r0, #16
400065e4:	e262a014 	rsb	sl, r2, #20
400065e8:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065ec:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
400065f0:	e1510000 	cmp	r1, r0
400065f4:	31a0a001 	movcc	sl, r1
400065f8:	21a0a000 	movcs	sl, r0
400065fc:	e1a0c80c 	lsl	ip, ip, #16
40006600:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006604:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006608:	91a0e82c 	lsrls	lr, ip, #16
4000660c:	e59fc564 	ldr	ip, [pc, #1380]	; 40006b78 <CTControlHandle+0x98c>
40006610:	e58da020 	str	sl, [sp, #32]
40006614:	e06ca001 	rsb	sl, ip, r1
40006618:	81a0e82e 	lsrhi	lr, lr, #16
4000661c:	e27ac000 	rsbs	ip, sl, #0
40006620:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006624:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006628:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000662c:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006630:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006634:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
40006638:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000663c:	e242a00a 	sub	sl, r2, #10
40006640:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006644:	e59da020 	ldr	sl, [sp, #32]
40006648:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
4000664c:	e15e000a 	cmp	lr, sl
40006650:	31a0a00e 	movcc	sl, lr
40006654:	e262c00a 	rsb	ip, r2, #10
40006658:	e58dc040 	str	ip, [sp, #64]	; 0x40
4000665c:	e58da038 	str	sl, [sp, #56]	; 0x38
40006660:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006664:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006668:	e3520014 	cmp	r2, #20
4000666c:	91a0a82c 	lsrls	sl, ip, #16
40006670:	81a0a82a 	lsrhi	sl, sl, #16
40006674:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006678:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000667c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006680:	33a0c001 	movcc	ip, #1
40006684:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006688:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000668c:	e1a0a801 	lsl	sl, r1, #16
40006690:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006694:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006698:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
4000669c:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
400066a0:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066a4:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
400066a8:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400066ac:	e58d104c 	str	r1, [sp, #76]	; 0x4c
400066b0:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
400066b4:	e1a00800 	lsl	r0, r0, #16
400066b8:	e15c000a 	cmp	ip, sl
400066bc:	21a0c00a 	movcs	ip, sl
400066c0:	e352000a 	cmp	r2, #10
400066c4:	e59da020 	ldr	sl, [sp, #32]
400066c8:	81a00821 	lsrhi	r0, r1, #16
400066cc:	91a00820 	lsrls	r0, r0, #16
400066d0:	e58d0048 	str	r0, [sp, #72]	; 0x48
400066d4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066d8:	e15e000a 	cmp	lr, sl
400066dc:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066e0:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
400066e4:	e58dc044 	str	ip, [sp, #68]	; 0x44
400066e8:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066ec:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400066f0:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400066f4:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
400066f8:	e59de048 	ldr	lr, [sp, #72]	; 0x48
400066fc:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006700:	e262a002 	rsb	sl, r2, #2
40006704:	e15e0000 	cmp	lr, r0
40006708:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000670c:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006710:	e3520005 	cmp	r2, #5
40006714:	e58da040 	str	sl, [sp, #64]	; 0x40
40006718:	e1a01801 	lsl	r1, r1, #16
4000671c:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006720:	81a0182c 	lsrhi	r1, ip, #16
40006724:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006728:	e58de04c 	str	lr, [sp, #76]	; 0x4c
4000672c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006730:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006734:	91a01821 	lsrls	r1, r1, #16
40006738:	e15a000c 	cmp	sl, ip
4000673c:	e58d1020 	str	r1, [sp, #32]
40006740:	33a00003 	movcc	r0, #3
40006744:	e58d0038 	str	r0, [sp, #56]	; 0x38
40006748:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
4000674c:	e1a0080e 	lsl	r0, lr, #16
40006750:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006754:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006758:	e15e000a 	cmp	lr, sl
4000675c:	21a0e00a 	movcs	lr, sl
40006760:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006764:	e59da048 	ldr	sl, [sp, #72]	; 0x48
40006768:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000676c:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006770:	91a01820 	lsrls	r1, r0, #16
40006774:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006778:	81a01821 	lsrhi	r1, r1, #16
4000677c:	e15a000c 	cmp	sl, ip
40006780:	33a00004 	movcc	r0, #4
40006784:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006788:	e2420001 	sub	r0, r2, #1
4000678c:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006790:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006794:	e59d0020 	ldr	r0, [sp, #32]
40006798:	e262c001 	rsb	ip, r2, #1
4000679c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400067a0:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067a4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
400067a8:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067ac:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400067b0:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067b4:	e3520001 	cmp	r2, #1
400067b8:	91a02800 	lslls	r2, r0, #16
400067bc:	81a0280a 	lslhi	r2, sl, #16
400067c0:	e151000e 	cmp	r1, lr
400067c4:	31a0a001 	movcc	sl, r1
400067c8:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067cc:	e151000e 	cmp	r1, lr
400067d0:	21a0100c 	movcs	r1, ip
400067d4:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067d8:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067dc:	e59fa38c 	ldr	sl, [pc, #908]	; 40006b70 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067e0:	91a02001 	movls	r2, r1
400067e4:	83a02007 	movhi	r2, #7
400067e8:	e2822001 	add	r2, r2, #1
400067ec:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067f0:	e3e01000 	mvn	r1, #0
400067f4:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067f8:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067fc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006800:	eb000e1f 	bl	4000a084 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006804:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006808:	e3a01003 	mov	r1, #3
4000680c:	e1a0200b 	mov	r2, fp
40006810:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006814:	e58dc000 	str	ip, [sp]
40006818:	e1a0000a 	mov	r0, sl
4000681c:	e3a0c000 	mov	ip, #0
40006820:	e58dc004 	str	ip, [sp, #4]
40006824:	ebfff323 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006828:	e59a001c 	ldr	r0, [sl, #28]
4000682c:	eb000e49 	bl	4000a158 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006830:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006834:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006838:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
4000683c:	e0891006 	add	r1, r9, r6
40006840:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006844:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006848:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
4000684c:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006850:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006854:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006858:	eaffff3f 	b	4000655c <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000685c:	e0892006 	add	r2, r9, r6
40006860:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006864:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006868:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000686c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006870:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006874:	e35e0007 	cmp	lr, #7
40006878:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
4000687c:	ea000097 	b	40006ae0 <CTControlHandle+0x8f4>
40006880:	40006a74 	.word	0x40006a74
40006884:	400069d8 	.word	0x400069d8
40006888:	40006ae0 	.word	0x40006ae0
4000688c:	40006974 	.word	0x40006974
40006890:	40006ae0 	.word	0x40006ae0
40006894:	40006ae0 	.word	0x40006ae0
40006898:	40006ae0 	.word	0x40006ae0
4000689c:	400068d4 	.word	0x400068d4
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068a0:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068a4:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400068a8:	e0899006 	add	r9, r9, r6
400068ac:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068b0:	e1a02006 	mov	r2, r6
400068b4:	e3a00004 	mov	r0, #4
400068b8:	e59f12bc 	ldr	r1, [pc, #700]	; 40006b7c <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068bc:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068c0:	eb00321e 	bl	40013140 <CyU3PDebugPrint>
			  		 break;
400068c4:	e3a0c0ff 	mov	ip, #255	; 0xff
400068c8:	e1a0600c 	mov	r6, ip
400068cc:	e1a0800c 	mov	r8, ip
400068d0:	eafffe68 	b	40006278 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068d4:	e59f6294 	ldr	r6, [pc, #660]	; 40006b70 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068d8:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068dc:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068e0:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068e4:	e3e01000 	mvn	r1, #0
400068e8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400068ec:	eb000de4 	bl	4000a084 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400068f0:	e1a0200b 	mov	r2, fp
400068f4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400068f8:	e3a01010 	mov	r1, #16
400068fc:	e1a00006 	mov	r0, r6
40006900:	e58da000 	str	sl, [sp]
40006904:	e58da004 	str	sl, [sp, #4]
40006908:	ebfff2ea 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000690c:	e596001c 	ldr	r0, [r6, #28]
40006910:	eb000e10 	bl	4000a158 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006914:	e3e01000 	mvn	r1, #0
40006918:	e596001c 	ldr	r0, [r6, #28]
4000691c:	eb000dd8 	bl	4000a084 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006920:	e3a08001 	mov	r8, #1
40006924:	e3a01014 	mov	r1, #20
40006928:	e3a02027 	mov	r2, #39	; 0x27
4000692c:	e3a03030 	mov	r3, #48	; 0x30
40006930:	e1a00006 	mov	r0, r6
40006934:	e88d0500 	stm	sp, {r8, sl}
40006938:	ebfff2de 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
4000693c:	e3a0c002 	mov	ip, #2
40006940:	e3a01015 	mov	r1, #21
40006944:	e3a02025 	mov	r2, #37	; 0x25
40006948:	e3a03030 	mov	r3, #48	; 0x30
4000694c:	e1a00006 	mov	r0, r6
40006950:	e58dc000 	str	ip, [sp]
40006954:	e58da004 	str	sl, [sp, #4]
40006958:	ebfff2d6 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000695c:	e596001c 	ldr	r0, [r6, #28]
40006960:	eb000dfc 	bl	4000a158 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006964:	e3a0c0ff 	mov	ip, #255	; 0xff
40006968:	e1a0600c 	mov	r6, ip
4000696c:	e3a08008 	mov	r8, #8
40006970:	eafffe40 	b	40006278 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006974:	e59f81f4 	ldr	r8, [pc, #500]	; 40006b70 <CTControlHandle+0x984>
40006978:	e3e01000 	mvn	r1, #0
4000697c:	e598001c 	ldr	r0, [r8, #28]
40006980:	eb000dbf 	bl	4000a084 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006984:	e3a06000 	mov	r6, #0
40006988:	e3a01014 	mov	r1, #20
4000698c:	e3a02027 	mov	r2, #39	; 0x27
40006990:	e3a03030 	mov	r3, #48	; 0x30
40006994:	e1a00008 	mov	r0, r8
40006998:	e58d6000 	str	r6, [sp]
4000699c:	e58d6004 	str	r6, [sp, #4]
400069a0:	ebfff2c4 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069a4:	e3a01015 	mov	r1, #21
400069a8:	e3a02025 	mov	r2, #37	; 0x25
400069ac:	e3a03030 	mov	r3, #48	; 0x30
400069b0:	e1a00008 	mov	r0, r8
400069b4:	e58d6000 	str	r6, [sp]
400069b8:	e58d6004 	str	r6, [sp, #4]
400069bc:	ebfff2bd 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069c0:	e598001c 	ldr	r0, [r8, #28]
400069c4:	eb000de3 	bl	4000a158 <_txe_mutex_put>
400069c8:	e3a0c0ff 	mov	ip, #255	; 0xff
400069cc:	e1a0600c 	mov	r6, ip
400069d0:	e3a08004 	mov	r8, #4
400069d4:	eafffe27 	b	40006278 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069d8:	e59fa190 	ldr	sl, [pc, #400]	; 40006b70 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400069dc:	e3a06000 	mov	r6, #0
400069e0:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069e4:	e3e01000 	mvn	r1, #0
400069e8:	e59a001c 	ldr	r0, [sl, #28]
400069ec:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400069f0:	eb000da3 	bl	4000a084 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400069f4:	e1a0200b 	mov	r2, fp
400069f8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400069fc:	e3a01010 	mov	r1, #16
40006a00:	e1a0000a 	mov	r0, sl
40006a04:	e58d6000 	str	r6, [sp]
40006a08:	e58d6004 	str	r6, [sp, #4]
40006a0c:	ebfff2a9 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a10:	e59a001c 	ldr	r0, [sl, #28]
40006a14:	eb000dcf 	bl	4000a158 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a18:	e3e01000 	mvn	r1, #0
40006a1c:	e59a001c 	ldr	r0, [sl, #28]
40006a20:	eb000d97 	bl	4000a084 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a24:	e3a01014 	mov	r1, #20
40006a28:	e3a02027 	mov	r2, #39	; 0x27
40006a2c:	e3a03030 	mov	r3, #48	; 0x30
40006a30:	e1a0000a 	mov	r0, sl
40006a34:	e58d6000 	str	r6, [sp]
40006a38:	e58d6004 	str	r6, [sp, #4]
40006a3c:	ebfff29d 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a40:	e3a01015 	mov	r1, #21
40006a44:	e3a02025 	mov	r2, #37	; 0x25
40006a48:	e3a03030 	mov	r3, #48	; 0x30
40006a4c:	e1a0000a 	mov	r0, sl
40006a50:	e58d6000 	str	r6, [sp]
40006a54:	e58d6004 	str	r6, [sp, #4]
40006a58:	ebfff296 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a5c:	e59a001c 	ldr	r0, [sl, #28]
40006a60:	eb000dbc 	bl	4000a158 <_txe_mutex_put>
40006a64:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a68:	e1a0600c 	mov	r6, ip
40006a6c:	e3a08002 	mov	r8, #2
40006a70:	eafffe00 	b	40006278 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a74:	e59f60f4 	ldr	r6, [pc, #244]	; 40006b70 <CTControlHandle+0x984>
40006a78:	e3e01000 	mvn	r1, #0
40006a7c:	e596001c 	ldr	r0, [r6, #28]
40006a80:	eb000d7f 	bl	4000a084 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a84:	e3a08000 	mov	r8, #0
40006a88:	e3a0a001 	mov	sl, #1
40006a8c:	e3a01014 	mov	r1, #20
40006a90:	e3a02027 	mov	r2, #39	; 0x27
40006a94:	e3a03030 	mov	r3, #48	; 0x30
40006a98:	e1a00006 	mov	r0, r6
40006a9c:	e58d8004 	str	r8, [sp, #4]
40006aa0:	e58da000 	str	sl, [sp]
40006aa4:	ebfff283 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006aa8:	e3a0c002 	mov	ip, #2
40006aac:	e3a01015 	mov	r1, #21
40006ab0:	e3a02025 	mov	r2, #37	; 0x25
40006ab4:	e3a03030 	mov	r3, #48	; 0x30
40006ab8:	e1a00006 	mov	r0, r6
40006abc:	e58dc000 	str	ip, [sp]
40006ac0:	e58d8004 	str	r8, [sp, #4]
40006ac4:	ebfff27b 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006ac8:	e596001c 	ldr	r0, [r6, #28]
40006acc:	eb000da1 	bl	4000a158 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006ad0:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ad4:	e1a0600c 	mov	r6, ip
40006ad8:	e1a0800a 	mov	r8, sl
40006adc:	eafffde5 	b	40006278 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006ae0:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ae4:	e1a08000 	mov	r8, r0
40006ae8:	e1a0600c 	mov	r6, ip
40006aec:	eafffde1 	b	40006278 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006af0:	e3a00000 	mov	r0, #0
40006af4:	e3a01001 	mov	r1, #1
40006af8:	e1a02000 	mov	r2, r0
40006afc:	eb005cf7 	bl	4001dee0 <CyU3PUsbStall>
40006b00:	eafffe95 	b	4000655c <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b04:	e3a01001 	mov	r1, #1
40006b08:	e1a02000 	mov	r2, r0
40006b0c:	eb005cf3 	bl	4001dee0 <CyU3PUsbStall>
40006b10:	eafffe91 	b	4000655c <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006b14:	e3a0e008 	mov	lr, #8
40006b18:	e3a0c000 	mov	ip, #0
40006b1c:	e1a00006 	mov	r0, r6
40006b20:	e3a01017 	mov	r1, #23
40006b24:	e1a0200b 	mov	r2, fp
40006b28:	e58de000 	str	lr, [sp]
40006b2c:	e58dc004 	str	ip, [sp, #4]
40006b30:	ebfff260 	bl	400034b8 <cmdSet>
40006b34:	eafffe5e 	b	400064b4 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006b38:	e3a08004 	mov	r8, #4
40006b3c:	e3a0e000 	mov	lr, #0
40006b40:	e1a00006 	mov	r0, r6
40006b44:	e3a01017 	mov	r1, #23
40006b48:	e1a0200b 	mov	r2, fp
40006b4c:	e88d4100 	stm	sp, {r8, lr}
40006b50:	ebfff258 	bl	400034b8 <cmdSet>
40006b54:	eafffe56 	b	400064b4 <CTControlHandle+0x2c8>
40006b58:	4003358c 	.word	0x4003358c
40006b5c:	40030000 	.word	0x40030000
40006b60:	40031410 	.word	0x40031410
40006b64:	400115c0 	.word	0x400115c0
40006b68:	400115e4 	.word	0x400115e4
40006b6c:	40031468 	.word	0x40031468
40006b70:	40033344 	.word	0x40033344
40006b74:	40011574 	.word	0x40011574
40006b78:	0000ffff 	.word	0x0000ffff
40006b7c:	4001159c 	.word	0x4001159c

40006b80 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b80:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b84:	e59f4a64 	ldr	r4, [pc, #2660]	; 400075f0 <UVCAppEP0Thread_Entry+0xa70>
40006b88:	e59f6a64 	ldr	r6, [pc, #2660]	; 400075f4 <UVCAppEP0Thread_Entry+0xa74>
40006b8c:	e59f8a64 	ldr	r8, [pc, #2660]	; 400075f8 <UVCAppEP0Thread_Entry+0xa78>
40006b90:	e59fba64 	ldr	fp, [pc, #2660]	; 400075fc <UVCAppEP0Thread_Entry+0xa7c>
40006b94:	e59faa64 	ldr	sl, [pc, #2660]	; 40007600 <UVCAppEP0Thread_Entry+0xa80>
40006b98:	e59f7a64 	ldr	r7, [pc, #2660]	; 40007604 <UVCAppEP0Thread_Entry+0xa84>
40006b9c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006ba0:	e1a05004 	mov	r5, r4
40006ba4:	e3e0c000 	mvn	ip, #0
40006ba8:	e59f0a40 	ldr	r0, [pc, #2624]	; 400075f0 <UVCAppEP0Thread_Entry+0xa70>
40006bac:	e3a0104c 	mov	r1, #76	; 0x4c
40006bb0:	e3a02001 	mov	r2, #1
40006bb4:	e28d3030 	add	r3, sp, #48	; 0x30
40006bb8:	e58dc000 	str	ip, [sp]
40006bbc:	eb000c68 	bl	40009d64 <_txe_event_flags_get>
40006bc0:	e3500000 	cmp	r0, #0
40006bc4:	1a000030 	bne	40006c8c <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006bc8:	e5953044 	ldr	r3, [r5, #68]	; 0x44
40006bcc:	e3530000 	cmp	r3, #0
40006bd0:	0a000089 	beq	40006dfc <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006bd4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006bd8:	e313000c 	tst	r3, #12
40006bdc:	1a000072 	bne	40006dac <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006be0:	e3130004 	tst	r3, #4
40006be4:	0a00001c 	beq	40006c5c <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006be8:	e1dae0b0 	ldrh	lr, [sl]
40006bec:	e1a0242e 	lsr	r2, lr, #8
40006bf0:	e3520003 	cmp	r2, #3
40006bf4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006bf8:	ea000012 	b	40006c48 <UVCAppEP0Thread_Entry+0xc8>
40006bfc:	40006c48 	.word	0x40006c48
40006c00:	40006d2c 	.word	0x40006d2c
40006c04:	40006c0c 	.word	0x40006c0c
40006c08:	40006d68 	.word	0x40006d68
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006c0c:	e1db20b0 	ldrh	r2, [fp]
40006c10:	e3520c06 	cmp	r2, #1536	; 0x600
40006c14:	0a0001f2 	beq	400073e4 <UVCAppEP0Thread_Entry+0x864>
40006c18:	8a0000cc 	bhi	40006f50 <UVCAppEP0Thread_Entry+0x3d0>
40006c1c:	e3520c03 	cmp	r2, #768	; 0x300
40006c20:	0a0001eb 	beq	400073d4 <UVCAppEP0Thread_Entry+0x854>
40006c24:	8a0001e2 	bhi	400073b4 <UVCAppEP0Thread_Entry+0x834>
40006c28:	e3520c01 	cmp	r2, #256	; 0x100
40006c2c:	0a00017b 	beq	40007220 <UVCAppEP0Thread_Entry+0x6a0>
40006c30:	e3520c02 	cmp	r2, #512	; 0x200
40006c34:	0a000175 	beq	40007210 <UVCAppEP0Thread_Entry+0x690>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006c38:	e59f19c8 	ldr	r1, [pc, #2504]	; 40007608 <UVCAppEP0Thread_Entry+0xa88>
40006c3c:	e5d83000 	ldrb	r3, [r8]
40006c40:	e3a00004 	mov	r0, #4
40006c44:	eb00313d 	bl	40013140 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006c48:	e3a00000 	mov	r0, #0
40006c4c:	e3a01001 	mov	r1, #1
40006c50:	e1a02000 	mov	r2, r0
40006c54:	eb005ca1 	bl	4001dee0 <CyU3PUsbStall>
40006c58:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006c5c:	e3130008 	tst	r3, #8
40006c60:	0a000007 	beq	40006c84 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006c64:	e1da30b0 	ldrh	r3, [sl]
40006c68:	e3530001 	cmp	r3, #1
40006c6c:	0a000068 	beq	40006e14 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006c70:	e3a00000 	mov	r0, #0
40006c74:	e3a01001 	mov	r1, #1
40006c78:	e1a02000 	mov	r2, r0
40006c7c:	eb005c97 	bl	4001dee0 <CyU3PUsbStall>
40006c80:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c84:	e3130040 	tst	r3, #64	; 0x40
40006c88:	1a000001 	bne	40006c94 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006c8c:	eb000f1d 	bl	4000a908 <_txe_thread_relinquish>
    }
40006c90:	eaffffc3 	b	40006ba4 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006c94:	e3a00018 	mov	r0, #24
40006c98:	e28d102c 	add	r1, sp, #44	; 0x2c
40006c9c:	eb007057 	bl	40022e00 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006ca0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006ca4:	e3530000 	cmp	r3, #0
40006ca8:	0a00006d 	beq	40006e64 <UVCAppEP0Thread_Entry+0x2e4>
40006cac:	e5d6365f 	ldrb	r3, [r6, #1631]	; 0x65f
40006cb0:	e3530000 	cmp	r3, #0
40006cb4:	1afffff4 	bne	40006c8c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006cb8:	e597e000 	ldr	lr, [r7]
40006cbc:	e3a09002 	mov	r9, #2
40006cc0:	e5ce9000 	strb	r9, [lr]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006cc4:	e5971000 	ldr	r1, [r7]
40006cc8:	e3a09001 	mov	r9, #1
40006ccc:	e5c19001 	strb	r9, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006cd0:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006cd4:	e3a02b01 	mov	r2, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006cd8:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006cdc:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ce0:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006ce4:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006ce8:	e597e000 	ldr	lr, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006cec:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cf0:	e59f0914 	ldr	r0, [pc, #2324]	; 4000760c <UVCAppEP0Thread_Entry+0xa8c>
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006cf4:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006cf8:	e1cd22b6 	strh	r2, [sp, #38]	; 0x26
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006cfc:	e58de020 	str	lr, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006d00:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d04:	eb004089 	bl	40016f30 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006d08:	e59f08fc 	ldr	r0, [pc, #2300]	; 4000760c <UVCAppEP0Thread_Entry+0xa8c>
40006d0c:	e28d1020 	add	r1, sp, #32
40006d10:	eb003ff8 	bl	40016cf8 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006d14:	e2503000 	subs	r3, r0, #0
40006d18:	1a000179 	bne	40007304 <UVCAppEP0Thread_Entry+0x784>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006d1c:	e59f38d0 	ldr	r3, [pc, #2256]	; 400075f4 <UVCAppEP0Thread_Entry+0xa74>
40006d20:	e5c3965f 	strb	r9, [r3, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006d24:	eb000ef7 	bl	4000a908 <_txe_thread_relinquish>
40006d28:	eaffff9d 	b	40006ba4 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006d2c:	e1db20b0 	ldrh	r2, [fp]
40006d30:	e3520c06 	cmp	r2, #1536	; 0x600
40006d34:	0a0000d6 	beq	40007094 <UVCAppEP0Thread_Entry+0x514>
40006d38:	8a00008f 	bhi	40006f7c <UVCAppEP0Thread_Entry+0x3fc>
40006d3c:	e3520c03 	cmp	r2, #768	; 0x300
40006d40:	0a00012a 	beq	400071f0 <UVCAppEP0Thread_Entry+0x670>
40006d44:	8a000121 	bhi	400071d0 <UVCAppEP0Thread_Entry+0x650>
40006d48:	e3520c01 	cmp	r2, #256	; 0x100
40006d4c:	0a000168 	beq	400072f4 <UVCAppEP0Thread_Entry+0x774>
40006d50:	e3520c02 	cmp	r2, #512	; 0x200
40006d54:	1affffb7 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006d58:	e3a00001 	mov	r0, #1
40006d5c:	ebfffd22 	bl	400061ec <CTControlHandle>
40006d60:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d64:	eaffffbc 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d68:	e1db20b0 	ldrh	r2, [fp]
40006d6c:	e3520c09 	cmp	r2, #2304	; 0x900
40006d70:	0a000210 	beq	400075b8 <UVCAppEP0Thread_Entry+0xa38>
40006d74:	8a000088 	bhi	40006f9c <UVCAppEP0Thread_Entry+0x41c>
40006d78:	e3520b01 	cmp	r2, #1024	; 0x400
40006d7c:	0a000211 	beq	400075c8 <UVCAppEP0Thread_Entry+0xa48>
40006d80:	8a0001a0 	bhi	40007408 <UVCAppEP0Thread_Entry+0x888>
40006d84:	e3520c02 	cmp	r2, #512	; 0x200
40006d88:	0a000206 	beq	400075a8 <UVCAppEP0Thread_Entry+0xa28>
40006d8c:	e3520c03 	cmp	r2, #768	; 0x300
40006d90:	0a0001f4 	beq	40007568 <UVCAppEP0Thread_Entry+0x9e8>
40006d94:	e3520c01 	cmp	r2, #256	; 0x100
40006d98:	1affffaa 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006d9c:	e3a00010 	mov	r0, #16
40006da0:	ebfff949 	bl	400052cc <ControlHandle>
40006da4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006da8:	eaffffab 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006dac:	e59f985c 	ldr	r9, [pc, #2140]	; 40007610 <UVCAppEP0Thread_Entry+0xa90>
40006db0:	e1dbc0b0 	ldrh	ip, [fp]
40006db4:	e1da00b0 	ldrh	r0, [sl]
40006db8:	e59f1854 	ldr	r1, [pc, #2132]	; 40007614 <UVCAppEP0Thread_Entry+0xa94>
40006dbc:	e5d9e000 	ldrb	lr, [r9]
40006dc0:	e5d89000 	ldrb	r9, [r8]
40006dc4:	e5d4202c 	ldrb	r2, [r4, #44]	; 0x2c
40006dc8:	e58d000c 	str	r0, [sp, #12]
40006dcc:	e58dc008 	str	ip, [sp, #8]
40006dd0:	e1d1c0b0 	ldrh	ip, [r1]
40006dd4:	e3a00004 	mov	r0, #4
40006dd8:	e58d9004 	str	r9, [sp, #4]
40006ddc:	e59f1834 	ldr	r1, [pc, #2100]	; 40007618 <UVCAppEP0Thread_Entry+0xa98>
40006de0:	e3a09000 	mov	r9, #0
40006de4:	e58de000 	str	lr, [sp]
40006de8:	e58dc010 	str	ip, [sp, #16]
40006dec:	e58d9014 	str	r9, [sp, #20]
40006df0:	eb0030d2 	bl	40013140 <CyU3PDebugPrint>
40006df4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006df8:	eaffff78 	b	40006be0 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006dfc:	eb005810 	bl	4001ce44 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006e00:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e04:	e5c5002c 	strb	r0, [r5, #44]	; 0x2c
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006e08:	13a00001 	movne	r0, #1
40006e0c:	15850044 	strne	r0, [r5, #68]	; 0x44
40006e10:	eaffff6f 	b	40006bd4 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006e14:	e1db20b0 	ldrh	r2, [fp]
40006e18:	e3520c03 	cmp	r2, #768	; 0x300
40006e1c:	0a000082 	beq	4000702c <UVCAppEP0Thread_Entry+0x4ac>
40006e20:	8a000033 	bhi	40006ef4 <UVCAppEP0Thread_Entry+0x374>
40006e24:	e3520c01 	cmp	r2, #256	; 0x100
40006e28:	0a00008c 	beq	40007060 <UVCAppEP0Thread_Entry+0x4e0>
40006e2c:	e3520c02 	cmp	r2, #512	; 0x200
40006e30:	1affff8e 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006e34:	e5d83000 	ldrb	r3, [r8]
40006e38:	e3530081 	cmp	r3, #129	; 0x81
40006e3c:	0a00008c 	beq	40007074 <UVCAppEP0Thread_Entry+0x4f4>
40006e40:	8a00013a 	bhi	40007330 <UVCAppEP0Thread_Entry+0x7b0>
40006e44:	e3530001 	cmp	r3, #1
40006e48:	0a0001b5 	beq	40007524 <UVCAppEP0Thread_Entry+0x9a4>
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006e4c:	e3a00000 	mov	r0, #0
40006e50:	e3a01001 	mov	r1, #1
40006e54:	e1a02000 	mov	r2, r0
40006e58:	eb005c20 	bl	4001dee0 <CyU3PUsbStall>
40006e5c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006e60:	eaffff87 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006e64:	e5d6265f 	ldrb	r2, [r6, #1631]	; 0x65f
40006e68:	e3520000 	cmp	r2, #0
40006e6c:	0affff86 	beq	40006c8c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e70:	e5972000 	ldr	r2, [r7]
40006e74:	e3a09002 	mov	r9, #2
40006e78:	e5c29000 	strb	r9, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e7c:	e5971000 	ldr	r1, [r7]
40006e80:	e3a09001 	mov	r9, #1
40006e84:	e5c19001 	strb	r9, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e88:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e8c:	e3a0cb01 	mov	ip, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e90:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006e94:	e597e000 	ldr	lr, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e98:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006e9c:	e5ce9003 	strb	r9, [lr, #3]

					interStabuf.buffer = glInterStaBuffer;
40006ea0:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006ea4:	e3a0e004 	mov	lr, #4
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ea8:	e1cdc2b6 	strh	ip, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006eac:	e59f0758 	ldr	r0, [pc, #1880]	; 4000760c <UVCAppEP0Thread_Entry+0xa8c>
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006eb0:	e1a0c003 	mov	ip, r3
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006eb4:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006eb8:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006ebc:	e1cde2b4 	strh	lr, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ec0:	e58dc01c 	str	ip, [sp, #28]
40006ec4:	eb004019 	bl	40016f30 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006ec8:	e59f073c 	ldr	r0, [pc, #1852]	; 4000760c <UVCAppEP0Thread_Entry+0xa8c>
40006ecc:	e28d1020 	add	r1, sp, #32
40006ed0:	eb003f88 	bl	40016cf8 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ed4:	e59d201c 	ldr	r2, [sp, #28]
40006ed8:	e2503000 	subs	r3, r0, #0
40006edc:	1a0000d3 	bne	40007230 <UVCAppEP0Thread_Entry+0x6b0>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006ee0:	e59f370c 	ldr	r3, [pc, #1804]	; 400075f4 <UVCAppEP0Thread_Entry+0xa74>
					stiflag = CyTrue;
40006ee4:	e584909c 	str	r9, [r4, #156]	; 0x9c
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006ee8:	e5c3265f 	strb	r2, [r3, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006eec:	eb000e85 	bl	4000a908 <_txe_thread_relinquish>
40006ef0:	eaffff2b 	b	40006ba4 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006ef4:	e3520b01 	cmp	r2, #1024	; 0x400
40006ef8:	0a000039 	beq	40006fe4 <UVCAppEP0Thread_Entry+0x464>
40006efc:	e3520c05 	cmp	r2, #1280	; 0x500
40006f00:	1affff5a 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006f04:	e5d82000 	ldrb	r2, [r8]
40006f08:	e3520081 	cmp	r2, #129	; 0x81
40006f0c:	0a000058 	beq	40007074 <UVCAppEP0Thread_Entry+0x4f4>
40006f10:	8a000137 	bhi	400073f4 <UVCAppEP0Thread_Entry+0x874>
40006f14:	e3520001 	cmp	r2, #1
40006f18:	1affff54 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006f1c:	e3a00020 	mov	r0, #32
40006f20:	e59f16f4 	ldr	r1, [pc, #1780]	; 4000761c <UVCAppEP0Thread_Entry+0xa9c>
40006f24:	e28d2036 	add	r2, sp, #54	; 0x36
40006f28:	eb005753 	bl	4001cc7c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006f2c:	e3500000 	cmp	r0, #0
40006f30:	1a0001a8 	bne	400075d8 <UVCAppEP0Thread_Entry+0xa58>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40006f34:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40006f38:	e2800004 	add	r0, r0, #4
40006f3c:	e59f16dc 	ldr	r1, [pc, #1756]	; 40007620 <UVCAppEP0Thread_Entry+0xaa0>
40006f40:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40006f44:	eb00307d 	bl	40013140 <CyU3PDebugPrint>
40006f48:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f4c:	eaffff4c 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f50:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f54:	0a00010e 	beq	40007394 <UVCAppEP0Thread_Entry+0x814>
40006f58:	8a000103 	bhi	4000736c <UVCAppEP0Thread_Entry+0x7ec>
40006f5c:	e3520c07 	cmp	r2, #1792	; 0x700
40006f60:	0a0000fd 	beq	4000735c <UVCAppEP0Thread_Entry+0x7dc>
40006f64:	e3520b02 	cmp	r2, #2048	; 0x800
40006f68:	1affff32 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006f6c:	e3a00007 	mov	r0, #7
40006f70:	ebfff8d5 	bl	400052cc <ControlHandle>
40006f74:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f78:	eaffff37 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f7c:	e3520c09 	cmp	r2, #2304	; 0x900
40006f80:	0a00013f 	beq	40007484 <UVCAppEP0Thread_Entry+0x904>
40006f84:	8a000134 	bhi	4000745c <UVCAppEP0Thread_Entry+0x8dc>
40006f88:	e3520c07 	cmp	r2, #1792	; 0x700
40006f8c:	0a000126 	beq	4000742c <UVCAppEP0Thread_Entry+0x8ac>
40006f90:	e3520b02 	cmp	r2, #2048	; 0x800
40006f94:	1affff27 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
40006f98:	eaffff2f 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f9c:	e3520c0f 	cmp	r2, #3840	; 0xf00
40006fa0:	0a00017c 	beq	40007598 <UVCAppEP0Thread_Entry+0xa18>
40006fa4:	8a00003e 	bhi	400070a4 <UVCAppEP0Thread_Entry+0x524>
40006fa8:	e3520c0b 	cmp	r2, #2816	; 0xb00
40006fac:	0a000175 	beq	40007588 <UVCAppEP0Thread_Entry+0xa08>
40006fb0:	e3520c0d 	cmp	r2, #3328	; 0xd00
40006fb4:	0a00016f 	beq	40007578 <UVCAppEP0Thread_Entry+0x9f8>
40006fb8:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006fbc:	1affff21 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
40006fc0:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
40006fc4:	e3530001 	cmp	r3, #1
40006fc8:	0a00013d 	beq	400074c4 <UVCAppEP0Thread_Entry+0x944>
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
40006fcc:	e5d83000 	ldrb	r3, [r8]
40006fd0:	e3a00004 	mov	r0, #4
40006fd4:	e59f1648 	ldr	r1, [pc, #1608]	; 40007624 <UVCAppEP0Thread_Entry+0xaa4>
40006fd8:	eb003058 	bl	40013140 <CyU3PDebugPrint>
40006fdc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fe0:	eaffff1d 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40006fe4:	e5d89000 	ldrb	r9, [r8]
40006fe8:	e3590081 	cmp	r9, #129	; 0x81
40006fec:	0a000013 	beq	40007040 <UVCAppEP0Thread_Entry+0x4c0>
40006ff0:	8a000099 	bhi	4000725c <UVCAppEP0Thread_Entry+0x6dc>
40006ff4:	e3590001 	cmp	r9, #1
40006ff8:	1affff1c 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006ffc:	e28d2036 	add	r2, sp, #54	; 0x36
40007000:	e3a00020 	mov	r0, #32
40007004:	e59f1610 	ldr	r1, [pc, #1552]	; 4000761c <UVCAppEP0Thread_Entry+0xa9c>
40007008:	eb00571b 	bl	4001cc7c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
4000700c:	e2502000 	subs	r2, r0, #0
40007010:	1affff1a 	bne	40006c80 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007014:	e59f05d4 	ldr	r0, [pc, #1492]	; 400075f0 <UVCAppEP0Thread_Entry+0xa70>
40007018:	e1a01009 	mov	r1, r9
4000701c:	eb000b80 	bl	40009e24 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40007020:	e2502000 	subs	r2, r0, #0
40007024:	0affff15 	beq	40006c80 <UVCAppEP0Thread_Entry+0x100>
40007028:	ea000149 	b	40007554 <UVCAppEP0Thread_Entry+0x9d4>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000702c:	e5d82000 	ldrb	r2, [r8]
40007030:	e3520083 	cmp	r2, #131	; 0x83
40007034:	8a0000a7 	bhi	400072d8 <UVCAppEP0Thread_Entry+0x758>
40007038:	e3520081 	cmp	r2, #129	; 0x81
4000703c:	3a00008c 	bcc	40007274 <UVCAppEP0Thread_Entry+0x6f4>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007040:	e5d4202c 	ldrb	r2, [r4, #44]	; 0x2c
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40007044:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007048:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
4000704c:	059f15d4 	ldreq	r1, [pc, #1492]	; 40007628 <UVCAppEP0Thread_Entry+0xaa8>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007050:	159f15d4 	ldrne	r1, [pc, #1492]	; 4000762c <UVCAppEP0Thread_Entry+0xaac>
40007054:	eb005976 	bl	4001d634 <CyU3PUsbSendEP0Data>
40007058:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000705c:	eaffff08 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007060:	e5d82000 	ldrb	r2, [r8]
40007064:	e3520083 	cmp	r2, #131	; 0x83
40007068:	8a000046 	bhi	40007188 <UVCAppEP0Thread_Entry+0x608>
4000706c:	e3520081 	cmp	r2, #129	; 0x81
40007070:	3a000014 	bcc	400070c8 <UVCAppEP0Thread_Entry+0x548>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007074:	e5d4302c 	ldrb	r3, [r4, #44]	; 0x2c
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007078:	e3a0001a 	mov	r0, #26
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
4000707c:	e3530003 	cmp	r3, #3
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007080:	059f15a8 	ldreq	r1, [pc, #1448]	; 40007630 <UVCAppEP0Thread_Entry+0xab0>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007084:	159f15a8 	ldrne	r1, [pc, #1448]	; 40007634 <UVCAppEP0Thread_Entry+0xab4>
40007088:	eb005969 	bl	4001d634 <CyU3PUsbSendEP0Data>
4000708c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007090:	eafffefb 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007094:	e3a00005 	mov	r0, #5
40007098:	ebfffc53 	bl	400061ec <CTControlHandle>
4000709c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070a0:	eafffeed 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400070a4:	e3520c11 	cmp	r2, #4352	; 0x1100
400070a8:	0a000119 	beq	40007514 <UVCAppEP0Thread_Entry+0x994>
400070ac:	8a00003f 	bhi	400071b0 <UVCAppEP0Thread_Entry+0x630>
400070b0:	e3520a01 	cmp	r2, #4096	; 0x1000
400070b4:	1afffee3 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
400070b8:	e3a0001f 	mov	r0, #31
400070bc:	ebfff882 	bl	400052cc <ControlHandle>
400070c0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070c4:	eafffee4 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070c8:	e3520001 	cmp	r2, #1
400070cc:	1afffee7 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070d0:	e3a00020 	mov	r0, #32
400070d4:	e59f1540 	ldr	r1, [pc, #1344]	; 4000761c <UVCAppEP0Thread_Entry+0xa9c>
400070d8:	e28d2036 	add	r2, sp, #54	; 0x36
400070dc:	eb0056e6 	bl	4001cc7c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400070e0:	e3500000 	cmp	r0, #0
400070e4:	1a000018 	bne	4000714c <UVCAppEP0Thread_Entry+0x5cc>
                    {
                        CyU3PDebugPrint (4, "glProbeCtrl 20 ~25 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n\r",
400070e8:	e5d61640 	ldrb	r1, [r6, #1600]	; 0x640
400070ec:	e5d6e63e 	ldrb	lr, [r6, #1598]	; 0x63e
400070f0:	e5d6963f 	ldrb	r9, [r6, #1599]	; 0x63f
400070f4:	e5d6c641 	ldrb	ip, [r6, #1601]	; 0x641
400070f8:	e5d6262e 	ldrb	r2, [r6, #1582]	; 0x62e
400070fc:	e58d1008 	str	r1, [sp, #8]
40007100:	e5d6362f 	ldrb	r3, [r6, #1583]	; 0x62f
40007104:	e59f152c 	ldr	r1, [pc, #1324]	; 40007638 <UVCAppEP0Thread_Entry+0xab8>
40007108:	e2800004 	add	r0, r0, #4
4000710c:	e58de000 	str	lr, [sp]
40007110:	e58d9004 	str	r9, [sp, #4]
40007114:	e58dc00c 	str	ip, [sp, #12]
40007118:	eb003008 	bl	40013140 <CyU3PDebugPrint>

                    	if (1 | (usbSpeed == CY_U3P_SUPER_SPEED))
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl20[2] = glCommitCtrl[2];
4000711c:	e5d5e07e 	ldrb	lr, [r5, #126]	; 0x7e
                            glProbeCtrl20[3] = glCommitCtrl[3];
40007120:	e5d5c07f 	ldrb	ip, [r5, #127]	; 0x7f
                            glProbeCtrl20[18] = glCommitCtrl[18];
40007124:	e5d5008e 	ldrb	r0, [r5, #142]	; 0x8e
                            glProbeCtrl20[19] = glCommitCtrl[19];
40007128:	e5d5108f 	ldrb	r1, [r5, #143]	; 0x8f
                            glProbeCtrl20[20] = glCommitCtrl[20];
4000712c:	e5d52090 	ldrb	r2, [r5, #144]	; 0x90
                            glProbeCtrl20[21] = glCommitCtrl[21];
40007130:	e5d59091 	ldrb	r9, [r5, #145]	; 0x91

                    	if (1 | (usbSpeed == CY_U3P_SUPER_SPEED))
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl20[2] = glCommitCtrl[2];
40007134:	e5c6e62e 	strb	lr, [r6, #1582]	; 0x62e
                            glProbeCtrl20[3] = glCommitCtrl[3];
40007138:	e5c6c62f 	strb	ip, [r6, #1583]	; 0x62f
                            glProbeCtrl20[18] = glCommitCtrl[18];
4000713c:	e5c6063e 	strb	r0, [r6, #1598]	; 0x63e
                            glProbeCtrl20[19] = glCommitCtrl[19];
40007140:	e5c6163f 	strb	r1, [r6, #1599]	; 0x63f
                            glProbeCtrl20[20] = glCommitCtrl[20];
40007144:	e5c62640 	strb	r2, [r6, #1600]	; 0x640
                            glProbeCtrl20[21] = glCommitCtrl[21];
40007148:	e5c69641 	strb	r9, [r6, #1601]	; 0x641
                        }
                    }
                    CyU3PDebugPrint (4, "glCommitCtrl 20 ~25 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n\r",
4000714c:	e5d40090 	ldrb	r0, [r4, #144]	; 0x90
40007150:	e5d4307f 	ldrb	r3, [r4, #127]	; 0x7f
40007154:	e5d4207e 	ldrb	r2, [r4, #126]	; 0x7e
40007158:	e5d4e08e 	ldrb	lr, [r4, #142]	; 0x8e
4000715c:	e5d4908f 	ldrb	r9, [r4, #143]	; 0x8f
40007160:	e58d0008 	str	r0, [sp, #8]
40007164:	e5d4c091 	ldrb	ip, [r4, #145]	; 0x91
40007168:	e3a00004 	mov	r0, #4
4000716c:	e59f14c8 	ldr	r1, [pc, #1224]	; 4000763c <UVCAppEP0Thread_Entry+0xabc>
40007170:	e58de000 	str	lr, [sp]
40007174:	e58d9004 	str	r9, [sp, #4]
40007178:	e58dc00c 	str	ip, [sp, #12]
4000717c:	eb002fef 	bl	40013140 <CyU3PDebugPrint>
40007180:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007184:	eafffebe 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007188:	e3520086 	cmp	r2, #134	; 0x86
4000718c:	0a000036 	beq	4000726c <UVCAppEP0Thread_Entry+0x6ec>
40007190:	e3520087 	cmp	r2, #135	; 0x87
40007194:	0affffb6 	beq	40007074 <UVCAppEP0Thread_Entry+0x4f4>
40007198:	e3520085 	cmp	r2, #133	; 0x85
4000719c:	1afffeb3 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400071a0:	e3a00002 	mov	r0, #2
400071a4:	e59f1494 	ldr	r1, [pc, #1172]	; 40007640 <UVCAppEP0Thread_Entry+0xac0>
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400071a8:	e3a0301a 	mov	r3, #26
400071ac:	ea0000ce 	b	400074ec <UVCAppEP0Thread_Entry+0x96c>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400071b0:	e3520c12 	cmp	r2, #4608	; 0x1200
400071b4:	0a0000d2 	beq	40007504 <UVCAppEP0Thread_Entry+0x984>
400071b8:	e3520c13 	cmp	r2, #4864	; 0x1300
400071bc:	1afffea1 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
400071c0:	e3a00022 	mov	r0, #34	; 0x22
400071c4:	ebfff840 	bl	400052cc <ControlHandle>
400071c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071cc:	eafffea2 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400071d0:	e3520b01 	cmp	r2, #1024	; 0x400
400071d4:	0a000009 	beq	40007200 <UVCAppEP0Thread_Entry+0x680>
400071d8:	e3520c05 	cmp	r2, #1280	; 0x500
400071dc:	1afffe95 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
400071e0:	e3a00004 	mov	r0, #4
400071e4:	ebfffc00 	bl	400061ec <CTControlHandle>
400071e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071ec:	eafffe9a 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
400071f0:	e3a00002 	mov	r0, #2
400071f4:	ebfffbfc 	bl	400061ec <CTControlHandle>
400071f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071fc:	eafffe96 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007200:	e3a00003 	mov	r0, #3
40007204:	ebfffbf8 	bl	400061ec <CTControlHandle>
40007208:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000720c:	eafffe92 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007210:	e3a00001 	mov	r0, #1
40007214:	ebfff82c 	bl	400052cc <ControlHandle>
40007218:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000721c:	eafffe8e 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007220:	e3a00000 	mov	r0, #0
40007224:	ebfff828 	bl	400052cc <ControlHandle>
40007228:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000722c:	eafffe8a 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007230:	e59f140c 	ldr	r1, [pc, #1036]	; 40007644 <UVCAppEP0Thread_Entry+0xac4>
40007234:	e1a02003 	mov	r2, r3
40007238:	e3a00004 	mov	r0, #4
4000723c:	e58d301c 	str	r3, [sp, #28]
40007240:	eb002fbe 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007244:	e59d501c 	ldr	r5, [sp, #28]
40007248:	e3a00004 	mov	r0, #4
4000724c:	e59f13f4 	ldr	r1, [pc, #1012]	; 40007648 <UVCAppEP0Thread_Entry+0xac8>
40007250:	e1a02005 	mov	r2, r5
40007254:	eb002fb9 	bl	40013140 <CyU3PDebugPrint>
40007258:	eafffffe 	b	40007258 <UVCAppEP0Thread_Entry+0x6d8>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
4000725c:	e3590085 	cmp	r9, #133	; 0x85
40007260:	0affffce 	beq	400071a0 <UVCAppEP0Thread_Entry+0x620>
40007264:	e3590086 	cmp	r9, #134	; 0x86
40007268:	1afffe80 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000726c:	e1a00003 	mov	r0, r3
40007270:	ea000033 	b	40007344 <UVCAppEP0Thread_Entry+0x7c4>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007274:	e3520001 	cmp	r2, #1
40007278:	1afffef3 	bne	40006e4c <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000727c:	e3a00020 	mov	r0, #32
40007280:	e59f1394 	ldr	r1, [pc, #916]	; 4000761c <UVCAppEP0Thread_Entry+0xa9c>
40007284:	e28d2036 	add	r2, sp, #54	; 0x36
40007288:	eb00567b 	bl	4001cc7c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
4000728c:	e3500000 	cmp	r0, #0
40007290:	1afffe7a 	bne	40006c80 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
40007294:	e5d5202c 	ldrb	r2, [r5, #44]	; 0x2c
40007298:	e3520003 	cmp	r2, #3
4000729c:	1afffe77 	bne	40006c80 <UVCAppEP0Thread_Entry+0x100>
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400072a0:	e5d53081 	ldrb	r3, [r5, #129]	; 0x81
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400072a4:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400072a8:	e5d5c07e 	ldrb	ip, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400072ac:	e5d5007f 	ldrb	r0, [r5, #127]	; 0x7f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400072b0:	e5d51080 	ldrb	r1, [r5, #128]	; 0x80
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400072b4:	e5d59082 	ldrb	r9, [r5, #130]	; 0x82
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400072b8:	e5c6364d 	strb	r3, [r6, #1613]	; 0x64d
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400072bc:	e5c6e649 	strb	lr, [r6, #1609]	; 0x649
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400072c0:	e5c6c64a 	strb	ip, [r6, #1610]	; 0x64a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400072c4:	e5c6064b 	strb	r0, [r6, #1611]	; 0x64b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400072c8:	e5c6164c 	strb	r1, [r6, #1612]	; 0x64c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400072cc:	e5c6964e 	strb	r9, [r6, #1614]	; 0x64e
400072d0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072d4:	eafffe6a 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400072d8:	e3520086 	cmp	r2, #134	; 0x86
400072dc:	0affffe2 	beq	4000726c <UVCAppEP0Thread_Entry+0x6ec>
400072e0:	e3520087 	cmp	r2, #135	; 0x87
400072e4:	0affff55 	beq	40007040 <UVCAppEP0Thread_Entry+0x4c0>
400072e8:	e3520085 	cmp	r2, #133	; 0x85
400072ec:	1afffed6 	bne	40006e4c <UVCAppEP0Thread_Entry+0x2cc>
400072f0:	eaffffaa 	b	400071a0 <UVCAppEP0Thread_Entry+0x620>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
400072f4:	e3a00000 	mov	r0, #0
400072f8:	ebfffbbb 	bl	400061ec <CTControlHandle>
400072fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007300:	eafffe55 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007304:	e59f1338 	ldr	r1, [pc, #824]	; 40007644 <UVCAppEP0Thread_Entry+0xac4>
40007308:	e1a02003 	mov	r2, r3
4000730c:	e3a00004 	mov	r0, #4
40007310:	e58d301c 	str	r3, [sp, #28]
40007314:	eb002f89 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007318:	e59d401c 	ldr	r4, [sp, #28]
4000731c:	e3a00004 	mov	r0, #4
40007320:	e59f1320 	ldr	r1, [pc, #800]	; 40007648 <UVCAppEP0Thread_Entry+0xac8>
40007324:	e1a02004 	mov	r2, r4
40007328:	eb002f84 	bl	40013140 <CyU3PDebugPrint>
4000732c:	eafffffe 	b	4000732c <UVCAppEP0Thread_Entry+0x7ac>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007330:	e3530085 	cmp	r3, #133	; 0x85
40007334:	0affff99 	beq	400071a0 <UVCAppEP0Thread_Entry+0x620>
40007338:	e3530086 	cmp	r3, #134	; 0x86
4000733c:	1afffec2 	bne	40006e4c <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007340:	e3a00001 	mov	r0, #1

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007344:	e3a03003 	mov	r3, #3
40007348:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000734c:	e59f12ec 	ldr	r1, [pc, #748]	; 40007640 <UVCAppEP0Thread_Entry+0xac0>
40007350:	eb0058b7 	bl	4001d634 <CyU3PUsbSendEP0Data>
40007354:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007358:	eafffe49 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
4000735c:	e3a00006 	mov	r0, #6
40007360:	ebfff7d9 	bl	400052cc <ControlHandle>
40007364:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007368:	eafffe3b 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000736c:	e3520c0d 	cmp	r2, #3328	; 0xd00
40007370:	0a000007 	beq	40007394 <UVCAppEP0Thread_Entry+0x814>
40007374:	e3520c0e 	cmp	r2, #3584	; 0xe00
40007378:	0a000009 	beq	400073a4 <UVCAppEP0Thread_Entry+0x824>
4000737c:	e3520b03 	cmp	r2, #3072	; 0xc00
40007380:	1afffe2c 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
40007384:	e3a0000b 	mov	r0, #11
40007388:	ebfff7cf 	bl	400052cc <ControlHandle>
4000738c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007390:	eafffe31 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
40007394:	e3a00009 	mov	r0, #9
40007398:	ebfff7cb 	bl	400052cc <ControlHandle>
4000739c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073a0:	eafffe2d 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400073a4:	e3a0000e 	mov	r0, #14
400073a8:	ebfff7c7 	bl	400052cc <ControlHandle>
400073ac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073b0:	eafffe29 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400073b4:	e3520b01 	cmp	r2, #1024	; 0x400
400073b8:	0afffe27 	beq	40006c5c <UVCAppEP0Thread_Entry+0xdc>
400073bc:	e3520c05 	cmp	r2, #1280	; 0x500
400073c0:	1afffe1c 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
400073c4:	e3a00004 	mov	r0, #4
400073c8:	ebfff7bf 	bl	400052cc <ControlHandle>
400073cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073d0:	eafffe21 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
400073d4:	e3a00002 	mov	r0, #2
400073d8:	ebfff7bb 	bl	400052cc <ControlHandle>
400073dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073e0:	eafffe1d 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
400073e4:	e3a00005 	mov	r0, #5
400073e8:	ebfff7b7 	bl	400052cc <ControlHandle>
400073ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073f0:	eafffe19 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
400073f4:	e3520085 	cmp	r2, #133	; 0x85
400073f8:	0a000039 	beq	400074e4 <UVCAppEP0Thread_Entry+0x964>
400073fc:	e3520086 	cmp	r2, #134	; 0x86
40007400:	1afffe1a 	bne	40006c70 <UVCAppEP0Thread_Entry+0xf0>
40007404:	eaffffcd 	b	40007340 <UVCAppEP0Thread_Entry+0x7c0>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007408:	e3520c06 	cmp	r2, #1536	; 0x600
4000740c:	0a000030 	beq	400074d4 <UVCAppEP0Thread_Entry+0x954>
40007410:	8a000009 	bhi	4000743c <UVCAppEP0Thread_Entry+0x8bc>
40007414:	e3520c05 	cmp	r2, #1280	; 0x500
40007418:	1afffe0a 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
4000741c:	e3a00014 	mov	r0, #20
40007420:	ebfff7a9 	bl	400052cc <ControlHandle>
40007424:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007428:	eafffe0b 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
4000742c:	e3a00006 	mov	r0, #6
40007430:	ebfffb6d 	bl	400061ec <CTControlHandle>
40007434:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007438:	eafffe07 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000743c:	e3520c07 	cmp	r2, #1792	; 0x700
40007440:	0a00001b 	beq	400074b4 <UVCAppEP0Thread_Entry+0x934>
40007444:	e3520b02 	cmp	r2, #2048	; 0x800
40007448:	1afffdfe 	bne	40006c48 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
4000744c:	e3a00017 	mov	r0, #23
40007450:	ebfff79d 	bl	400052cc <ControlHandle>
40007454:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007458:	eafffdff 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
4000745c:	e3520c0b 	cmp	r2, #2816	; 0xb00
40007460:	0a00000f 	beq	400074a4 <UVCAppEP0Thread_Entry+0x924>
40007464:	e3520b03 	cmp	r2, #3072	; 0xc00
40007468:	0a000009 	beq	40007494 <UVCAppEP0Thread_Entry+0x914>
4000746c:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007470:	1afffdf0 	bne	40006c38 <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007474:	e3a00008 	mov	r0, #8
40007478:	ebfffb5b 	bl	400061ec <CTControlHandle>
4000747c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007480:	eafffdf5 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
40007484:	e3a00007 	mov	r0, #7
40007488:	ebfffb57 	bl	400061ec <CTControlHandle>
4000748c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007490:	eafffdf1 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
40007494:	e3a0000a 	mov	r0, #10
40007498:	ebfffb53 	bl	400061ec <CTControlHandle>
4000749c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074a0:	eafffded 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400074a4:	e3a00009 	mov	r0, #9
400074a8:	ebfffb4f 	bl	400061ec <CTControlHandle>
400074ac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074b0:	eafffde9 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
400074b4:	e3a00016 	mov	r0, #22
400074b8:	ebfff783 	bl	400052cc <ControlHandle>
400074bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074c0:	eafffde5 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
400074c4:	e3a00019 	mov	r0, #25
400074c8:	ebfff77f 	bl	400052cc <ControlHandle>
400074cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074d0:	eafffde1 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
400074d4:	e3a00015 	mov	r0, #21
400074d8:	ebfff77b 	bl	400052cc <ControlHandle>
400074dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074e0:	eafffddd 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400074e4:	e59f1154 	ldr	r1, [pc, #340]	; 40007640 <UVCAppEP0Thread_Entry+0xac0>
400074e8:	e3a00002 	mov	r0, #2
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
400074ec:	e3a09000 	mov	r9, #0
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400074f0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
400074f4:	e5c49059 	strb	r9, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400074f8:	eb00584d 	bl	4001d634 <CyU3PUsbSendEP0Data>
400074fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007500:	eafffddf 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
40007504:	e3a00021 	mov	r0, #33	; 0x21
40007508:	ebfff76f 	bl	400052cc <ControlHandle>
4000750c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007510:	eafffdd1 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
40007514:	e3a00020 	mov	r0, #32
40007518:	ebfff76b 	bl	400052cc <ControlHandle>
4000751c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007520:	eafffdcd 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007524:	e3a00020 	mov	r0, #32
40007528:	e59f10ec 	ldr	r1, [pc, #236]	; 4000761c <UVCAppEP0Thread_Entry+0xa9c>
4000752c:	e28d2036 	add	r2, sp, #54	; 0x36
40007530:	eb0055d1 	bl	4001cc7c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007534:	e3500000 	cmp	r0, #0
40007538:	1afffdd0 	bne	40006c80 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
4000753c:	e3a02000 	mov	r2, #0
40007540:	e59f00a8 	ldr	r0, [pc, #168]	; 400075f0 <UVCAppEP0Thread_Entry+0xa70>
40007544:	e3a01001 	mov	r1, #1
40007548:	eb000a35 	bl	40009e24 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000754c:	e2502000 	subs	r2, r0, #0
40007550:	0afffdca 	beq	40006c80 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007554:	e3a00004 	mov	r0, #4
40007558:	e59f10ec 	ldr	r1, [pc, #236]	; 4000764c <UVCAppEP0Thread_Entry+0xacc>
4000755c:	eb002ef7 	bl	40013140 <CyU3PDebugPrint>
40007560:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007564:	eafffdc6 	b	40006c84 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007568:	e3a00012 	mov	r0, #18
4000756c:	ebfff756 	bl	400052cc <ControlHandle>
40007570:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007574:	eafffdb8 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007578:	e3a0001c 	mov	r0, #28
4000757c:	ebfff752 	bl	400052cc <ControlHandle>
40007580:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007584:	eafffdb4 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
40007588:	e3a0001a 	mov	r0, #26
4000758c:	ebfff74e 	bl	400052cc <ControlHandle>
40007590:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007594:	eafffdb0 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007598:	e3a0001e 	mov	r0, #30
4000759c:	ebfff74a 	bl	400052cc <ControlHandle>
400075a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075a4:	eafffdac 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
400075a8:	e3a00011 	mov	r0, #17
400075ac:	ebfff746 	bl	400052cc <ControlHandle>
400075b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075b4:	eafffda8 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
400075b8:	e3a00018 	mov	r0, #24
400075bc:	ebfff742 	bl	400052cc <ControlHandle>
400075c0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075c4:	eafffda4 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
400075c8:	e3a00013 	mov	r0, #19
400075cc:	ebfff73e 	bl	400052cc <ControlHandle>
400075d0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075d4:	eafffda0 	b	40006c5c <UVCAppEP0Thread_Entry+0xdc>
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
400075d8:	e59f1070 	ldr	r1, [pc, #112]	; 40007650 <UVCAppEP0Thread_Entry+0xad0>
400075dc:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
400075e0:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
400075e4:	e3a00004 	mov	r0, #4
400075e8:	eb002ed4 	bl	40013140 <CyU3PDebugPrint>
400075ec:	eafffd9f 	b	40006c70 <UVCAppEP0Thread_Entry+0xf0>
400075f0:	40031410 	.word	0x40031410
400075f4:	40030000 	.word	0x40030000
400075f8:	4003358c 	.word	0x4003358c
400075fc:	40033440 	.word	0x40033440
40007600:	40033470 	.word	0x40033470
40007604:	40033550 	.word	0x40033550
40007608:	400116c4 	.word	0x400116c4
4000760c:	400334b0 	.word	0x400334b0
40007610:	40033340 	.word	0x40033340
40007614:	40033472 	.word	0x40033472
40007618:	40011648 	.word	0x40011648
4000761c:	4003148c 	.word	0x4003148c
40007620:	400117cc 	.word	0x400117cc
40007624:	400116f0 	.word	0x400116f0
40007628:	40030648 	.word	0x40030648
4000762c:	40030654 	.word	0x40030654
40007630:	40030610 	.word	0x40030610
40007634:	4003062c 	.word	0x4003062c
40007638:	40011730 	.word	0x40011730
4000763c:	40011768 	.word	0x40011768
40007640:	40031468 	.word	0x40031468
40007644:	4001181c 	.word	0x4001181c
40007648:	4001123c 	.word	0x4001123c
4000764c:	400117a4 	.word	0x400117a4
40007650:	400117f4 	.word	0x400117f4

40007654 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007654:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007658:	e59f42ac 	ldr	r4, [pc, #684]	; 4000790c <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000765c:	e59f22ac 	ldr	r2, [pc, #684]	; 40007910 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
40007660:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007664:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007668:	e592001c 	ldr	r0, [r2, #28]
4000766c:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007670:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
40007674:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007678:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000767c:	eb000a80 	bl	4000a084 <_txe_mutex_get>
    if(Data1&0x80){
40007680:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007684:	12066001 	andne	r6, r6, #1
40007688:	11e06006 	mvnne	r6, r6
4000768c:	1206603b 	andne	r6, r6, #59	; 0x3b
40007690:	11e06006 	mvnne	r6, r6
40007694:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
40007698:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
4000769c:	e3a08000 	mov	r8, #0
400076a0:	e1a0200a 	mov	r2, sl
400076a4:	e1a03007 	mov	r3, r7
400076a8:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400076ac:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400076b0:	e59f0258 	ldr	r0, [pc, #600]	; 40007910 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400076b4:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400076b8:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400076bc:	e88d0140 	stm	sp, {r6, r8}
400076c0:	ebffef7c 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400076c4:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
400076c8:	e1a01009 	mov	r1, r9
400076cc:	e1a03007 	mov	r3, r7
400076d0:	e59f0238 	ldr	r0, [pc, #568]	; 40007910 <CamDefSet+0x2bc>
400076d4:	e88d0220 	stm	sp, {r5, r9}
400076d8:	ebffef76 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400076dc:	e1a02006 	mov	r2, r6
400076e0:	e1a03005 	mov	r3, r5
400076e4:	e59f1228 	ldr	r1, [pc, #552]	; 40007914 <CamDefSet+0x2c0>
400076e8:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
400076ec:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
400076f0:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400076f4:	eb002e91 	bl	40013140 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400076f8:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
400076fc:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007700:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007704:	e3a01002 	mov	r1, #2
40007708:	e59f0200 	ldr	r0, [pc, #512]	; 40007910 <CamDefSet+0x2bc>
4000770c:	e58db000 	str	fp, [sp]
40007710:	e58d8004 	str	r8, [sp, #4]
40007714:	ebffef67 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007718:	e1a0200b 	mov	r2, fp
4000771c:	e1a03005 	mov	r3, r5
40007720:	e59f11ec 	ldr	r1, [pc, #492]	; 40007914 <CamDefSet+0x2c0>
40007724:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007728:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000772c:	eb002e83 	bl	40013140 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007730:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007734:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007738:	e247b080 	sub	fp, r7, #128	; 0x80
4000773c:	e20b10ff 	and	r1, fp, #255	; 0xff
40007740:	e58d1014 	str	r1, [sp, #20]
40007744:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007748:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
4000774c:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007750:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007754:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007758:	e3a01005 	mov	r1, #5
4000775c:	e3a020df 	mov	r2, #223	; 0xdf
40007760:	e59f01a8 	ldr	r0, [pc, #424]	; 40007910 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007764:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007768:	e58dc000 	str	ip, [sp]
4000776c:	e58d8004 	str	r8, [sp, #4]
40007770:	ebffef50 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007774:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007778:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000777c:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007780:	e1a03006 	mov	r3, r6
40007784:	e3a01005 	mov	r1, #5
40007788:	e3a020dc 	mov	r2, #220	; 0xdc
4000778c:	e59f017c 	ldr	r0, [pc, #380]	; 40007910 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007790:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007794:	e58dc000 	str	ip, [sp]
40007798:	e58d9004 	str	r9, [sp, #4]
4000779c:	ebffef45 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400077a0:	e59d001c 	ldr	r0, [sp, #28]
400077a4:	e3a0e002 	mov	lr, #2
400077a8:	e200c0ff 	and	ip, r0, #255	; 0xff
400077ac:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400077b0:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400077b4:	e3a01005 	mov	r1, #5
400077b8:	e3a020de 	mov	r2, #222	; 0xde
400077bc:	e59f014c 	ldr	r0, [pc, #332]	; 40007910 <CamDefSet+0x2bc>
400077c0:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400077c4:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400077c8:	e58dc000 	str	ip, [sp]
400077cc:	ebffef39 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400077d0:	e59da020 	ldr	sl, [sp, #32]
400077d4:	e1a03006 	mov	r3, r6
400077d8:	e20ac0ff 	and	ip, sl, #255	; 0xff
400077dc:	e58dc000 	str	ip, [sp]
400077e0:	e3a01005 	mov	r1, #5
400077e4:	e3a0c003 	mov	ip, #3
400077e8:	e3a020e0 	mov	r2, #224	; 0xe0
400077ec:	e59f011c 	ldr	r0, [pc, #284]	; 40007910 <CamDefSet+0x2bc>
400077f0:	e58dc004 	str	ip, [sp, #4]
400077f4:	ebffef2f 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400077f8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400077fc:	e3a0a004 	mov	sl, #4
40007800:	e200c0ff 	and	ip, r0, #255	; 0xff
40007804:	e1a03006 	mov	r3, r6
40007808:	e3a01005 	mov	r1, #5
4000780c:	e3a020dd 	mov	r2, #221	; 0xdd
40007810:	e59f00f8 	ldr	r0, [pc, #248]	; 40007910 <CamDefSet+0x2bc>
40007814:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007818:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000781c:	e58da004 	str	sl, [sp, #4]
40007820:	ebffef24 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007824:	e3a0e005 	mov	lr, #5
40007828:	e1a0100e 	mov	r1, lr
4000782c:	e1a03006 	mov	r3, r6
40007830:	e3a020e1 	mov	r2, #225	; 0xe1
40007834:	e20760ff 	and	r6, r7, #255	; 0xff
40007838:	e59f00d0 	ldr	r0, [pc, #208]	; 40007910 <CamDefSet+0x2bc>
4000783c:	e88d4040 	stm	sp, {r6, lr}
40007840:	ebffef1c 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007844:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007848:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000784c:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007850:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007854:	e59dc020 	ldr	ip, [sp, #32]
40007858:	e1a0200b 	mov	r2, fp
4000785c:	e59d3018 	ldr	r3, [sp, #24]
40007860:	e59f10b0 	ldr	r1, [pc, #176]	; 40007918 <CamDefSet+0x2c4>
40007864:	e1a0000a 	mov	r0, sl
40007868:	e88d5040 	stm	sp, {r6, ip, lr}
4000786c:	e58d700c 	str	r7, [sp, #12]
40007870:	eb002e32 	bl	40013140 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007874:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
40007878:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
4000787c:	e1a03007 	mov	r3, r7
40007880:	e3a01006 	mov	r1, #6
40007884:	e3a02085 	mov	r2, #133	; 0x85
40007888:	e59f0080 	ldr	r0, [pc, #128]	; 40007910 <CamDefSet+0x2bc>
4000788c:	e88d0140 	stm	sp, {r6, r8}
40007890:	ebffef08 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007894:	e1a03007 	mov	r3, r7
40007898:	e3a01006 	mov	r1, #6
4000789c:	e3a02086 	mov	r2, #134	; 0x86
400078a0:	e59f0068 	ldr	r0, [pc, #104]	; 40007910 <CamDefSet+0x2bc>
400078a4:	e88d0240 	stm	sp, {r6, r9}
400078a8:	ebffef02 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400078ac:	e1a02006 	mov	r2, r6
400078b0:	e1a03005 	mov	r3, r5
400078b4:	e59f1058 	ldr	r1, [pc, #88]	; 40007914 <CamDefSet+0x2c0>
400078b8:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
400078bc:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400078c0:	eb002e1e 	bl	40013140 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400078c4:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
400078c8:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
400078cc:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
400078d0:	e3a01007 	mov	r1, #7
400078d4:	e59f0034 	ldr	r0, [pc, #52]	; 40007910 <CamDefSet+0x2bc>
400078d8:	e88d0140 	stm	sp, {r6, r8}
400078dc:	ebffeef5 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400078e0:	e1a03005 	mov	r3, r5
400078e4:	e1a0000a 	mov	r0, sl
400078e8:	e59f1024 	ldr	r1, [pc, #36]	; 40007914 <CamDefSet+0x2c0>
400078ec:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
400078f0:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400078f4:	eb002e11 	bl	40013140 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400078f8:	e59f3010 	ldr	r3, [pc, #16]	; 40007910 <CamDefSet+0x2bc>
400078fc:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007900:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007904:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007908:	ea000a12 	b	4000a158 <_txe_mutex_put>
4000790c:	40030000 	.word	0x40030000
40007910:	40033344 	.word	0x40033344
40007914:	40011850 	.word	0x40011850
40007918:	40011870 	.word	0x40011870

4000791c <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000791c:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007920:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007924:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007928:	e59f1018 	ldr	r1, [pc, #24]	; 40007948 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000792c:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007930:	ebffefe7 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007934:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007938:	15d43001 	ldrbne	r3, [r4, #1]
4000793c:	13833002 	orrne	r3, r3, #2
40007940:	15c43001 	strbne	r3, [r4, #1]
40007944:	e8bd8038 	pop	{r3, r4, r5, pc}
40007948:	40030480 	.word	0x40030480

4000794c <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
4000794c:	e1a02000 	mov	r2, r0
40007950:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007954:	e59f1008 	ldr	r1, [pc, #8]	; 40007964 <CyFxAppErrorHandler+0x18>
40007958:	e3a00004 	mov	r0, #4
4000795c:	eb002df7 	bl	40013140 <CyU3PDebugPrint>
40007960:	eafffffe 	b	40007960 <CyFxAppErrorHandler+0x14>
40007964:	4001123c 	.word	0x4001123c

40007968 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007968:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
4000796c:	e24dd0c4 	sub	sp, sp, #196	; 0xc4
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007970:	eb006d62 	bl	40022f00 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007974:	e2504000 	subs	r4, r0, #0
40007978:	1a000143 	bne	40007e8c <UVCAppThread_Entry+0x524>
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
4000797c:	e59f2b0c 	ldr	r2, [pc, #2828]	; 40008490 <UVCAppThread_Entry+0xb28>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007980:	e3a03001 	mov	r3, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007984:	e1a01004 	mov	r1, r4
40007988:	e28d0058 	add	r0, sp, #88	; 0x58
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
4000798c:	e5cd406d 	strb	r4, [sp, #109]	; 0x6d
    uartConfig.txEnable = CyTrue;
    uartConfig.rxEnable = CyFalse;
40007990:	e58d405c 	str	r4, [sp, #92]	; 0x5c
    uartConfig.flowCtrl = CyFalse;
40007994:	e58d4060 	str	r4, [sp, #96]	; 0x60
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007998:	e58d2068 	str	r2, [sp, #104]	; 0x68
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
4000799c:	e5cd306c 	strb	r3, [sp, #108]	; 0x6c
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
    uartConfig.txEnable = CyTrue;
400079a0:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;
400079a4:	e58d3064 	str	r3, [sp, #100]	; 0x64

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
400079a8:	eb006dcd 	bl	400230e4 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
400079ac:	e2504000 	subs	r4, r0, #0
400079b0:	1a00012d 	bne	40007e6c <UVCAppThread_Entry+0x504>
    	CyU3PDebugPrint (4, "test UART config");
    	CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
400079b4:	e3e00000 	mvn	r0, #0
400079b8:	eb006e50 	bl	40023300 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
400079bc:	e2504000 	subs	r4, r0, #0
400079c0:	1a000121 	bne	40007e4c <UVCAppThread_Entry+0x4e4>
    	CyU3PDebugPrint (4, "test UART transfer");
    	CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
400079c4:	e3a00003 	mov	r0, #3
400079c8:	e3a01004 	mov	r1, #4
400079cc:	eb002d53 	bl	40012f20 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400079d0:	e2504000 	subs	r4, r0, #0
400079d4:	1a000134 	bne	40007eac <UVCAppThread_Entry+0x544>
    	CyU3PDebugPrint (4, "test debug");
    	CyFxAppErrorHandler (apiRetStatus);
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
400079d8:	eb002dd4 	bl	40013130 <CyU3PDebugPreamble>
400079dc:	e3a04006 	mov	r4, #6
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
400079e0:	e3a00f7d 	mov	r0, #500	; 0x1f4
400079e4:	e2444001 	sub	r4, r4, #1
400079e8:	eb000415 	bl	40008a44 <_tx_thread_sleep>
#endif
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
400079ec:	e21440ff 	ands	r4, r4, #255	; 0xff
400079f0:	1afffffa 	bne	400079e0 <UVCAppThread_Entry+0x78>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
400079f4:	eb006ecf 	bl	40023538 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
400079f8:	e2504000 	subs	r4, r0, #0
400079fc:	1a00028b 	bne	40008430 <UVCAppThread_Entry+0xac8>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007a00:	e59fca8c 	ldr	ip, [pc, #2700]	; 40008494 <UVCAppThread_Entry+0xb2c>
    i2cConfig.isDma      = CyFalse;
40007a04:	e3a06000 	mov	r6, #0
    i2cConfig.busTimeout = 0xffffffffU;
40007a08:	e3e05000 	mvn	r5, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007a0c:	e28d0094 	add	r0, sp, #148	; 0x94
40007a10:	e1a01006 	mov	r1, r6
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007a14:	e58dc094 	str	ip, [sp, #148]	; 0x94
    i2cConfig.isDma      = CyFalse;
40007a18:	e58d6098 	str	r6, [sp, #152]	; 0x98
    i2cConfig.busTimeout = 0xffffffffU;
40007a1c:	e58d509c 	str	r5, [sp, #156]	; 0x9c
    i2cConfig.dmaTimeout = 0xffff;
40007a20:	e1cd5ab0 	strh	r5, [sp, #160]	; 0xa0

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007a24:	eb006fbc 	bl	4002391c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007a28:	e2504000 	subs	r4, r0, #0
40007a2c:	1a000279 	bne	40008418 <UVCAppThread_Entry+0xab0>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007a30:	e59f6a60 	ldr	r6, [pc, #2656]	; 40008498 <UVCAppThread_Entry+0xb30>
40007a34:	e3a01000 	mov	r1, #0
40007a38:	e1a00006 	mov	r0, r6
40007a3c:	e3a02028 	mov	r2, #40	; 0x28
40007a40:	eb000857 	bl	40009ba4 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007a44:	e2504000 	subs	r4, r0, #0
40007a48:	1a000269 	bne	400083f4 <UVCAppThread_Entry+0xa8c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007a4c:	e3a05002 	mov	r5, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a50:	e1a01004 	mov	r1, r4

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007a54:	e5864044 	str	r4, [r6, #68]	; 0x44
    clearFeatureRqtReceived = CyFalse;
40007a58:	e5864048 	str	r4, [r6, #72]	; 0x48

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007a5c:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a60:	e28d00a4 	add	r0, sp, #164	; 0xa4
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007a64:	e5cd40ac 	strb	r4, [sp, #172]	; 0xac
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007a68:	e58d40a8 	str	r4, [sp, #168]	; 0xa8

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007a6c:	e5cd50a4 	strb	r5, [sp, #164]	; 0xa4
    gpioClock.slowClkDiv = 2;
40007a70:	e5cd50a5 	strb	r5, [sp, #165]	; 0xa5
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007a74:	e5cd70ad 	strb	r7, [sp, #173]	; 0xad
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a78:	eb006bb6 	bl	40022958 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007a7c:	e2504000 	subs	r4, r0, #0
40007a80:	1a000252 	bne	400083d0 <UVCAppThread_Entry+0xa68>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007a84:	e3a00016 	mov	r0, #22
40007a88:	e3a01001 	mov	r1, #1
40007a8c:	eb002c9b 	bl	40012d00 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a90:	e2504000 	subs	r4, r0, #0
40007a94:	1a000221 	bne	40008320 <UVCAppThread_Entry+0x9b8>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007a98:	e3a00014 	mov	r0, #20
40007a9c:	e3a01001 	mov	r1, #1
40007aa0:	eb002c96 	bl	40012d00 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007aa4:	e2504000 	subs	r4, r0, #0
40007aa8:	1a000213 	bne	400082fc <UVCAppThread_Entry+0x994>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007aac:	e3a00018 	mov	r0, #24
40007ab0:	e3a01001 	mov	r1, #1
40007ab4:	eb002c91 	bl	40012d00 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007ab8:	e2504000 	subs	r4, r0, #0
40007abc:	1a000205 	bne	400082d8 <UVCAppThread_Entry+0x970>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007ac0:	e3a08001 	mov	r8, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007ac4:	e3a00016 	mov	r0, #22
40007ac8:	e28d1070 	add	r1, sp, #112	; 0x70

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007acc:	e58d407c 	str	r4, [sp, #124]	; 0x7c
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ad0:	e5cd4080 	strb	r4, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007ad4:	e58d8070 	str	r8, [sp, #112]	; 0x70
    gpioConfig.driveLowEn  = CyTrue;
40007ad8:	e58d8074 	str	r8, [sp, #116]	; 0x74
    gpioConfig.driveHighEn = CyTrue;
40007adc:	e58d8078 	str	r8, [sp, #120]	; 0x78
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007ae0:	eb006c54 	bl	40022c38 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ae4:	e2504000 	subs	r4, r0, #0
40007ae8:	1a0001f1 	bne	400082b4 <UVCAppThread_Entry+0x94c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007aec:	e3a00014 	mov	r0, #20
40007af0:	e28d1070 	add	r1, sp, #112	; 0x70
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007af4:	e58d407c 	str	r4, [sp, #124]	; 0x7c
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007af8:	e5cd4080 	strb	r4, [sp, #128]	; 0x80
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007afc:	e58d8070 	str	r8, [sp, #112]	; 0x70
    gpioConfig.driveLowEn  = CyTrue;
40007b00:	e58d8074 	str	r8, [sp, #116]	; 0x74
    gpioConfig.driveHighEn = CyTrue;
40007b04:	e58d8078 	str	r8, [sp, #120]	; 0x78
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007b08:	eb006c4a 	bl	40022c38 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b0c:	e2504000 	subs	r4, r0, #0
40007b10:	1a0001de 	bne	40008290 <UVCAppThread_Entry+0x928>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007b14:	e3a00018 	mov	r0, #24
40007b18:	e28d1070 	add	r1, sp, #112	; 0x70
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007b1c:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.driveLowEn  = CyFalse;
40007b20:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.driveHighEn = CyFalse;
40007b24:	e58d4078 	str	r4, [sp, #120]	; 0x78
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007b28:	e5cd4080 	strb	r4, [sp, #128]	; 0x80
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007b2c:	e58d807c 	str	r8, [sp, #124]	; 0x7c
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007b30:	eb006c40 	bl	40022c38 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b34:	e2504000 	subs	r4, r0, #0
40007b38:	1a0001cb 	bne	4000826c <UVCAppThread_Entry+0x904>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007b3c:	e1a00008 	mov	r0, r8
40007b40:	e28d1084 	add	r1, sp, #132	; 0x84
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007b44:	e58d408c 	str	r4, [sp, #140]	; 0x8c
    pibclock.isHalfDiv   = CyFalse;
40007b48:	e58d4088 	str	r4, [sp, #136]	; 0x88
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007b4c:	e1cd58b4 	strh	r5, [sp, #132]	; 0x84
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007b50:	e5cd7090 	strb	r7, [sp, #144]	; 0x90
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007b54:	eb004cd1 	bl	4001aea0 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b58:	e2504000 	subs	r4, r0, #0
40007b5c:	1a0001b9 	bne	40008248 <UVCAppThread_Entry+0x8e0>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007b60:	e59f0934 	ldr	r0, [pc, #2356]	; 4000849c <UVCAppThread_Entry+0xb34>
40007b64:	eb004f4b 	bl	4001b898 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007b68:	ebfff252 	bl	400044b8 <SensorReset>
    SensorInit ();
40007b6c:	ebfff281 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007b70:	eb0059be 	bl	4001e270 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b74:	e2504000 	subs	r4, r0, #0
40007b78:	1a0001a9 	bne	40008224 <UVCAppThread_Entry+0x8bc>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007b7c:	e3a01000 	mov	r1, #0
40007b80:	e59f0918 	ldr	r0, [pc, #2328]	; 400084a0 <UVCAppThread_Entry+0xb38>
40007b84:	eb006470 	bl	40020d4c <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007b88:	e59f0914 	ldr	r0, [pc, #2324]	; 400084a4 <UVCAppThread_Entry+0xb3c>
40007b8c:	eb006459 	bl	40020cf8 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007b90:	e3a01000 	mov	r1, #0
40007b94:	e59f290c 	ldr	r2, [pc, #2316]	; 400084a8 <UVCAppThread_Entry+0xb40>
40007b98:	e3a00001 	mov	r0, #1
40007b9c:	eb005793 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007ba0:	e3a00000 	mov	r0, #0
40007ba4:	e1a01000 	mov	r1, r0
40007ba8:	e59f28fc 	ldr	r2, [pc, #2300]	; 400084ac <UVCAppThread_Entry+0xb44>
40007bac:	eb00578f 	bl	4001d9f0 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007bb0:	e3a01000 	mov	r1, #0
40007bb4:	e59f28f4 	ldr	r2, [pc, #2292]	; 400084b0 <UVCAppThread_Entry+0xb48>
40007bb8:	e3a00002 	mov	r0, #2
40007bbc:	eb00578b 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007bc0:	e3a01000 	mov	r1, #0
40007bc4:	e59f28e8 	ldr	r2, [pc, #2280]	; 400084b4 <UVCAppThread_Entry+0xb4c>
40007bc8:	e3a00007 	mov	r0, #7
40007bcc:	eb005787 	bl	4001d9f0 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007bd0:	e3a01000 	mov	r1, #0
40007bd4:	e59f28dc 	ldr	r2, [pc, #2268]	; 400084b8 <UVCAppThread_Entry+0xb50>
40007bd8:	e3a00004 	mov	r0, #4
40007bdc:	eb005783 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007be0:	e3a01000 	mov	r1, #0
40007be4:	e59f28d0 	ldr	r2, [pc, #2256]	; 400084bc <UVCAppThread_Entry+0xb54>
40007be8:	e3a00003 	mov	r0, #3
40007bec:	eb00577f 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007bf0:	e3a01000 	mov	r1, #0
40007bf4:	e59f28c4 	ldr	r2, [pc, #2244]	; 400084c0 <UVCAppThread_Entry+0xb58>
40007bf8:	e3a00006 	mov	r0, #6
40007bfc:	eb00577b 	bl	4001d9f0 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007c00:	e3a01000 	mov	r1, #0
40007c04:	e59f28b8 	ldr	r2, [pc, #2232]	; 400084c4 <UVCAppThread_Entry+0xb5c>
40007c08:	e3a00005 	mov	r0, #5
40007c0c:	eb005777 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007c10:	e3a01001 	mov	r1, #1
40007c14:	e59f28ac 	ldr	r2, [pc, #2220]	; 400084c8 <UVCAppThread_Entry+0xb60>
40007c18:	e3a00005 	mov	r0, #5
40007c1c:	eb005773 	bl	4001d9f0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007c20:	e3a01002 	mov	r1, #2
40007c24:	e59f28a0 	ldr	r2, [pc, #2208]	; 400084cc <UVCAppThread_Entry+0xb64>
40007c28:	e3a00005 	mov	r0, #5
40007c2c:	eb00576f 	bl	4001d9f0 <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007c30:	e3a08000 	mov	r8, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007c34:	e3a04001 	mov	r4, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007c38:	e3a0a040 	mov	sl, #64	; 0x40
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007c3c:	e3a07003 	mov	r7, #3
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007c40:	e3a00082 	mov	r0, #130	; 0x82
40007c44:	e28d10b0 	add	r1, sp, #176	; 0xb0
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007c48:	e1cdabb8 	strh	sl, [sp, #184]	; 0xb8
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007c4c:	e58d40b0 	str	r4, [sp, #176]	; 0xb0
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007c50:	e5cd70b4 	strb	r7, [sp, #180]	; 0xb4
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007c54:	e5cd80bb 	strb	r8, [sp, #187]	; 0xbb
    endPointConfig.streams  = 0;
40007c58:	e1cd8bb6 	strh	r8, [sp, #182]	; 0xb6
    endPointConfig.burstLen = 1;
40007c5c:	e5cd40ba 	strb	r4, [sp, #186]	; 0xba
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007c60:	eb0050c9 	bl	4001bf8c <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40007c64:	e1a0a008 	mov	sl, r8
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c68:	e2505000 	subs	r5, r0, #0
40007c6c:	1a000163 	bne	40008200 <UVCAppThread_Entry+0x898>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007c70:	e59f3858 	ldr	r3, [pc, #2136]	; 400084d0 <UVCAppThread_Entry+0xb68>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007c74:	e59fe858 	ldr	lr, [pc, #2136]	; 400084d4 <UVCAppThread_Entry+0xb6c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed(int), Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007c78:	e3a0cb01 	mov	ip, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007c7c:	e3a08010 	mov	r8, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c80:	e59f0850 	ldr	r0, [pc, #2128]	; 400084d8 <UVCAppThread_Entry+0xb70>
40007c84:	e3a01004 	mov	r1, #4
40007c88:	e28d203c 	add	r2, sp, #60	; 0x3c
    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
    dmaInterConfig.prodAvailCount = 0;
40007c8c:	e1cd54b4 	strh	r5, [sp, #68]	; 0x44
    dmaInterConfig.prodHeader     = 0;
40007c90:	e1cd54b6 	strh	r5, [sp, #70]	; 0x46
    dmaInterConfig.prodFooter     = 0;
40007c94:	e1cd54b8 	strh	r5, [sp, #72]	; 0x48
    dmaInterConfig.consHeader     = 0;
40007c98:	e1cd54ba 	strh	r5, [sp, #74]	; 0x4a
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007c9c:	e58d5054 	str	r5, [sp, #84]	; 0x54
        CyU3PDebugPrint (4, "USB Set Endpoint config failed(int), Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007ca0:	e1cdc3bc 	strh	ip, [sp, #60]	; 0x3c
    dmaInterConfig.count          = 1;
40007ca4:	e1cd43be 	strh	r4, [sp, #62]	; 0x3e
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007ca8:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007cac:	e1cde4b2 	strh	lr, [sp, #66]	; 0x42
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007cb0:	e5cda04c 	strb	sl, [sp, #76]	; 0x4c
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007cb4:	e58d8050 	str	r8, [sp, #80]	; 0x50
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007cb8:	eb003736 	bl	40015998 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cbc:	e2505000 	subs	r5, r0, #0
40007cc0:	1a000145 	bne	400081dc <UVCAppThread_Entry+0x874>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007cc4:	e3a00b01 	mov	r0, #1024	; 0x400
40007cc8:	ebfff026 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007ccc:	e59f1808 	ldr	r1, [pc, #2056]	; 400084dc <UVCAppThread_Entry+0xb74>
    if (glInterStaBuffer == 0)
40007cd0:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007cd4:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007cd8:	0a000137 	beq	400081bc <UVCAppThread_Entry+0x854>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007cdc:	e3a0c008 	mov	ip, #8
    dmaMultiConfig.validSckCount  = 2;
40007ce0:	e3a03002 	mov	r3, #2
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007ce4:	e59f87f4 	ldr	r8, [pc, #2036]	; 400084e0 <UVCAppThread_Entry+0xb78>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007ce8:	e1cdc1b6 	strh	ip, [sp, #22]
    dmaMultiConfig.validSckCount  = 2;
40007cec:	e1cd31b8 	strh	r3, [sp, #24]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007cf0:	e59fc7ec 	ldr	ip, [pc, #2028]	; 400084e4 <UVCAppThread_Entry+0xb7c>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007cf4:	e59f37ec 	ldr	r3, [pc, #2028]	; 400084e8 <UVCAppThread_Entry+0xb80>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007cf8:	e3a0eb03 	mov	lr, #3072	; 0xc00
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007cfc:	e1cd52ba 	strh	r5, [sp, #42]	; 0x2a
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
40007d00:	e1cd53b0 	strh	r5, [sp, #48]	; 0x30
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007d04:	e59f57e0 	ldr	r5, [pc, #2016]	; 400084ec <UVCAppThread_Entry+0xb84>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007d08:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007d0c:	e3a0ec01 	mov	lr, #256	; 0x100
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007d10:	e3a01007 	mov	r1, #7
40007d14:	e28d2014 	add	r2, sp, #20

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007d18:	e1cde1ba 	strh	lr, [sp, #26]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007d1c:	e1cdc1bc 	strh	ip, [sp, #28]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007d20:	e3a0e00c 	mov	lr, #12
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
40007d24:	e3a0c084 	mov	ip, #132	; 0x84
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007d28:	e1cd32b2 	strh	r3, [sp, #34]	; 0x22
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007d2c:	e1a00008 	mov	r0, r8
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007d30:	e3a03018 	mov	r3, #24
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007d34:	e1cde2bc 	strh	lr, [sp, #44]	; 0x2c
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
40007d38:	e1cdc2be 	strh	ip, [sp, #46]	; 0x2e
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007d3c:	e5cda032 	strb	sl, [sp, #50]	; 0x32
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007d40:	e58d3034 	str	r3, [sp, #52]	; 0x34
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007d44:	e58d5038 	str	r5, [sp, #56]	; 0x38
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007d48:	eb004032 	bl	40017e18 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    CyU3PDebugPrint (4, "DMA Channel Creation. xfersize %d, size %d, count %d, activeProInd %d, activeConInd %d\n",
40007d4c:	e1d8e0b8 	ldrh	lr, [r8, #8]
40007d50:	e1d830b6 	ldrh	r3, [r8, #6]
40007d54:	e5982070 	ldr	r2, [r8, #112]	; 0x70
40007d58:	e288c046 	add	ip, r8, #70	; 0x46
40007d5c:	e288a03e 	add	sl, r8, #62	; 0x3e
40007d60:	e59f1788 	ldr	r1, [pc, #1928]	; 400084f0 <UVCAppThread_Entry+0xb88>
40007d64:	e58de000 	str	lr, [sp]
40007d68:	e98d1400 	stmib	sp, {sl, ip}
    dmaMultiConfig.prodFooter     = 132;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007d6c:	e1a05000 	mov	r5, r0
            &dmaMultiConfig);
    CyU3PDebugPrint (4, "DMA Channel Creation. xfersize %d, size %d, count %d, activeProInd %d, activeConInd %d\n",
40007d70:	e3a00004 	mov	r0, #4
40007d74:	eb002cf1 	bl	40013140 <CyU3PDebugPrint>
    		glChHandleUVCStream.xferSize, glChHandleUVCStream.size,
    		glChHandleUVCStream.count, glChHandleUVCStream.activeProdIndex, glChHandleUVCStream.activeConsIndex);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d78:	e3550000 	cmp	r5, #0
40007d7c:	1a000105 	bne	40008198 <UVCAppThread_Entry+0x830>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007d80:	e1a00004 	mov	r0, r4
40007d84:	e1a01004 	mov	r1, r4
40007d88:	eb004f7b 	bl	4001bb7c <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d8c:	e2505000 	subs	r5, r0, #0
40007d90:	1a0000f7 	bne	40008174 <UVCAppThread_Entry+0x80c>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007d94:	e3a00064 	mov	r0, #100	; 0x64
40007d98:	eb002e59 	bl	40013704 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007d9c:	eb005428 	bl	4001ce44 <CyU3PUsbGetSpeed>
    	endPointConfig.pcktSize = 0x400;
    	endPointConfig.burstLen = 1;
    	endPointConfig.isoPkts = 3; //for isochronous
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007da0:	e28d10b0 	add	r1, sp, #176	; 0xb0

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007da4:	e58d40b0 	str	r4, [sp, #176]	; 0xb0
    endPointConfig.epType   = CY_U3P_USB_EP_ISO;//CY_U3P_USB_EP_BULK;
40007da8:	e5cd40b4 	strb	r4, [sp, #180]	; 0xb4
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007dac:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007db0:	e5c6002c 	strb	r0, [r6, #44]	; 0x2c
    	endPointConfig.burstLen = 1;
    	endPointConfig.isoPkts = 3; //for isochronous
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x400;
40007db4:	13a00b01 	movne	r0, #1024	; 0x400

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_ISO;//CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = 0x400;//CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007db8:	03a02b01 	moveq	r2, #1024	; 0x400
    	endPointConfig.burstLen = 1;
    	endPointConfig.isoPkts = 3; //for isochronous
40007dbc:	05cd00bb 	strbeq	r0, [sp, #187]	; 0xbb
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x400;
40007dc0:	11cd0bb8 	strhne	r0, [sp, #184]	; 0xb8
    	endPointConfig.burstLen = 1;
    	endPointConfig.isoPkts = 3; //for isochronous
40007dc4:	15cd70bb 	strbne	r7, [sp, #187]	; 0xbb
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007dc8:	e3a00083 	mov	r0, #131	; 0x83
    {
    	endPointConfig.pcktSize = 0x400;
    	endPointConfig.burstLen = 1;
    	endPointConfig.isoPkts = 3; //for isochronous
    }
    endPointConfig.streams  = 0;
40007dcc:	e3a07000 	mov	r7, #0

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_ISO;//CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = 0x400;//CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007dd0:	01cd2bb8 	strheq	r2, [sp, #184]	; 0xb8
    	endPointConfig.burstLen = 1;
40007dd4:	05cd40ba 	strbeq	r4, [sp, #186]	; 0xba
    	endPointConfig.isoPkts = 3; //for isochronous
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x400;
    	endPointConfig.burstLen = 1;
40007dd8:	15cd40ba 	strbne	r4, [sp, #186]	; 0xba
    	endPointConfig.isoPkts = 3; //for isochronous
    }
    endPointConfig.streams  = 0;
40007ddc:	e1cd7bb6 	strh	r7, [sp, #182]	; 0xb6
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007de0:	eb005069 	bl	4001bf8c <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007de4:	e2504000 	subs	r4, r0, #0
40007de8:	1a00004a 	bne	40007f18 <UVCAppThread_Entry+0x5b0>
40007dec:	e59f7700 	ldr	r7, [pc, #1792]	; 400084f4 <UVCAppThread_Entry+0xb8c>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007df0:	e59f56a0 	ldr	r5, [pc, #1696]	; 40008498 <UVCAppThread_Entry+0xb30>
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007df4:	e1a08007 	mov	r8, r7
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007df8:	e59f0698 	ldr	r0, [pc, #1688]	; 40008498 <UVCAppThread_Entry+0xb30>
40007dfc:	e3a01001 	mov	r1, #1
40007e00:	e3a02002 	mov	r2, #2
40007e04:	e28d30bc 	add	r3, sp, #188	; 0xbc
40007e08:	e58d4000 	str	r4, [sp]
40007e0c:	eb0007d4 	bl	40009d64 <_txe_event_flags_get>
40007e10:	e3500000 	cmp	r0, #0
40007e14:	1a00002c 	bne	40007ecc <UVCAppThread_Entry+0x564>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007e18:	e5951028 	ldr	r1, [r5, #40]	; 0x28
40007e1c:	e3510000 	cmp	r1, #0
40007e20:	0a000003 	beq	40007e34 <UVCAppThread_Entry+0x4cc>
40007e24:	e1d5a3b6 	ldrh	sl, [r5, #54]	; 0x36
40007e28:	e1d533b8 	ldrh	r3, [r5, #56]	; 0x38
40007e2c:	e15a0003 	cmp	sl, r3
40007e30:	0a000143 	beq	40008344 <UVCAppThread_Entry+0x9dc>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007e34:	e3a01040 	mov	r1, #64	; 0x40
40007e38:	e3a02000 	mov	r2, #0
40007e3c:	e59f0654 	ldr	r0, [pc, #1620]	; 40008498 <UVCAppThread_Entry+0xb30>
40007e40:	eb0007f7 	bl	40009e24 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007e44:	eb000aaf 	bl	4000a908 <_txe_thread_relinquish>
    }
40007e48:	eaffffea 	b	40007df8 <UVCAppThread_Entry+0x490>

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
    	CyU3PDebugPrint (4, "test UART transfer");
40007e4c:	e59f16a4 	ldr	r1, [pc, #1700]	; 400084f8 <UVCAppThread_Entry+0xb90>
40007e50:	e3a00004 	mov	r0, #4
40007e54:	eb002cb9 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007e58:	e3a00004 	mov	r0, #4
40007e5c:	e59f1698 	ldr	r1, [pc, #1688]	; 400084fc <UVCAppThread_Entry+0xb94>
40007e60:	e1a02004 	mov	r2, r4
40007e64:	eb002cb5 	bl	40013140 <CyU3PDebugPrint>
40007e68:	eafffffe 	b	40007e68 <UVCAppThread_Entry+0x500>

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
    	CyU3PDebugPrint (4, "test UART config");
40007e6c:	e59f168c 	ldr	r1, [pc, #1676]	; 40008500 <UVCAppThread_Entry+0xb98>
40007e70:	e3a00004 	mov	r0, #4
40007e74:	eb002cb1 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007e78:	e3a00004 	mov	r0, #4
40007e7c:	e59f1678 	ldr	r1, [pc, #1656]	; 400084fc <UVCAppThread_Entry+0xb94>
40007e80:	e1a02004 	mov	r2, r4
40007e84:	eb002cad 	bl	40013140 <CyU3PDebugPrint>
40007e88:	eafffffe 	b	40007e88 <UVCAppThread_Entry+0x520>

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007e8c:	e59f1670 	ldr	r1, [pc, #1648]	; 40008504 <UVCAppThread_Entry+0xb9c>
40007e90:	e3a00004 	mov	r0, #4
40007e94:	eb002ca9 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007e98:	e3a00004 	mov	r0, #4
40007e9c:	e59f1658 	ldr	r1, [pc, #1624]	; 400084fc <UVCAppThread_Entry+0xb94>
40007ea0:	e1a02004 	mov	r2, r4
40007ea4:	eb002ca5 	bl	40013140 <CyU3PDebugPrint>
40007ea8:	eafffffe 	b	40007ea8 <UVCAppThread_Entry+0x540>

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
    	CyU3PDebugPrint (4, "test debug");
40007eac:	e59f1654 	ldr	r1, [pc, #1620]	; 40008508 <UVCAppThread_Entry+0xba0>
40007eb0:	e3a00004 	mov	r0, #4
40007eb4:	eb002ca1 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007eb8:	e3a00004 	mov	r0, #4
40007ebc:	e59f1638 	ldr	r1, [pc, #1592]	; 400084fc <UVCAppThread_Entry+0xb94>
40007ec0:	e1a02004 	mov	r2, r4
40007ec4:	eb002c9d 	bl	40013140 <CyU3PDebugPrint>
40007ec8:	eafffffe 	b	40007ec8 <UVCAppThread_Entry+0x560>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007ecc:	e59f05c4 	ldr	r0, [pc, #1476]	; 40008498 <UVCAppThread_Entry+0xb30>
40007ed0:	e3a01002 	mov	r1, #2
40007ed4:	e3a02003 	mov	r2, #3
40007ed8:	e28d30bc 	add	r3, sp, #188	; 0xbc
40007edc:	e58d4000 	str	r4, [sp]
40007ee0:	eb00079f 	bl	40009d64 <_txe_event_flags_get>
40007ee4:	e3500000 	cmp	r0, #0
40007ee8:	1a00001a 	bne	40007f58 <UVCAppThread_Entry+0x5f0>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007eec:	e5951048 	ldr	r1, [r5, #72]	; 0x48
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007ef0:	e5854028 	str	r4, [r5, #40]	; 0x28
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007ef4:	e3510000 	cmp	r1, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007ef8:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\r\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007efc:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40007f00:	e1c543b8 	strh	r4, [r5, #56]	; 0x38
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\r\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40007f04:	e1c543b2 	strh	r4, [r5, #50]	; 0x32
                pbc=0;
40007f08:	e1c543b4 	strh	r4, [r5, #52]	; 0x34

                if (!clearFeatureRqtReceived)
40007f0c:	0a00000a 	beq	40007f3c <UVCAppThread_Entry+0x5d4>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40007f10:	e5864048 	str	r4, [r6, #72]	; 0x48
40007f14:	eaffffc6 	b	40007e34 <UVCAppThread_Entry+0x4cc>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed(iso), Error Code = %d\n", apiRetStatus);
40007f18:	e59f15ec 	ldr	r1, [pc, #1516]	; 4000850c <UVCAppThread_Entry+0xba4>
40007f1c:	e1a02004 	mov	r2, r4
40007f20:	e3a00004 	mov	r0, #4
40007f24:	eb002c85 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40007f28:	e3a00004 	mov	r0, #4
40007f2c:	e59f15c8 	ldr	r1, [pc, #1480]	; 400084fc <UVCAppThread_Entry+0xb94>
40007f30:	e1a02004 	mov	r2, r4
40007f34:	eb002c81 	bl	40013140 <CyU3PDebugPrint>
40007f38:	eafffffe 	b	40007f38 <UVCAppThread_Entry+0x5d0>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40007f3c:	e59f059c 	ldr	r0, [pc, #1436]	; 400084e0 <UVCAppThread_Entry+0xb78>
40007f40:	eb004185 	bl	4001855c <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40007f44:	e250a000 	subs	sl, r0, #0
40007f48:	1a00003f 	bne	4000804c <UVCAppThread_Entry+0x6e4>
                    	CyU3PDebugPrint (4, "test 1 0x%x\r\n", apiRetStatus);
                    	CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40007f4c:	e3a00083 	mov	r0, #131	; 0x83
40007f50:	eb005316 	bl	4001cbb0 <CyU3PUsbFlushEp>
40007f54:	eaffffed 	b	40007f10 <UVCAppThread_Entry+0x5a8>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40007f58:	e3e0c000 	mvn	ip, #0
40007f5c:	e3a01001 	mov	r1, #1
40007f60:	e3a02002 	mov	r2, #2
40007f64:	e28d30bc 	add	r3, sp, #188	; 0xbc
40007f68:	e59f0528 	ldr	r0, [pc, #1320]	; 40008498 <UVCAppThread_Entry+0xb30>
40007f6c:	e58dc000 	str	ip, [sp]
40007f70:	eb00077b 	bl	40009d64 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40007f74:	e59f0564 	ldr	r0, [pc, #1380]	; 400084e0 <UVCAppThread_Entry+0xb78>
40007f78:	e1a01004 	mov	r1, r4
40007f7c:	e1a02004 	mov	r2, r4
40007f80:	eb004262 	bl	40018910 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f84:	e250a000 	subs	sl, r0, #0
40007f88:	1a000070 	bne	40008150 <UVCAppThread_Entry+0x7e8>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40007f8c:	e5953040 	ldr	r3, [r5, #64]	; 0x40
40007f90:	e3530000 	cmp	r3, #0
40007f94:	1a000065 	bne	40008130 <UVCAppThread_Entry+0x7c8>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
40007f98:	e3a01030 	mov	r1, #48	; 0x30
40007f9c:	e3a02001 	mov	r2, #1
40007fa0:	e2833082 	add	r3, r3, #130	; 0x82
40007fa4:	e3a00021 	mov	r0, #33	; 0x21
40007fa8:	ebfff1dd 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007fac:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007fb0:	eb0002a3 	bl	40008a44 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
40007fb4:	e3a01030 	mov	r1, #48	; 0x30
40007fb8:	e3a02002 	mov	r2, #2
40007fbc:	e3a03052 	mov	r3, #82	; 0x52
40007fc0:	e3a00025 	mov	r0, #37	; 0x25
40007fc4:	ebfff1d6 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007fc8:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007fcc:	eb00029c 	bl	40008a44 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40007fd0:	e3a01030 	mov	r1, #48	; 0x30
40007fd4:	e3a0200a 	mov	r2, #10
40007fd8:	e3a03082 	mov	r3, #130	; 0x82
40007fdc:	e3a00023 	mov	r0, #35	; 0x23
40007fe0:	ebfff1cf 	bl	40004724 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
40007fe4:	e3a00f4b 	mov	r0, #300	; 0x12c
40007fe8:	eb000295 	bl	40008a44 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40007fec:	e3a01030 	mov	r1, #48	; 0x30
40007ff0:	e1a02004 	mov	r2, r4
40007ff4:	e3a03082 	mov	r3, #130	; 0x82
40007ff8:	e3a00021 	mov	r0, #33	; 0x21
40007ffc:	ebfff1c8 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008000:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008004:	eb00028e 	bl	40008a44 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40008008:	e3a03052 	mov	r3, #82	; 0x52
4000800c:	e3a01030 	mov	r1, #48	; 0x30
40008010:	e1a02004 	mov	r2, r4
40008014:	e3a00025 	mov	r0, #37	; 0x25
40008018:	ebfff1c1 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
4000801c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008020:	eb000287 	bl	40008a44 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008024:	e5d5302c 	ldrb	r3, [r5, #44]	; 0x2c
40008028:	e3530003 	cmp	r3, #3
4000802c:	0a000038 	beq	40008114 <UVCAppThread_Entry+0x7ac>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008030:	e3530002 	cmp	r3, #2
40008034:	0a00000d 	beq	40008070 <UVCAppThread_Entry+0x708>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008038:	e3a0e001 	mov	lr, #1
4000803c:	e586e040 	str	lr, [r6, #64]	; 0x40
                    CyU3PThreadSleep(200);
40008040:	e3a000c8 	mov	r0, #200	; 0xc8
40008044:	eb00027e 	bl	40008a44 <_tx_thread_sleep>
40008048:	eaffff79 	b	40007e34 <UVCAppThread_Entry+0x4cc>
                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                    if (apiRetStatus != CY_U3P_SUCCESS)
                    {
                    	CyU3PDebugPrint (4, "test 1 0x%x\r\n", apiRetStatus);
4000804c:	e59f14bc 	ldr	r1, [pc, #1212]	; 40008510 <UVCAppThread_Entry+0xba8>
40008050:	e1a0200a 	mov	r2, sl
40008054:	e3a00004 	mov	r0, #4
40008058:	eb002c38 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
4000805c:	e3a00004 	mov	r0, #4
40008060:	e59f1494 	ldr	r1, [pc, #1172]	; 400084fc <UVCAppThread_Entry+0xb94>
40008064:	e1a0200a 	mov	r2, sl
40008068:	eb002c34 	bl	40013140 <CyU3PDebugPrint>
4000806c:	eafffffe 	b	4000806c <UVCAppThread_Entry+0x704>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"%d \r\n high gpif", glProbeCtrl20[3]);
40008070:	e59f149c 	ldr	r1, [pc, #1180]	; 40008514 <UVCAppThread_Entry+0xbac>
40008074:	e5d7262f 	ldrb	r2, [r7, #1583]	; 0x62f
40008078:	e3a00001 	mov	r0, #1
4000807c:	eb002c2f 	bl	40013140 <CyU3PDebugPrint>
    	if(glProbeCtrl20[3]==2)//480x320
40008080:	e5d7362f 	ldrb	r3, [r7, #1583]	; 0x62f
40008084:	e3530002 	cmp	r3, #2
    		apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2_480);
40008088:	059f0488 	ldreq	r0, [pc, #1160]	; 40008518 <UVCAppThread_Entry+0xbb0>
    	else //640x480 (default)
    		apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2_640);
4000808c:	159f0488 	ldrne	r0, [pc, #1160]	; 4000851c <UVCAppThread_Entry+0xbb4>
40008090:	eb004d5e 	bl	4001b610 <CyU3PGpifLoad>
40008094:	e1a0a000 	mov	sl, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008098:	e35a0000 	cmp	sl, #0
4000809c:	1a000013 	bne	400080f0 <UVCAppThread_Entry+0x788>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
400080a0:	e5d6302c 	ldrb	r3, [r6, #44]	; 0x2c
400080a4:	e3530003 	cmp	r3, #3
400080a8:	0a000001 	beq	400080b4 <UVCAppThread_Entry+0x74c>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
400080ac:	e3530002 	cmp	r3, #2
400080b0:	1affffe0 	bne	40008038 <UVCAppThread_Entry+0x6d0>
    {
    	if(glProbeCtrl20[3]==2)//480x320
    		apiRetStatus = CyU3PGpifSMStart (START_USB2_480, ALPHA_START_USB2_480);
    	else //640x480 (default)
    		apiRetStatus = CyU3PGpifSMStart (START_USB2_640, ALPHA_START_USB2_640);
400080b4:	e1a0000a 	mov	r0, sl
400080b8:	e1a0100a 	mov	r1, sl
400080bc:	eb004df9 	bl	4001b8a8 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400080c0:	e3500000 	cmp	r0, #0
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	if(glProbeCtrl20[3]==2)//480x320
    		apiRetStatus = CyU3PGpifSMStart (START_USB2_480, ALPHA_START_USB2_480);
    	else //640x480 (default)
    		apiRetStatus = CyU3PGpifSMStart (START_USB2_640, ALPHA_START_USB2_640);
400080c4:	e1a0a000 	mov	sl, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400080c8:	0affffda 	beq	40008038 <UVCAppThread_Entry+0x6d0>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400080cc:	e1a02000 	mov	r2, r0
400080d0:	e59f1448 	ldr	r1, [pc, #1096]	; 40008520 <UVCAppThread_Entry+0xbb8>
400080d4:	e3a00004 	mov	r0, #4
400080d8:	eb002c18 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400080dc:	e3a00004 	mov	r0, #4
400080e0:	e59f1414 	ldr	r1, [pc, #1044]	; 400084fc <UVCAppThread_Entry+0xb94>
400080e4:	e1a0200a 	mov	r2, sl
400080e8:	eb002c14 	bl	40013140 <CyU3PDebugPrint>
400080ec:	eafffffe 	b	400080ec <UVCAppThread_Entry+0x784>
    		apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2_640);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
400080f0:	e59f142c 	ldr	r1, [pc, #1068]	; 40008524 <UVCAppThread_Entry+0xbbc>
400080f4:	e1a0200a 	mov	r2, sl
400080f8:	e3a00004 	mov	r0, #4
400080fc:	eb002c0f 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008100:	e3a00004 	mov	r0, #4
40008104:	e59f13f0 	ldr	r1, [pc, #1008]	; 400084fc <UVCAppThread_Entry+0xb94>
40008108:	e1a0200a 	mov	r2, sl
4000810c:	eb002c0b 	bl	40013140 <CyU3PDebugPrint>
40008110:	eafffffe 	b	40008110 <UVCAppThread_Entry+0x7a8>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
40008114:	e59f140c 	ldr	r1, [pc, #1036]	; 40008528 <UVCAppThread_Entry+0xbc0>
40008118:	e3a00001 	mov	r0, #1
4000811c:	eb002c07 	bl	40013140 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
40008120:	e59f0404 	ldr	r0, [pc, #1028]	; 4000852c <UVCAppThread_Entry+0xbc4>
40008124:	eb004d39 	bl	4001b610 <CyU3PGpifLoad>
40008128:	e1a0a000 	mov	sl, r0
4000812c:	eaffffd9 	b	40008098 <UVCAppThread_Entry+0x730>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008130:	e59f03ac 	ldr	r0, [pc, #940]	; 400084e4 <UVCAppThread_Entry+0xb7c>
40008134:	e3a0a002 	mov	sl, #2
40008138:	e1a01004 	mov	r1, r4
4000813c:	e1a02000 	mov	r2, r0
40008140:	e1a03004 	mov	r3, r4
40008144:	e58da000 	str	sl, [sp]
40008148:	eb004e2b 	bl	4001b9fc <CyU3PGpifSMSwitch>
4000814c:	eaffff38 	b	40007e34 <UVCAppThread_Entry+0x4cc>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008150:	e59f13d8 	ldr	r1, [pc, #984]	; 40008530 <UVCAppThread_Entry+0xbc8>
40008154:	e1a0200a 	mov	r2, sl
40008158:	e3a00004 	mov	r0, #4
4000815c:	eb002bf7 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008160:	e3a00004 	mov	r0, #4
40008164:	e59f1390 	ldr	r1, [pc, #912]	; 400084fc <UVCAppThread_Entry+0xb94>
40008168:	e1a0200a 	mov	r2, sl
4000816c:	eb002bf3 	bl	40013140 <CyU3PDebugPrint>
40008170:	eafffffe 	b	40008170 <UVCAppThread_Entry+0x808>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40008174:	e59f13b8 	ldr	r1, [pc, #952]	; 40008534 <UVCAppThread_Entry+0xbcc>
40008178:	e1a02005 	mov	r2, r5
4000817c:	e3a00004 	mov	r0, #4
40008180:	eb002bee 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008184:	e3a00004 	mov	r0, #4
40008188:	e59f136c 	ldr	r1, [pc, #876]	; 400084fc <UVCAppThread_Entry+0xb94>
4000818c:	e1a02005 	mov	r2, r5
40008190:	eb002bea 	bl	40013140 <CyU3PDebugPrint>
40008194:	eafffffe 	b	40008194 <UVCAppThread_Entry+0x82c>
    		glChHandleUVCStream.xferSize, glChHandleUVCStream.size,
    		glChHandleUVCStream.count, glChHandleUVCStream.activeProdIndex, glChHandleUVCStream.activeConsIndex);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008198:	e59f1398 	ldr	r1, [pc, #920]	; 40008538 <UVCAppThread_Entry+0xbd0>
4000819c:	e1a02005 	mov	r2, r5
400081a0:	e3a00004 	mov	r0, #4
400081a4:	eb002be5 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400081a8:	e3a00004 	mov	r0, #4
400081ac:	e59f1348 	ldr	r1, [pc, #840]	; 400084fc <UVCAppThread_Entry+0xb94>
400081b0:	e1a02005 	mov	r2, r5
400081b4:	eb002be1 	bl	40013140 <CyU3PDebugPrint>
400081b8:	eafffffe 	b	400081b8 <UVCAppThread_Entry+0x850>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400081bc:	e59f1378 	ldr	r1, [pc, #888]	; 4000853c <UVCAppThread_Entry+0xbd4>
400081c0:	e2800004 	add	r0, r0, #4
400081c4:	eb002bdd 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400081c8:	e3a00004 	mov	r0, #4
400081cc:	e59f1328 	ldr	r1, [pc, #808]	; 400084fc <UVCAppThread_Entry+0xb94>
400081d0:	e1a02008 	mov	r2, r8
400081d4:	eb002bd9 	bl	40013140 <CyU3PDebugPrint>
400081d8:	eafffffe 	b	400081d8 <UVCAppThread_Entry+0x870>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400081dc:	e59f135c 	ldr	r1, [pc, #860]	; 40008540 <UVCAppThread_Entry+0xbd8>
400081e0:	e1a02005 	mov	r2, r5
400081e4:	e3a00004 	mov	r0, #4
400081e8:	eb002bd4 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400081ec:	e3a00004 	mov	r0, #4
400081f0:	e59f1304 	ldr	r1, [pc, #772]	; 400084fc <UVCAppThread_Entry+0xb94>
400081f4:	e1a02005 	mov	r2, r5
400081f8:	eb002bd0 	bl	40013140 <CyU3PDebugPrint>
400081fc:	eafffffe 	b	400081fc <UVCAppThread_Entry+0x894>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed(int), Error Code = %d\n", apiRetStatus);
40008200:	e59f133c 	ldr	r1, [pc, #828]	; 40008544 <UVCAppThread_Entry+0xbdc>
40008204:	e1a02005 	mov	r2, r5
40008208:	e3a00004 	mov	r0, #4
4000820c:	eb002bcb 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008210:	e3a00004 	mov	r0, #4
40008214:	e59f12e0 	ldr	r1, [pc, #736]	; 400084fc <UVCAppThread_Entry+0xb94>
40008218:	e1a02005 	mov	r2, r5
4000821c:	eb002bc7 	bl	40013140 <CyU3PDebugPrint>
40008220:	eafffffe 	b	40008220 <UVCAppThread_Entry+0x8b8>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008224:	e59f131c 	ldr	r1, [pc, #796]	; 40008548 <UVCAppThread_Entry+0xbe0>
40008228:	e1a02004 	mov	r2, r4
4000822c:	e3a00004 	mov	r0, #4
40008230:	eb002bc2 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008234:	e3a00004 	mov	r0, #4
40008238:	e59f12bc 	ldr	r1, [pc, #700]	; 400084fc <UVCAppThread_Entry+0xb94>
4000823c:	e1a02004 	mov	r2, r4
40008240:	eb002bbe 	bl	40013140 <CyU3PDebugPrint>
40008244:	eafffffe 	b	40008244 <UVCAppThread_Entry+0x8dc>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008248:	e59f12fc 	ldr	r1, [pc, #764]	; 4000854c <UVCAppThread_Entry+0xbe4>
4000824c:	e1a02004 	mov	r2, r4
40008250:	e3a00004 	mov	r0, #4
40008254:	eb002bb9 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008258:	e3a00004 	mov	r0, #4
4000825c:	e59f1298 	ldr	r1, [pc, #664]	; 400084fc <UVCAppThread_Entry+0xb94>
40008260:	e1a02004 	mov	r2, r4
40008264:	eb002bb5 	bl	40013140 <CyU3PDebugPrint>
40008268:	eafffffe 	b	40008268 <UVCAppThread_Entry+0x900>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
4000826c:	e59f12dc 	ldr	r1, [pc, #732]	; 40008550 <UVCAppThread_Entry+0xbe8>
40008270:	e1a02004 	mov	r2, r4
40008274:	e3a00004 	mov	r0, #4
40008278:	eb002bb0 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
4000827c:	e3a00004 	mov	r0, #4
40008280:	e59f1274 	ldr	r1, [pc, #628]	; 400084fc <UVCAppThread_Entry+0xb94>
40008284:	e1a02004 	mov	r2, r4
40008288:	eb002bac 	bl	40013140 <CyU3PDebugPrint>
4000828c:	eafffffe 	b	4000828c <UVCAppThread_Entry+0x924>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008290:	e59f12bc 	ldr	r1, [pc, #700]	; 40008554 <UVCAppThread_Entry+0xbec>
40008294:	e1a02004 	mov	r2, r4
40008298:	e3a00004 	mov	r0, #4
4000829c:	eb002ba7 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400082a0:	e3a00004 	mov	r0, #4
400082a4:	e59f1250 	ldr	r1, [pc, #592]	; 400084fc <UVCAppThread_Entry+0xb94>
400082a8:	e1a02004 	mov	r2, r4
400082ac:	eb002ba3 	bl	40013140 <CyU3PDebugPrint>
400082b0:	eafffffe 	b	400082b0 <UVCAppThread_Entry+0x948>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
400082b4:	e59f129c 	ldr	r1, [pc, #668]	; 40008558 <UVCAppThread_Entry+0xbf0>
400082b8:	e1a02004 	mov	r2, r4
400082bc:	e3a00004 	mov	r0, #4
400082c0:	eb002b9e 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400082c4:	e3a00004 	mov	r0, #4
400082c8:	e59f122c 	ldr	r1, [pc, #556]	; 400084fc <UVCAppThread_Entry+0xb94>
400082cc:	e1a02004 	mov	r2, r4
400082d0:	eb002b9a 	bl	40013140 <CyU3PDebugPrint>
400082d4:	eafffffe 	b	400082d4 <UVCAppThread_Entry+0x96c>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
400082d8:	e59f127c 	ldr	r1, [pc, #636]	; 4000855c <UVCAppThread_Entry+0xbf4>
400082dc:	e1a02004 	mov	r2, r4
400082e0:	e3a00004 	mov	r0, #4
400082e4:	eb002b95 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400082e8:	e3a00004 	mov	r0, #4
400082ec:	e59f1208 	ldr	r1, [pc, #520]	; 400084fc <UVCAppThread_Entry+0xb94>
400082f0:	e1a02004 	mov	r2, r4
400082f4:	eb002b91 	bl	40013140 <CyU3PDebugPrint>
400082f8:	eafffffe 	b	400082f8 <UVCAppThread_Entry+0x990>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
400082fc:	e59f125c 	ldr	r1, [pc, #604]	; 40008560 <UVCAppThread_Entry+0xbf8>
40008300:	e1a02004 	mov	r2, r4
40008304:	e3a00004 	mov	r0, #4
40008308:	eb002b8c 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
4000830c:	e3a00004 	mov	r0, #4
40008310:	e59f11e4 	ldr	r1, [pc, #484]	; 400084fc <UVCAppThread_Entry+0xb94>
40008314:	e1a02004 	mov	r2, r4
40008318:	eb002b88 	bl	40013140 <CyU3PDebugPrint>
4000831c:	eafffffe 	b	4000831c <UVCAppThread_Entry+0x9b4>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40008320:	e59f123c 	ldr	r1, [pc, #572]	; 40008564 <UVCAppThread_Entry+0xbfc>
40008324:	e1a02004 	mov	r2, r4
40008328:	e3a00004 	mov	r0, #4
4000832c:	eb002b83 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008330:	e3a00004 	mov	r0, #4
40008334:	e59f11c0 	ldr	r1, [pc, #448]	; 400084fc <UVCAppThread_Entry+0xb94>
40008338:	e1a02004 	mov	r2, r4
4000833c:	eb002b7f 	bl	40013140 <CyU3PDebugPrint>
40008340:	eafffffe 	b	40008340 <UVCAppThread_Entry+0x9d8>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40008344:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                consCount = 0;
40008348:	e1c543b8 	strh	r4, [r5, #56]	; 0x38
                hitFV     = CyFalse;
4000834c:	e5854028 	str	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008350:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\r\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40008354:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008358:	e2220001 	eor	r0, r2, #1
4000835c:	e5c70481 	strb	r0, [r7, #1153]	; 0x481
                if(stiflag){
40008360:	e595e09c 	ldr	lr, [r5, #156]	; 0x9c
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40008364:	e5d8c481 	ldrb	ip, [r8, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40008368:	e35e0000 	cmp	lr, #0
                	glUVCHeader[1] |= (1<<5);    //set still image flag
4000836c:	138cc020 	orrne	ip, ip, #32
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008370:	020cc0df 	andeq	ip, ip, #223	; 0xdf
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40008374:	15c8c481 	strbne	ip, [r8, #1153]	; 0x481
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008378:	05c8c481 	strbeq	ip, [r8, #1153]	; 0x481
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
                	stiflag = CyFalse;
4000837c:	1585409c 	strne	r4, [r5, #156]	; 0x9c
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\r\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40008380:	e1c543b2 	strh	r4, [r5, #50]	; 0x32
            	pbc=0;
40008384:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008388:	e59f0150 	ldr	r0, [pc, #336]	; 400084e0 <UVCAppThread_Entry+0xb78>
4000838c:	eb004072 	bl	4001855c <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008390:	e250a000 	subs	sl, r0, #0
40008394:	1a000034 	bne	4000846c <UVCAppThread_Entry+0xb04>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008398:	e1a0100a 	mov	r1, sl
4000839c:	e1a0200a 	mov	r2, sl
400083a0:	e59f0138 	ldr	r0, [pc, #312]	; 400084e0 <UVCAppThread_Entry+0xb78>
400083a4:	eb004159 	bl	40018910 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
400083a8:	e250a000 	subs	sl, r0, #0
400083ac:	1a000025 	bne	40008448 <UVCAppThread_Entry+0xae0>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400083b0:	e59f012c 	ldr	r0, [pc, #300]	; 400084e4 <UVCAppThread_Entry+0xb7c>
400083b4:	e1a0100a 	mov	r1, sl
400083b8:	e1a0300a 	mov	r3, sl
400083bc:	e1a02000 	mov	r2, r0
400083c0:	e3a0a002 	mov	sl, #2
400083c4:	e58da000 	str	sl, [sp]
400083c8:	eb004d8b 	bl	4001b9fc <CyU3PGpifSMSwitch>
400083cc:	eafffe98 	b	40007e34 <UVCAppThread_Entry+0x4cc>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
400083d0:	e59f1190 	ldr	r1, [pc, #400]	; 40008568 <UVCAppThread_Entry+0xc00>
400083d4:	e1a02004 	mov	r2, r4
400083d8:	e3a00004 	mov	r0, #4
400083dc:	eb002b57 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
400083e0:	e3a00004 	mov	r0, #4
400083e4:	e59f1110 	ldr	r1, [pc, #272]	; 400084fc <UVCAppThread_Entry+0xb94>
400083e8:	e1a02004 	mov	r2, r4
400083ec:	eb002b53 	bl	40013140 <CyU3PDebugPrint>
400083f0:	eafffffe 	b	400083f0 <UVCAppThread_Entry+0xa88>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
400083f4:	e59f1170 	ldr	r1, [pc, #368]	; 4000856c <UVCAppThread_Entry+0xc04>
400083f8:	e1a02004 	mov	r2, r4
400083fc:	e3a00004 	mov	r0, #4
40008400:	eb002b4e 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008404:	e3a00004 	mov	r0, #4
40008408:	e59f10ec 	ldr	r1, [pc, #236]	; 400084fc <UVCAppThread_Entry+0xb94>
4000840c:	e1a02004 	mov	r2, r4
40008410:	eb002b4a 	bl	40013140 <CyU3PDebugPrint>
40008414:	eafffffe 	b	40008414 <UVCAppThread_Entry+0xaac>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40008418:	e59f1150 	ldr	r1, [pc, #336]	; 40008570 <UVCAppThread_Entry+0xc08>
4000841c:	e3a00004 	mov	r0, #4
40008420:	eb002b46 	bl	40013140 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40008424:	e1a00004 	mov	r0, r4
40008428:	ebfffd47 	bl	4000794c <CyFxAppErrorHandler>
4000842c:	eafffd7f 	b	40007a30 <UVCAppThread_Entry+0xc8>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40008430:	e59f113c 	ldr	r1, [pc, #316]	; 40008574 <UVCAppThread_Entry+0xc0c>
40008434:	e3a00004 	mov	r0, #4
40008438:	eb002b40 	bl	40013140 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
4000843c:	e1a00004 	mov	r0, r4
40008440:	ebfffd41 	bl	4000794c <CyFxAppErrorHandler>
40008444:	eafffd6d 	b	40007a00 <UVCAppThread_Entry+0x98>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008448:	e59f1128 	ldr	r1, [pc, #296]	; 40008578 <UVCAppThread_Entry+0xc10>
4000844c:	e1a0200a 	mov	r2, sl
40008450:	e3a00004 	mov	r0, #4
40008454:	eb002b39 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
40008458:	e3a00004 	mov	r0, #4
4000845c:	e59f1098 	ldr	r1, [pc, #152]	; 400084fc <UVCAppThread_Entry+0xb94>
40008460:	e1a0200a 	mov	r2, sl
40008464:	eb002b35 	bl	40013140 <CyU3PDebugPrint>
40008468:	eafffffe 	b	40008468 <UVCAppThread_Entry+0xb00>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
4000846c:	e59f1108 	ldr	r1, [pc, #264]	; 4000857c <UVCAppThread_Entry+0xc14>
40008470:	e1a0200a 	mov	r2, sl
40008474:	e3a00004 	mov	r0, #4
40008478:	eb002b30 	bl	40013140 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler... 0x%x\r\n", apiRetStatus);
4000847c:	e3a00004 	mov	r0, #4
40008480:	e59f1074 	ldr	r1, [pc, #116]	; 400084fc <UVCAppThread_Entry+0xb94>
40008484:	e1a0200a 	mov	r2, sl
40008488:	eb002b2c 	bl	40013140 <CyU3PDebugPrint>
4000848c:	eafffffe 	b	4000848c <UVCAppThread_Entry+0xb24>
40008490:	0001c200 	.word	0x0001c200
40008494:	000186a0 	.word	0x000186a0
40008498:	40031410 	.word	0x40031410
4000849c:	40004a14 	.word	0x40004a14
400084a0:	40004dc4 	.word	0x40004dc4
400084a4:	40004c54 	.word	0x40004c54
400084a8:	40010d34 	.word	0x40010d34
400084ac:	40010d48 	.word	0x40010d48
400084b0:	40010d5c 	.word	0x40010d5c
400084b4:	40010e98 	.word	0x40010e98
400084b8:	40010d74 	.word	0x40010d74
400084bc:	40010d68 	.word	0x40010d68
400084c0:	40010eb0 	.word	0x40010eb0
400084c4:	40010fb8 	.word	0x40010fb8
400084c8:	40010fbc 	.word	0x40010fbc
400084cc:	40010ff4 	.word	0x40010ff4
400084d0:	00003f01 	.word	0x00003f01
400084d4:	00000302 	.word	0x00000302
400084d8:	400334b0 	.word	0x400334b0
400084dc:	40033550 	.word	0x40033550
400084e0:	40033364 	.word	0x40033364
400084e4:	00000101 	.word	0x00000101
400084e8:	00000303 	.word	0x00000303
400084ec:	40004b08 	.word	0x40004b08
400084f0:	40011bb4 	.word	0x40011bb4
400084f4:	40030000 	.word	0x40030000
400084f8:	400118dc 	.word	0x400118dc
400084fc:	4001123c 	.word	0x4001123c
40008500:	400118c8 	.word	0x400118c8
40008504:	400118a8 	.word	0x400118a8
40008508:	400118f0 	.word	0x400118f0
4000850c:	40011c64 	.word	0x40011c64
40008510:	40011cfc 	.word	0x40011cfc
40008514:	40011d50 	.word	0x40011d50
40008518:	40011184 	.word	0x40011184
4000851c:	400111a0 	.word	0x400111a0
40008520:	40011d98 	.word	0x40011d98
40008524:	40011d60 	.word	0x40011d60
40008528:	40011d40 	.word	0x40011d40
4000852c:	40011168 	.word	0x40011168
40008530:	40011d0c 	.word	0x40011d0c
40008534:	40011c3c 	.word	0x40011c3c
40008538:	40011c0c 	.word	0x40011c0c
4000853c:	40011b7c 	.word	0x40011b7c
40008540:	40011b3c 	.word	0x40011b3c
40008544:	40011b04 	.word	0x40011b04
40008548:	40011ad4 	.word	0x40011ad4
4000854c:	40011aa4 	.word	0x40011aa4
40008550:	40011a6c 	.word	0x40011a6c
40008554:	40011a38 	.word	0x40011a38
40008558:	40011a04 	.word	0x40011a04
4000855c:	400119d8 	.word	0x400119d8
40008560:	400119ac 	.word	0x400119ac
40008564:	40011984 	.word	0x40011984
40008568:	40011960 	.word	0x40011960
4000856c:	40011934 	.word	0x40011934
40008570:	40011918 	.word	0x40011918
40008574:	400118fc 	.word	0x400118fc
40008578:	40011cc8 	.word	0x40011cc8
4000857c:	40011c9c 	.word	0x40011c9c

40008580 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008580:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008584:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008588:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000858c:	ebffec38 	bl	40003674 <CyU3PMemAlloc>
40008590:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008594:	e3a00a01 	mov	r0, #4096	; 0x1000
40008598:	ebffec35 	bl	40003674 <CyU3PMemAlloc>
4000859c:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085a0:	e3a00a01 	mov	r0, #4096	; 0x1000
400085a4:	ebffec32 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400085a8:	e35a0000 	cmp	sl, #0
400085ac:	135b0000 	cmpne	fp, #0
400085b0:	13a09000 	movne	r9, #0
400085b4:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085b8:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400085bc:	1a000000 	bne	400085c4 <CyFxApplicationDefine+0x44>
400085c0:	eafffffe 	b	400085c0 <CyFxApplicationDefine+0x40>
400085c4:	e3500000 	cmp	r0, #0
400085c8:	0afffffc 	beq	400085c0 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400085cc:	e28d4028 	add	r4, sp, #40	; 0x28
400085d0:	e1a00004 	mov	r0, r4
400085d4:	e3a01040 	mov	r1, #64	; 0x40
400085d8:	e59f2118 	ldr	r2, [pc, #280]	; 400086f8 <CyFxApplicationDefine+0x178>
400085dc:	ebffeb77 	bl	400033c0 <cmdbufCreate>
400085e0:	e1a05004 	mov	r5, r4
400085e4:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
400085e8:	e59f710c 	ldr	r7, [pc, #268]	; 400086fc <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400085ec:	e59f810c 	ldr	r8, [pc, #268]	; 40008700 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400085f0:	e1a0c007 	mov	ip, r7
400085f4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400085f8:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400085fc:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008600:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008604:	e59f20f8 	ldr	r2, [pc, #248]	; 40008704 <CyFxApplicationDefine+0x184>
40008608:	e1a00004 	mov	r0, r4
4000860c:	e3a01020 	mov	r1, #32
40008610:	ebffeb6a 	bl	400033c0 <cmdbufCreate>
40008614:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
40008618:	e1a0c008 	mov	ip, r8
4000861c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008620:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008624:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008628:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
4000862c:	e1a00007 	mov	r0, r7
40008630:	ebffeb7a 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008634:	e1a00008 	mov	r0, r8
40008638:	ebffeb78 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000863c:	e3a050a8 	mov	r5, #168	; 0xa8
40008640:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008644:	e59f00bc 	ldr	r0, [pc, #188]	; 40008708 <CyFxApplicationDefine+0x188>
40008648:	e59f10bc 	ldr	r1, [pc, #188]	; 4000870c <CyFxApplicationDefine+0x18c>
4000864c:	e59f20bc 	ldr	r2, [pc, #188]	; 40008710 <CyFxApplicationDefine+0x190>
40008650:	e1a03009 	mov	r3, r9
40008654:	e88d1400 	stm	sp, {sl, ip}
40008658:	e58d6008 	str	r6, [sp, #8]
4000865c:	e58d600c 	str	r6, [sp, #12]
40008660:	e58d9010 	str	r9, [sp, #16]
40008664:	e58d4014 	str	r4, [sp, #20]
40008668:	e58d5018 	str	r5, [sp, #24]
4000866c:	eb0007c7 	bl	4000a590 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008670:	e250c000 	subs	ip, r0, #0
40008674:	1affffd1 	bne	400085c0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
40008678:	e1a0300c 	mov	r3, ip
4000867c:	e3a07b02 	mov	r7, #2048	; 0x800
40008680:	e59f008c 	ldr	r0, [pc, #140]	; 40008714 <CyFxApplicationDefine+0x194>
40008684:	e59f108c 	ldr	r1, [pc, #140]	; 40008718 <CyFxApplicationDefine+0x198>
40008688:	e59f208c 	ldr	r2, [pc, #140]	; 4000871c <CyFxApplicationDefine+0x19c>
4000868c:	e58dc010 	str	ip, [sp, #16]
40008690:	e58db000 	str	fp, [sp]
40008694:	e58d7004 	str	r7, [sp, #4]
40008698:	e58d6008 	str	r6, [sp, #8]
4000869c:	e58d600c 	str	r6, [sp, #12]
400086a0:	e58d4014 	str	r4, [sp, #20]
400086a4:	e58d5018 	str	r5, [sp, #24]
400086a8:	eb0007b8 	bl	4000a590 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400086ac:	e250c000 	subs	ip, r0, #0
400086b0:	1affffc2 	bne	400085c0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400086b4:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400086b8:	e59f0060 	ldr	r0, [pc, #96]	; 40008720 <CyFxApplicationDefine+0x1a0>
400086bc:	e59f1060 	ldr	r1, [pc, #96]	; 40008724 <CyFxApplicationDefine+0x1a4>
400086c0:	e59f2060 	ldr	r2, [pc, #96]	; 40008728 <CyFxApplicationDefine+0x1a8>
400086c4:	e1a0300c 	mov	r3, ip
400086c8:	e58de000 	str	lr, [sp]
400086cc:	e58d7004 	str	r7, [sp, #4]
400086d0:	e58d6008 	str	r6, [sp, #8]
400086d4:	e58d600c 	str	r6, [sp, #12]
400086d8:	e58dc010 	str	ip, [sp, #16]
400086dc:	e58d4014 	str	r4, [sp, #20]
400086e0:	e58d5018 	str	r5, [sp, #24]
400086e4:	eb0007a9 	bl	4000a590 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400086e8:	e3500000 	cmp	r0, #0
400086ec:	1affffb3 	bne	400085c0 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
400086f0:	e28dd04c 	add	sp, sp, #76	; 0x4c
400086f4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400086f8:	40033554 	.word	0x40033554
400086fc:	40033344 	.word	0x40033344
40008700:	40033590 	.word	0x40033590
40008704:	40033478 	.word	0x40033478
40008708:	400314b0 	.word	0x400314b0
4000870c:	40011dd0 	.word	0x40011dd0
40008710:	40007968 	.word	0x40007968
40008714:	40031558 	.word	0x40031558
40008718:	40011de4 	.word	0x40011de4
4000871c:	40006b80 	.word	0x40006b80
40008720:	40031600 	.word	0x40031600
40008724:	40011dfc 	.word	0x40011dfc
40008728:	400047c4 	.word	0x400047c4

4000872c <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
4000872c:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008730:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008734:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
40008738:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000873c:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008740:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008744:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008748:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
4000874c:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008750:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008754:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
40008758:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000875c:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008760:	eb0027ae 	bl	40012620 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008764:	e2504000 	subs	r4, r0, #0
40008768:	0a000000 	beq	40008770 <main+0x44>
4000876c:	eafffffe 	b	4000876c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
40008770:	e1a01004 	mov	r1, r4
40008774:	e1a02004 	mov	r2, r4
40008778:	e1a00005 	mov	r0, r5
4000877c:	eb002781 	bl	40012588 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008780:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008784:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008788:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
4000878c:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008790:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008794:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008798:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
4000879c:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400087a0:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400087a4:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400087a8:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400087ac:	eb002945 	bl	40012cc8 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400087b0:	e2504000 	subs	r4, r0, #0
400087b4:	1affffec 	bne	4000876c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400087b8:	eb000002 	bl	400087c8 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400087bc:	e1a00004 	mov	r0, r4
400087c0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400087c4:	e8bd8030 	pop	{r4, r5, pc}

400087c8 <_tx_initialize_kernel_enter>:
400087c8:	e92d4010 	push	{r4, lr}
400087cc:	e59f004c 	ldr	r0, [pc, #76]	; 40008820 <_tx_initialize_kernel_enter+0x58>
400087d0:	e5900000 	ldr	r0, [r0]
400087d4:	e59f1048 	ldr	r1, [pc, #72]	; 40008824 <_tx_initialize_kernel_enter+0x5c>
400087d8:	e1500001 	cmp	r0, r1
400087dc:	0a000004 	beq	400087f4 <_tx_initialize_kernel_enter+0x2c>
400087e0:	e1e00221 	mvn	r0, r1, lsr #4
400087e4:	e59f1034 	ldr	r1, [pc, #52]	; 40008820 <_tx_initialize_kernel_enter+0x58>
400087e8:	e5810000 	str	r0, [r1]
400087ec:	eb0009ee 	bl	4000afac <_tx_initialize_low_level>
400087f0:	eb00105f 	bl	4000c974 <_tx_initialize_high_level>
400087f4:	e59f002c 	ldr	r0, [pc, #44]	; 40008828 <_tx_initialize_kernel_enter+0x60>
400087f8:	e59f1020 	ldr	r1, [pc, #32]	; 40008820 <_tx_initialize_kernel_enter+0x58>
400087fc:	e5810000 	str	r0, [r1]
40008800:	e59f0024 	ldr	r0, [pc, #36]	; 4000882c <_tx_initialize_kernel_enter+0x64>
40008804:	e5900000 	ldr	r0, [r0]
40008808:	ebffeb85 	bl	40003624 <tx_application_define>
4000880c:	e3a00000 	mov	r0, #0
40008810:	e59f1008 	ldr	r1, [pc, #8]	; 40008820 <_tx_initialize_kernel_enter+0x58>
40008814:	e5810000 	str	r0, [r1]
40008818:	eb00091f 	bl	4000ac9c <_tx_thread_schedule>
4000881c:	e8bd8010 	pop	{r4, pc}
40008820:	400312b8 	.word	0x400312b8
40008824:	f0f0f0f1 	.word	0xf0f0f0f1
40008828:	f0f0f0f0 	.word	0xf0f0f0f0
4000882c:	40031250 	.word	0x40031250

40008830 <_tx_thread_identify>:
40008830:	e10f1000 	mrs	r1, CPSR
40008834:	e3812080 	orr	r2, r1, #128	; 0x80
40008838:	e121f002 	msr	CPSR_c, r2
4000883c:	e59f30e0 	ldr	r3, [pc, #224]	; 40008924 <_tx_thread_identify+0xf4>
40008840:	e5930000 	ldr	r0, [r3]
40008844:	e3500000 	cmp	r0, #0
40008848:	0a000031 	beq	40008914 <_tx_thread_identify+0xe4>
4000884c:	e59f30d4 	ldr	r3, [pc, #212]	; 40008928 <_tx_thread_identify+0xf8>
40008850:	e5933000 	ldr	r3, [r3]
40008854:	e2833001 	add	r3, r3, #1
40008858:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008928 <_tx_thread_identify+0xf8>
4000885c:	e58c3000 	str	r3, [ip]
40008860:	e580300c 	str	r3, [r0, #12]
40008864:	e59f30c0 	ldr	r3, [pc, #192]	; 4000892c <_tx_thread_identify+0xfc>
40008868:	e5933000 	ldr	r3, [r3]
4000886c:	e3530000 	cmp	r3, #0
40008870:	1a000006 	bne	40008890 <_tx_thread_identify+0x60>
40008874:	e59f30b4 	ldr	r3, [pc, #180]	; 40008930 <_tx_thread_identify+0x100>
40008878:	e5933000 	ldr	r3, [r3]
4000887c:	e5803000 	str	r3, [r0]
40008880:	e5903000 	ldr	r3, [r0]
40008884:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008888:	e5803004 	str	r3, [r0, #4]
4000888c:	ea00000d 	b	400088c8 <_tx_thread_identify+0x98>
40008890:	e59f3094 	ldr	r3, [pc, #148]	; 4000892c <_tx_thread_identify+0xfc>
40008894:	e5933000 	ldr	r3, [r3]
40008898:	e59fc094 	ldr	ip, [pc, #148]	; 40008934 <_tx_thread_identify+0x104>
4000889c:	e153000c 	cmp	r3, ip
400088a0:	2a000004 	bcs	400088b8 <_tx_thread_identify+0x88>
400088a4:	e3e03000 	mvn	r3, #0
400088a8:	e5803000 	str	r3, [r0]
400088ac:	e3a03000 	mov	r3, #0
400088b0:	e5803004 	str	r3, [r0, #4]
400088b4:	ea000003 	b	400088c8 <_tx_thread_identify+0x98>
400088b8:	e59f3074 	ldr	r3, [pc, #116]	; 40008934 <_tx_thread_identify+0x104>
400088bc:	e5803000 	str	r3, [r0]
400088c0:	e3a03000 	mov	r3, #0
400088c4:	e5803004 	str	r3, [r0, #4]
400088c8:	e3a03067 	mov	r3, #103	; 0x67
400088cc:	e5803008 	str	r3, [r0, #8]
400088d0:	e3a03000 	mov	r3, #0
400088d4:	e5803010 	str	r3, [r0, #16]
400088d8:	e5803014 	str	r3, [r0, #20]
400088dc:	e5803018 	str	r3, [r0, #24]
400088e0:	e580301c 	str	r3, [r0, #28]
400088e4:	e2800020 	add	r0, r0, #32
400088e8:	e59f3048 	ldr	r3, [pc, #72]	; 40008938 <_tx_thread_identify+0x108>
400088ec:	e5933000 	ldr	r3, [r3]
400088f0:	e1500003 	cmp	r0, r3
400088f4:	3a000001 	bcc	40008900 <_tx_thread_identify+0xd0>
400088f8:	e59f303c 	ldr	r3, [pc, #60]	; 4000893c <_tx_thread_identify+0x10c>
400088fc:	e5930000 	ldr	r0, [r3]
40008900:	e59f301c 	ldr	r3, [pc, #28]	; 40008924 <_tx_thread_identify+0xf4>
40008904:	e5830000 	str	r0, [r3]
40008908:	e59f3030 	ldr	r3, [pc, #48]	; 40008940 <_tx_thread_identify+0x110>
4000890c:	e5933000 	ldr	r3, [r3]
40008910:	e5830020 	str	r0, [r3, #32]
40008914:	e121f001 	msr	CPSR_c, r1
40008918:	e59f0010 	ldr	r0, [pc, #16]	; 40008930 <_tx_thread_identify+0x100>
4000891c:	e5900000 	ldr	r0, [r0]
40008920:	e12fff1e 	bx	lr
40008924:	4003132c 	.word	0x4003132c
40008928:	40031330 	.word	0x40031330
4000892c:	400312b8 	.word	0x400312b8
40008930:	400312c0 	.word	0x400312c0
40008934:	f0f0f0f0 	.word	0xf0f0f0f0
40008938:	40031328 	.word	0x40031328
4000893c:	40031324 	.word	0x40031324
40008940:	40031318 	.word	0x40031318

40008944 <_tx_thread_initialize>:
40008944:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008948:	e3a00000 	mov	r0, #0
4000894c:	e59f10c0 	ldr	r1, [pc, #192]	; 40008a14 <_tx_thread_initialize+0xd0>
40008950:	e5810000 	str	r0, [r1]
40008954:	e59f10bc 	ldr	r1, [pc, #188]	; 40008a18 <_tx_thread_initialize+0xd4>
40008958:	e5810000 	str	r0, [r1]
4000895c:	e59f00b8 	ldr	r0, [pc, #184]	; 40008a1c <_tx_thread_initialize+0xd8>
40008960:	e3a01000 	mov	r1, #0
40008964:	e5801000 	str	r1, [r0]
40008968:	e59f00b0 	ldr	r0, [pc, #176]	; 40008a20 <_tx_thread_initialize+0xdc>
4000896c:	e5801000 	str	r1, [r0]
40008970:	e3a00020 	mov	r0, #32
40008974:	e59f10a8 	ldr	r1, [pc, #168]	; 40008a24 <_tx_thread_initialize+0xe0>
40008978:	e5810000 	str	r0, [r1]
4000897c:	e3a00000 	mov	r0, #0
40008980:	e59f10a0 	ldr	r1, [pc, #160]	; 40008a28 <_tx_thread_initialize+0xe4>
40008984:	e5c10000 	strb	r0, [r1]
40008988:	e2816001 	add	r6, r1, #1
4000898c:	e3a04001 	mov	r4, #1
40008990:	ea000009 	b	400089bc <_tx_thread_initialize+0x78>
40008994:	e1a07004 	mov	r7, r4
40008998:	e3a05000 	mov	r5, #0
4000899c:	ea000002 	b	400089ac <_tx_thread_initialize+0x68>
400089a0:	e1a070a7 	lsr	r7, r7, #1
400089a4:	e2850001 	add	r0, r5, #1
400089a8:	e20050ff 	and	r5, r0, #255	; 0xff
400089ac:	e3170001 	tst	r7, #1
400089b0:	0afffffa 	beq	400089a0 <_tx_thread_initialize+0x5c>
400089b4:	e4c65001 	strb	r5, [r6], #1
400089b8:	e2844001 	add	r4, r4, #1
400089bc:	e3540c01 	cmp	r4, #256	; 0x100
400089c0:	3afffff3 	bcc	40008994 <_tx_thread_initialize+0x50>
400089c4:	e3a01080 	mov	r1, #128	; 0x80
400089c8:	e59f005c 	ldr	r0, [pc, #92]	; 40008a2c <_tx_thread_initialize+0xe8>
400089cc:	eb002b71 	bl	40013798 <__aeabi_memclr4>
400089d0:	e3a00000 	mov	r0, #0
400089d4:	e59f1054 	ldr	r1, [pc, #84]	; 40008a30 <_tx_thread_initialize+0xec>
400089d8:	e5810000 	str	r0, [r1]
400089dc:	e59f1050 	ldr	r1, [pc, #80]	; 40008a34 <_tx_thread_initialize+0xf0>
400089e0:	e5810000 	str	r0, [r1]
400089e4:	e59f104c 	ldr	r1, [pc, #76]	; 40008a38 <_tx_thread_initialize+0xf4>
400089e8:	e5810000 	str	r0, [r1]
400089ec:	e59f1048 	ldr	r1, [pc, #72]	; 40008a3c <_tx_thread_initialize+0xf8>
400089f0:	e5810000 	str	r0, [r1]
400089f4:	e59f0044 	ldr	r0, [pc, #68]	; 40008a40 <_tx_thread_initialize+0xfc>
400089f8:	e5900000 	ldr	r0, [r0]
400089fc:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008a00:	e3800c01 	orr	r0, r0, #256	; 0x100
40008a04:	e3800002 	orr	r0, r0, #2
40008a08:	e59f1030 	ldr	r1, [pc, #48]	; 40008a40 <_tx_thread_initialize+0xfc>
40008a0c:	e5810000 	str	r0, [r1]
40008a10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008a14:	400312c0 	.word	0x400312c0
40008a18:	400312c4 	.word	0x400312c4
40008a1c:	400312d0 	.word	0x400312d0
40008a20:	400312d4 	.word	0x400312d4
40008a24:	400312d8 	.word	0x400312d8
40008a28:	40032bf4 	.word	0x40032bf4
40008a2c:	40032cf4 	.word	0x40032cf4
40008a30:	400312c8 	.word	0x400312c8
40008a34:	400312cc 	.word	0x400312cc
40008a38:	400312dc 	.word	0x400312dc
40008a3c:	400312e4 	.word	0x400312e4
40008a40:	400312e0 	.word	0x400312e0

40008a44 <_tx_thread_sleep>:
40008a44:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008a48:	e1a04000 	mov	r4, r0
40008a4c:	e59f018c 	ldr	r0, [pc, #396]	; 40008be0 <_tx_thread_sleep+0x19c>
40008a50:	e5900000 	ldr	r0, [r0]
40008a54:	e58d0000 	str	r0, [sp]
40008a58:	e59d0000 	ldr	r0, [sp]
40008a5c:	e3500000 	cmp	r0, #0
40008a60:	0a000007 	beq	40008a84 <_tx_thread_sleep+0x40>
40008a64:	e59f1178 	ldr	r1, [pc, #376]	; 40008be4 <_tx_thread_sleep+0x1a0>
40008a68:	e59d0000 	ldr	r0, [sp]
40008a6c:	e1500001 	cmp	r0, r1
40008a70:	0a000003 	beq	40008a84 <_tx_thread_sleep+0x40>
40008a74:	e59f016c 	ldr	r0, [pc, #364]	; 40008be8 <_tx_thread_sleep+0x1a4>
40008a78:	e5900000 	ldr	r0, [r0]
40008a7c:	e3500000 	cmp	r0, #0
40008a80:	0a000001 	beq	40008a8c <_tx_thread_sleep+0x48>
40008a84:	e3a00013 	mov	r0, #19
40008a88:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008a8c:	e3540000 	cmp	r4, #0
40008a90:	1a000001 	bne	40008a9c <_tx_thread_sleep+0x58>
40008a94:	e3a00000 	mov	r0, #0
40008a98:	eafffffa 	b	40008a88 <_tx_thread_sleep+0x44>
40008a9c:	e10f5000 	mrs	r5, CPSR
40008aa0:	e3856080 	orr	r6, r5, #128	; 0x80
40008aa4:	e121f006 	msr	CPSR_c, r6
40008aa8:	e59f113c 	ldr	r1, [pc, #316]	; 40008bec <_tx_thread_sleep+0x1a8>
40008aac:	e5910000 	ldr	r0, [r1]
40008ab0:	e3500000 	cmp	r0, #0
40008ab4:	0a000033 	beq	40008b88 <_tx_thread_sleep+0x144>
40008ab8:	e59f1130 	ldr	r1, [pc, #304]	; 40008bf0 <_tx_thread_sleep+0x1ac>
40008abc:	e5911000 	ldr	r1, [r1]
40008ac0:	e2811001 	add	r1, r1, #1
40008ac4:	e59f2124 	ldr	r2, [pc, #292]	; 40008bf0 <_tx_thread_sleep+0x1ac>
40008ac8:	e5821000 	str	r1, [r2]
40008acc:	e580100c 	str	r1, [r0, #12]
40008ad0:	e59f1110 	ldr	r1, [pc, #272]	; 40008be8 <_tx_thread_sleep+0x1a4>
40008ad4:	e5911000 	ldr	r1, [r1]
40008ad8:	e3510000 	cmp	r1, #0
40008adc:	1a000006 	bne	40008afc <_tx_thread_sleep+0xb8>
40008ae0:	e59f10f8 	ldr	r1, [pc, #248]	; 40008be0 <_tx_thread_sleep+0x19c>
40008ae4:	e5911000 	ldr	r1, [r1]
40008ae8:	e5801000 	str	r1, [r0]
40008aec:	e5901000 	ldr	r1, [r0]
40008af0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008af4:	e5801004 	str	r1, [r0, #4]
40008af8:	ea00000d 	b	40008b34 <_tx_thread_sleep+0xf0>
40008afc:	e59f10e4 	ldr	r1, [pc, #228]	; 40008be8 <_tx_thread_sleep+0x1a4>
40008b00:	e5911000 	ldr	r1, [r1]
40008b04:	e59f20e8 	ldr	r2, [pc, #232]	; 40008bf4 <_tx_thread_sleep+0x1b0>
40008b08:	e1510002 	cmp	r1, r2
40008b0c:	2a000004 	bcs	40008b24 <_tx_thread_sleep+0xe0>
40008b10:	e3e01000 	mvn	r1, #0
40008b14:	e5801000 	str	r1, [r0]
40008b18:	e3a01000 	mov	r1, #0
40008b1c:	e5801004 	str	r1, [r0, #4]
40008b20:	ea000003 	b	40008b34 <_tx_thread_sleep+0xf0>
40008b24:	e59f10c8 	ldr	r1, [pc, #200]	; 40008bf4 <_tx_thread_sleep+0x1b0>
40008b28:	e5801000 	str	r1, [r0]
40008b2c:	e3a01000 	mov	r1, #0
40008b30:	e5801004 	str	r1, [r0, #4]
40008b34:	e3a01070 	mov	r1, #112	; 0x70
40008b38:	e5801008 	str	r1, [r0, #8]
40008b3c:	e5804010 	str	r4, [r0, #16]
40008b40:	e59d1000 	ldr	r1, [sp]
40008b44:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008b48:	e5801014 	str	r1, [r0, #20]
40008b4c:	e580d018 	str	sp, [r0, #24]
40008b50:	e3a01000 	mov	r1, #0
40008b54:	e580101c 	str	r1, [r0, #28]
40008b58:	e2800020 	add	r0, r0, #32
40008b5c:	e59f1094 	ldr	r1, [pc, #148]	; 40008bf8 <_tx_thread_sleep+0x1b4>
40008b60:	e5911000 	ldr	r1, [r1]
40008b64:	e1500001 	cmp	r0, r1
40008b68:	3a000001 	bcc	40008b74 <_tx_thread_sleep+0x130>
40008b6c:	e59f1088 	ldr	r1, [pc, #136]	; 40008bfc <_tx_thread_sleep+0x1b8>
40008b70:	e5910000 	ldr	r0, [r1]
40008b74:	e59f1070 	ldr	r1, [pc, #112]	; 40008bec <_tx_thread_sleep+0x1a8>
40008b78:	e5810000 	str	r0, [r1]
40008b7c:	e59f107c 	ldr	r1, [pc, #124]	; 40008c00 <_tx_thread_sleep+0x1bc>
40008b80:	e5911000 	ldr	r1, [r1]
40008b84:	e5810020 	str	r0, [r1, #32]
40008b88:	e3a00004 	mov	r0, #4
40008b8c:	e59d1000 	ldr	r1, [sp]
40008b90:	e5810030 	str	r0, [r1, #48]	; 0x30
40008b94:	e3a00001 	mov	r0, #1
40008b98:	e59d1000 	ldr	r1, [sp]
40008b9c:	e5810038 	str	r0, [r1, #56]	; 0x38
40008ba0:	e3a00000 	mov	r0, #0
40008ba4:	e59d1000 	ldr	r1, [sp]
40008ba8:	e5810084 	str	r0, [r1, #132]	; 0x84
40008bac:	e59d0000 	ldr	r0, [sp]
40008bb0:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008bb4:	e59f0048 	ldr	r0, [pc, #72]	; 40008c04 <_tx_thread_sleep+0x1c0>
40008bb8:	e5900000 	ldr	r0, [r0]
40008bbc:	e2800001 	add	r0, r0, #1
40008bc0:	e59f103c 	ldr	r1, [pc, #60]	; 40008c04 <_tx_thread_sleep+0x1c0>
40008bc4:	e5810000 	str	r0, [r1]
40008bc8:	e121f005 	msr	CPSR_c, r5
40008bcc:	e59d0000 	ldr	r0, [sp]
40008bd0:	eb00000c 	bl	40008c08 <_tx_thread_system_suspend>
40008bd4:	e59d0000 	ldr	r0, [sp]
40008bd8:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008bdc:	eaffffa9 	b	40008a88 <_tx_thread_sleep+0x44>
40008be0:	400312c0 	.word	0x400312c0
40008be4:	40032df4 	.word	0x40032df4
40008be8:	400312b8 	.word	0x400312b8
40008bec:	4003132c 	.word	0x4003132c
40008bf0:	40031330 	.word	0x40031330
40008bf4:	f0f0f0f0 	.word	0xf0f0f0f0
40008bf8:	40031328 	.word	0x40031328
40008bfc:	40031324 	.word	0x40031324
40008c00:	40031318 	.word	0x40031318
40008c04:	400312dc 	.word	0x400312dc

40008c08 <_tx_thread_system_suspend>:
40008c08:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008c0c:	e1a04000 	mov	r4, r0
40008c10:	e3a0b000 	mov	fp, #0
40008c14:	e59f05b0 	ldr	r0, [pc, #1456]	; 400091cc <_tx_thread_system_suspend+0x5c4>
40008c18:	e5900000 	ldr	r0, [r0]
40008c1c:	e1540000 	cmp	r4, r0
40008c20:	1a000009 	bne	40008c4c <_tx_thread_system_suspend+0x44>
40008c24:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008c28:	e58d0000 	str	r0, [sp]
40008c2c:	e59d0000 	ldr	r0, [sp]
40008c30:	e3500000 	cmp	r0, #0
40008c34:	0a000004 	beq	40008c4c <_tx_thread_system_suspend+0x44>
40008c38:	e59d0000 	ldr	r0, [sp]
40008c3c:	e3700001 	cmn	r0, #1
40008c40:	0a000001 	beq	40008c4c <_tx_thread_system_suspend+0x44>
40008c44:	e284004c 	add	r0, r4, #76	; 0x4c
40008c48:	eb00020a 	bl	40009478 <_tx_timer_system_activate>
40008c4c:	e5940008 	ldr	r0, [r4, #8]
40008c50:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008c54:	e1500001 	cmp	r0, r1
40008c58:	2a000001 	bcs	40008c64 <_tx_thread_system_suspend+0x5c>
40008c5c:	e5940008 	ldr	r0, [r4, #8]
40008c60:	e5840040 	str	r0, [r4, #64]	; 0x40
40008c64:	e594000c 	ldr	r0, [r4, #12]
40008c68:	e5900000 	ldr	r0, [r0]
40008c6c:	e59f155c 	ldr	r1, [pc, #1372]	; 400091d0 <_tx_thread_system_suspend+0x5c8>
40008c70:	e1500001 	cmp	r0, r1
40008c74:	1a000007 	bne	40008c98 <_tx_thread_system_suspend+0x90>
40008c78:	e5940010 	ldr	r0, [r4, #16]
40008c7c:	e5900001 	ldr	r0, [r0, #1]
40008c80:	e1500001 	cmp	r0, r1
40008c84:	1a000003 	bne	40008c98 <_tx_thread_system_suspend+0x90>
40008c88:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008c8c:	e594100c 	ldr	r1, [r4, #12]
40008c90:	e1500001 	cmp	r0, r1
40008c94:	2a000001 	bcs	40008ca0 <_tx_thread_system_suspend+0x98>
40008c98:	e1a00004 	mov	r0, r4
40008c9c:	eb001941 	bl	4000f1a8 <_tx_thread_stack_error_handler>
40008ca0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ca4:	e5100004 	ldr	r0, [r0, #-4]
40008ca8:	e59f1520 	ldr	r1, [pc, #1312]	; 400091d0 <_tx_thread_system_suspend+0x5c8>
40008cac:	e1500001 	cmp	r0, r1
40008cb0:	0a000001 	beq	40008cbc <_tx_thread_system_suspend+0xb4>
40008cb4:	e1a00004 	mov	r0, r4
40008cb8:	eb001905 	bl	4000f0d4 <_tx_thread_stack_analyze>
40008cbc:	e10f5000 	mrs	r5, CPSR
40008cc0:	e3856080 	orr	r6, r5, #128	; 0x80
40008cc4:	e121f006 	msr	CPSR_c, r6
40008cc8:	e59f0504 	ldr	r0, [pc, #1284]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
40008ccc:	e5900000 	ldr	r0, [r0]
40008cd0:	e2400001 	sub	r0, r0, #1
40008cd4:	e59f14f8 	ldr	r1, [pc, #1272]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
40008cd8:	e5810000 	str	r0, [r1]
40008cdc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008ce0:	e3500000 	cmp	r0, #0
40008ce4:	0a000112 	beq	40009134 <_tx_thread_system_suspend+0x52c>
40008ce8:	e59f04e8 	ldr	r0, [pc, #1256]	; 400091d8 <_tx_thread_system_suspend+0x5d0>
40008cec:	e590a000 	ldr	sl, [r0]
40008cf0:	e2801000 	add	r1, r0, #0
40008cf4:	e5910000 	ldr	r0, [r1]
40008cf8:	e3500000 	cmp	r0, #0
40008cfc:	0a000034 	beq	40008dd4 <_tx_thread_system_suspend+0x1cc>
40008d00:	e59f14d4 	ldr	r1, [pc, #1236]	; 400091dc <_tx_thread_system_suspend+0x5d4>
40008d04:	e5911000 	ldr	r1, [r1]
40008d08:	e2811001 	add	r1, r1, #1
40008d0c:	e59f24c8 	ldr	r2, [pc, #1224]	; 400091dc <_tx_thread_system_suspend+0x5d4>
40008d10:	e5821000 	str	r1, [r2]
40008d14:	e580100c 	str	r1, [r0, #12]
40008d18:	e59f14c0 	ldr	r1, [pc, #1216]	; 400091e0 <_tx_thread_system_suspend+0x5d8>
40008d1c:	e5911000 	ldr	r1, [r1]
40008d20:	e3510000 	cmp	r1, #0
40008d24:	1a000006 	bne	40008d44 <_tx_thread_system_suspend+0x13c>
40008d28:	e59f149c 	ldr	r1, [pc, #1180]	; 400091cc <_tx_thread_system_suspend+0x5c4>
40008d2c:	e5911000 	ldr	r1, [r1]
40008d30:	e5801000 	str	r1, [r0]
40008d34:	e5901000 	ldr	r1, [r0]
40008d38:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008d3c:	e5801004 	str	r1, [r0, #4]
40008d40:	ea00000d 	b	40008d7c <_tx_thread_system_suspend+0x174>
40008d44:	e59f1494 	ldr	r1, [pc, #1172]	; 400091e0 <_tx_thread_system_suspend+0x5d8>
40008d48:	e5911000 	ldr	r1, [r1]
40008d4c:	e59f2490 	ldr	r2, [pc, #1168]	; 400091e4 <_tx_thread_system_suspend+0x5dc>
40008d50:	e1510002 	cmp	r1, r2
40008d54:	2a000004 	bcs	40008d6c <_tx_thread_system_suspend+0x164>
40008d58:	e3e01000 	mvn	r1, #0
40008d5c:	e5801000 	str	r1, [r0]
40008d60:	e3a01000 	mov	r1, #0
40008d64:	e5801004 	str	r1, [r0, #4]
40008d68:	ea000003 	b	40008d7c <_tx_thread_system_suspend+0x174>
40008d6c:	e59f1470 	ldr	r1, [pc, #1136]	; 400091e4 <_tx_thread_system_suspend+0x5dc>
40008d70:	e5801000 	str	r1, [r0]
40008d74:	e3a01000 	mov	r1, #0
40008d78:	e5801004 	str	r1, [r0, #4]
40008d7c:	e3a01002 	mov	r1, #2
40008d80:	e5801008 	str	r1, [r0, #8]
40008d84:	e5804010 	str	r4, [r0, #16]
40008d88:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008d8c:	e5801014 	str	r1, [r0, #20]
40008d90:	e28d1004 	add	r1, sp, #4
40008d94:	e5801018 	str	r1, [r0, #24]
40008d98:	e59f1448 	ldr	r1, [pc, #1096]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008d9c:	e5911000 	ldr	r1, [r1]
40008da0:	e580101c 	str	r1, [r0, #28]
40008da4:	e2800020 	add	r0, r0, #32
40008da8:	e59f143c 	ldr	r1, [pc, #1084]	; 400091ec <_tx_thread_system_suspend+0x5e4>
40008dac:	e5911000 	ldr	r1, [r1]
40008db0:	e1500001 	cmp	r0, r1
40008db4:	3a000001 	bcc	40008dc0 <_tx_thread_system_suspend+0x1b8>
40008db8:	e59f1430 	ldr	r1, [pc, #1072]	; 400091f0 <_tx_thread_system_suspend+0x5e8>
40008dbc:	e5910000 	ldr	r0, [r1]
40008dc0:	e59f1410 	ldr	r1, [pc, #1040]	; 400091d8 <_tx_thread_system_suspend+0x5d0>
40008dc4:	e5810000 	str	r0, [r1]
40008dc8:	e59f1424 	ldr	r1, [pc, #1060]	; 400091f4 <_tx_thread_system_suspend+0x5ec>
40008dcc:	e5911000 	ldr	r1, [r1]
40008dd0:	e5810020 	str	r0, [r1, #32]
40008dd4:	e35a0000 	cmp	sl, #0
40008dd8:	0a000000 	beq	40008de0 <_tx_thread_system_suspend+0x1d8>
40008ddc:	e59ab00c 	ldr	fp, [sl, #12]
40008de0:	e3a00000 	mov	r0, #0
40008de4:	e5840038 	str	r0, [r4, #56]	; 0x38
40008de8:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008dec:	e5940020 	ldr	r0, [r4, #32]
40008df0:	e1500004 	cmp	r0, r4
40008df4:	0a000029 	beq	40008ea0 <_tx_thread_system_suspend+0x298>
40008df8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008dfc:	e5941020 	ldr	r1, [r4, #32]
40008e00:	e5810024 	str	r0, [r1, #36]	; 0x24
40008e04:	e5940020 	ldr	r0, [r4, #32]
40008e08:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008e0c:	e5810020 	str	r0, [r1, #32]
40008e10:	e59f03e0 	ldr	r0, [pc, #992]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
40008e14:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008e18:	e1500004 	cmp	r0, r4
40008e1c:	1a0000c4 	bne	40009134 <_tx_thread_system_suspend+0x52c>
40008e20:	e59f13d0 	ldr	r1, [pc, #976]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
40008e24:	e5940020 	ldr	r0, [r4, #32]
40008e28:	e7810107 	str	r0, [r1, r7, lsl #2]
40008e2c:	e59f03c8 	ldr	r0, [pc, #968]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008e30:	e5900000 	ldr	r0, [r0]
40008e34:	e3500000 	cmp	r0, #0
40008e38:	0a000005 	beq	40008e54 <_tx_thread_system_suspend+0x24c>
40008e3c:	e59f03b8 	ldr	r0, [pc, #952]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008e40:	e5900000 	ldr	r0, [r0]
40008e44:	e3a01001 	mov	r1, #1
40008e48:	e1c00711 	bic	r0, r0, r1, lsl r7
40008e4c:	e59f13a8 	ldr	r1, [pc, #936]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008e50:	e5810000 	str	r0, [r1]
40008e54:	e59f038c 	ldr	r0, [pc, #908]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008e58:	e5900000 	ldr	r0, [r0]
40008e5c:	e1540000 	cmp	r4, r0
40008e60:	1a0000b3 	bne	40009134 <_tx_thread_system_suspend+0x52c>
40008e64:	e59f038c 	ldr	r0, [pc, #908]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
40008e68:	e59f1390 	ldr	r1, [pc, #912]	; 40009200 <_tx_thread_system_suspend+0x5f8>
40008e6c:	e5911000 	ldr	r1, [r1]
40008e70:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008e74:	e59f136c 	ldr	r1, [pc, #876]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008e78:	e5810000 	str	r0, [r1]
40008e7c:	e35a0000 	cmp	sl, #0
40008e80:	0a0000ab 	beq	40009134 <_tx_thread_system_suspend+0x52c>
40008e84:	e59a000c 	ldr	r0, [sl, #12]
40008e88:	e150000b 	cmp	r0, fp
40008e8c:	1a0000a8 	bne	40009134 <_tx_thread_system_suspend+0x52c>
40008e90:	e2810000 	add	r0, r1, #0
40008e94:	e5900000 	ldr	r0, [r0]
40008e98:	e58a001c 	str	r0, [sl, #28]
40008e9c:	ea0000a4 	b	40009134 <_tx_thread_system_suspend+0x52c>
40008ea0:	e3a00000 	mov	r0, #0
40008ea4:	e59f134c 	ldr	r1, [pc, #844]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
40008ea8:	e7810107 	str	r0, [r1, r7, lsl #2]
40008eac:	e59f0350 	ldr	r0, [pc, #848]	; 40009204 <_tx_thread_system_suspend+0x5fc>
40008eb0:	e5900000 	ldr	r0, [r0]
40008eb4:	e3a01001 	mov	r1, #1
40008eb8:	e1c00711 	bic	r0, r0, r1, lsl r7
40008ebc:	e59f1340 	ldr	r1, [pc, #832]	; 40009204 <_tx_thread_system_suspend+0x5fc>
40008ec0:	e5810000 	str	r0, [r1]
40008ec4:	e59f0330 	ldr	r0, [pc, #816]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008ec8:	e5900000 	ldr	r0, [r0]
40008ecc:	e3500000 	cmp	r0, #0
40008ed0:	0a000005 	beq	40008eec <_tx_thread_system_suspend+0x2e4>
40008ed4:	e59f0320 	ldr	r0, [pc, #800]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008ed8:	e5900000 	ldr	r0, [r0]
40008edc:	e3a01001 	mov	r1, #1
40008ee0:	e1c00711 	bic	r0, r0, r1, lsl r7
40008ee4:	e59f1310 	ldr	r1, [pc, #784]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40008ee8:	e5810000 	str	r0, [r1]
40008eec:	e3a08000 	mov	r8, #0
40008ef0:	e59f030c 	ldr	r0, [pc, #780]	; 40009204 <_tx_thread_system_suspend+0x5fc>
40008ef4:	e5909000 	ldr	r9, [r0]
40008ef8:	e20900ff 	and	r0, r9, #255	; 0xff
40008efc:	e58d0004 	str	r0, [sp, #4]
40008f00:	e59d0004 	ldr	r0, [sp, #4]
40008f04:	e3500000 	cmp	r0, #0
40008f08:	1a00002a 	bne	40008fb8 <_tx_thread_system_suspend+0x3b0>
40008f0c:	e1a09429 	lsr	r9, r9, #8
40008f10:	e20900ff 	and	r0, r9, #255	; 0xff
40008f14:	e58d0004 	str	r0, [sp, #4]
40008f18:	e2888008 	add	r8, r8, #8
40008f1c:	e59d0004 	ldr	r0, [sp, #4]
40008f20:	e3500000 	cmp	r0, #0
40008f24:	1a000023 	bne	40008fb8 <_tx_thread_system_suspend+0x3b0>
40008f28:	e1a09429 	lsr	r9, r9, #8
40008f2c:	e20900ff 	and	r0, r9, #255	; 0xff
40008f30:	e58d0004 	str	r0, [sp, #4]
40008f34:	e2888008 	add	r8, r8, #8
40008f38:	e59d0004 	ldr	r0, [sp, #4]
40008f3c:	e3500000 	cmp	r0, #0
40008f40:	1a00001c 	bne	40008fb8 <_tx_thread_system_suspend+0x3b0>
40008f44:	e1a09429 	lsr	r9, r9, #8
40008f48:	e20900ff 	and	r0, r9, #255	; 0xff
40008f4c:	e58d0004 	str	r0, [sp, #4]
40008f50:	e2888008 	add	r8, r8, #8
40008f54:	e59d0004 	ldr	r0, [sp, #4]
40008f58:	e3500000 	cmp	r0, #0
40008f5c:	1a000015 	bne	40008fb8 <_tx_thread_system_suspend+0x3b0>
40008f60:	e3a00020 	mov	r0, #32
40008f64:	e59f1294 	ldr	r1, [pc, #660]	; 40009200 <_tx_thread_system_suspend+0x5f8>
40008f68:	e5810000 	str	r0, [r1]
40008f6c:	e3a00000 	mov	r0, #0
40008f70:	e59f1270 	ldr	r1, [pc, #624]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008f74:	e5810000 	str	r0, [r1]
40008f78:	e35a0000 	cmp	sl, #0
40008f7c:	0a000004 	beq	40008f94 <_tx_thread_system_suspend+0x38c>
40008f80:	e59a000c 	ldr	r0, [sl, #12]
40008f84:	e150000b 	cmp	r0, fp
40008f88:	1a000001 	bne	40008f94 <_tx_thread_system_suspend+0x38c>
40008f8c:	e3a00000 	mov	r0, #0
40008f90:	e58a001c 	str	r0, [sl, #28]
40008f94:	e121f005 	msr	CPSR_c, r5
40008f98:	e59f0240 	ldr	r0, [pc, #576]	; 400091e0 <_tx_thread_system_suspend+0x5d8>
40008f9c:	e5900000 	ldr	r0, [r0]
40008fa0:	e59f122c 	ldr	r1, [pc, #556]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
40008fa4:	e5911000 	ldr	r1, [r1]
40008fa8:	e1900001 	orrs	r0, r0, r1
40008fac:	1a000000 	bne	40008fb4 <_tx_thread_system_suspend+0x3ac>
40008fb0:	eb000725 	bl	4000ac4c <_tx_thread_system_return>
40008fb4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008fb8:	e59f0248 	ldr	r0, [pc, #584]	; 40009208 <_tx_thread_system_suspend+0x600>
40008fbc:	e59d1004 	ldr	r1, [sp, #4]
40008fc0:	e7d00001 	ldrb	r0, [r0, r1]
40008fc4:	e0800008 	add	r0, r0, r8
40008fc8:	e59f1230 	ldr	r1, [pc, #560]	; 40009200 <_tx_thread_system_suspend+0x5f8>
40008fcc:	e5810000 	str	r0, [r1]
40008fd0:	e59f0210 	ldr	r0, [pc, #528]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008fd4:	e5900000 	ldr	r0, [r0]
40008fd8:	e1540000 	cmp	r4, r0
40008fdc:	1a000054 	bne	40009134 <_tx_thread_system_suspend+0x52c>
40008fe0:	e59f0210 	ldr	r0, [pc, #528]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
40008fe4:	e5911000 	ldr	r1, [r1]
40008fe8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008fec:	e59f11f4 	ldr	r1, [pc, #500]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40008ff0:	e5810000 	str	r0, [r1]
40008ff4:	e35a0000 	cmp	sl, #0
40008ff8:	0a000005 	beq	40009014 <_tx_thread_system_suspend+0x40c>
40008ffc:	e59a000c 	ldr	r0, [sl, #12]
40009000:	e150000b 	cmp	r0, fp
40009004:	1a000002 	bne	40009014 <_tx_thread_system_suspend+0x40c>
40009008:	e2810000 	add	r0, r1, #0
4000900c:	e5900000 	ldr	r0, [r0]
40009010:	e58a001c 	str	r0, [sl, #28]
40009014:	e59f01e0 	ldr	r0, [pc, #480]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40009018:	e5900000 	ldr	r0, [r0]
4000901c:	e3500000 	cmp	r0, #0
40009020:	0a000043 	beq	40009134 <_tx_thread_system_suspend+0x52c>
40009024:	e59f01a8 	ldr	r0, [pc, #424]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
40009028:	e5900000 	ldr	r0, [r0]
4000902c:	e2800001 	add	r0, r0, #1
40009030:	e59f119c 	ldr	r1, [pc, #412]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
40009034:	e5810000 	str	r0, [r1]
40009038:	e121f005 	msr	CPSR_c, r5
4000903c:	e10f5000 	mrs	r5, CPSR
40009040:	e3856080 	orr	r6, r5, #128	; 0x80
40009044:	e121f006 	msr	CPSR_c, r6
40009048:	e2810000 	add	r0, r1, #0
4000904c:	e5900000 	ldr	r0, [r0]
40009050:	e2400001 	sub	r0, r0, #1
40009054:	e5810000 	str	r0, [r1]
40009058:	e3a08000 	mov	r8, #0
4000905c:	e59f0198 	ldr	r0, [pc, #408]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40009060:	e5909000 	ldr	r9, [r0]
40009064:	e20900ff 	and	r0, r9, #255	; 0xff
40009068:	e58d0004 	str	r0, [sp, #4]
4000906c:	e59d0004 	ldr	r0, [sp, #4]
40009070:	e3500000 	cmp	r0, #0
40009074:	1a000011 	bne	400090c0 <_tx_thread_system_suspend+0x4b8>
40009078:	e1a09429 	lsr	r9, r9, #8
4000907c:	e20900ff 	and	r0, r9, #255	; 0xff
40009080:	e58d0004 	str	r0, [sp, #4]
40009084:	e2888008 	add	r8, r8, #8
40009088:	e59d0004 	ldr	r0, [sp, #4]
4000908c:	e3500000 	cmp	r0, #0
40009090:	1a00000a 	bne	400090c0 <_tx_thread_system_suspend+0x4b8>
40009094:	e1a09429 	lsr	r9, r9, #8
40009098:	e20900ff 	and	r0, r9, #255	; 0xff
4000909c:	e58d0004 	str	r0, [sp, #4]
400090a0:	e2888008 	add	r8, r8, #8
400090a4:	e59d0004 	ldr	r0, [sp, #4]
400090a8:	e3500000 	cmp	r0, #0
400090ac:	1a000003 	bne	400090c0 <_tx_thread_system_suspend+0x4b8>
400090b0:	e1a09429 	lsr	r9, r9, #8
400090b4:	e20900ff 	and	r0, r9, #255	; 0xff
400090b8:	e58d0004 	str	r0, [sp, #4]
400090bc:	e2888008 	add	r8, r8, #8
400090c0:	e59f0140 	ldr	r0, [pc, #320]	; 40009208 <_tx_thread_system_suspend+0x600>
400090c4:	e59d1004 	ldr	r1, [sp, #4]
400090c8:	e7d00001 	ldrb	r0, [r0, r1]
400090cc:	e0807008 	add	r7, r0, r8
400090d0:	e59f0120 	ldr	r0, [pc, #288]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
400090d4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400090d8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
400090dc:	e59f111c 	ldr	r1, [pc, #284]	; 40009200 <_tx_thread_system_suspend+0x5f8>
400090e0:	e5911000 	ldr	r1, [r1]
400090e4:	e1500001 	cmp	r0, r1
400090e8:	8a000011 	bhi	40009134 <_tx_thread_system_suspend+0x52c>
400090ec:	e59f0104 	ldr	r0, [pc, #260]	; 400091f8 <_tx_thread_system_suspend+0x5f0>
400090f0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400090f4:	e59f10ec 	ldr	r1, [pc, #236]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
400090f8:	e5810000 	str	r0, [r1]
400090fc:	e35a0000 	cmp	sl, #0
40009100:	0a000005 	beq	4000911c <_tx_thread_system_suspend+0x514>
40009104:	e59a000c 	ldr	r0, [sl, #12]
40009108:	e150000b 	cmp	r0, fp
4000910c:	1a000002 	bne	4000911c <_tx_thread_system_suspend+0x514>
40009110:	e2810000 	add	r0, r1, #0
40009114:	e5900000 	ldr	r0, [r0]
40009118:	e58a001c 	str	r0, [sl, #28]
4000911c:	e59f00d8 	ldr	r0, [pc, #216]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40009120:	e5900000 	ldr	r0, [r0]
40009124:	e3a01001 	mov	r1, #1
40009128:	e1c00711 	bic	r0, r0, r1, lsl r7
4000912c:	e59f10c8 	ldr	r1, [pc, #200]	; 400091fc <_tx_thread_system_suspend+0x5f4>
40009130:	e5810000 	str	r0, [r1]
40009134:	e121f005 	msr	CPSR_c, r5
40009138:	e59f008c 	ldr	r0, [pc, #140]	; 400091cc <_tx_thread_system_suspend+0x5c4>
4000913c:	e5900000 	ldr	r0, [r0]
40009140:	e59f10a0 	ldr	r1, [pc, #160]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40009144:	e5911000 	ldr	r1, [r1]
40009148:	e1500001 	cmp	r0, r1
4000914c:	0a00001d 	beq	400091c8 <_tx_thread_system_suspend+0x5c0>
40009150:	e59f0090 	ldr	r0, [pc, #144]	; 400091e8 <_tx_thread_system_suspend+0x5e0>
40009154:	e5904000 	ldr	r4, [r0]
40009158:	e5940008 	ldr	r0, [r4, #8]
4000915c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009160:	e1500001 	cmp	r0, r1
40009164:	2a000001 	bcs	40009170 <_tx_thread_system_suspend+0x568>
40009168:	e5940008 	ldr	r0, [r4, #8]
4000916c:	e5840040 	str	r0, [r4, #64]	; 0x40
40009170:	e594000c 	ldr	r0, [r4, #12]
40009174:	e5900000 	ldr	r0, [r0]
40009178:	e59f1050 	ldr	r1, [pc, #80]	; 400091d0 <_tx_thread_system_suspend+0x5c8>
4000917c:	e1500001 	cmp	r0, r1
40009180:	1a000007 	bne	400091a4 <_tx_thread_system_suspend+0x59c>
40009184:	e5940010 	ldr	r0, [r4, #16]
40009188:	e5900001 	ldr	r0, [r0, #1]
4000918c:	e1500001 	cmp	r0, r1
40009190:	1a000003 	bne	400091a4 <_tx_thread_system_suspend+0x59c>
40009194:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009198:	e594100c 	ldr	r1, [r4, #12]
4000919c:	e1500001 	cmp	r0, r1
400091a0:	2a000001 	bcs	400091ac <_tx_thread_system_suspend+0x5a4>
400091a4:	e1a00004 	mov	r0, r4
400091a8:	eb0017fe 	bl	4000f1a8 <_tx_thread_stack_error_handler>
400091ac:	e59f002c 	ldr	r0, [pc, #44]	; 400091e0 <_tx_thread_system_suspend+0x5d8>
400091b0:	e5900000 	ldr	r0, [r0]
400091b4:	e59f1018 	ldr	r1, [pc, #24]	; 400091d4 <_tx_thread_system_suspend+0x5cc>
400091b8:	e5911000 	ldr	r1, [r1]
400091bc:	e1900001 	orrs	r0, r0, r1
400091c0:	1a000000 	bne	400091c8 <_tx_thread_system_suspend+0x5c0>
400091c4:	eb0006a0 	bl	4000ac4c <_tx_thread_system_return>
400091c8:	eaffff79 	b	40008fb4 <_tx_thread_system_suspend+0x3ac>
400091cc:	400312c0 	.word	0x400312c0
400091d0:	efefefef 	.word	0xefefefef
400091d4:	400312dc 	.word	0x400312dc
400091d8:	4003132c 	.word	0x4003132c
400091dc:	40031330 	.word	0x40031330
400091e0:	400312b8 	.word	0x400312b8
400091e4:	f0f0f0f0 	.word	0xf0f0f0f0
400091e8:	400312c4 	.word	0x400312c4
400091ec:	40031328 	.word	0x40031328
400091f0:	40031324 	.word	0x40031324
400091f4:	40031318 	.word	0x40031318
400091f8:	40032cf4 	.word	0x40032cf4
400091fc:	400312d4 	.word	0x400312d4
40009200:	400312d8 	.word	0x400312d8
40009204:	400312d0 	.word	0x400312d0
40009208:	40032bf4 	.word	0x40032bf4

4000920c <_tx_time_get>:
4000920c:	e92d4008 	push	{r3, lr}
40009210:	e10f1000 	mrs	r1, CPSR
40009214:	e3812080 	orr	r2, r1, #128	; 0x80
40009218:	e121f002 	msr	CPSR_c, r2
4000921c:	e59f00ec 	ldr	r0, [pc, #236]	; 40009310 <_tx_time_get+0x104>
40009220:	e5900000 	ldr	r0, [r0]
40009224:	e58d0000 	str	r0, [sp]
40009228:	e59f30e4 	ldr	r3, [pc, #228]	; 40009314 <_tx_time_get+0x108>
4000922c:	e5930000 	ldr	r0, [r3]
40009230:	e3500000 	cmp	r0, #0
40009234:	0a000032 	beq	40009304 <_tx_time_get+0xf8>
40009238:	e59f30d8 	ldr	r3, [pc, #216]	; 40009318 <_tx_time_get+0x10c>
4000923c:	e5933000 	ldr	r3, [r3]
40009240:	e2833001 	add	r3, r3, #1
40009244:	e59fc0cc 	ldr	ip, [pc, #204]	; 40009318 <_tx_time_get+0x10c>
40009248:	e58c3000 	str	r3, [ip]
4000924c:	e580300c 	str	r3, [r0, #12]
40009250:	e59f30c4 	ldr	r3, [pc, #196]	; 4000931c <_tx_time_get+0x110>
40009254:	e5933000 	ldr	r3, [r3]
40009258:	e3530000 	cmp	r3, #0
4000925c:	1a000006 	bne	4000927c <_tx_time_get+0x70>
40009260:	e59f30b8 	ldr	r3, [pc, #184]	; 40009320 <_tx_time_get+0x114>
40009264:	e5933000 	ldr	r3, [r3]
40009268:	e5803000 	str	r3, [r0]
4000926c:	e5903000 	ldr	r3, [r0]
40009270:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40009274:	e5803004 	str	r3, [r0, #4]
40009278:	ea00000d 	b	400092b4 <_tx_time_get+0xa8>
4000927c:	e59f3098 	ldr	r3, [pc, #152]	; 4000931c <_tx_time_get+0x110>
40009280:	e5933000 	ldr	r3, [r3]
40009284:	e59fc098 	ldr	ip, [pc, #152]	; 40009324 <_tx_time_get+0x118>
40009288:	e153000c 	cmp	r3, ip
4000928c:	2a000004 	bcs	400092a4 <_tx_time_get+0x98>
40009290:	e3e03000 	mvn	r3, #0
40009294:	e5803000 	str	r3, [r0]
40009298:	e3a03000 	mov	r3, #0
4000929c:	e5803004 	str	r3, [r0, #4]
400092a0:	ea000003 	b	400092b4 <_tx_time_get+0xa8>
400092a4:	e59f3078 	ldr	r3, [pc, #120]	; 40009324 <_tx_time_get+0x118>
400092a8:	e5803000 	str	r3, [r0]
400092ac:	e3a03000 	mov	r3, #0
400092b0:	e5803004 	str	r3, [r0, #4]
400092b4:	e3a03078 	mov	r3, #120	; 0x78
400092b8:	e5803008 	str	r3, [r0, #8]
400092bc:	e59d3000 	ldr	r3, [sp]
400092c0:	e5803010 	str	r3, [r0, #16]
400092c4:	e580d014 	str	sp, [r0, #20]
400092c8:	e3a03000 	mov	r3, #0
400092cc:	e5803018 	str	r3, [r0, #24]
400092d0:	e580301c 	str	r3, [r0, #28]
400092d4:	e2800020 	add	r0, r0, #32
400092d8:	e59f3048 	ldr	r3, [pc, #72]	; 40009328 <_tx_time_get+0x11c>
400092dc:	e5933000 	ldr	r3, [r3]
400092e0:	e1500003 	cmp	r0, r3
400092e4:	3a000001 	bcc	400092f0 <_tx_time_get+0xe4>
400092e8:	e59f303c 	ldr	r3, [pc, #60]	; 4000932c <_tx_time_get+0x120>
400092ec:	e5930000 	ldr	r0, [r3]
400092f0:	e59f301c 	ldr	r3, [pc, #28]	; 40009314 <_tx_time_get+0x108>
400092f4:	e5830000 	str	r0, [r3]
400092f8:	e59f3030 	ldr	r3, [pc, #48]	; 40009330 <_tx_time_get+0x124>
400092fc:	e5933000 	ldr	r3, [r3]
40009300:	e5830020 	str	r0, [r3, #32]
40009304:	e121f001 	msr	CPSR_c, r1
40009308:	e59d0000 	ldr	r0, [sp]
4000930c:	e8bd8008 	pop	{r3, pc}
40009310:	400312e8 	.word	0x400312e8
40009314:	4003132c 	.word	0x4003132c
40009318:	40031330 	.word	0x40031330
4000931c:	400312b8 	.word	0x400312b8
40009320:	400312c0 	.word	0x400312c0
40009324:	f0f0f0f0 	.word	0xf0f0f0f0
40009328:	40031328 	.word	0x40031328
4000932c:	40031324 	.word	0x40031324
40009330:	40031318 	.word	0x40031318

40009334 <_tx_timer_initialize>:
40009334:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40009338:	e24dd01c 	sub	sp, sp, #28
4000933c:	e3a00000 	mov	r0, #0
40009340:	e59f10d8 	ldr	r1, [pc, #216]	; 40009420 <_tx_timer_initialize+0xec>
40009344:	e5810000 	str	r0, [r1]
40009348:	e59f10d4 	ldr	r1, [pc, #212]	; 40009424 <_tx_timer_initialize+0xf0>
4000934c:	e5810000 	str	r0, [r1]
40009350:	e59f10d0 	ldr	r1, [pc, #208]	; 40009428 <_tx_timer_initialize+0xf4>
40009354:	e5810000 	str	r0, [r1]
40009358:	e59f10cc 	ldr	r1, [pc, #204]	; 4000942c <_tx_timer_initialize+0xf8>
4000935c:	e5810000 	str	r0, [r1]
40009360:	e3a01080 	mov	r1, #128	; 0x80
40009364:	e59f00c4 	ldr	r0, [pc, #196]	; 40009430 <_tx_timer_initialize+0xfc>
40009368:	eb00290a 	bl	40013798 <__aeabi_memclr4>
4000936c:	e59f00bc 	ldr	r0, [pc, #188]	; 40009430 <_tx_timer_initialize+0xfc>
40009370:	e59f10bc 	ldr	r1, [pc, #188]	; 40009434 <_tx_timer_initialize+0x100>
40009374:	e5810000 	str	r0, [r1]
40009378:	e59f10b8 	ldr	r1, [pc, #184]	; 40009438 <_tx_timer_initialize+0x104>
4000937c:	e5810000 	str	r0, [r1]
40009380:	e280007c 	add	r0, r0, #124	; 0x7c
40009384:	e59f10b0 	ldr	r1, [pc, #176]	; 4000943c <_tx_timer_initialize+0x108>
40009388:	e5810000 	str	r0, [r1]
4000938c:	e2810000 	add	r0, r1, #0
40009390:	e5900000 	ldr	r0, [r0]
40009394:	e2800004 	add	r0, r0, #4
40009398:	e5810000 	str	r0, [r1]
4000939c:	e59f009c 	ldr	r0, [pc, #156]	; 40009440 <_tx_timer_initialize+0x10c>
400093a0:	e59f109c 	ldr	r1, [pc, #156]	; 40009444 <_tx_timer_initialize+0x110>
400093a4:	e5810000 	str	r0, [r1]
400093a8:	e3a00b01 	mov	r0, #1024	; 0x400
400093ac:	e59f1094 	ldr	r1, [pc, #148]	; 40009448 <_tx_timer_initialize+0x114>
400093b0:	e5810000 	str	r0, [r1]
400093b4:	e3a00000 	mov	r0, #0
400093b8:	e59f108c 	ldr	r1, [pc, #140]	; 4000944c <_tx_timer_initialize+0x118>
400093bc:	e5810000 	str	r0, [r1]
400093c0:	e3a03000 	mov	r3, #0
400093c4:	e2810000 	add	r0, r1, #0
400093c8:	e5901000 	ldr	r1, [r0]
400093cc:	e5900000 	ldr	r0, [r0]
400093d0:	e28d2008 	add	r2, sp, #8
400093d4:	e882000b 	stm	r2, {r0, r1, r3}
400093d8:	e59f0068 	ldr	r0, [pc, #104]	; 40009448 <_tx_timer_initialize+0x114>
400093dc:	e58d3014 	str	r3, [sp, #20]
400093e0:	e5903000 	ldr	r3, [r0]
400093e4:	e59f0058 	ldr	r0, [pc, #88]	; 40009444 <_tx_timer_initialize+0x110>
400093e8:	e5902000 	ldr	r2, [r0]
400093ec:	e1cd20f0 	strd	r2, [sp]
400093f0:	e59f3058 	ldr	r3, [pc, #88]	; 40009450 <_tx_timer_initialize+0x11c>
400093f4:	e59f2058 	ldr	r2, [pc, #88]	; 40009454 <_tx_timer_initialize+0x120>
400093f8:	e28f1058 	add	r1, pc, #88	; 0x58
400093fc:	e59f0068 	ldr	r0, [pc, #104]	; 4000946c <_tx_timer_initialize+0x138>
40009400:	eb00143b 	bl	4000e4f4 <_tx_thread_create>
40009404:	e3a00000 	mov	r0, #0
40009408:	e59f1060 	ldr	r1, [pc, #96]	; 40009470 <_tx_timer_initialize+0x13c>
4000940c:	e5810000 	str	r0, [r1]
40009410:	e59f105c 	ldr	r1, [pc, #92]	; 40009474 <_tx_timer_initialize+0x140>
40009414:	e5810000 	str	r0, [r1]
40009418:	e28dd01c 	add	sp, sp, #28
4000941c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009420:	400312e8 	.word	0x400312e8
40009424:	400312ec 	.word	0x400312ec
40009428:	400312f0 	.word	0x400312f0
4000942c:	40031300 	.word	0x40031300
40009430:	40032d74 	.word	0x40032d74
40009434:	400312f4 	.word	0x400312f4
40009438:	400312fc 	.word	0x400312fc
4000943c:	400312f8 	.word	0x400312f8
40009440:	40032e9c 	.word	0x40032e9c
40009444:	4003130c 	.word	0x4003130c
40009448:	40031310 	.word	0x40031310
4000944c:	40031314 	.word	0x40031314
40009450:	4154494d 	.word	0x4154494d
40009454:	40009564 	.word	0x40009564
40009458:	74737953 	.word	0x74737953
4000945c:	54206d65 	.word	0x54206d65
40009460:	72656d69 	.word	0x72656d69
40009464:	72685420 	.word	0x72685420
40009468:	00646165 	.word	0x00646165
4000946c:	40032df4 	.word	0x40032df4
40009470:	40031304 	.word	0x40031304
40009474:	40031308 	.word	0x40031308

40009478 <_tx_timer_system_activate>:
40009478:	e92d4010 	push	{r4, lr}
4000947c:	e1a01000 	mov	r1, r0
40009480:	e10f2000 	mrs	r2, CPSR
40009484:	e3823080 	orr	r3, r2, #128	; 0x80
40009488:	e121f003 	msr	CPSR_c, r3
4000948c:	e5910000 	ldr	r0, [r1]
40009490:	e3500000 	cmp	r0, #0
40009494:	0a00002c 	beq	4000954c <_tx_timer_system_activate+0xd4>
40009498:	e5910000 	ldr	r0, [r1]
4000949c:	e3700001 	cmn	r0, #1
400094a0:	0a000029 	beq	4000954c <_tx_timer_system_activate+0xd4>
400094a4:	e5910018 	ldr	r0, [r1, #24]
400094a8:	e3500000 	cmp	r0, #0
400094ac:	1a000026 	bne	4000954c <_tx_timer_system_activate+0xd4>
400094b0:	e5910000 	ldr	r0, [r1]
400094b4:	e3500020 	cmp	r0, #32
400094b8:	9a000001 	bls	400094c4 <_tx_timer_system_activate+0x4c>
400094bc:	e3a0e01f 	mov	lr, #31
400094c0:	ea000001 	b	400094cc <_tx_timer_system_activate+0x54>
400094c4:	e5910000 	ldr	r0, [r1]
400094c8:	e240e001 	sub	lr, r0, #1
400094cc:	e59f0084 	ldr	r0, [pc, #132]	; 40009558 <_tx_timer_system_activate+0xe0>
400094d0:	e5900000 	ldr	r0, [r0]
400094d4:	e080c10e 	add	ip, r0, lr, lsl #2
400094d8:	e59f007c 	ldr	r0, [pc, #124]	; 4000955c <_tx_timer_system_activate+0xe4>
400094dc:	e5900000 	ldr	r0, [r0]
400094e0:	e15c0000 	cmp	ip, r0
400094e4:	3a000006 	bcc	40009504 <_tx_timer_system_activate+0x8c>
400094e8:	e59f006c 	ldr	r0, [pc, #108]	; 4000955c <_tx_timer_system_activate+0xe4>
400094ec:	e5900000 	ldr	r0, [r0]
400094f0:	e04c0000 	sub	r0, ip, r0
400094f4:	e1a00140 	asr	r0, r0, #2
400094f8:	e59f4060 	ldr	r4, [pc, #96]	; 40009560 <_tx_timer_system_activate+0xe8>
400094fc:	e5944000 	ldr	r4, [r4]
40009500:	e084c100 	add	ip, r4, r0, lsl #2
40009504:	e59c0000 	ldr	r0, [ip]
40009508:	e3500000 	cmp	r0, #0
4000950c:	0a00000a 	beq	4000953c <_tx_timer_system_activate+0xc4>
40009510:	e59c0000 	ldr	r0, [ip]
40009514:	e5810010 	str	r0, [r1, #16]
40009518:	e59c0000 	ldr	r0, [ip]
4000951c:	e5900014 	ldr	r0, [r0, #20]
40009520:	e5810014 	str	r0, [r1, #20]
40009524:	e5910014 	ldr	r0, [r1, #20]
40009528:	e5801010 	str	r1, [r0, #16]
4000952c:	e59c0000 	ldr	r0, [ip]
40009530:	e5801014 	str	r1, [r0, #20]
40009534:	e581c018 	str	ip, [r1, #24]
40009538:	ea000003 	b	4000954c <_tx_timer_system_activate+0xd4>
4000953c:	e5811010 	str	r1, [r1, #16]
40009540:	e5811014 	str	r1, [r1, #20]
40009544:	e581c018 	str	ip, [r1, #24]
40009548:	e58c1000 	str	r1, [ip]
4000954c:	e121f002 	msr	CPSR_c, r2
40009550:	e3a00000 	mov	r0, #0
40009554:	e8bd8010 	pop	{r4, pc}
40009558:	400312fc 	.word	0x400312fc
4000955c:	400312f8 	.word	0x400312f8
40009560:	400312f4 	.word	0x400312f4

40009564 <_tx_timer_thread_entry>:
40009564:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40009568:	e1a04000 	mov	r4, r0
4000956c:	e3a09000 	mov	r9, #0
40009570:	e59f0214 	ldr	r0, [pc, #532]	; 4000978c <_tx_timer_thread_entry+0x228>
40009574:	e1540000 	cmp	r4, r0
40009578:	0a000000 	beq	40009580 <_tx_timer_thread_entry+0x1c>
4000957c:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009580:	e3a00000 	mov	r0, #0
40009584:	e58d0000 	str	r0, [sp]
40009588:	e1a00000 	nop			; (mov r0, r0)
4000958c:	e10f5000 	mrs	r5, CPSR
40009590:	e3856080 	orr	r6, r5, #128	; 0x80
40009594:	e121f006 	msr	CPSR_c, r6
40009598:	e59f01f0 	ldr	r0, [pc, #496]	; 40009790 <_tx_timer_thread_entry+0x22c>
4000959c:	e5900000 	ldr	r0, [r0]
400095a0:	e5900000 	ldr	r0, [r0]
400095a4:	e58d0004 	str	r0, [sp, #4]
400095a8:	e59d0004 	ldr	r0, [sp, #4]
400095ac:	e3500000 	cmp	r0, #0
400095b0:	0a000002 	beq	400095c0 <_tx_timer_thread_entry+0x5c>
400095b4:	e28d0004 	add	r0, sp, #4
400095b8:	e59d1004 	ldr	r1, [sp, #4]
400095bc:	e5810018 	str	r0, [r1, #24]
400095c0:	e3a00000 	mov	r0, #0
400095c4:	e59f11c4 	ldr	r1, [pc, #452]	; 40009790 <_tx_timer_thread_entry+0x22c>
400095c8:	e5911000 	ldr	r1, [r1]
400095cc:	e5810000 	str	r0, [r1]
400095d0:	e59f01b8 	ldr	r0, [pc, #440]	; 40009790 <_tx_timer_thread_entry+0x22c>
400095d4:	e5900000 	ldr	r0, [r0]
400095d8:	e2800004 	add	r0, r0, #4
400095dc:	e59f11ac 	ldr	r1, [pc, #428]	; 40009790 <_tx_timer_thread_entry+0x22c>
400095e0:	e5810000 	str	r0, [r1]
400095e4:	e2810000 	add	r0, r1, #0
400095e8:	e5900000 	ldr	r0, [r0]
400095ec:	e59f11a0 	ldr	r1, [pc, #416]	; 40009794 <_tx_timer_thread_entry+0x230>
400095f0:	e5911000 	ldr	r1, [r1]
400095f4:	e1500001 	cmp	r0, r1
400095f8:	1a000003 	bne	4000960c <_tx_timer_thread_entry+0xa8>
400095fc:	e59f0194 	ldr	r0, [pc, #404]	; 40009798 <_tx_timer_thread_entry+0x234>
40009600:	e5900000 	ldr	r0, [r0]
40009604:	e59f1184 	ldr	r1, [pc, #388]	; 40009790 <_tx_timer_thread_entry+0x22c>
40009608:	e5810000 	str	r0, [r1]
4000960c:	e3a00000 	mov	r0, #0
40009610:	e59f1184 	ldr	r1, [pc, #388]	; 4000979c <_tx_timer_thread_entry+0x238>
40009614:	e5810000 	str	r0, [r1]
40009618:	e121f005 	msr	CPSR_c, r5
4000961c:	e10f5000 	mrs	r5, CPSR
40009620:	e3856080 	orr	r6, r5, #128	; 0x80
40009624:	e121f006 	msr	CPSR_c, r6
40009628:	ea000040 	b	40009730 <_tx_timer_thread_entry+0x1cc>
4000962c:	e59d7004 	ldr	r7, [sp, #4]
40009630:	e59d0004 	ldr	r0, [sp, #4]
40009634:	e5900010 	ldr	r0, [r0, #16]
40009638:	e1500007 	cmp	r0, r7
4000963c:	1a000002 	bne	4000964c <_tx_timer_thread_entry+0xe8>
40009640:	e3a00000 	mov	r0, #0
40009644:	e58d0004 	str	r0, [sp, #4]
40009648:	ea00000a 	b	40009678 <_tx_timer_thread_entry+0x114>
4000964c:	e5970014 	ldr	r0, [r7, #20]
40009650:	e5971010 	ldr	r1, [r7, #16]
40009654:	e5810014 	str	r0, [r1, #20]
40009658:	e5970010 	ldr	r0, [r7, #16]
4000965c:	e5971014 	ldr	r1, [r7, #20]
40009660:	e5810010 	str	r0, [r1, #16]
40009664:	e28d0004 	add	r0, sp, #4
40009668:	e5971010 	ldr	r1, [r7, #16]
4000966c:	e5810018 	str	r0, [r1, #24]
40009670:	e5970010 	ldr	r0, [r7, #16]
40009674:	e58d0004 	str	r0, [sp, #4]
40009678:	e5970000 	ldr	r0, [r7]
4000967c:	e3500020 	cmp	r0, #32
40009680:	9a000006 	bls	400096a0 <_tx_timer_thread_entry+0x13c>
40009684:	e5970000 	ldr	r0, [r7]
40009688:	e2400020 	sub	r0, r0, #32
4000968c:	e5870000 	str	r0, [r7]
40009690:	e3a08000 	mov	r8, #0
40009694:	e587d018 	str	sp, [r7, #24]
40009698:	e5877010 	str	r7, [r7, #16]
4000969c:	ea00000b 	b	400096d0 <_tx_timer_thread_entry+0x16c>
400096a0:	e5978008 	ldr	r8, [r7, #8]
400096a4:	e597900c 	ldr	r9, [r7, #12]
400096a8:	e5970004 	ldr	r0, [r7, #4]
400096ac:	e5870000 	str	r0, [r7]
400096b0:	e5970000 	ldr	r0, [r7]
400096b4:	e3500000 	cmp	r0, #0
400096b8:	0a000002 	beq	400096c8 <_tx_timer_thread_entry+0x164>
400096bc:	e587d018 	str	sp, [r7, #24]
400096c0:	e5877010 	str	r7, [r7, #16]
400096c4:	ea000001 	b	400096d0 <_tx_timer_thread_entry+0x16c>
400096c8:	e3a00000 	mov	r0, #0
400096cc:	e5870018 	str	r0, [r7, #24]
400096d0:	e121f005 	msr	CPSR_c, r5
400096d4:	e3580000 	cmp	r8, #0
400096d8:	0a000001 	beq	400096e4 <_tx_timer_thread_entry+0x180>
400096dc:	e1a00009 	mov	r0, r9
400096e0:	e12fff38 	blx	r8
400096e4:	e10f5000 	mrs	r5, CPSR
400096e8:	e3856080 	orr	r6, r5, #128	; 0x80
400096ec:	e121f006 	msr	CPSR_c, r6
400096f0:	e1a0100d 	mov	r1, sp
400096f4:	e5970018 	ldr	r0, [r7, #24]
400096f8:	e1500001 	cmp	r0, r1
400096fc:	1a000007 	bne	40009720 <_tx_timer_thread_entry+0x1bc>
40009700:	e3a00000 	mov	r0, #0
40009704:	e5870018 	str	r0, [r7, #24]
40009708:	e121f005 	msr	CPSR_c, r5
4000970c:	e1a00007 	mov	r0, r7
40009710:	ebffff58 	bl	40009478 <_tx_timer_system_activate>
40009714:	e10f5000 	mrs	r5, CPSR
40009718:	e3856080 	orr	r6, r5, #128	; 0x80
4000971c:	e121f006 	msr	CPSR_c, r6
40009720:	e121f005 	msr	CPSR_c, r5
40009724:	e10f5000 	mrs	r5, CPSR
40009728:	e3856080 	orr	r6, r5, #128	; 0x80
4000972c:	e121f006 	msr	CPSR_c, r6
40009730:	e59d0004 	ldr	r0, [sp, #4]
40009734:	e3500000 	cmp	r0, #0
40009738:	1affffbb 	bne	4000962c <_tx_timer_thread_entry+0xc8>
4000973c:	e59f0058 	ldr	r0, [pc, #88]	; 4000979c <_tx_timer_thread_entry+0x238>
40009740:	e5900000 	ldr	r0, [r0]
40009744:	e3500000 	cmp	r0, #0
40009748:	1a00000d 	bne	40009784 <_tx_timer_thread_entry+0x220>
4000974c:	e59fa04c 	ldr	sl, [pc, #76]	; 400097a0 <_tx_timer_thread_entry+0x23c>
40009750:	e3a00003 	mov	r0, #3
40009754:	e58a0030 	str	r0, [sl, #48]	; 0x30
40009758:	e3a00001 	mov	r0, #1
4000975c:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009760:	e59f003c 	ldr	r0, [pc, #60]	; 400097a4 <_tx_timer_thread_entry+0x240>
40009764:	e5900000 	ldr	r0, [r0]
40009768:	e2800001 	add	r0, r0, #1
4000976c:	e59f1030 	ldr	r1, [pc, #48]	; 400097a4 <_tx_timer_thread_entry+0x240>
40009770:	e5810000 	str	r0, [r1]
40009774:	e121f005 	msr	CPSR_c, r5
40009778:	e1a0000a 	mov	r0, sl
4000977c:	ebfffd21 	bl	40008c08 <_tx_thread_system_suspend>
40009780:	ea000000 	b	40009788 <_tx_timer_thread_entry+0x224>
40009784:	e121f005 	msr	CPSR_c, r5
40009788:	eaffff7f 	b	4000958c <_tx_timer_thread_entry+0x28>
4000978c:	4154494d 	.word	0x4154494d
40009790:	400312fc 	.word	0x400312fc
40009794:	400312f8 	.word	0x400312f8
40009798:	400312f4 	.word	0x400312f4
4000979c:	40031300 	.word	0x40031300
400097a0:	40032df4 	.word	0x40032df4
400097a4:	400312dc 	.word	0x400312dc

400097a8 <_tx_trace_initialize>:
400097a8:	e3a00000 	mov	r0, #0
400097ac:	e59f102c 	ldr	r1, [pc, #44]	; 400097e0 <_tx_trace_initialize+0x38>
400097b0:	e5810000 	str	r0, [r1]
400097b4:	e59f1028 	ldr	r1, [pc, #40]	; 400097e4 <_tx_trace_initialize+0x3c>
400097b8:	e5810000 	str	r0, [r1]
400097bc:	e59f1024 	ldr	r1, [pc, #36]	; 400097e8 <_tx_trace_initialize+0x40>
400097c0:	e5810000 	str	r0, [r1]
400097c4:	e59f1020 	ldr	r1, [pc, #32]	; 400097ec <_tx_trace_initialize+0x44>
400097c8:	e5810000 	str	r0, [r1]
400097cc:	e59f101c 	ldr	r1, [pc, #28]	; 400097f0 <_tx_trace_initialize+0x48>
400097d0:	e5810000 	str	r0, [r1]
400097d4:	e59f1018 	ldr	r1, [pc, #24]	; 400097f4 <_tx_trace_initialize+0x4c>
400097d8:	e5810000 	str	r0, [r1]
400097dc:	e12fff1e 	bx	lr
400097e0:	40031318 	.word	0x40031318
400097e4:	4003131c 	.word	0x4003131c
400097e8:	40031320 	.word	0x40031320
400097ec:	40031324 	.word	0x40031324
400097f0:	40031328 	.word	0x40031328
400097f4:	4003132c 	.word	0x4003132c

400097f8 <_txe_byte_allocate>:
400097f8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400097fc:	e1a04000 	mov	r4, r0
40009800:	e1a05001 	mov	r5, r1
40009804:	e1a06002 	mov	r6, r2
40009808:	e1a07003 	mov	r7, r3
4000980c:	e3540000 	cmp	r4, #0
40009810:	0a000003 	beq	40009824 <_txe_byte_allocate+0x2c>
40009814:	e5940000 	ldr	r0, [r4]
40009818:	e59f10d4 	ldr	r1, [pc, #212]	; 400098f4 <_txe_byte_allocate+0xfc>
4000981c:	e1500001 	cmp	r0, r1
40009820:	0a000001 	beq	4000982c <_txe_byte_allocate+0x34>
40009824:	e3a00002 	mov	r0, #2
40009828:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000982c:	e3550000 	cmp	r5, #0
40009830:	1a000001 	bne	4000983c <_txe_byte_allocate+0x44>
40009834:	e3a00003 	mov	r0, #3
40009838:	eafffffa 	b	40009828 <_txe_byte_allocate+0x30>
4000983c:	e3560000 	cmp	r6, #0
40009840:	0a000002 	beq	40009850 <_txe_byte_allocate+0x58>
40009844:	e594001c 	ldr	r0, [r4, #28]
40009848:	e1500006 	cmp	r0, r6
4000984c:	2a000001 	bcs	40009858 <_txe_byte_allocate+0x60>
40009850:	e3a00005 	mov	r0, #5
40009854:	eafffff3 	b	40009828 <_txe_byte_allocate+0x30>
40009858:	e59f0098 	ldr	r0, [pc, #152]	; 400098f8 <_txe_byte_allocate+0x100>
4000985c:	e5908000 	ldr	r8, [r0]
40009860:	e3570000 	cmp	r7, #0
40009864:	0a000008 	beq	4000988c <_txe_byte_allocate+0x94>
40009868:	e59f008c 	ldr	r0, [pc, #140]	; 400098fc <_txe_byte_allocate+0x104>
4000986c:	e5900000 	ldr	r0, [r0]
40009870:	e3500000 	cmp	r0, #0
40009874:	1a000002 	bne	40009884 <_txe_byte_allocate+0x8c>
40009878:	e59f0080 	ldr	r0, [pc, #128]	; 40009900 <_txe_byte_allocate+0x108>
4000987c:	e1580000 	cmp	r8, r0
40009880:	1a000001 	bne	4000988c <_txe_byte_allocate+0x94>
40009884:	e3a00004 	mov	r0, #4
40009888:	eaffffe6 	b	40009828 <_txe_byte_allocate+0x30>
4000988c:	e3580000 	cmp	r8, #0
40009890:	0a000008 	beq	400098b8 <_txe_byte_allocate+0xc0>
40009894:	e59f0064 	ldr	r0, [pc, #100]	; 40009900 <_txe_byte_allocate+0x108>
40009898:	e1580000 	cmp	r8, r0
4000989c:	0a000003 	beq	400098b0 <_txe_byte_allocate+0xb8>
400098a0:	e59f0054 	ldr	r0, [pc, #84]	; 400098fc <_txe_byte_allocate+0x104>
400098a4:	e5900000 	ldr	r0, [r0]
400098a8:	e3500000 	cmp	r0, #0
400098ac:	0a000008 	beq	400098d4 <_txe_byte_allocate+0xdc>
400098b0:	e3a00013 	mov	r0, #19
400098b4:	eaffffdb 	b	40009828 <_txe_byte_allocate+0x30>
400098b8:	e59f003c 	ldr	r0, [pc, #60]	; 400098fc <_txe_byte_allocate+0x104>
400098bc:	e5900000 	ldr	r0, [r0]
400098c0:	e59f103c 	ldr	r1, [pc, #60]	; 40009904 <_txe_byte_allocate+0x10c>
400098c4:	e1500001 	cmp	r0, r1
400098c8:	2a000001 	bcs	400098d4 <_txe_byte_allocate+0xdc>
400098cc:	e3a00013 	mov	r0, #19
400098d0:	eaffffd4 	b	40009828 <_txe_byte_allocate+0x30>
400098d4:	e1a03007 	mov	r3, r7
400098d8:	e1a02006 	mov	r2, r6
400098dc:	e1a01005 	mov	r1, r5
400098e0:	e1a00004 	mov	r0, r4
400098e4:	eb0005bf 	bl	4000afe8 <_tx_byte_allocate>
400098e8:	e1a09000 	mov	r9, r0
400098ec:	e1a00009 	mov	r0, r9
400098f0:	eaffffcc 	b	40009828 <_txe_byte_allocate+0x30>
400098f4:	42595445 	.word	0x42595445
400098f8:	400312c0 	.word	0x400312c0
400098fc:	400312b8 	.word	0x400312b8
40009900:	40032df4 	.word	0x40032df4
40009904:	f0f0f0f0 	.word	0xf0f0f0f0

40009908 <_txe_byte_pool_create>:
40009908:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000990c:	e1a04000 	mov	r4, r0
40009910:	e1a05001 	mov	r5, r1
40009914:	e1a06002 	mov	r6, r2
40009918:	e1a07003 	mov	r7, r3
4000991c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009920:	e3540000 	cmp	r4, #0
40009924:	0a000001 	beq	40009930 <_txe_byte_pool_create+0x28>
40009928:	e3580034 	cmp	r8, #52	; 0x34
4000992c:	0a000001 	beq	40009938 <_txe_byte_pool_create+0x30>
40009930:	e3a00002 	mov	r0, #2
40009934:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009938:	e10f9000 	mrs	r9, CPSR
4000993c:	e389a080 	orr	sl, r9, #128	; 0x80
40009940:	e121f00a 	msr	CPSR_c, sl
40009944:	e59f0130 	ldr	r0, [pc, #304]	; 40009a7c <_txe_byte_pool_create+0x174>
40009948:	e5900000 	ldr	r0, [r0]
4000994c:	e2800001 	add	r0, r0, #1
40009950:	e59f1124 	ldr	r1, [pc, #292]	; 40009a7c <_txe_byte_pool_create+0x174>
40009954:	e5810000 	str	r0, [r1]
40009958:	e121f009 	msr	CPSR_c, r9
4000995c:	e59f011c 	ldr	r0, [pc, #284]	; 40009a80 <_txe_byte_pool_create+0x178>
40009960:	e5900000 	ldr	r0, [r0]
40009964:	e58d0004 	str	r0, [sp, #4]
40009968:	e3a0b000 	mov	fp, #0
4000996c:	ea000007 	b	40009990 <_txe_byte_pool_create+0x88>
40009970:	e59d0004 	ldr	r0, [sp, #4]
40009974:	e1540000 	cmp	r4, r0
40009978:	1a000000 	bne	40009980 <_txe_byte_pool_create+0x78>
4000997c:	ea000007 	b	400099a0 <_txe_byte_pool_create+0x98>
40009980:	e59d0004 	ldr	r0, [sp, #4]
40009984:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009988:	e58d0004 	str	r0, [sp, #4]
4000998c:	e28bb001 	add	fp, fp, #1
40009990:	e59f00ec 	ldr	r0, [pc, #236]	; 40009a84 <_txe_byte_pool_create+0x17c>
40009994:	e5900000 	ldr	r0, [r0]
40009998:	e15b0000 	cmp	fp, r0
4000999c:	3afffff3 	bcc	40009970 <_txe_byte_pool_create+0x68>
400099a0:	e1a00000 	nop			; (mov r0, r0)
400099a4:	e10f9000 	mrs	r9, CPSR
400099a8:	e389a080 	orr	sl, r9, #128	; 0x80
400099ac:	e121f00a 	msr	CPSR_c, sl
400099b0:	e59f00c4 	ldr	r0, [pc, #196]	; 40009a7c <_txe_byte_pool_create+0x174>
400099b4:	e5900000 	ldr	r0, [r0]
400099b8:	e2400001 	sub	r0, r0, #1
400099bc:	e59f10b8 	ldr	r1, [pc, #184]	; 40009a7c <_txe_byte_pool_create+0x174>
400099c0:	e5810000 	str	r0, [r1]
400099c4:	e121f009 	msr	CPSR_c, r9
400099c8:	eb001609 	bl	4000f1f4 <_tx_thread_system_preempt_check>
400099cc:	e59d0004 	ldr	r0, [sp, #4]
400099d0:	e1540000 	cmp	r4, r0
400099d4:	1a000001 	bne	400099e0 <_txe_byte_pool_create+0xd8>
400099d8:	e3a00002 	mov	r0, #2
400099dc:	eaffffd4 	b	40009934 <_txe_byte_pool_create+0x2c>
400099e0:	e3560000 	cmp	r6, #0
400099e4:	1a000001 	bne	400099f0 <_txe_byte_pool_create+0xe8>
400099e8:	e3a00003 	mov	r0, #3
400099ec:	eaffffd0 	b	40009934 <_txe_byte_pool_create+0x2c>
400099f0:	e3570064 	cmp	r7, #100	; 0x64
400099f4:	2a000001 	bcs	40009a00 <_txe_byte_pool_create+0xf8>
400099f8:	e3a00005 	mov	r0, #5
400099fc:	eaffffcc 	b	40009934 <_txe_byte_pool_create+0x2c>
40009a00:	e59f0080 	ldr	r0, [pc, #128]	; 40009a88 <_txe_byte_pool_create+0x180>
40009a04:	e5900000 	ldr	r0, [r0]
40009a08:	e58d0000 	str	r0, [sp]
40009a0c:	e59d0000 	ldr	r0, [sp]
40009a10:	e3500000 	cmp	r0, #0
40009a14:	0a000009 	beq	40009a40 <_txe_byte_pool_create+0x138>
40009a18:	e59f106c 	ldr	r1, [pc, #108]	; 40009a8c <_txe_byte_pool_create+0x184>
40009a1c:	e59d0000 	ldr	r0, [sp]
40009a20:	e1500001 	cmp	r0, r1
40009a24:	0a000003 	beq	40009a38 <_txe_byte_pool_create+0x130>
40009a28:	e59f0060 	ldr	r0, [pc, #96]	; 40009a90 <_txe_byte_pool_create+0x188>
40009a2c:	e5900000 	ldr	r0, [r0]
40009a30:	e3500000 	cmp	r0, #0
40009a34:	0a000008 	beq	40009a5c <_txe_byte_pool_create+0x154>
40009a38:	e3a00013 	mov	r0, #19
40009a3c:	eaffffbc 	b	40009934 <_txe_byte_pool_create+0x2c>
40009a40:	e59f0048 	ldr	r0, [pc, #72]	; 40009a90 <_txe_byte_pool_create+0x188>
40009a44:	e5900000 	ldr	r0, [r0]
40009a48:	e59f1044 	ldr	r1, [pc, #68]	; 40009a94 <_txe_byte_pool_create+0x18c>
40009a4c:	e1500001 	cmp	r0, r1
40009a50:	2a000001 	bcs	40009a5c <_txe_byte_pool_create+0x154>
40009a54:	e3a00013 	mov	r0, #19
40009a58:	eaffffb5 	b	40009934 <_txe_byte_pool_create+0x2c>
40009a5c:	e1a03007 	mov	r3, r7
40009a60:	e1a02006 	mov	r2, r6
40009a64:	e1a01005 	mov	r1, r5
40009a68:	e1a00004 	mov	r0, r4
40009a6c:	eb000643 	bl	4000b380 <_tx_byte_pool_create>
40009a70:	e58d0008 	str	r0, [sp, #8]
40009a74:	e59d0008 	ldr	r0, [sp, #8]
40009a78:	eaffffad 	b	40009934 <_txe_byte_pool_create+0x2c>
40009a7c:	400312dc 	.word	0x400312dc
40009a80:	4003135c 	.word	0x4003135c
40009a84:	40031360 	.word	0x40031360
40009a88:	400312c0 	.word	0x400312c0
40009a8c:	40032df4 	.word	0x40032df4
40009a90:	400312b8 	.word	0x400312b8
40009a94:	f0f0f0f0 	.word	0xf0f0f0f0

40009a98 <_txe_byte_pool_delete>:
40009a98:	e92d4070 	push	{r4, r5, r6, lr}
40009a9c:	e1a04000 	mov	r4, r0
40009aa0:	e3540000 	cmp	r4, #0
40009aa4:	0a000003 	beq	40009ab8 <_txe_byte_pool_delete+0x20>
40009aa8:	e5940000 	ldr	r0, [r4]
40009aac:	e59f1054 	ldr	r1, [pc, #84]	; 40009b08 <_txe_byte_pool_delete+0x70>
40009ab0:	e1500001 	cmp	r0, r1
40009ab4:	0a000001 	beq	40009ac0 <_txe_byte_pool_delete+0x28>
40009ab8:	e3a00002 	mov	r0, #2
40009abc:	e8bd8070 	pop	{r4, r5, r6, pc}
40009ac0:	e59f0044 	ldr	r0, [pc, #68]	; 40009b0c <_txe_byte_pool_delete+0x74>
40009ac4:	e5905000 	ldr	r5, [r0]
40009ac8:	e3550000 	cmp	r5, #0
40009acc:	0a000006 	beq	40009aec <_txe_byte_pool_delete+0x54>
40009ad0:	e59f0038 	ldr	r0, [pc, #56]	; 40009b10 <_txe_byte_pool_delete+0x78>
40009ad4:	e5900000 	ldr	r0, [r0]
40009ad8:	e3500000 	cmp	r0, #0
40009adc:	1a000002 	bne	40009aec <_txe_byte_pool_delete+0x54>
40009ae0:	e59f002c 	ldr	r0, [pc, #44]	; 40009b14 <_txe_byte_pool_delete+0x7c>
40009ae4:	e1550000 	cmp	r5, r0
40009ae8:	1a000001 	bne	40009af4 <_txe_byte_pool_delete+0x5c>
40009aec:	e3a00013 	mov	r0, #19
40009af0:	eafffff1 	b	40009abc <_txe_byte_pool_delete+0x24>
40009af4:	e1a00004 	mov	r0, r4
40009af8:	eb0006b6 	bl	4000b5d8 <_tx_byte_pool_delete>
40009afc:	e1a06000 	mov	r6, r0
40009b00:	e1a00006 	mov	r0, r6
40009b04:	eaffffec 	b	40009abc <_txe_byte_pool_delete+0x24>
40009b08:	42595445 	.word	0x42595445
40009b0c:	400312c0 	.word	0x400312c0
40009b10:	400312b8 	.word	0x400312b8
40009b14:	40032df4 	.word	0x40032df4

40009b18 <_txe_byte_release>:
40009b18:	e92d4070 	push	{r4, r5, r6, lr}
40009b1c:	e1a04000 	mov	r4, r0
40009b20:	e3540000 	cmp	r4, #0
40009b24:	1a000001 	bne	40009b30 <_txe_byte_release+0x18>
40009b28:	e3a00003 	mov	r0, #3
40009b2c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009b30:	e59f005c 	ldr	r0, [pc, #92]	; 40009b94 <_txe_byte_release+0x7c>
40009b34:	e5905000 	ldr	r5, [r0]
40009b38:	e3550000 	cmp	r5, #0
40009b3c:	0a000008 	beq	40009b64 <_txe_byte_release+0x4c>
40009b40:	e59f0050 	ldr	r0, [pc, #80]	; 40009b98 <_txe_byte_release+0x80>
40009b44:	e1550000 	cmp	r5, r0
40009b48:	0a000003 	beq	40009b5c <_txe_byte_release+0x44>
40009b4c:	e59f0048 	ldr	r0, [pc, #72]	; 40009b9c <_txe_byte_release+0x84>
40009b50:	e5900000 	ldr	r0, [r0]
40009b54:	e3500000 	cmp	r0, #0
40009b58:	0a000008 	beq	40009b80 <_txe_byte_release+0x68>
40009b5c:	e3a00013 	mov	r0, #19
40009b60:	eafffff1 	b	40009b2c <_txe_byte_release+0x14>
40009b64:	e59f0030 	ldr	r0, [pc, #48]	; 40009b9c <_txe_byte_release+0x84>
40009b68:	e5900000 	ldr	r0, [r0]
40009b6c:	e59f102c 	ldr	r1, [pc, #44]	; 40009ba0 <_txe_byte_release+0x88>
40009b70:	e1500001 	cmp	r0, r1
40009b74:	2a000001 	bcs	40009b80 <_txe_byte_release+0x68>
40009b78:	e3a00013 	mov	r0, #19
40009b7c:	eaffffea 	b	40009b2c <_txe_byte_release+0x14>
40009b80:	e1a00004 	mov	r0, r4
40009b84:	eb000794 	bl	4000b9dc <_tx_byte_release>
40009b88:	e1a06000 	mov	r6, r0
40009b8c:	e1a00006 	mov	r0, r6
40009b90:	eaffffe5 	b	40009b2c <_txe_byte_release+0x14>
40009b94:	400312c0 	.word	0x400312c0
40009b98:	40032df4 	.word	0x40032df4
40009b9c:	400312b8 	.word	0x400312b8
40009ba0:	f0f0f0f0 	.word	0xf0f0f0f0

40009ba4 <_txe_event_flags_create>:
40009ba4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009ba8:	e1a04000 	mov	r4, r0
40009bac:	e1a05001 	mov	r5, r1
40009bb0:	e1a06002 	mov	r6, r2
40009bb4:	e3540000 	cmp	r4, #0
40009bb8:	0a000001 	beq	40009bc4 <_txe_event_flags_create+0x20>
40009bbc:	e3560028 	cmp	r6, #40	; 0x28
40009bc0:	0a000001 	beq	40009bcc <_txe_event_flags_create+0x28>
40009bc4:	e3a00006 	mov	r0, #6
40009bc8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009bcc:	e10f7000 	mrs	r7, CPSR
40009bd0:	e3878080 	orr	r8, r7, #128	; 0x80
40009bd4:	e121f008 	msr	CPSR_c, r8
40009bd8:	e59f00e8 	ldr	r0, [pc, #232]	; 40009cc8 <_txe_event_flags_create+0x124>
40009bdc:	e5900000 	ldr	r0, [r0]
40009be0:	e2800001 	add	r0, r0, #1
40009be4:	e59f10dc 	ldr	r1, [pc, #220]	; 40009cc8 <_txe_event_flags_create+0x124>
40009be8:	e5810000 	str	r0, [r1]
40009bec:	e121f007 	msr	CPSR_c, r7
40009bf0:	e59f00d4 	ldr	r0, [pc, #212]	; 40009ccc <_txe_event_flags_create+0x128>
40009bf4:	e590a000 	ldr	sl, [r0]
40009bf8:	e3a09000 	mov	r9, #0
40009bfc:	ea000004 	b	40009c14 <_txe_event_flags_create+0x70>
40009c00:	e154000a 	cmp	r4, sl
40009c04:	1a000000 	bne	40009c0c <_txe_event_flags_create+0x68>
40009c08:	ea000005 	b	40009c24 <_txe_event_flags_create+0x80>
40009c0c:	e59aa018 	ldr	sl, [sl, #24]
40009c10:	e2899001 	add	r9, r9, #1
40009c14:	e59f00b4 	ldr	r0, [pc, #180]	; 40009cd0 <_txe_event_flags_create+0x12c>
40009c18:	e5900000 	ldr	r0, [r0]
40009c1c:	e1590000 	cmp	r9, r0
40009c20:	3afffff6 	bcc	40009c00 <_txe_event_flags_create+0x5c>
40009c24:	e1a00000 	nop			; (mov r0, r0)
40009c28:	e10f7000 	mrs	r7, CPSR
40009c2c:	e3878080 	orr	r8, r7, #128	; 0x80
40009c30:	e121f008 	msr	CPSR_c, r8
40009c34:	e59f008c 	ldr	r0, [pc, #140]	; 40009cc8 <_txe_event_flags_create+0x124>
40009c38:	e5900000 	ldr	r0, [r0]
40009c3c:	e2400001 	sub	r0, r0, #1
40009c40:	e59f1080 	ldr	r1, [pc, #128]	; 40009cc8 <_txe_event_flags_create+0x124>
40009c44:	e5810000 	str	r0, [r1]
40009c48:	e121f007 	msr	CPSR_c, r7
40009c4c:	eb001568 	bl	4000f1f4 <_tx_thread_system_preempt_check>
40009c50:	e154000a 	cmp	r4, sl
40009c54:	1a000001 	bne	40009c60 <_txe_event_flags_create+0xbc>
40009c58:	e3a00006 	mov	r0, #6
40009c5c:	eaffffd9 	b	40009bc8 <_txe_event_flags_create+0x24>
40009c60:	e59f006c 	ldr	r0, [pc, #108]	; 40009cd4 <_txe_event_flags_create+0x130>
40009c64:	e590b000 	ldr	fp, [r0]
40009c68:	e35b0000 	cmp	fp, #0
40009c6c:	0a000008 	beq	40009c94 <_txe_event_flags_create+0xf0>
40009c70:	e59f0060 	ldr	r0, [pc, #96]	; 40009cd8 <_txe_event_flags_create+0x134>
40009c74:	e15b0000 	cmp	fp, r0
40009c78:	0a000003 	beq	40009c8c <_txe_event_flags_create+0xe8>
40009c7c:	e59f0058 	ldr	r0, [pc, #88]	; 40009cdc <_txe_event_flags_create+0x138>
40009c80:	e5900000 	ldr	r0, [r0]
40009c84:	e3500000 	cmp	r0, #0
40009c88:	0a000008 	beq	40009cb0 <_txe_event_flags_create+0x10c>
40009c8c:	e3a00013 	mov	r0, #19
40009c90:	eaffffcc 	b	40009bc8 <_txe_event_flags_create+0x24>
40009c94:	e59f0040 	ldr	r0, [pc, #64]	; 40009cdc <_txe_event_flags_create+0x138>
40009c98:	e5900000 	ldr	r0, [r0]
40009c9c:	e59f103c 	ldr	r1, [pc, #60]	; 40009ce0 <_txe_event_flags_create+0x13c>
40009ca0:	e1500001 	cmp	r0, r1
40009ca4:	2a000001 	bcs	40009cb0 <_txe_event_flags_create+0x10c>
40009ca8:	e3a00013 	mov	r0, #19
40009cac:	eaffffc5 	b	40009bc8 <_txe_event_flags_create+0x24>
40009cb0:	e1a01005 	mov	r1, r5
40009cb4:	e1a00004 	mov	r0, r4
40009cb8:	eb0007f9 	bl	4000bca4 <_tx_event_flags_create>
40009cbc:	e58d0000 	str	r0, [sp]
40009cc0:	e59d0000 	ldr	r0, [sp]
40009cc4:	eaffffbf 	b	40009bc8 <_txe_event_flags_create+0x24>
40009cc8:	400312dc 	.word	0x400312dc
40009ccc:	40031344 	.word	0x40031344
40009cd0:	40031348 	.word	0x40031348
40009cd4:	400312c0 	.word	0x400312c0
40009cd8:	40032df4 	.word	0x40032df4
40009cdc:	400312b8 	.word	0x400312b8
40009ce0:	f0f0f0f0 	.word	0xf0f0f0f0

40009ce4 <_txe_event_flags_delete>:
40009ce4:	e92d4070 	push	{r4, r5, r6, lr}
40009ce8:	e1a04000 	mov	r4, r0
40009cec:	e3540000 	cmp	r4, #0
40009cf0:	0a000003 	beq	40009d04 <_txe_event_flags_delete+0x20>
40009cf4:	e5940000 	ldr	r0, [r4]
40009cf8:	e59f1054 	ldr	r1, [pc, #84]	; 40009d54 <_txe_event_flags_delete+0x70>
40009cfc:	e1500001 	cmp	r0, r1
40009d00:	0a000001 	beq	40009d0c <_txe_event_flags_delete+0x28>
40009d04:	e3a00006 	mov	r0, #6
40009d08:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d0c:	e59f0044 	ldr	r0, [pc, #68]	; 40009d58 <_txe_event_flags_delete+0x74>
40009d10:	e5905000 	ldr	r5, [r0]
40009d14:	e3550000 	cmp	r5, #0
40009d18:	0a000006 	beq	40009d38 <_txe_event_flags_delete+0x54>
40009d1c:	e59f0038 	ldr	r0, [pc, #56]	; 40009d5c <_txe_event_flags_delete+0x78>
40009d20:	e5900000 	ldr	r0, [r0]
40009d24:	e3500000 	cmp	r0, #0
40009d28:	1a000002 	bne	40009d38 <_txe_event_flags_delete+0x54>
40009d2c:	e59f002c 	ldr	r0, [pc, #44]	; 40009d60 <_txe_event_flags_delete+0x7c>
40009d30:	e1550000 	cmp	r5, r0
40009d34:	1a000001 	bne	40009d40 <_txe_event_flags_delete+0x5c>
40009d38:	e3a00013 	mov	r0, #19
40009d3c:	eafffff1 	b	40009d08 <_txe_event_flags_delete+0x24>
40009d40:	e1a00004 	mov	r0, r4
40009d44:	eb000849 	bl	4000be70 <_tx_event_flags_delete>
40009d48:	e1a06000 	mov	r6, r0
40009d4c:	e1a00006 	mov	r0, r6
40009d50:	eaffffec 	b	40009d08 <_txe_event_flags_delete+0x24>
40009d54:	4456444e 	.word	0x4456444e
40009d58:	400312c0 	.word	0x400312c0
40009d5c:	400312b8 	.word	0x400312b8
40009d60:	40032df4 	.word	0x40032df4

40009d64 <_txe_event_flags_get>:
40009d64:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009d68:	e1a04000 	mov	r4, r0
40009d6c:	e1a05001 	mov	r5, r1
40009d70:	e1a06002 	mov	r6, r2
40009d74:	e1a08003 	mov	r8, r3
40009d78:	e59d9020 	ldr	r9, [sp, #32]
40009d7c:	e3540000 	cmp	r4, #0
40009d80:	0a000003 	beq	40009d94 <_txe_event_flags_get+0x30>
40009d84:	e5940000 	ldr	r0, [r4]
40009d88:	e59f1084 	ldr	r1, [pc, #132]	; 40009e14 <_txe_event_flags_get+0xb0>
40009d8c:	e1500001 	cmp	r0, r1
40009d90:	0a000001 	beq	40009d9c <_txe_event_flags_get+0x38>
40009d94:	e3a00006 	mov	r0, #6
40009d98:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009d9c:	e3580000 	cmp	r8, #0
40009da0:	1a000001 	bne	40009dac <_txe_event_flags_get+0x48>
40009da4:	e3a00003 	mov	r0, #3
40009da8:	eafffffa 	b	40009d98 <_txe_event_flags_get+0x34>
40009dac:	e3590000 	cmp	r9, #0
40009db0:	0a00000a 	beq	40009de0 <_txe_event_flags_get+0x7c>
40009db4:	e59f005c 	ldr	r0, [pc, #92]	; 40009e18 <_txe_event_flags_get+0xb4>
40009db8:	e5900000 	ldr	r0, [r0]
40009dbc:	e3500000 	cmp	r0, #0
40009dc0:	1a000004 	bne	40009dd8 <_txe_event_flags_get+0x74>
40009dc4:	e59f0050 	ldr	r0, [pc, #80]	; 40009e1c <_txe_event_flags_get+0xb8>
40009dc8:	e5900000 	ldr	r0, [r0]
40009dcc:	e59f104c 	ldr	r1, [pc, #76]	; 40009e20 <_txe_event_flags_get+0xbc>
40009dd0:	e1500001 	cmp	r0, r1
40009dd4:	1a000001 	bne	40009de0 <_txe_event_flags_get+0x7c>
40009dd8:	e3a00004 	mov	r0, #4
40009ddc:	eaffffed 	b	40009d98 <_txe_event_flags_get+0x34>
40009de0:	e3560003 	cmp	r6, #3
40009de4:	9a000001 	bls	40009df0 <_txe_event_flags_get+0x8c>
40009de8:	e3a00008 	mov	r0, #8
40009dec:	eaffffe9 	b	40009d98 <_txe_event_flags_get+0x34>
40009df0:	e1a03008 	mov	r3, r8
40009df4:	e1a02006 	mov	r2, r6
40009df8:	e1a01005 	mov	r1, r5
40009dfc:	e1a00004 	mov	r0, r4
40009e00:	e58d9000 	str	r9, [sp]
40009e04:	eb0008ac 	bl	4000c0bc <_tx_event_flags_get>
40009e08:	e1a07000 	mov	r7, r0
40009e0c:	e1a00007 	mov	r0, r7
40009e10:	eaffffe0 	b	40009d98 <_txe_event_flags_get+0x34>
40009e14:	4456444e 	.word	0x4456444e
40009e18:	400312b8 	.word	0x400312b8
40009e1c:	400312c0 	.word	0x400312c0
40009e20:	40032df4 	.word	0x40032df4

40009e24 <_txe_event_flags_set>:
40009e24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009e28:	e1a04000 	mov	r4, r0
40009e2c:	e1a05001 	mov	r5, r1
40009e30:	e1a06002 	mov	r6, r2
40009e34:	e3540000 	cmp	r4, #0
40009e38:	0a000003 	beq	40009e4c <_txe_event_flags_set+0x28>
40009e3c:	e5940000 	ldr	r0, [r4]
40009e40:	e59f1040 	ldr	r1, [pc, #64]	; 40009e88 <_txe_event_flags_set+0x64>
40009e44:	e1500001 	cmp	r0, r1
40009e48:	0a000001 	beq	40009e54 <_txe_event_flags_set+0x30>
40009e4c:	e3a00006 	mov	r0, #6
40009e50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009e54:	e3560002 	cmp	r6, #2
40009e58:	0a000003 	beq	40009e6c <_txe_event_flags_set+0x48>
40009e5c:	e3560000 	cmp	r6, #0
40009e60:	0a000001 	beq	40009e6c <_txe_event_flags_set+0x48>
40009e64:	e3a00008 	mov	r0, #8
40009e68:	eafffff8 	b	40009e50 <_txe_event_flags_set+0x2c>
40009e6c:	e1a02006 	mov	r2, r6
40009e70:	e1a01005 	mov	r1, r5
40009e74:	e1a00004 	mov	r0, r4
40009e78:	eb000943 	bl	4000c38c <_tx_event_flags_set>
40009e7c:	e1a07000 	mov	r7, r0
40009e80:	e1a00007 	mov	r0, r7
40009e84:	eafffff1 	b	40009e50 <_txe_event_flags_set+0x2c>
40009e88:	4456444e 	.word	0x4456444e

40009e8c <_txe_mutex_create>:
40009e8c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009e90:	e1a04000 	mov	r4, r0
40009e94:	e1a05001 	mov	r5, r1
40009e98:	e1a06002 	mov	r6, r2
40009e9c:	e1a07003 	mov	r7, r3
40009ea0:	e3540000 	cmp	r4, #0
40009ea4:	0a000001 	beq	40009eb0 <_txe_mutex_create+0x24>
40009ea8:	e3570038 	cmp	r7, #56	; 0x38
40009eac:	0a000001 	beq	40009eb8 <_txe_mutex_create+0x2c>
40009eb0:	e3a0001c 	mov	r0, #28
40009eb4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009eb8:	e10f0000 	mrs	r0, CPSR
40009ebc:	e58d0004 	str	r0, [sp, #4]
40009ec0:	e59d0004 	ldr	r0, [sp, #4]
40009ec4:	e3808080 	orr	r8, r0, #128	; 0x80
40009ec8:	e121f008 	msr	CPSR_c, r8
40009ecc:	e59f0114 	ldr	r0, [pc, #276]	; 40009fe8 <_txe_mutex_create+0x15c>
40009ed0:	e5900000 	ldr	r0, [r0]
40009ed4:	e2800001 	add	r0, r0, #1
40009ed8:	e59f1108 	ldr	r1, [pc, #264]	; 40009fe8 <_txe_mutex_create+0x15c>
40009edc:	e5810000 	str	r0, [r1]
40009ee0:	e59d0004 	ldr	r0, [sp, #4]
40009ee4:	e121f000 	msr	CPSR_c, r0
40009ee8:	e59f00fc 	ldr	r0, [pc, #252]	; 40009fec <_txe_mutex_create+0x160>
40009eec:	e590a000 	ldr	sl, [r0]
40009ef0:	e3a09000 	mov	r9, #0
40009ef4:	ea000004 	b	40009f0c <_txe_mutex_create+0x80>
40009ef8:	e154000a 	cmp	r4, sl
40009efc:	1a000000 	bne	40009f04 <_txe_mutex_create+0x78>
40009f00:	ea000005 	b	40009f1c <_txe_mutex_create+0x90>
40009f04:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009f08:	e2899001 	add	r9, r9, #1
40009f0c:	e59f00dc 	ldr	r0, [pc, #220]	; 40009ff0 <_txe_mutex_create+0x164>
40009f10:	e5900000 	ldr	r0, [r0]
40009f14:	e1590000 	cmp	r9, r0
40009f18:	3afffff6 	bcc	40009ef8 <_txe_mutex_create+0x6c>
40009f1c:	e1a00000 	nop			; (mov r0, r0)
40009f20:	e10f0000 	mrs	r0, CPSR
40009f24:	e58d0004 	str	r0, [sp, #4]
40009f28:	e59d0004 	ldr	r0, [sp, #4]
40009f2c:	e3808080 	orr	r8, r0, #128	; 0x80
40009f30:	e121f008 	msr	CPSR_c, r8
40009f34:	e59f00ac 	ldr	r0, [pc, #172]	; 40009fe8 <_txe_mutex_create+0x15c>
40009f38:	e5900000 	ldr	r0, [r0]
40009f3c:	e2400001 	sub	r0, r0, #1
40009f40:	e59f10a0 	ldr	r1, [pc, #160]	; 40009fe8 <_txe_mutex_create+0x15c>
40009f44:	e5810000 	str	r0, [r1]
40009f48:	e59d0004 	ldr	r0, [sp, #4]
40009f4c:	e121f000 	msr	CPSR_c, r0
40009f50:	eb0014a7 	bl	4000f1f4 <_tx_thread_system_preempt_check>
40009f54:	e154000a 	cmp	r4, sl
40009f58:	1a000001 	bne	40009f64 <_txe_mutex_create+0xd8>
40009f5c:	e3a0001c 	mov	r0, #28
40009f60:	eaffffd3 	b	40009eb4 <_txe_mutex_create+0x28>
40009f64:	e3560001 	cmp	r6, #1
40009f68:	0a000003 	beq	40009f7c <_txe_mutex_create+0xf0>
40009f6c:	e3560000 	cmp	r6, #0
40009f70:	0a000001 	beq	40009f7c <_txe_mutex_create+0xf0>
40009f74:	e3a0001f 	mov	r0, #31
40009f78:	eaffffcd 	b	40009eb4 <_txe_mutex_create+0x28>
40009f7c:	e59f0070 	ldr	r0, [pc, #112]	; 40009ff4 <_txe_mutex_create+0x168>
40009f80:	e590b000 	ldr	fp, [r0]
40009f84:	e35b0000 	cmp	fp, #0
40009f88:	0a000008 	beq	40009fb0 <_txe_mutex_create+0x124>
40009f8c:	e59f0064 	ldr	r0, [pc, #100]	; 40009ff8 <_txe_mutex_create+0x16c>
40009f90:	e15b0000 	cmp	fp, r0
40009f94:	0a000003 	beq	40009fa8 <_txe_mutex_create+0x11c>
40009f98:	e59f005c 	ldr	r0, [pc, #92]	; 40009ffc <_txe_mutex_create+0x170>
40009f9c:	e5900000 	ldr	r0, [r0]
40009fa0:	e3500000 	cmp	r0, #0
40009fa4:	0a000008 	beq	40009fcc <_txe_mutex_create+0x140>
40009fa8:	e3a00013 	mov	r0, #19
40009fac:	eaffffc0 	b	40009eb4 <_txe_mutex_create+0x28>
40009fb0:	e59f0044 	ldr	r0, [pc, #68]	; 40009ffc <_txe_mutex_create+0x170>
40009fb4:	e5900000 	ldr	r0, [r0]
40009fb8:	e59f1040 	ldr	r1, [pc, #64]	; 4000a000 <_txe_mutex_create+0x174>
40009fbc:	e1500001 	cmp	r0, r1
40009fc0:	2a000001 	bcs	40009fcc <_txe_mutex_create+0x140>
40009fc4:	e3a00013 	mov	r0, #19
40009fc8:	eaffffb9 	b	40009eb4 <_txe_mutex_create+0x28>
40009fcc:	e1a02006 	mov	r2, r6
40009fd0:	e1a01005 	mov	r1, r5
40009fd4:	e1a00004 	mov	r0, r4
40009fd8:	eb000a8f 	bl	4000ca1c <_tx_mutex_create>
40009fdc:	e58d0000 	str	r0, [sp]
40009fe0:	e59d0000 	ldr	r0, [sp]
40009fe4:	eaffffb2 	b	40009eb4 <_txe_mutex_create+0x28>
40009fe8:	400312dc 	.word	0x400312dc
40009fec:	4003134c 	.word	0x4003134c
40009ff0:	40031350 	.word	0x40031350
40009ff4:	400312c0 	.word	0x400312c0
40009ff8:	40032df4 	.word	0x40032df4
40009ffc:	400312b8 	.word	0x400312b8
4000a000:	f0f0f0f0 	.word	0xf0f0f0f0

4000a004 <_txe_mutex_delete>:
4000a004:	e92d4070 	push	{r4, r5, r6, lr}
4000a008:	e1a04000 	mov	r4, r0
4000a00c:	e3540000 	cmp	r4, #0
4000a010:	0a000003 	beq	4000a024 <_txe_mutex_delete+0x20>
4000a014:	e5940000 	ldr	r0, [r4]
4000a018:	e59f1054 	ldr	r1, [pc, #84]	; 4000a074 <_txe_mutex_delete+0x70>
4000a01c:	e1500001 	cmp	r0, r1
4000a020:	0a000001 	beq	4000a02c <_txe_mutex_delete+0x28>
4000a024:	e3a0001c 	mov	r0, #28
4000a028:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a02c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a078 <_txe_mutex_delete+0x74>
4000a030:	e5905000 	ldr	r5, [r0]
4000a034:	e3550000 	cmp	r5, #0
4000a038:	0a000006 	beq	4000a058 <_txe_mutex_delete+0x54>
4000a03c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a07c <_txe_mutex_delete+0x78>
4000a040:	e5900000 	ldr	r0, [r0]
4000a044:	e3500000 	cmp	r0, #0
4000a048:	1a000002 	bne	4000a058 <_txe_mutex_delete+0x54>
4000a04c:	e59f002c 	ldr	r0, [pc, #44]	; 4000a080 <_txe_mutex_delete+0x7c>
4000a050:	e1550000 	cmp	r5, r0
4000a054:	1a000001 	bne	4000a060 <_txe_mutex_delete+0x5c>
4000a058:	e3a00013 	mov	r0, #19
4000a05c:	eafffff1 	b	4000a028 <_txe_mutex_delete+0x24>
4000a060:	e1a00004 	mov	r0, r4
4000a064:	eb000ae2 	bl	4000cbf4 <_tx_mutex_delete>
4000a068:	e1a06000 	mov	r6, r0
4000a06c:	e1a00006 	mov	r0, r6
4000a070:	eaffffec 	b	4000a028 <_txe_mutex_delete+0x24>
4000a074:	4d555445 	.word	0x4d555445
4000a078:	400312c0 	.word	0x400312c0
4000a07c:	400312b8 	.word	0x400312b8
4000a080:	40032df4 	.word	0x40032df4

4000a084 <_txe_mutex_get>:
4000a084:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a088:	e1a04000 	mov	r4, r0
4000a08c:	e1a05001 	mov	r5, r1
4000a090:	e3540000 	cmp	r4, #0
4000a094:	0a000003 	beq	4000a0a8 <_txe_mutex_get+0x24>
4000a098:	e5940000 	ldr	r0, [r4]
4000a09c:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a144 <_txe_mutex_get+0xc0>
4000a0a0:	e1500001 	cmp	r0, r1
4000a0a4:	0a000001 	beq	4000a0b0 <_txe_mutex_get+0x2c>
4000a0a8:	e3a0001c 	mov	r0, #28
4000a0ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a0b0:	e59f0090 	ldr	r0, [pc, #144]	; 4000a148 <_txe_mutex_get+0xc4>
4000a0b4:	e5906000 	ldr	r6, [r0]
4000a0b8:	e3550000 	cmp	r5, #0
4000a0bc:	0a000008 	beq	4000a0e4 <_txe_mutex_get+0x60>
4000a0c0:	e59f0084 	ldr	r0, [pc, #132]	; 4000a14c <_txe_mutex_get+0xc8>
4000a0c4:	e5900000 	ldr	r0, [r0]
4000a0c8:	e3500000 	cmp	r0, #0
4000a0cc:	1a000002 	bne	4000a0dc <_txe_mutex_get+0x58>
4000a0d0:	e59f0078 	ldr	r0, [pc, #120]	; 4000a150 <_txe_mutex_get+0xcc>
4000a0d4:	e1560000 	cmp	r6, r0
4000a0d8:	1a000001 	bne	4000a0e4 <_txe_mutex_get+0x60>
4000a0dc:	e3a00004 	mov	r0, #4
4000a0e0:	eafffff1 	b	4000a0ac <_txe_mutex_get+0x28>
4000a0e4:	e3560000 	cmp	r6, #0
4000a0e8:	0a000008 	beq	4000a110 <_txe_mutex_get+0x8c>
4000a0ec:	e59f005c 	ldr	r0, [pc, #92]	; 4000a150 <_txe_mutex_get+0xcc>
4000a0f0:	e1560000 	cmp	r6, r0
4000a0f4:	0a000003 	beq	4000a108 <_txe_mutex_get+0x84>
4000a0f8:	e59f004c 	ldr	r0, [pc, #76]	; 4000a14c <_txe_mutex_get+0xc8>
4000a0fc:	e5900000 	ldr	r0, [r0]
4000a100:	e3500000 	cmp	r0, #0
4000a104:	0a000008 	beq	4000a12c <_txe_mutex_get+0xa8>
4000a108:	e3a00013 	mov	r0, #19
4000a10c:	eaffffe6 	b	4000a0ac <_txe_mutex_get+0x28>
4000a110:	e59f0034 	ldr	r0, [pc, #52]	; 4000a14c <_txe_mutex_get+0xc8>
4000a114:	e5900000 	ldr	r0, [r0]
4000a118:	e59f1034 	ldr	r1, [pc, #52]	; 4000a154 <_txe_mutex_get+0xd0>
4000a11c:	e1500001 	cmp	r0, r1
4000a120:	2a000001 	bcs	4000a12c <_txe_mutex_get+0xa8>
4000a124:	e3a00013 	mov	r0, #19
4000a128:	eaffffdf 	b	4000a0ac <_txe_mutex_get+0x28>
4000a12c:	e1a01005 	mov	r1, r5
4000a130:	e1a00004 	mov	r0, r4
4000a134:	eb000b65 	bl	4000ced0 <_tx_mutex_get>
4000a138:	e1a07000 	mov	r7, r0
4000a13c:	e1a00007 	mov	r0, r7
4000a140:	eaffffd9 	b	4000a0ac <_txe_mutex_get+0x28>
4000a144:	4d555445 	.word	0x4d555445
4000a148:	400312c0 	.word	0x400312c0
4000a14c:	400312b8 	.word	0x400312b8
4000a150:	40032df4 	.word	0x40032df4
4000a154:	f0f0f0f0 	.word	0xf0f0f0f0

4000a158 <_txe_mutex_put>:
4000a158:	e92d4070 	push	{r4, r5, r6, lr}
4000a15c:	e1a04000 	mov	r4, r0
4000a160:	e3540000 	cmp	r4, #0
4000a164:	0a000003 	beq	4000a178 <_txe_mutex_put+0x20>
4000a168:	e5940000 	ldr	r0, [r4]
4000a16c:	e59f1070 	ldr	r1, [pc, #112]	; 4000a1e4 <_txe_mutex_put+0x8c>
4000a170:	e1500001 	cmp	r0, r1
4000a174:	0a000001 	beq	4000a180 <_txe_mutex_put+0x28>
4000a178:	e3a0001c 	mov	r0, #28
4000a17c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a180:	e59f0060 	ldr	r0, [pc, #96]	; 4000a1e8 <_txe_mutex_put+0x90>
4000a184:	e5905000 	ldr	r5, [r0]
4000a188:	e3550000 	cmp	r5, #0
4000a18c:	0a000008 	beq	4000a1b4 <_txe_mutex_put+0x5c>
4000a190:	e59f0054 	ldr	r0, [pc, #84]	; 4000a1ec <_txe_mutex_put+0x94>
4000a194:	e1550000 	cmp	r5, r0
4000a198:	0a000003 	beq	4000a1ac <_txe_mutex_put+0x54>
4000a19c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a1f0 <_txe_mutex_put+0x98>
4000a1a0:	e5900000 	ldr	r0, [r0]
4000a1a4:	e3500000 	cmp	r0, #0
4000a1a8:	0a000008 	beq	4000a1d0 <_txe_mutex_put+0x78>
4000a1ac:	e3a00013 	mov	r0, #19
4000a1b0:	eafffff1 	b	4000a17c <_txe_mutex_put+0x24>
4000a1b4:	e59f0034 	ldr	r0, [pc, #52]	; 4000a1f0 <_txe_mutex_put+0x98>
4000a1b8:	e5900000 	ldr	r0, [r0]
4000a1bc:	e59f1030 	ldr	r1, [pc, #48]	; 4000a1f4 <_txe_mutex_put+0x9c>
4000a1c0:	e1500001 	cmp	r0, r1
4000a1c4:	2a000001 	bcs	4000a1d0 <_txe_mutex_put+0x78>
4000a1c8:	e3a00013 	mov	r0, #19
4000a1cc:	eaffffea 	b	4000a17c <_txe_mutex_put+0x24>
4000a1d0:	e1a00004 	mov	r0, r4
4000a1d4:	eb000c1c 	bl	4000d24c <_tx_mutex_put>
4000a1d8:	e1a06000 	mov	r6, r0
4000a1dc:	e1a00006 	mov	r0, r6
4000a1e0:	eaffffe5 	b	4000a17c <_txe_mutex_put+0x24>
4000a1e4:	4d555445 	.word	0x4d555445
4000a1e8:	400312c0 	.word	0x400312c0
4000a1ec:	40032df4 	.word	0x40032df4
4000a1f0:	400312b8 	.word	0x400312b8
4000a1f4:	f0f0f0f0 	.word	0xf0f0f0f0

4000a1f8 <_txe_queue_create>:
4000a1f8:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a1fc:	e24dd014 	sub	sp, sp, #20
4000a200:	e1a04000 	mov	r4, r0
4000a204:	e1a05002 	mov	r5, r2
4000a208:	e1a06003 	mov	r6, r3
4000a20c:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a210:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a214:	e3540000 	cmp	r4, #0
4000a218:	0a000001 	beq	4000a224 <_txe_queue_create+0x2c>
4000a21c:	e358003c 	cmp	r8, #60	; 0x3c
4000a220:	0a000002 	beq	4000a230 <_txe_queue_create+0x38>
4000a224:	e3a00009 	mov	r0, #9
4000a228:	e28dd024 	add	sp, sp, #36	; 0x24
4000a22c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a230:	e10f9000 	mrs	r9, CPSR
4000a234:	e389a080 	orr	sl, r9, #128	; 0x80
4000a238:	e121f00a 	msr	CPSR_c, sl
4000a23c:	e59f0150 	ldr	r0, [pc, #336]	; 4000a394 <_txe_queue_create+0x19c>
4000a240:	e5900000 	ldr	r0, [r0]
4000a244:	e2800001 	add	r0, r0, #1
4000a248:	e59f1144 	ldr	r1, [pc, #324]	; 4000a394 <_txe_queue_create+0x19c>
4000a24c:	e5810000 	str	r0, [r1]
4000a250:	e121f009 	msr	CPSR_c, r9
4000a254:	e59f013c 	ldr	r0, [pc, #316]	; 4000a398 <_txe_queue_create+0x1a0>
4000a258:	e5900000 	ldr	r0, [r0]
4000a25c:	e58d0008 	str	r0, [sp, #8]
4000a260:	e3a00000 	mov	r0, #0
4000a264:	e58d000c 	str	r0, [sp, #12]
4000a268:	ea000009 	b	4000a294 <_txe_queue_create+0x9c>
4000a26c:	e59d0008 	ldr	r0, [sp, #8]
4000a270:	e1540000 	cmp	r4, r0
4000a274:	1a000000 	bne	4000a27c <_txe_queue_create+0x84>
4000a278:	ea00000a 	b	4000a2a8 <_txe_queue_create+0xb0>
4000a27c:	e59d0008 	ldr	r0, [sp, #8]
4000a280:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a284:	e58d0008 	str	r0, [sp, #8]
4000a288:	e59d000c 	ldr	r0, [sp, #12]
4000a28c:	e2800001 	add	r0, r0, #1
4000a290:	e58d000c 	str	r0, [sp, #12]
4000a294:	e59f1100 	ldr	r1, [pc, #256]	; 4000a39c <_txe_queue_create+0x1a4>
4000a298:	e59d000c 	ldr	r0, [sp, #12]
4000a29c:	e5911000 	ldr	r1, [r1]
4000a2a0:	e1500001 	cmp	r0, r1
4000a2a4:	3afffff0 	bcc	4000a26c <_txe_queue_create+0x74>
4000a2a8:	e1a00000 	nop			; (mov r0, r0)
4000a2ac:	e10f9000 	mrs	r9, CPSR
4000a2b0:	e389a080 	orr	sl, r9, #128	; 0x80
4000a2b4:	e121f00a 	msr	CPSR_c, sl
4000a2b8:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a394 <_txe_queue_create+0x19c>
4000a2bc:	e5900000 	ldr	r0, [r0]
4000a2c0:	e2400001 	sub	r0, r0, #1
4000a2c4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a394 <_txe_queue_create+0x19c>
4000a2c8:	e5810000 	str	r0, [r1]
4000a2cc:	e121f009 	msr	CPSR_c, r9
4000a2d0:	eb0013c7 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000a2d4:	e59d0008 	ldr	r0, [sp, #8]
4000a2d8:	e1540000 	cmp	r4, r0
4000a2dc:	1a000001 	bne	4000a2e8 <_txe_queue_create+0xf0>
4000a2e0:	e3a00009 	mov	r0, #9
4000a2e4:	eaffffcf 	b	4000a228 <_txe_queue_create+0x30>
4000a2e8:	e3560000 	cmp	r6, #0
4000a2ec:	1a000001 	bne	4000a2f8 <_txe_queue_create+0x100>
4000a2f0:	e3a00003 	mov	r0, #3
4000a2f4:	eaffffcb 	b	4000a228 <_txe_queue_create+0x30>
4000a2f8:	e3550000 	cmp	r5, #0
4000a2fc:	0a000001 	beq	4000a308 <_txe_queue_create+0x110>
4000a300:	e3550010 	cmp	r5, #16
4000a304:	9a000001 	bls	4000a310 <_txe_queue_create+0x118>
4000a308:	e3a00005 	mov	r0, #5
4000a30c:	eaffffc5 	b	4000a228 <_txe_queue_create+0x30>
4000a310:	e1550127 	cmp	r5, r7, lsr #2
4000a314:	9a000001 	bls	4000a320 <_txe_queue_create+0x128>
4000a318:	e3a00005 	mov	r0, #5
4000a31c:	eaffffc1 	b	4000a228 <_txe_queue_create+0x30>
4000a320:	e59f0078 	ldr	r0, [pc, #120]	; 4000a3a0 <_txe_queue_create+0x1a8>
4000a324:	e590b000 	ldr	fp, [r0]
4000a328:	e35b0000 	cmp	fp, #0
4000a32c:	0a000008 	beq	4000a354 <_txe_queue_create+0x15c>
4000a330:	e59f006c 	ldr	r0, [pc, #108]	; 4000a3a4 <_txe_queue_create+0x1ac>
4000a334:	e15b0000 	cmp	fp, r0
4000a338:	0a000003 	beq	4000a34c <_txe_queue_create+0x154>
4000a33c:	e59f0064 	ldr	r0, [pc, #100]	; 4000a3a8 <_txe_queue_create+0x1b0>
4000a340:	e5900000 	ldr	r0, [r0]
4000a344:	e3500000 	cmp	r0, #0
4000a348:	0a000008 	beq	4000a370 <_txe_queue_create+0x178>
4000a34c:	e3a00013 	mov	r0, #19
4000a350:	eaffffb4 	b	4000a228 <_txe_queue_create+0x30>
4000a354:	e59f004c 	ldr	r0, [pc, #76]	; 4000a3a8 <_txe_queue_create+0x1b0>
4000a358:	e5900000 	ldr	r0, [r0]
4000a35c:	e59f1048 	ldr	r1, [pc, #72]	; 4000a3ac <_txe_queue_create+0x1b4>
4000a360:	e1500001 	cmp	r0, r1
4000a364:	2a000001 	bcs	4000a370 <_txe_queue_create+0x178>
4000a368:	e3a00013 	mov	r0, #19
4000a36c:	eaffffad 	b	4000a228 <_txe_queue_create+0x30>
4000a370:	e1a03006 	mov	r3, r6
4000a374:	e1a02005 	mov	r2, r5
4000a378:	e58d7000 	str	r7, [sp]
4000a37c:	e1a00004 	mov	r0, r4
4000a380:	e59d1018 	ldr	r1, [sp, #24]
4000a384:	eb000ce5 	bl	4000d720 <_tx_queue_create>
4000a388:	e58d0010 	str	r0, [sp, #16]
4000a38c:	e59d0010 	ldr	r0, [sp, #16]
4000a390:	eaffffa4 	b	4000a228 <_txe_queue_create+0x30>
4000a394:	400312dc 	.word	0x400312dc
4000a398:	4003133c 	.word	0x4003133c
4000a39c:	40031340 	.word	0x40031340
4000a3a0:	400312c0 	.word	0x400312c0
4000a3a4:	40032df4 	.word	0x40032df4
4000a3a8:	400312b8 	.word	0x400312b8
4000a3ac:	f0f0f0f0 	.word	0xf0f0f0f0

4000a3b0 <_txe_queue_front_send>:
4000a3b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a3b4:	e1a04000 	mov	r4, r0
4000a3b8:	e1a05001 	mov	r5, r1
4000a3bc:	e1a06002 	mov	r6, r2
4000a3c0:	e3540000 	cmp	r4, #0
4000a3c4:	0a000003 	beq	4000a3d8 <_txe_queue_front_send+0x28>
4000a3c8:	e5940000 	ldr	r0, [r4]
4000a3cc:	e59f106c 	ldr	r1, [pc, #108]	; 4000a440 <_txe_queue_front_send+0x90>
4000a3d0:	e1500001 	cmp	r0, r1
4000a3d4:	0a000001 	beq	4000a3e0 <_txe_queue_front_send+0x30>
4000a3d8:	e3a00009 	mov	r0, #9
4000a3dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a3e0:	e3550000 	cmp	r5, #0
4000a3e4:	1a000001 	bne	4000a3f0 <_txe_queue_front_send+0x40>
4000a3e8:	e3a00003 	mov	r0, #3
4000a3ec:	eafffffa 	b	4000a3dc <_txe_queue_front_send+0x2c>
4000a3f0:	e3560000 	cmp	r6, #0
4000a3f4:	0a00000a 	beq	4000a424 <_txe_queue_front_send+0x74>
4000a3f8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a444 <_txe_queue_front_send+0x94>
4000a3fc:	e5900000 	ldr	r0, [r0]
4000a400:	e3500000 	cmp	r0, #0
4000a404:	1a000004 	bne	4000a41c <_txe_queue_front_send+0x6c>
4000a408:	e59f0038 	ldr	r0, [pc, #56]	; 4000a448 <_txe_queue_front_send+0x98>
4000a40c:	e5900000 	ldr	r0, [r0]
4000a410:	e59f1034 	ldr	r1, [pc, #52]	; 4000a44c <_txe_queue_front_send+0x9c>
4000a414:	e1500001 	cmp	r0, r1
4000a418:	1a000001 	bne	4000a424 <_txe_queue_front_send+0x74>
4000a41c:	e3a00004 	mov	r0, #4
4000a420:	eaffffed 	b	4000a3dc <_txe_queue_front_send+0x2c>
4000a424:	e1a02006 	mov	r2, r6
4000a428:	e1a01005 	mov	r1, r5
4000a42c:	e1a00004 	mov	r0, r4
4000a430:	eb000d3d 	bl	4000d92c <_tx_queue_front_send>
4000a434:	e1a07000 	mov	r7, r0
4000a438:	e1a00007 	mov	r0, r7
4000a43c:	eaffffe6 	b	4000a3dc <_txe_queue_front_send+0x2c>
4000a440:	51554555 	.word	0x51554555
4000a444:	400312b8 	.word	0x400312b8
4000a448:	400312c0 	.word	0x400312c0
4000a44c:	40032df4 	.word	0x40032df4

4000a450 <_txe_queue_receive>:
4000a450:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a454:	e1a04000 	mov	r4, r0
4000a458:	e1a05001 	mov	r5, r1
4000a45c:	e1a06002 	mov	r6, r2
4000a460:	e3540000 	cmp	r4, #0
4000a464:	0a000003 	beq	4000a478 <_txe_queue_receive+0x28>
4000a468:	e5940000 	ldr	r0, [r4]
4000a46c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a4e0 <_txe_queue_receive+0x90>
4000a470:	e1500001 	cmp	r0, r1
4000a474:	0a000001 	beq	4000a480 <_txe_queue_receive+0x30>
4000a478:	e3a00009 	mov	r0, #9
4000a47c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a480:	e3550000 	cmp	r5, #0
4000a484:	1a000001 	bne	4000a490 <_txe_queue_receive+0x40>
4000a488:	e3a00003 	mov	r0, #3
4000a48c:	eafffffa 	b	4000a47c <_txe_queue_receive+0x2c>
4000a490:	e3560000 	cmp	r6, #0
4000a494:	0a00000a 	beq	4000a4c4 <_txe_queue_receive+0x74>
4000a498:	e59f0044 	ldr	r0, [pc, #68]	; 4000a4e4 <_txe_queue_receive+0x94>
4000a49c:	e5900000 	ldr	r0, [r0]
4000a4a0:	e3500000 	cmp	r0, #0
4000a4a4:	1a000004 	bne	4000a4bc <_txe_queue_receive+0x6c>
4000a4a8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a4e8 <_txe_queue_receive+0x98>
4000a4ac:	e5900000 	ldr	r0, [r0]
4000a4b0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a4ec <_txe_queue_receive+0x9c>
4000a4b4:	e1500001 	cmp	r0, r1
4000a4b8:	1a000001 	bne	4000a4c4 <_txe_queue_receive+0x74>
4000a4bc:	e3a00004 	mov	r0, #4
4000a4c0:	eaffffed 	b	4000a47c <_txe_queue_receive+0x2c>
4000a4c4:	e1a02006 	mov	r2, r6
4000a4c8:	e1a01005 	mov	r1, r5
4000a4cc:	e1a00004 	mov	r0, r4
4000a4d0:	eb000e04 	bl	4000dce8 <_tx_queue_receive>
4000a4d4:	e1a07000 	mov	r7, r0
4000a4d8:	e1a00007 	mov	r0, r7
4000a4dc:	eaffffe6 	b	4000a47c <_txe_queue_receive+0x2c>
4000a4e0:	51554555 	.word	0x51554555
4000a4e4:	400312b8 	.word	0x400312b8
4000a4e8:	400312c0 	.word	0x400312c0
4000a4ec:	40032df4 	.word	0x40032df4

4000a4f0 <_txe_queue_send>:
4000a4f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a4f4:	e1a04000 	mov	r4, r0
4000a4f8:	e1a05001 	mov	r5, r1
4000a4fc:	e1a06002 	mov	r6, r2
4000a500:	e3540000 	cmp	r4, #0
4000a504:	0a000003 	beq	4000a518 <_txe_queue_send+0x28>
4000a508:	e5940000 	ldr	r0, [r4]
4000a50c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a580 <_txe_queue_send+0x90>
4000a510:	e1500001 	cmp	r0, r1
4000a514:	0a000001 	beq	4000a520 <_txe_queue_send+0x30>
4000a518:	e3a00009 	mov	r0, #9
4000a51c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a520:	e3550000 	cmp	r5, #0
4000a524:	1a000001 	bne	4000a530 <_txe_queue_send+0x40>
4000a528:	e3a00003 	mov	r0, #3
4000a52c:	eafffffa 	b	4000a51c <_txe_queue_send+0x2c>
4000a530:	e3560000 	cmp	r6, #0
4000a534:	0a00000a 	beq	4000a564 <_txe_queue_send+0x74>
4000a538:	e59f0044 	ldr	r0, [pc, #68]	; 4000a584 <_txe_queue_send+0x94>
4000a53c:	e5900000 	ldr	r0, [r0]
4000a540:	e3500000 	cmp	r0, #0
4000a544:	1a000004 	bne	4000a55c <_txe_queue_send+0x6c>
4000a548:	e59f0038 	ldr	r0, [pc, #56]	; 4000a588 <_txe_queue_send+0x98>
4000a54c:	e5900000 	ldr	r0, [r0]
4000a550:	e59f1034 	ldr	r1, [pc, #52]	; 4000a58c <_txe_queue_send+0x9c>
4000a554:	e1500001 	cmp	r0, r1
4000a558:	1a000001 	bne	4000a564 <_txe_queue_send+0x74>
4000a55c:	e3a00004 	mov	r0, #4
4000a560:	eaffffed 	b	4000a51c <_txe_queue_send+0x2c>
4000a564:	e1a02006 	mov	r2, r6
4000a568:	e1a01005 	mov	r1, r5
4000a56c:	e1a00004 	mov	r0, r4
4000a570:	eb000ef4 	bl	4000e148 <_tx_queue_send>
4000a574:	e1a07000 	mov	r7, r0
4000a578:	e1a00007 	mov	r0, r7
4000a57c:	eaffffe6 	b	4000a51c <_txe_queue_send+0x2c>
4000a580:	51554555 	.word	0x51554555
4000a584:	400312b8 	.word	0x400312b8
4000a588:	400312c0 	.word	0x400312c0
4000a58c:	40032df4 	.word	0x40032df4

4000a590 <_txe_thread_create>:
4000a590:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a594:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a598:	e1a04000 	mov	r4, r0
4000a59c:	e1a05002 	mov	r5, r2
4000a5a0:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a5a4:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a5a8:	e3540000 	cmp	r4, #0
4000a5ac:	0a000002 	beq	4000a5bc <_txe_thread_create+0x2c>
4000a5b0:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a5b4:	e35000a8 	cmp	r0, #168	; 0xa8
4000a5b8:	0a000002 	beq	4000a5c8 <_txe_thread_create+0x38>
4000a5bc:	e3a0000e 	mov	r0, #14
4000a5c0:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a5c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a5c8:	e10f0000 	mrs	r0, CPSR
4000a5cc:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a5d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5d4:	e3800080 	orr	r0, r0, #128	; 0x80
4000a5d8:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a5dc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a5e0:	e121f000 	msr	CPSR_c, r0
4000a5e4:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a7d8 <_txe_thread_create+0x248>
4000a5e8:	e5900000 	ldr	r0, [r0]
4000a5ec:	e2800001 	add	r0, r0, #1
4000a5f0:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a7d8 <_txe_thread_create+0x248>
4000a5f4:	e5810000 	str	r0, [r1]
4000a5f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5fc:	e121f000 	msr	CPSR_c, r0
4000a600:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a7dc <_txe_thread_create+0x24c>
4000a604:	e5900000 	ldr	r0, [r0]
4000a608:	e58d0018 	str	r0, [sp, #24]
4000a60c:	e2470001 	sub	r0, r7, #1
4000a610:	e080b006 	add	fp, r0, r6
4000a614:	e3a00000 	mov	r0, #0
4000a618:	e58d001c 	str	r0, [sp, #28]
4000a61c:	ea00001d 	b	4000a698 <_txe_thread_create+0x108>
4000a620:	e59d0018 	ldr	r0, [sp, #24]
4000a624:	e1540000 	cmp	r4, r0
4000a628:	1a000000 	bne	4000a630 <_txe_thread_create+0xa0>
4000a62c:	ea00001e 	b	4000a6ac <_txe_thread_create+0x11c>
4000a630:	e59d0018 	ldr	r0, [sp, #24]
4000a634:	e590000c 	ldr	r0, [r0, #12]
4000a638:	e1500006 	cmp	r0, r6
4000a63c:	8a000005 	bhi	4000a658 <_txe_thread_create+0xc8>
4000a640:	e59d0018 	ldr	r0, [sp, #24]
4000a644:	e5900010 	ldr	r0, [r0, #16]
4000a648:	e1500006 	cmp	r0, r6
4000a64c:	9a000001 	bls	4000a658 <_txe_thread_create+0xc8>
4000a650:	e3a06000 	mov	r6, #0
4000a654:	ea000014 	b	4000a6ac <_txe_thread_create+0x11c>
4000a658:	e59d0018 	ldr	r0, [sp, #24]
4000a65c:	e590000c 	ldr	r0, [r0, #12]
4000a660:	e150000b 	cmp	r0, fp
4000a664:	8a000005 	bhi	4000a680 <_txe_thread_create+0xf0>
4000a668:	e59d0018 	ldr	r0, [sp, #24]
4000a66c:	e5900010 	ldr	r0, [r0, #16]
4000a670:	e150000b 	cmp	r0, fp
4000a674:	9a000001 	bls	4000a680 <_txe_thread_create+0xf0>
4000a678:	e3a06000 	mov	r6, #0
4000a67c:	ea00000a 	b	4000a6ac <_txe_thread_create+0x11c>
4000a680:	e59d0018 	ldr	r0, [sp, #24]
4000a684:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a688:	e58d0018 	str	r0, [sp, #24]
4000a68c:	e59d001c 	ldr	r0, [sp, #28]
4000a690:	e2800001 	add	r0, r0, #1
4000a694:	e58d001c 	str	r0, [sp, #28]
4000a698:	e59f1140 	ldr	r1, [pc, #320]	; 4000a7e0 <_txe_thread_create+0x250>
4000a69c:	e59d001c 	ldr	r0, [sp, #28]
4000a6a0:	e5911000 	ldr	r1, [r1]
4000a6a4:	e1500001 	cmp	r0, r1
4000a6a8:	3affffdc 	bcc	4000a620 <_txe_thread_create+0x90>
4000a6ac:	e1a00000 	nop			; (mov r0, r0)
4000a6b0:	e10f0000 	mrs	r0, CPSR
4000a6b4:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a6b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a6bc:	e3800080 	orr	r0, r0, #128	; 0x80
4000a6c0:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a6c4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a6c8:	e121f000 	msr	CPSR_c, r0
4000a6cc:	e59f0104 	ldr	r0, [pc, #260]	; 4000a7d8 <_txe_thread_create+0x248>
4000a6d0:	e5900000 	ldr	r0, [r0]
4000a6d4:	e2400001 	sub	r0, r0, #1
4000a6d8:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a7d8 <_txe_thread_create+0x248>
4000a6dc:	e5810000 	str	r0, [r1]
4000a6e0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a6e4:	e121f000 	msr	CPSR_c, r0
4000a6e8:	eb0012c1 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000a6ec:	e59d0018 	ldr	r0, [sp, #24]
4000a6f0:	e1540000 	cmp	r4, r0
4000a6f4:	1a000001 	bne	4000a700 <_txe_thread_create+0x170>
4000a6f8:	e3a0000e 	mov	r0, #14
4000a6fc:	eaffffaf 	b	4000a5c0 <_txe_thread_create+0x30>
4000a700:	e3560000 	cmp	r6, #0
4000a704:	0a000001 	beq	4000a710 <_txe_thread_create+0x180>
4000a708:	e3550000 	cmp	r5, #0
4000a70c:	1a000001 	bne	4000a718 <_txe_thread_create+0x188>
4000a710:	e3a00003 	mov	r0, #3
4000a714:	eaffffa9 	b	4000a5c0 <_txe_thread_create+0x30>
4000a718:	e35700c8 	cmp	r7, #200	; 0xc8
4000a71c:	2a000001 	bcs	4000a728 <_txe_thread_create+0x198>
4000a720:	e3a00005 	mov	r0, #5
4000a724:	eaffffa5 	b	4000a5c0 <_txe_thread_create+0x30>
4000a728:	e3580020 	cmp	r8, #32
4000a72c:	3a000001 	bcc	4000a738 <_txe_thread_create+0x1a8>
4000a730:	e3a0000f 	mov	r0, #15
4000a734:	eaffffa1 	b	4000a5c0 <_txe_thread_create+0x30>
4000a738:	e1590008 	cmp	r9, r8
4000a73c:	9a000001 	bls	4000a748 <_txe_thread_create+0x1b8>
4000a740:	e3a00018 	mov	r0, #24
4000a744:	eaffff9d 	b	4000a5c0 <_txe_thread_create+0x30>
4000a748:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a74c:	e3500001 	cmp	r0, #1
4000a750:	9a000001 	bls	4000a75c <_txe_thread_create+0x1cc>
4000a754:	e3a00010 	mov	r0, #16
4000a758:	eaffff98 	b	4000a5c0 <_txe_thread_create+0x30>
4000a75c:	e59f0080 	ldr	r0, [pc, #128]	; 4000a7e4 <_txe_thread_create+0x254>
4000a760:	e590a000 	ldr	sl, [r0]
4000a764:	e35a0000 	cmp	sl, #0
4000a768:	0a000008 	beq	4000a790 <_txe_thread_create+0x200>
4000a76c:	e59f0074 	ldr	r0, [pc, #116]	; 4000a7e8 <_txe_thread_create+0x258>
4000a770:	e15a0000 	cmp	sl, r0
4000a774:	0a000003 	beq	4000a788 <_txe_thread_create+0x1f8>
4000a778:	e59f006c 	ldr	r0, [pc, #108]	; 4000a7ec <_txe_thread_create+0x25c>
4000a77c:	e5900000 	ldr	r0, [r0]
4000a780:	e3500000 	cmp	r0, #0
4000a784:	0a000008 	beq	4000a7ac <_txe_thread_create+0x21c>
4000a788:	e3a00013 	mov	r0, #19
4000a78c:	eaffff8b 	b	4000a5c0 <_txe_thread_create+0x30>
4000a790:	e59f0054 	ldr	r0, [pc, #84]	; 4000a7ec <_txe_thread_create+0x25c>
4000a794:	e5900000 	ldr	r0, [r0]
4000a798:	e59f1050 	ldr	r1, [pc, #80]	; 4000a7f0 <_txe_thread_create+0x260>
4000a79c:	e1500001 	cmp	r0, r1
4000a7a0:	2a000001 	bcs	4000a7ac <_txe_thread_create+0x21c>
4000a7a4:	e3a00013 	mov	r0, #19
4000a7a8:	eaffff84 	b	4000a5c0 <_txe_thread_create+0x30>
4000a7ac:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a7b0:	e1cd21f0 	strd	r2, [sp, #16]
4000a7b4:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a7b8:	e1a02005 	mov	r2, r5
4000a7bc:	e1a00004 	mov	r0, r4
4000a7c0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a7c4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a7c8:	eb000f49 	bl	4000e4f4 <_tx_thread_create>
4000a7cc:	e58d0020 	str	r0, [sp, #32]
4000a7d0:	e59d0020 	ldr	r0, [sp, #32]
4000a7d4:	eaffff79 	b	4000a5c0 <_txe_thread_create+0x30>
4000a7d8:	400312dc 	.word	0x400312dc
4000a7dc:	400312c8 	.word	0x400312c8
4000a7e0:	400312cc 	.word	0x400312cc
4000a7e4:	400312c0 	.word	0x400312c0
4000a7e8:	40032df4 	.word	0x40032df4
4000a7ec:	400312b8 	.word	0x400312b8
4000a7f0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a7f4 <_txe_thread_info_get>:
4000a7f4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a7f8:	e24dd01c 	sub	sp, sp, #28
4000a7fc:	e1a04000 	mov	r4, r0
4000a800:	e1a05001 	mov	r5, r1
4000a804:	e1a06002 	mov	r6, r2
4000a808:	e1a07003 	mov	r7, r3
4000a80c:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a810:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a814:	e3540000 	cmp	r4, #0
4000a818:	0a000003 	beq	4000a82c <_txe_thread_info_get+0x38>
4000a81c:	e5940000 	ldr	r0, [r4]
4000a820:	e59f103c 	ldr	r1, [pc, #60]	; 4000a864 <_txe_thread_info_get+0x70>
4000a824:	e1500001 	cmp	r0, r1
4000a828:	0a000002 	beq	4000a838 <_txe_thread_info_get+0x44>
4000a82c:	e3a0000e 	mov	r0, #14
4000a830:	e28dd01c 	add	sp, sp, #28
4000a834:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a838:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a83c:	e58d3010 	str	r3, [sp, #16]
4000a840:	e1a03007 	mov	r3, r7
4000a844:	e1a02006 	mov	r2, r6
4000a848:	e1a01005 	mov	r1, r5
4000a84c:	e1a00004 	mov	r0, r4
4000a850:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a854:	eb000ff5 	bl	4000e830 <_tx_thread_info_get>
4000a858:	e58d0018 	str	r0, [sp, #24]
4000a85c:	e59d0018 	ldr	r0, [sp, #24]
4000a860:	eafffff2 	b	4000a830 <_txe_thread_info_get+0x3c>
4000a864:	54485244 	.word	0x54485244

4000a868 <_txe_thread_priority_change>:
4000a868:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a86c:	e1a04000 	mov	r4, r0
4000a870:	e1a05001 	mov	r5, r1
4000a874:	e1a06002 	mov	r6, r2
4000a878:	e3540000 	cmp	r4, #0
4000a87c:	0a000003 	beq	4000a890 <_txe_thread_priority_change+0x28>
4000a880:	e5940000 	ldr	r0, [r4]
4000a884:	e59f1070 	ldr	r1, [pc, #112]	; 4000a8fc <_txe_thread_priority_change+0x94>
4000a888:	e1500001 	cmp	r0, r1
4000a88c:	0a000001 	beq	4000a898 <_txe_thread_priority_change+0x30>
4000a890:	e3a0000e 	mov	r0, #14
4000a894:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a898:	e3560000 	cmp	r6, #0
4000a89c:	1a000001 	bne	4000a8a8 <_txe_thread_priority_change+0x40>
4000a8a0:	e3a00003 	mov	r0, #3
4000a8a4:	eafffffa 	b	4000a894 <_txe_thread_priority_change+0x2c>
4000a8a8:	e3550020 	cmp	r5, #32
4000a8ac:	3a000001 	bcc	4000a8b8 <_txe_thread_priority_change+0x50>
4000a8b0:	e3a0000f 	mov	r0, #15
4000a8b4:	eafffff6 	b	4000a894 <_txe_thread_priority_change+0x2c>
4000a8b8:	e59f0040 	ldr	r0, [pc, #64]	; 4000a900 <_txe_thread_priority_change+0x98>
4000a8bc:	e5900000 	ldr	r0, [r0]
4000a8c0:	e3500000 	cmp	r0, #0
4000a8c4:	0a000003 	beq	4000a8d8 <_txe_thread_priority_change+0x70>
4000a8c8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a904 <_txe_thread_priority_change+0x9c>
4000a8cc:	e5900000 	ldr	r0, [r0]
4000a8d0:	e3500000 	cmp	r0, #0
4000a8d4:	0a000001 	beq	4000a8e0 <_txe_thread_priority_change+0x78>
4000a8d8:	e3a00013 	mov	r0, #19
4000a8dc:	eaffffec 	b	4000a894 <_txe_thread_priority_change+0x2c>
4000a8e0:	e1a02006 	mov	r2, r6
4000a8e4:	e1a01005 	mov	r1, r5
4000a8e8:	e1a00004 	mov	r0, r4
4000a8ec:	eb001039 	bl	4000e9d8 <_tx_thread_priority_change>
4000a8f0:	e1a07000 	mov	r7, r0
4000a8f4:	e1a00007 	mov	r0, r7
4000a8f8:	eaffffe5 	b	4000a894 <_txe_thread_priority_change+0x2c>
4000a8fc:	54485244 	.word	0x54485244
4000a900:	400312c0 	.word	0x400312c0
4000a904:	400312b8 	.word	0x400312b8

4000a908 <_txe_thread_relinquish>:
4000a908:	e92d4010 	push	{r4, lr}
4000a90c:	e59f0020 	ldr	r0, [pc, #32]	; 4000a934 <_txe_thread_relinquish+0x2c>
4000a910:	e5900000 	ldr	r0, [r0]
4000a914:	e3500000 	cmp	r0, #0
4000a918:	0a000004 	beq	4000a930 <_txe_thread_relinquish+0x28>
4000a91c:	e59f0014 	ldr	r0, [pc, #20]	; 4000a938 <_txe_thread_relinquish+0x30>
4000a920:	e5900000 	ldr	r0, [r0]
4000a924:	e3500000 	cmp	r0, #0
4000a928:	1a000000 	bne	4000a930 <_txe_thread_relinquish+0x28>
4000a92c:	eb001091 	bl	4000eb78 <_tx_thread_relinquish>
4000a930:	e8bd8010 	pop	{r4, pc}
4000a934:	400312c0 	.word	0x400312c0
4000a938:	400312b8 	.word	0x400312b8

4000a93c <_txe_thread_resume>:
4000a93c:	e92d4070 	push	{r4, r5, r6, lr}
4000a940:	e1a04000 	mov	r4, r0
4000a944:	e3540000 	cmp	r4, #0
4000a948:	0a000003 	beq	4000a95c <_txe_thread_resume+0x20>
4000a94c:	e5940000 	ldr	r0, [r4]
4000a950:	e59f1020 	ldr	r1, [pc, #32]	; 4000a978 <_txe_thread_resume+0x3c>
4000a954:	e1500001 	cmp	r0, r1
4000a958:	0a000001 	beq	4000a964 <_txe_thread_resume+0x28>
4000a95c:	e3a0000e 	mov	r0, #14
4000a960:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a964:	e1a00004 	mov	r0, r4
4000a968:	eb00113e 	bl	4000ee68 <_tx_thread_resume>
4000a96c:	e1a05000 	mov	r5, r0
4000a970:	e1a00005 	mov	r0, r5
4000a974:	eafffff9 	b	4000a960 <_txe_thread_resume+0x24>
4000a978:	54485244 	.word	0x54485244

4000a97c <_txe_timer_activate>:
4000a97c:	e92d4070 	push	{r4, r5, r6, lr}
4000a980:	e1a04000 	mov	r4, r0
4000a984:	e3540000 	cmp	r4, #0
4000a988:	0a000003 	beq	4000a99c <_txe_timer_activate+0x20>
4000a98c:	e5940000 	ldr	r0, [r4]
4000a990:	e59f1020 	ldr	r1, [pc, #32]	; 4000a9b8 <_txe_timer_activate+0x3c>
4000a994:	e1500001 	cmp	r0, r1
4000a998:	0a000001 	beq	4000a9a4 <_txe_timer_activate+0x28>
4000a99c:	e3a00015 	mov	r0, #21
4000a9a0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a9a4:	e1a00004 	mov	r0, r4
4000a9a8:	eb0013a4 	bl	4000f840 <_tx_timer_activate>
4000a9ac:	e1a05000 	mov	r5, r0
4000a9b0:	e1a00005 	mov	r0, r5
4000a9b4:	eafffff9 	b	4000a9a0 <_txe_timer_activate+0x24>
4000a9b8:	4154494d 	.word	0x4154494d

4000a9bc <_txe_timer_change>:
4000a9bc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a9c0:	e1a04000 	mov	r4, r0
4000a9c4:	e1a05001 	mov	r5, r1
4000a9c8:	e1a06002 	mov	r6, r2
4000a9cc:	e3540000 	cmp	r4, #0
4000a9d0:	0a000003 	beq	4000a9e4 <_txe_timer_change+0x28>
4000a9d4:	e5940000 	ldr	r0, [r4]
4000a9d8:	e59f1058 	ldr	r1, [pc, #88]	; 4000aa38 <_txe_timer_change+0x7c>
4000a9dc:	e1500001 	cmp	r0, r1
4000a9e0:	0a000001 	beq	4000a9ec <_txe_timer_change+0x30>
4000a9e4:	e3a00015 	mov	r0, #21
4000a9e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a9ec:	e3550000 	cmp	r5, #0
4000a9f0:	1a000001 	bne	4000a9fc <_txe_timer_change+0x40>
4000a9f4:	e3a00016 	mov	r0, #22
4000a9f8:	eafffffa 	b	4000a9e8 <_txe_timer_change+0x2c>
4000a9fc:	e59f0038 	ldr	r0, [pc, #56]	; 4000aa3c <_txe_timer_change+0x80>
4000aa00:	e5900000 	ldr	r0, [r0]
4000aa04:	e3c0000f 	bic	r0, r0, #15
4000aa08:	e59f1030 	ldr	r1, [pc, #48]	; 4000aa40 <_txe_timer_change+0x84>
4000aa0c:	e1500001 	cmp	r0, r1
4000aa10:	1a000001 	bne	4000aa1c <_txe_timer_change+0x60>
4000aa14:	e3a00013 	mov	r0, #19
4000aa18:	eafffff2 	b	4000a9e8 <_txe_timer_change+0x2c>
4000aa1c:	e1a02006 	mov	r2, r6
4000aa20:	e1a01005 	mov	r1, r5
4000aa24:	e1a00004 	mov	r0, r4
4000aa28:	eb0013d4 	bl	4000f980 <_tx_timer_change>
4000aa2c:	e1a07000 	mov	r7, r0
4000aa30:	e1a00007 	mov	r0, r7
4000aa34:	eaffffeb 	b	4000a9e8 <_txe_timer_change+0x2c>
4000aa38:	4154494d 	.word	0x4154494d
4000aa3c:	400312b8 	.word	0x400312b8
4000aa40:	f0f0f0f0 	.word	0xf0f0f0f0

4000aa44 <_txe_timer_create>:
4000aa44:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aa48:	e24dd01c 	sub	sp, sp, #28
4000aa4c:	e1a04000 	mov	r4, r0
4000aa50:	e1a05001 	mov	r5, r1
4000aa54:	e1a06002 	mov	r6, r2
4000aa58:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000aa5c:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000aa60:	e3540000 	cmp	r4, #0
4000aa64:	0a000001 	beq	4000aa70 <_txe_timer_create+0x2c>
4000aa68:	e358002c 	cmp	r8, #44	; 0x2c
4000aa6c:	0a000002 	beq	4000aa7c <_txe_timer_create+0x38>
4000aa70:	e3a00015 	mov	r0, #21
4000aa74:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000aa78:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000aa7c:	e10f9000 	mrs	r9, CPSR
4000aa80:	e389a080 	orr	sl, r9, #128	; 0x80
4000aa84:	e121f00a 	msr	CPSR_c, sl
4000aa88:	e59f0160 	ldr	r0, [pc, #352]	; 4000abf0 <_txe_timer_create+0x1ac>
4000aa8c:	e5900000 	ldr	r0, [r0]
4000aa90:	e2800001 	add	r0, r0, #1
4000aa94:	e59f1154 	ldr	r1, [pc, #340]	; 4000abf0 <_txe_timer_create+0x1ac>
4000aa98:	e5810000 	str	r0, [r1]
4000aa9c:	e121f009 	msr	CPSR_c, r9
4000aaa0:	e59f014c 	ldr	r0, [pc, #332]	; 4000abf4 <_txe_timer_create+0x1b0>
4000aaa4:	e5900000 	ldr	r0, [r0]
4000aaa8:	e58d0014 	str	r0, [sp, #20]
4000aaac:	e3a00000 	mov	r0, #0
4000aab0:	e58d0018 	str	r0, [sp, #24]
4000aab4:	ea000009 	b	4000aae0 <_txe_timer_create+0x9c>
4000aab8:	e59d0014 	ldr	r0, [sp, #20]
4000aabc:	e1540000 	cmp	r4, r0
4000aac0:	1a000000 	bne	4000aac8 <_txe_timer_create+0x84>
4000aac4:	ea00000a 	b	4000aaf4 <_txe_timer_create+0xb0>
4000aac8:	e59d0014 	ldr	r0, [sp, #20]
4000aacc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000aad0:	e58d0014 	str	r0, [sp, #20]
4000aad4:	e59d0018 	ldr	r0, [sp, #24]
4000aad8:	e2800001 	add	r0, r0, #1
4000aadc:	e58d0018 	str	r0, [sp, #24]
4000aae0:	e59f1110 	ldr	r1, [pc, #272]	; 4000abf8 <_txe_timer_create+0x1b4>
4000aae4:	e59d0018 	ldr	r0, [sp, #24]
4000aae8:	e5911000 	ldr	r1, [r1]
4000aaec:	e1500001 	cmp	r0, r1
4000aaf0:	3afffff0 	bcc	4000aab8 <_txe_timer_create+0x74>
4000aaf4:	e1a00000 	nop			; (mov r0, r0)
4000aaf8:	e10f9000 	mrs	r9, CPSR
4000aafc:	e389a080 	orr	sl, r9, #128	; 0x80
4000ab00:	e121f00a 	msr	CPSR_c, sl
4000ab04:	e59f00e4 	ldr	r0, [pc, #228]	; 4000abf0 <_txe_timer_create+0x1ac>
4000ab08:	e5900000 	ldr	r0, [r0]
4000ab0c:	e2400001 	sub	r0, r0, #1
4000ab10:	e59f10d8 	ldr	r1, [pc, #216]	; 4000abf0 <_txe_timer_create+0x1ac>
4000ab14:	e5810000 	str	r0, [r1]
4000ab18:	e121f009 	msr	CPSR_c, r9
4000ab1c:	eb0011b4 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000ab20:	e59d0014 	ldr	r0, [sp, #20]
4000ab24:	e1540000 	cmp	r4, r0
4000ab28:	1a000001 	bne	4000ab34 <_txe_timer_create+0xf0>
4000ab2c:	e3a00015 	mov	r0, #21
4000ab30:	eaffffcf 	b	4000aa74 <_txe_timer_create+0x30>
4000ab34:	e3570000 	cmp	r7, #0
4000ab38:	1a000001 	bne	4000ab44 <_txe_timer_create+0x100>
4000ab3c:	e3a00016 	mov	r0, #22
4000ab40:	eaffffcb 	b	4000aa74 <_txe_timer_create+0x30>
4000ab44:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ab48:	e3500001 	cmp	r0, #1
4000ab4c:	0a000004 	beq	4000ab64 <_txe_timer_create+0x120>
4000ab50:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ab54:	e3500000 	cmp	r0, #0
4000ab58:	0a000001 	beq	4000ab64 <_txe_timer_create+0x120>
4000ab5c:	e3a00017 	mov	r0, #23
4000ab60:	eaffffc3 	b	4000aa74 <_txe_timer_create+0x30>
4000ab64:	e59f0090 	ldr	r0, [pc, #144]	; 4000abfc <_txe_timer_create+0x1b8>
4000ab68:	e5900000 	ldr	r0, [r0]
4000ab6c:	e58d0010 	str	r0, [sp, #16]
4000ab70:	e59d0010 	ldr	r0, [sp, #16]
4000ab74:	e3500000 	cmp	r0, #0
4000ab78:	0a000009 	beq	4000aba4 <_txe_timer_create+0x160>
4000ab7c:	e59f107c 	ldr	r1, [pc, #124]	; 4000ac00 <_txe_timer_create+0x1bc>
4000ab80:	e59d0010 	ldr	r0, [sp, #16]
4000ab84:	e1500001 	cmp	r0, r1
4000ab88:	0a000003 	beq	4000ab9c <_txe_timer_create+0x158>
4000ab8c:	e59f0070 	ldr	r0, [pc, #112]	; 4000ac04 <_txe_timer_create+0x1c0>
4000ab90:	e5900000 	ldr	r0, [r0]
4000ab94:	e3500000 	cmp	r0, #0
4000ab98:	0a000008 	beq	4000abc0 <_txe_timer_create+0x17c>
4000ab9c:	e3a00013 	mov	r0, #19
4000aba0:	eaffffb3 	b	4000aa74 <_txe_timer_create+0x30>
4000aba4:	e59f0058 	ldr	r0, [pc, #88]	; 4000ac04 <_txe_timer_create+0x1c0>
4000aba8:	e5900000 	ldr	r0, [r0]
4000abac:	e59f1054 	ldr	r1, [pc, #84]	; 4000ac08 <_txe_timer_create+0x1c4>
4000abb0:	e1500001 	cmp	r0, r1
4000abb4:	2a000001 	bcs	4000abc0 <_txe_timer_create+0x17c>
4000abb8:	e3a00013 	mov	r0, #19
4000abbc:	eaffffac 	b	4000aa74 <_txe_timer_create+0x30>
4000abc0:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000abc4:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000abc8:	e98d000c 	stmib	sp, {r2, r3}
4000abcc:	e58d7000 	str	r7, [sp]
4000abd0:	e1a02006 	mov	r2, r6
4000abd4:	e1a01005 	mov	r1, r5
4000abd8:	e1a00004 	mov	r0, r4
4000abdc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000abe0:	eb0013b1 	bl	4000faac <_tx_timer_create>
4000abe4:	e1a0b000 	mov	fp, r0
4000abe8:	e1a0000b 	mov	r0, fp
4000abec:	eaffffa0 	b	4000aa74 <_txe_timer_create+0x30>
4000abf0:	400312dc 	.word	0x400312dc
4000abf4:	40031304 	.word	0x40031304
4000abf8:	40031308 	.word	0x40031308
4000abfc:	400312c0 	.word	0x400312c0
4000ac00:	40032df4 	.word	0x40032df4
4000ac04:	400312b8 	.word	0x400312b8
4000ac08:	f0f0f0f0 	.word	0xf0f0f0f0

4000ac0c <_txe_timer_deactivate>:
4000ac0c:	e92d4070 	push	{r4, r5, r6, lr}
4000ac10:	e1a04000 	mov	r4, r0
4000ac14:	e3540000 	cmp	r4, #0
4000ac18:	0a000003 	beq	4000ac2c <_txe_timer_deactivate+0x20>
4000ac1c:	e5940000 	ldr	r0, [r4]
4000ac20:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac48 <_txe_timer_deactivate+0x3c>
4000ac24:	e1500001 	cmp	r0, r1
4000ac28:	0a000001 	beq	4000ac34 <_txe_timer_deactivate+0x28>
4000ac2c:	e3a00015 	mov	r0, #21
4000ac30:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ac34:	e1a00004 	mov	r0, r4
4000ac38:	eb00141a 	bl	4000fca8 <_tx_timer_deactivate>
4000ac3c:	e1a05000 	mov	r5, r0
4000ac40:	e1a00005 	mov	r0, r5
4000ac44:	eafffff9 	b	4000ac30 <_txe_timer_deactivate+0x24>
4000ac48:	4154494d 	.word	0x4154494d

4000ac4c <_tx_thread_system_return>:
4000ac4c:	e3a00000 	mov	r0, #0
4000ac50:	e10f1000 	mrs	r1, CPSR
4000ac54:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac58:	e3812080 	orr	r2, r1, #128	; 0x80
4000ac5c:	e12ff002 	msr	CPSR_fsxc, r2
4000ac60:	e59f302c 	ldr	r3, [pc, #44]	; 4000ac94 <_tx_thread_system_return+0x48>
4000ac64:	e5930000 	ldr	r0, [r3]
4000ac68:	e59f2028 	ldr	r2, [pc, #40]	; 4000ac98 <_tx_thread_system_return+0x4c>
4000ac6c:	e5921000 	ldr	r1, [r2]
4000ac70:	e580d008 	str	sp, [r0, #8]
4000ac74:	e3a04000 	mov	r4, #0
4000ac78:	e3510000 	cmp	r1, #0
4000ac7c:	0a000002 	beq	4000ac8c <_tx_thread_system_return+0x40>
4000ac80:	e590101c 	ldr	r1, [r0, #28]
4000ac84:	e5824000 	str	r4, [r2]
4000ac88:	e5801018 	str	r1, [r0, #24]
4000ac8c:	e5834000 	str	r4, [r3]
4000ac90:	ea000001 	b	4000ac9c <_tx_thread_schedule>
4000ac94:	400312c0 	.word	0x400312c0
4000ac98:	400312ec 	.word	0x400312ec

4000ac9c <_tx_thread_schedule>:
4000ac9c:	e10f2000 	mrs	r2, CPSR
4000aca0:	e3c20080 	bic	r0, r2, #128	; 0x80
4000aca4:	e12ff000 	msr	CPSR_fsxc, r0
4000aca8:	e59f104c 	ldr	r1, [pc, #76]	; 4000acfc <_tx_thread_schedule+0x60>
4000acac:	e5910000 	ldr	r0, [r1]
4000acb0:	e3500000 	cmp	r0, #0
4000acb4:	0afffffc 	beq	4000acac <_tx_thread_schedule+0x10>
4000acb8:	e12ff002 	msr	CPSR_fsxc, r2
4000acbc:	e59f103c 	ldr	r1, [pc, #60]	; 4000ad00 <_tx_thread_schedule+0x64>
4000acc0:	e5810000 	str	r0, [r1]
4000acc4:	e5902004 	ldr	r2, [r0, #4]
4000acc8:	e5903018 	ldr	r3, [r0, #24]
4000accc:	e2822001 	add	r2, r2, #1
4000acd0:	e5802004 	str	r2, [r0, #4]
4000acd4:	e59f2028 	ldr	r2, [pc, #40]	; 4000ad04 <_tx_thread_schedule+0x68>
4000acd8:	e590d008 	ldr	sp, [r0, #8]
4000acdc:	e5823000 	str	r3, [r2]
4000ace0:	e8bd0003 	pop	{r0, r1}
4000ace4:	e3500000 	cmp	r0, #0
4000ace8:	116ff001 	msrne	SPSR_fsxc, r1
4000acec:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000acf0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000acf4:	e12ff001 	msr	CPSR_fsxc, r1
4000acf8:	e12fff1e 	bx	lr
4000acfc:	400312c4 	.word	0x400312c4
4000ad00:	400312c0 	.word	0x400312c0
4000ad04:	400312ec 	.word	0x400312ec

4000ad08 <_tx_thread_vectored_context_save>:
4000ad08:	e59f3044 	ldr	r3, [pc, #68]	; 4000ad54 <_tx_thread_vectored_context_save+0x4c>
4000ad0c:	e5932000 	ldr	r2, [r3]
4000ad10:	e3520000 	cmp	r2, #0
4000ad14:	0a000003 	beq	4000ad28 <_tx_thread_vectored_context_save+0x20>
4000ad18:	e2822001 	add	r2, r2, #1
4000ad1c:	e5832000 	str	r2, [r3]
4000ad20:	e3a0a000 	mov	sl, #0
4000ad24:	e12fff1e 	bx	lr
4000ad28:	e2822001 	add	r2, r2, #1
4000ad2c:	e5832000 	str	r2, [r3]
4000ad30:	e59f1020 	ldr	r1, [pc, #32]	; 4000ad58 <_tx_thread_vectored_context_save+0x50>
4000ad34:	e5910000 	ldr	r0, [r1]
4000ad38:	e3500000 	cmp	r0, #0
4000ad3c:	0a000001 	beq	4000ad48 <_tx_thread_vectored_context_save+0x40>
4000ad40:	e3a0a000 	mov	sl, #0
4000ad44:	e12fff1e 	bx	lr
4000ad48:	e3a0a000 	mov	sl, #0
4000ad4c:	e28dd020 	add	sp, sp, #32
4000ad50:	e12fff1e 	bx	lr
4000ad54:	400312b8 	.word	0x400312b8
4000ad58:	400312c0 	.word	0x400312c0

4000ad5c <_tx_timer_interrupt>:
4000ad5c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ae30 <_tx_timer_interrupt+0xd4>
4000ad60:	e5910000 	ldr	r0, [r1]
4000ad64:	e2800001 	add	r0, r0, #1
4000ad68:	e5810000 	str	r0, [r1]
4000ad6c:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ae34 <_tx_timer_interrupt+0xd8>
4000ad70:	e5932000 	ldr	r2, [r3]
4000ad74:	e3520000 	cmp	r2, #0
4000ad78:	0a000006 	beq	4000ad98 <_tx_timer_interrupt+0x3c>
4000ad7c:	e2422001 	sub	r2, r2, #1
4000ad80:	e5832000 	str	r2, [r3]
4000ad84:	e3520000 	cmp	r2, #0
4000ad88:	1a000002 	bne	4000ad98 <_tx_timer_interrupt+0x3c>
4000ad8c:	e59f30a4 	ldr	r3, [pc, #164]	; 4000ae38 <_tx_timer_interrupt+0xdc>
4000ad90:	e3a00001 	mov	r0, #1
4000ad94:	e5830000 	str	r0, [r3]
4000ad98:	e59f109c 	ldr	r1, [pc, #156]	; 4000ae3c <_tx_timer_interrupt+0xe0>
4000ad9c:	e5910000 	ldr	r0, [r1]
4000ada0:	e5902000 	ldr	r2, [r0]
4000ada4:	e3520000 	cmp	r2, #0
4000ada8:	0a000003 	beq	4000adbc <_tx_timer_interrupt+0x60>
4000adac:	e59f308c 	ldr	r3, [pc, #140]	; 4000ae40 <_tx_timer_interrupt+0xe4>
4000adb0:	e3a02001 	mov	r2, #1
4000adb4:	e5832000 	str	r2, [r3]
4000adb8:	ea000007 	b	4000addc <_tx_timer_interrupt+0x80>
4000adbc:	e2800004 	add	r0, r0, #4
4000adc0:	e59f307c 	ldr	r3, [pc, #124]	; 4000ae44 <_tx_timer_interrupt+0xe8>
4000adc4:	e5932000 	ldr	r2, [r3]
4000adc8:	e1500002 	cmp	r0, r2
4000adcc:	1a000001 	bne	4000add8 <_tx_timer_interrupt+0x7c>
4000add0:	e59f3070 	ldr	r3, [pc, #112]	; 4000ae48 <_tx_timer_interrupt+0xec>
4000add4:	e5930000 	ldr	r0, [r3]
4000add8:	e5810000 	str	r0, [r1]
4000addc:	e59f3054 	ldr	r3, [pc, #84]	; 4000ae38 <_tx_timer_interrupt+0xdc>
4000ade0:	e5932000 	ldr	r2, [r3]
4000ade4:	e3520000 	cmp	r2, #0
4000ade8:	1a000003 	bne	4000adfc <_tx_timer_interrupt+0xa0>
4000adec:	e59f104c 	ldr	r1, [pc, #76]	; 4000ae40 <_tx_timer_interrupt+0xe4>
4000adf0:	e5910000 	ldr	r0, [r1]
4000adf4:	e3500000 	cmp	r0, #0
4000adf8:	0a00000b 	beq	4000ae2c <_tx_timer_interrupt+0xd0>
4000adfc:	e92d4001 	push	{r0, lr}
4000ae00:	e59f1038 	ldr	r1, [pc, #56]	; 4000ae40 <_tx_timer_interrupt+0xe4>
4000ae04:	e5910000 	ldr	r0, [r1]
4000ae08:	e3500000 	cmp	r0, #0
4000ae0c:	0a000000 	beq	4000ae14 <_tx_timer_interrupt+0xb8>
4000ae10:	eb001441 	bl	4000ff1c <_tx_timer_expiration_process>
4000ae14:	e59f301c 	ldr	r3, [pc, #28]	; 4000ae38 <_tx_timer_interrupt+0xdc>
4000ae18:	e5932000 	ldr	r2, [r3]
4000ae1c:	e3520000 	cmp	r2, #0
4000ae20:	0a000000 	beq	4000ae28 <_tx_timer_interrupt+0xcc>
4000ae24:	eb001210 	bl	4000f66c <_tx_thread_time_slice>
4000ae28:	e8bd4001 	pop	{r0, lr}
4000ae2c:	e12fff1e 	bx	lr
4000ae30:	400312e8 	.word	0x400312e8
4000ae34:	400312ec 	.word	0x400312ec
4000ae38:	400312f0 	.word	0x400312f0
4000ae3c:	400312fc 	.word	0x400312fc
4000ae40:	40031300 	.word	0x40031300
4000ae44:	400312f8 	.word	0x400312f8
4000ae48:	400312f4 	.word	0x400312f4

4000ae4c <_tx_thread_context_restore>:
4000ae4c:	e10f3000 	mrs	r3, CPSR
4000ae50:	e3830080 	orr	r0, r3, #128	; 0x80
4000ae54:	e12ff000 	msr	CPSR_fsxc, r0
4000ae58:	e59f30f0 	ldr	r3, [pc, #240]	; 4000af50 <_tx_thread_context_restore+0x104>
4000ae5c:	e5932000 	ldr	r2, [r3]
4000ae60:	e2422001 	sub	r2, r2, #1
4000ae64:	e5832000 	str	r2, [r3]
4000ae68:	e3520000 	cmp	r2, #0
4000ae6c:	0a000003 	beq	4000ae80 <_tx_thread_context_restore+0x34>
4000ae70:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ae74:	e16ff000 	msr	SPSR_fsxc, r0
4000ae78:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ae7c:	e1b0f00e 	movs	pc, lr
4000ae80:	e59f10cc 	ldr	r1, [pc, #204]	; 4000af54 <_tx_thread_context_restore+0x108>
4000ae84:	e5910000 	ldr	r0, [r1]
4000ae88:	e3500000 	cmp	r0, #0
4000ae8c:	0a00002a 	beq	4000af3c <_tx_thread_context_restore+0xf0>
4000ae90:	e59f30c0 	ldr	r3, [pc, #192]	; 4000af58 <_tx_thread_context_restore+0x10c>
4000ae94:	e5932000 	ldr	r2, [r3]
4000ae98:	e3520000 	cmp	r2, #0
4000ae9c:	1a000003 	bne	4000aeb0 <_tx_thread_context_restore+0x64>
4000aea0:	e59f30b4 	ldr	r3, [pc, #180]	; 4000af5c <_tx_thread_context_restore+0x110>
4000aea4:	e5932000 	ldr	r2, [r3]
4000aea8:	e1500002 	cmp	r0, r2
4000aeac:	1a000003 	bne	4000aec0 <_tx_thread_context_restore+0x74>
4000aeb0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000aeb4:	e16ff000 	msr	SPSR_fsxc, r0
4000aeb8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000aebc:	e1b0f00e 	movs	pc, lr
4000aec0:	e8bd5408 	pop	{r3, sl, ip, lr}
4000aec4:	e1a0100e 	mov	r1, lr
4000aec8:	e3a020d3 	mov	r2, #211	; 0xd3
4000aecc:	e121f002 	msr	CPSR_c, r2
4000aed0:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000aed4:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000aed8:	e1a04003 	mov	r4, r3
4000aedc:	e3a020d2 	mov	r2, #210	; 0xd2
4000aee0:	e121f002 	msr	CPSR_c, r2
4000aee4:	e8bd000f 	pop	{r0, r1, r2, r3}
4000aee8:	e3a050d3 	mov	r5, #211	; 0xd3
4000aeec:	e121f005 	msr	CPSR_c, r5
4000aef0:	e92d000f 	push	{r0, r1, r2, r3}
4000aef4:	e3a03001 	mov	r3, #1
4000aef8:	e92d0018 	push	{r3, r4}
4000aefc:	e59f1050 	ldr	r1, [pc, #80]	; 4000af54 <_tx_thread_context_restore+0x108>
4000af00:	e5910000 	ldr	r0, [r1]
4000af04:	e580d008 	str	sp, [r0, #8]
4000af08:	e3c44020 	bic	r4, r4, #32
4000af0c:	e3843080 	orr	r3, r4, #128	; 0x80
4000af10:	e12ff003 	msr	CPSR_fsxc, r3
4000af14:	e59f3044 	ldr	r3, [pc, #68]	; 4000af60 <_tx_thread_context_restore+0x114>
4000af18:	e5932000 	ldr	r2, [r3]
4000af1c:	e3520000 	cmp	r2, #0
4000af20:	0a000002 	beq	4000af30 <_tx_thread_context_restore+0xe4>
4000af24:	e5802018 	str	r2, [r0, #24]
4000af28:	e3a02000 	mov	r2, #0
4000af2c:	e5832000 	str	r2, [r3]
4000af30:	e3a00000 	mov	r0, #0
4000af34:	e5810000 	str	r0, [r1]
4000af38:	eaffff57 	b	4000ac9c <_tx_thread_schedule>
4000af3c:	e10f3000 	mrs	r3, CPSR
4000af40:	e3c3301f 	bic	r3, r3, #31
4000af44:	e3833013 	orr	r3, r3, #19
4000af48:	e12ff003 	msr	CPSR_fsxc, r3
4000af4c:	eaffff52 	b	4000ac9c <_tx_thread_schedule>
4000af50:	400312b8 	.word	0x400312b8
4000af54:	400312c0 	.word	0x400312c0
4000af58:	400312dc 	.word	0x400312dc
4000af5c:	400312c4 	.word	0x400312c4
4000af60:	400312ec 	.word	0x400312ec

4000af64 <_tx_thread_irq_nesting_end>:
4000af64:	e1a0300e 	mov	r3, lr
4000af68:	e10f0000 	mrs	r0, CPSR
4000af6c:	e3800080 	orr	r0, r0, #128	; 0x80
4000af70:	e12ff000 	msr	CPSR_fsxc, r0
4000af74:	e8bd4002 	pop	{r1, lr}
4000af78:	e3c0001f 	bic	r0, r0, #31
4000af7c:	e3800012 	orr	r0, r0, #18
4000af80:	e12ff000 	msr	CPSR_fsxc, r0
4000af84:	e12fff13 	bx	r3

4000af88 <_tx_thread_irq_nesting_start>:
4000af88:	e1a0300e 	mov	r3, lr
4000af8c:	e10f0000 	mrs	r0, CPSR
4000af90:	e3c0001f 	bic	r0, r0, #31
4000af94:	e380001f 	orr	r0, r0, #31
4000af98:	e12ff000 	msr	CPSR_fsxc, r0
4000af9c:	e92d4002 	push	{r1, lr}
4000afa0:	e3c00080 	bic	r0, r0, #128	; 0x80
4000afa4:	e12ff000 	msr	CPSR_fsxc, r0
4000afa8:	e12fff13 	bx	r3

4000afac <_tx_initialize_low_level>:
4000afac:	e1a0100d 	mov	r1, sp
4000afb0:	e59f3024 	ldr	r3, [pc, #36]	; 4000afdc <_tx_initialize_low_level+0x30>
4000afb4:	e5831000 	str	r1, [r3]
4000afb8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000afbc:	e3a00000 	mov	r0, #0
4000afc0:	eb005c01 	bl	40021fcc <CyU3POsTimerInit>
4000afc4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000afc8:	e12fff1e 	bx	lr
4000afcc:	e59f200c 	ldr	r2, [pc, #12]	; 4000afe0 <_tx_initialize_low_level+0x34>
4000afd0:	e5920000 	ldr	r0, [r2]
4000afd4:	e59f2008 	ldr	r2, [pc, #8]	; 4000afe4 <_tx_initialize_low_level+0x38>
4000afd8:	e5920000 	ldr	r0, [r2]
4000afdc:	400312bc 	.word	0x400312bc
4000afe0:	400312e0 	.word	0x400312e0
4000afe4:	40031254 	.word	0x40031254

4000afe8 <_tx_byte_allocate>:
4000afe8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000afec:	e1a04000 	mov	r4, r0
4000aff0:	e1a05001 	mov	r5, r1
4000aff4:	e1a06002 	mov	r6, r2
4000aff8:	e1a07003 	mov	r7, r3
4000affc:	e3a00000 	mov	r0, #0
4000b000:	e58d0000 	str	r0, [sp]
4000b004:	e59f027c 	ldr	r0, [pc, #636]	; 4000b288 <_tx_byte_allocate+0x2a0>
4000b008:	e590a000 	ldr	sl, [r0]
4000b00c:	e10f8000 	mrs	r8, CPSR
4000b010:	e3889080 	orr	r9, r8, #128	; 0x80
4000b014:	e121f009 	msr	CPSR_c, r9
4000b018:	e2860003 	add	r0, r6, #3
4000b01c:	e1a00120 	lsr	r0, r0, #2
4000b020:	e1a06100 	lsl	r6, r0, #2
4000b024:	e59f0260 	ldr	r0, [pc, #608]	; 4000b28c <_tx_byte_allocate+0x2a4>
4000b028:	e5900000 	ldr	r0, [r0]
4000b02c:	e58d0004 	str	r0, [sp, #4]
4000b030:	e59f1254 	ldr	r1, [pc, #596]	; 4000b28c <_tx_byte_allocate+0x2a4>
4000b034:	e5910000 	ldr	r0, [r1]
4000b038:	e3500000 	cmp	r0, #0
4000b03c:	0a000031 	beq	4000b108 <_tx_byte_allocate+0x120>
4000b040:	e59f1248 	ldr	r1, [pc, #584]	; 4000b290 <_tx_byte_allocate+0x2a8>
4000b044:	e5911000 	ldr	r1, [r1]
4000b048:	e2811001 	add	r1, r1, #1
4000b04c:	e59f223c 	ldr	r2, [pc, #572]	; 4000b290 <_tx_byte_allocate+0x2a8>
4000b050:	e5821000 	str	r1, [r2]
4000b054:	e580100c 	str	r1, [r0, #12]
4000b058:	e59f1234 	ldr	r1, [pc, #564]	; 4000b294 <_tx_byte_allocate+0x2ac>
4000b05c:	e5911000 	ldr	r1, [r1]
4000b060:	e3510000 	cmp	r1, #0
4000b064:	1a000006 	bne	4000b084 <_tx_byte_allocate+0x9c>
4000b068:	e59f1218 	ldr	r1, [pc, #536]	; 4000b288 <_tx_byte_allocate+0x2a0>
4000b06c:	e5911000 	ldr	r1, [r1]
4000b070:	e5801000 	str	r1, [r0]
4000b074:	e5901000 	ldr	r1, [r0]
4000b078:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b07c:	e5801004 	str	r1, [r0, #4]
4000b080:	ea00000d 	b	4000b0bc <_tx_byte_allocate+0xd4>
4000b084:	e59f1208 	ldr	r1, [pc, #520]	; 4000b294 <_tx_byte_allocate+0x2ac>
4000b088:	e5911000 	ldr	r1, [r1]
4000b08c:	e59f2204 	ldr	r2, [pc, #516]	; 4000b298 <_tx_byte_allocate+0x2b0>
4000b090:	e1510002 	cmp	r1, r2
4000b094:	2a000004 	bcs	4000b0ac <_tx_byte_allocate+0xc4>
4000b098:	e3e01000 	mvn	r1, #0
4000b09c:	e5801000 	str	r1, [r0]
4000b0a0:	e3a01000 	mov	r1, #0
4000b0a4:	e5801004 	str	r1, [r0, #4]
4000b0a8:	ea000003 	b	4000b0bc <_tx_byte_allocate+0xd4>
4000b0ac:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b298 <_tx_byte_allocate+0x2b0>
4000b0b0:	e5801000 	str	r1, [r0]
4000b0b4:	e3a01000 	mov	r1, #0
4000b0b8:	e5801004 	str	r1, [r0, #4]
4000b0bc:	e3a01014 	mov	r1, #20
4000b0c0:	e5801008 	str	r1, [r0, #8]
4000b0c4:	e5804010 	str	r4, [r0, #16]
4000b0c8:	e3a01000 	mov	r1, #0
4000b0cc:	e5801014 	str	r1, [r0, #20]
4000b0d0:	e5806018 	str	r6, [r0, #24]
4000b0d4:	e580701c 	str	r7, [r0, #28]
4000b0d8:	e2800020 	add	r0, r0, #32
4000b0dc:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b29c <_tx_byte_allocate+0x2b4>
4000b0e0:	e5911000 	ldr	r1, [r1]
4000b0e4:	e1500001 	cmp	r0, r1
4000b0e8:	3a000001 	bcc	4000b0f4 <_tx_byte_allocate+0x10c>
4000b0ec:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b2a0 <_tx_byte_allocate+0x2b8>
4000b0f0:	e5910000 	ldr	r0, [r1]
4000b0f4:	e59f1190 	ldr	r1, [pc, #400]	; 4000b28c <_tx_byte_allocate+0x2a4>
4000b0f8:	e5810000 	str	r0, [r1]
4000b0fc:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b2a4 <_tx_byte_allocate+0x2bc>
4000b100:	e5911000 	ldr	r1, [r1]
4000b104:	e5810020 	str	r0, [r1, #32]
4000b108:	e59d0004 	ldr	r0, [sp, #4]
4000b10c:	e3500000 	cmp	r0, #0
4000b110:	0a000002 	beq	4000b120 <_tx_byte_allocate+0x138>
4000b114:	e59d0004 	ldr	r0, [sp, #4]
4000b118:	e590000c 	ldr	r0, [r0, #12]
4000b11c:	e58d0000 	str	r0, [sp]
4000b120:	e1a00000 	nop			; (mov r0, r0)
4000b124:	e584a020 	str	sl, [r4, #32]
4000b128:	e121f008 	msr	CPSR_c, r8
4000b12c:	e1a01006 	mov	r1, r6
4000b130:	e1a00004 	mov	r0, r4
4000b134:	eb0001ba 	bl	4000b824 <_tx_byte_pool_search>
4000b138:	e1a0b000 	mov	fp, r0
4000b13c:	e10f8000 	mrs	r8, CPSR
4000b140:	e3889080 	orr	r9, r8, #128	; 0x80
4000b144:	e121f009 	msr	CPSR_c, r9
4000b148:	e35b0000 	cmp	fp, #0
4000b14c:	1a000002 	bne	4000b15c <_tx_byte_allocate+0x174>
4000b150:	e5940020 	ldr	r0, [r4, #32]
4000b154:	e150000a 	cmp	r0, sl
4000b158:	1afffff1 	bne	4000b124 <_tx_byte_allocate+0x13c>
4000b15c:	e35b0000 	cmp	fp, #0
4000b160:	0a00000e 	beq	4000b1a0 <_tx_byte_allocate+0x1b8>
4000b164:	e585b000 	str	fp, [r5]
4000b168:	e59d0004 	ldr	r0, [sp, #4]
4000b16c:	e3500000 	cmp	r0, #0
4000b170:	0a000007 	beq	4000b194 <_tx_byte_allocate+0x1ac>
4000b174:	e59d0004 	ldr	r0, [sp, #4]
4000b178:	e590100c 	ldr	r1, [r0, #12]
4000b17c:	e59d0000 	ldr	r0, [sp]
4000b180:	e1510000 	cmp	r1, r0
4000b184:	1a000002 	bne	4000b194 <_tx_byte_allocate+0x1ac>
4000b188:	e5950000 	ldr	r0, [r5]
4000b18c:	e59d1004 	ldr	r1, [sp, #4]
4000b190:	e5810014 	str	r0, [r1, #20]
4000b194:	e3a00000 	mov	r0, #0
4000b198:	e58d0008 	str	r0, [sp, #8]
4000b19c:	ea000036 	b	4000b27c <_tx_byte_allocate+0x294>
4000b1a0:	e3570000 	cmp	r7, #0
4000b1a4:	0a000032 	beq	4000b274 <_tx_byte_allocate+0x28c>
4000b1a8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b2a8 <_tx_byte_allocate+0x2c0>
4000b1ac:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b1b0:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b1b4:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b1b8:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b1bc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1c0:	e3500000 	cmp	r0, #0
4000b1c4:	0a00000a 	beq	4000b1f4 <_tx_byte_allocate+0x20c>
4000b1c8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1cc:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b1d0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1d4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b1d8:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b1dc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1e0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b1e4:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b1e8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1ec:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b1f0:	ea000002 	b	4000b200 <_tx_byte_allocate+0x218>
4000b1f4:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b1f8:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b1fc:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b200:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b204:	e2800001 	add	r0, r0, #1
4000b208:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b20c:	e3a00009 	mov	r0, #9
4000b210:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b214:	e3a00001 	mov	r0, #1
4000b218:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b21c:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b220:	e59f0084 	ldr	r0, [pc, #132]	; 4000b2ac <_tx_byte_allocate+0x2c4>
4000b224:	e5900000 	ldr	r0, [r0]
4000b228:	e2800001 	add	r0, r0, #1
4000b22c:	e59f1078 	ldr	r1, [pc, #120]	; 4000b2ac <_tx_byte_allocate+0x2c4>
4000b230:	e5810000 	str	r0, [r1]
4000b234:	e121f008 	msr	CPSR_c, r8
4000b238:	e1a0000a 	mov	r0, sl
4000b23c:	ebfff671 	bl	40008c08 <_tx_thread_system_suspend>
4000b240:	e59d0004 	ldr	r0, [sp, #4]
4000b244:	e3500000 	cmp	r0, #0
4000b248:	0a000007 	beq	4000b26c <_tx_byte_allocate+0x284>
4000b24c:	e59d0004 	ldr	r0, [sp, #4]
4000b250:	e590100c 	ldr	r1, [r0, #12]
4000b254:	e59d0000 	ldr	r0, [sp]
4000b258:	e1510000 	cmp	r1, r0
4000b25c:	1a000002 	bne	4000b26c <_tx_byte_allocate+0x284>
4000b260:	e5950000 	ldr	r0, [r5]
4000b264:	e59d1004 	ldr	r1, [sp, #4]
4000b268:	e5810014 	str	r0, [r1, #20]
4000b26c:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b270:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b274:	e3a00010 	mov	r0, #16
4000b278:	e58d0008 	str	r0, [sp, #8]
4000b27c:	e121f008 	msr	CPSR_c, r8
4000b280:	e59d0008 	ldr	r0, [sp, #8]
4000b284:	eafffff9 	b	4000b270 <_tx_byte_allocate+0x288>
4000b288:	400312c0 	.word	0x400312c0
4000b28c:	4003132c 	.word	0x4003132c
4000b290:	40031330 	.word	0x40031330
4000b294:	400312b8 	.word	0x400312b8
4000b298:	f0f0f0f0 	.word	0xf0f0f0f0
4000b29c:	40031328 	.word	0x40031328
4000b2a0:	40031324 	.word	0x40031324
4000b2a4:	40031318 	.word	0x40031318
4000b2a8:	4000b2b0 	.word	0x4000b2b0
4000b2ac:	400312dc 	.word	0x400312dc

4000b2b0 <_tx_byte_pool_cleanup>:
4000b2b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b2b4:	e1a04000 	mov	r4, r0
4000b2b8:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b2bc:	e10f5000 	mrs	r5, CPSR
4000b2c0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b2c4:	e121f006 	msr	CPSR_c, r6
4000b2c8:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b2cc:	e3500000 	cmp	r0, #0
4000b2d0:	0a000026 	beq	4000b370 <_tx_byte_pool_cleanup+0xc0>
4000b2d4:	e3570000 	cmp	r7, #0
4000b2d8:	0a000024 	beq	4000b370 <_tx_byte_pool_cleanup+0xc0>
4000b2dc:	e5970000 	ldr	r0, [r7]
4000b2e0:	e59f1090 	ldr	r1, [pc, #144]	; 4000b378 <_tx_byte_pool_cleanup+0xc8>
4000b2e4:	e1500001 	cmp	r0, r1
4000b2e8:	1a000020 	bne	4000b370 <_tx_byte_pool_cleanup+0xc0>
4000b2ec:	e3a00000 	mov	r0, #0
4000b2f0:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b2f4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b2f8:	e1500004 	cmp	r0, r4
4000b2fc:	1a000002 	bne	4000b30c <_tx_byte_pool_cleanup+0x5c>
4000b300:	e3a00000 	mov	r0, #0
4000b304:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b308:	ea000007 	b	4000b32c <_tx_byte_pool_cleanup+0x7c>
4000b30c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b310:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b314:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b318:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b31c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b320:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b324:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b328:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b32c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b330:	e2400001 	sub	r0, r0, #1
4000b334:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b338:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b33c:	e3500009 	cmp	r0, #9
4000b340:	1a00000a 	bne	4000b370 <_tx_byte_pool_cleanup+0xc0>
4000b344:	e3a00010 	mov	r0, #16
4000b348:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b34c:	e59f0028 	ldr	r0, [pc, #40]	; 4000b37c <_tx_byte_pool_cleanup+0xcc>
4000b350:	e5900000 	ldr	r0, [r0]
4000b354:	e2800001 	add	r0, r0, #1
4000b358:	e59f101c 	ldr	r1, [pc, #28]	; 4000b37c <_tx_byte_pool_cleanup+0xcc>
4000b35c:	e5810000 	str	r0, [r1]
4000b360:	e121f005 	msr	CPSR_c, r5
4000b364:	e1a00004 	mov	r0, r4
4000b368:	eb000fcd 	bl	4000f2a4 <_tx_thread_system_resume>
4000b36c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b370:	e121f005 	msr	CPSR_c, r5
4000b374:	eafffffc 	b	4000b36c <_tx_byte_pool_cleanup+0xbc>
4000b378:	42595445 	.word	0x42595445
4000b37c:	400312dc 	.word	0x400312dc

4000b380 <_tx_byte_pool_create>:
4000b380:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b384:	e1a04000 	mov	r4, r0
4000b388:	e1a05001 	mov	r5, r1
4000b38c:	e1a06002 	mov	r6, r2
4000b390:	e1a07003 	mov	r7, r3
4000b394:	e3a01034 	mov	r1, #52	; 0x34
4000b398:	e1a00004 	mov	r0, r4
4000b39c:	eb0020fd 	bl	40013798 <__aeabi_memclr4>
4000b3a0:	e1a00127 	lsr	r0, r7, #2
4000b3a4:	e1a07100 	lsl	r7, r0, #2
4000b3a8:	e5845004 	str	r5, [r4, #4]
4000b3ac:	e5846018 	str	r6, [r4, #24]
4000b3b0:	e584701c 	str	r7, [r4, #28]
4000b3b4:	e5846010 	str	r6, [r4, #16]
4000b3b8:	e5846014 	str	r6, [r4, #20]
4000b3bc:	e2470008 	sub	r0, r7, #8
4000b3c0:	e5840008 	str	r0, [r4, #8]
4000b3c4:	e3a00002 	mov	r0, #2
4000b3c8:	e584000c 	str	r0, [r4, #12]
4000b3cc:	e0860007 	add	r0, r6, r7
4000b3d0:	e58d0004 	str	r0, [sp, #4]
4000b3d4:	e59d0004 	ldr	r0, [sp, #4]
4000b3d8:	e2400004 	sub	r0, r0, #4
4000b3dc:	e58d0004 	str	r0, [sp, #4]
4000b3e0:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b5a4 <_tx_byte_pool_create+0x224>
4000b3e4:	e59d1004 	ldr	r1, [sp, #4]
4000b3e8:	e5810000 	str	r0, [r1]
4000b3ec:	e59d0004 	ldr	r0, [sp, #4]
4000b3f0:	e2400004 	sub	r0, r0, #4
4000b3f4:	e58d0004 	str	r0, [sp, #4]
4000b3f8:	e59d0004 	ldr	r0, [sp, #4]
4000b3fc:	e5806000 	str	r6, [r0]
4000b400:	e59d0004 	ldr	r0, [sp, #4]
4000b404:	e5860000 	str	r0, [r6]
4000b408:	e58d6004 	str	r6, [sp, #4]
4000b40c:	e59d0004 	ldr	r0, [sp, #4]
4000b410:	e2800004 	add	r0, r0, #4
4000b414:	e58d0004 	str	r0, [sp, #4]
4000b418:	e59f0188 	ldr	r0, [pc, #392]	; 4000b5a8 <_tx_byte_pool_create+0x228>
4000b41c:	e59d1004 	ldr	r1, [sp, #4]
4000b420:	e5810000 	str	r0, [r1]
4000b424:	e3a00000 	mov	r0, #0
4000b428:	e5840020 	str	r0, [r4, #32]
4000b42c:	e10f8000 	mrs	r8, CPSR
4000b430:	e3889080 	orr	r9, r8, #128	; 0x80
4000b434:	e121f009 	msr	CPSR_c, r9
4000b438:	e59f016c 	ldr	r0, [pc, #364]	; 4000b5ac <_tx_byte_pool_create+0x22c>
4000b43c:	e5840000 	str	r0, [r4]
4000b440:	e59f0168 	ldr	r0, [pc, #360]	; 4000b5b0 <_tx_byte_pool_create+0x230>
4000b444:	e5900000 	ldr	r0, [r0]
4000b448:	e3500000 	cmp	r0, #0
4000b44c:	0a00000b 	beq	4000b480 <_tx_byte_pool_create+0x100>
4000b450:	e59f0158 	ldr	r0, [pc, #344]	; 4000b5b0 <_tx_byte_pool_create+0x230>
4000b454:	e5900000 	ldr	r0, [r0]
4000b458:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b45c:	e59f014c 	ldr	r0, [pc, #332]	; 4000b5b0 <_tx_byte_pool_create+0x230>
4000b460:	e5900000 	ldr	r0, [r0]
4000b464:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b468:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b46c:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b470:	e59f0138 	ldr	r0, [pc, #312]	; 4000b5b0 <_tx_byte_pool_create+0x230>
4000b474:	e5900000 	ldr	r0, [r0]
4000b478:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b47c:	ea000003 	b	4000b490 <_tx_byte_pool_create+0x110>
4000b480:	e59f0128 	ldr	r0, [pc, #296]	; 4000b5b0 <_tx_byte_pool_create+0x230>
4000b484:	e5804000 	str	r4, [r0]
4000b488:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b48c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b490:	e59f011c 	ldr	r0, [pc, #284]	; 4000b5b4 <_tx_byte_pool_create+0x234>
4000b494:	e5900000 	ldr	r0, [r0]
4000b498:	e2800001 	add	r0, r0, #1
4000b49c:	e59f1110 	ldr	r1, [pc, #272]	; 4000b5b4 <_tx_byte_pool_create+0x234>
4000b4a0:	e5810000 	str	r0, [r1]
4000b4a4:	e3a03000 	mov	r3, #0
4000b4a8:	e58d3000 	str	r3, [sp]
4000b4ac:	e1a03007 	mov	r3, r7
4000b4b0:	e1a02005 	mov	r2, r5
4000b4b4:	e1a01004 	mov	r1, r4
4000b4b8:	e3a00008 	mov	r0, #8
4000b4bc:	eb0012ce 	bl	4000fffc <_tx_trace_object_register>
4000b4c0:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b5b8 <_tx_byte_pool_create+0x238>
4000b4c4:	e5910000 	ldr	r0, [r1]
4000b4c8:	e3500000 	cmp	r0, #0
4000b4cc:	0a000031 	beq	4000b598 <_tx_byte_pool_create+0x218>
4000b4d0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b5bc <_tx_byte_pool_create+0x23c>
4000b4d4:	e5911000 	ldr	r1, [r1]
4000b4d8:	e2811001 	add	r1, r1, #1
4000b4dc:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b5bc <_tx_byte_pool_create+0x23c>
4000b4e0:	e5821000 	str	r1, [r2]
4000b4e4:	e580100c 	str	r1, [r0, #12]
4000b4e8:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b5c0 <_tx_byte_pool_create+0x240>
4000b4ec:	e5911000 	ldr	r1, [r1]
4000b4f0:	e3510000 	cmp	r1, #0
4000b4f4:	1a000006 	bne	4000b514 <_tx_byte_pool_create+0x194>
4000b4f8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b5c4 <_tx_byte_pool_create+0x244>
4000b4fc:	e5911000 	ldr	r1, [r1]
4000b500:	e5801000 	str	r1, [r0]
4000b504:	e5901000 	ldr	r1, [r0]
4000b508:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b50c:	e5801004 	str	r1, [r0, #4]
4000b510:	ea00000d 	b	4000b54c <_tx_byte_pool_create+0x1cc>
4000b514:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b5c0 <_tx_byte_pool_create+0x240>
4000b518:	e5911000 	ldr	r1, [r1]
4000b51c:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b5c8 <_tx_byte_pool_create+0x248>
4000b520:	e1510002 	cmp	r1, r2
4000b524:	2a000004 	bcs	4000b53c <_tx_byte_pool_create+0x1bc>
4000b528:	e3e01000 	mvn	r1, #0
4000b52c:	e5801000 	str	r1, [r0]
4000b530:	e3a01000 	mov	r1, #0
4000b534:	e5801004 	str	r1, [r0, #4]
4000b538:	ea000003 	b	4000b54c <_tx_byte_pool_create+0x1cc>
4000b53c:	e59f1084 	ldr	r1, [pc, #132]	; 4000b5c8 <_tx_byte_pool_create+0x248>
4000b540:	e5801000 	str	r1, [r0]
4000b544:	e3a01000 	mov	r1, #0
4000b548:	e5801004 	str	r1, [r0, #4]
4000b54c:	e3a01015 	mov	r1, #21
4000b550:	e5801008 	str	r1, [r0, #8]
4000b554:	e5804010 	str	r4, [r0, #16]
4000b558:	e5806014 	str	r6, [r0, #20]
4000b55c:	e5807018 	str	r7, [r0, #24]
4000b560:	e28d1004 	add	r1, sp, #4
4000b564:	e580101c 	str	r1, [r0, #28]
4000b568:	e2800020 	add	r0, r0, #32
4000b56c:	e59f1058 	ldr	r1, [pc, #88]	; 4000b5cc <_tx_byte_pool_create+0x24c>
4000b570:	e5911000 	ldr	r1, [r1]
4000b574:	e1500001 	cmp	r0, r1
4000b578:	3a000001 	bcc	4000b584 <_tx_byte_pool_create+0x204>
4000b57c:	e59f104c 	ldr	r1, [pc, #76]	; 4000b5d0 <_tx_byte_pool_create+0x250>
4000b580:	e5910000 	ldr	r0, [r1]
4000b584:	e59f102c 	ldr	r1, [pc, #44]	; 4000b5b8 <_tx_byte_pool_create+0x238>
4000b588:	e5810000 	str	r0, [r1]
4000b58c:	e59f1040 	ldr	r1, [pc, #64]	; 4000b5d4 <_tx_byte_pool_create+0x254>
4000b590:	e5911000 	ldr	r1, [r1]
4000b594:	e5810020 	str	r0, [r1, #32]
4000b598:	e121f008 	msr	CPSR_c, r8
4000b59c:	e3a00000 	mov	r0, #0
4000b5a0:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b5a4:	aaaaaaaa 	.word	0xaaaaaaaa
4000b5a8:	ffffeeee 	.word	0xffffeeee
4000b5ac:	42595445 	.word	0x42595445
4000b5b0:	4003135c 	.word	0x4003135c
4000b5b4:	40031360 	.word	0x40031360
4000b5b8:	4003132c 	.word	0x4003132c
4000b5bc:	40031330 	.word	0x40031330
4000b5c0:	400312b8 	.word	0x400312b8
4000b5c4:	400312c0 	.word	0x400312c0
4000b5c8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b5cc:	40031328 	.word	0x40031328
4000b5d0:	40031324 	.word	0x40031324
4000b5d4:	40031318 	.word	0x40031318

4000b5d8 <_tx_byte_pool_delete>:
4000b5d8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b5dc:	e1a04000 	mov	r4, r0
4000b5e0:	e10f5000 	mrs	r5, CPSR
4000b5e4:	e3856080 	orr	r6, r5, #128	; 0x80
4000b5e8:	e121f006 	msr	CPSR_c, r6
4000b5ec:	e59f1204 	ldr	r1, [pc, #516]	; 4000b7f8 <_tx_byte_pool_delete+0x220>
4000b5f0:	e5910000 	ldr	r0, [r1]
4000b5f4:	e3500000 	cmp	r0, #0
4000b5f8:	0a000031 	beq	4000b6c4 <_tx_byte_pool_delete+0xec>
4000b5fc:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b7fc <_tx_byte_pool_delete+0x224>
4000b600:	e5911000 	ldr	r1, [r1]
4000b604:	e2811001 	add	r1, r1, #1
4000b608:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b7fc <_tx_byte_pool_delete+0x224>
4000b60c:	e5821000 	str	r1, [r2]
4000b610:	e580100c 	str	r1, [r0, #12]
4000b614:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b800 <_tx_byte_pool_delete+0x228>
4000b618:	e5911000 	ldr	r1, [r1]
4000b61c:	e3510000 	cmp	r1, #0
4000b620:	1a000006 	bne	4000b640 <_tx_byte_pool_delete+0x68>
4000b624:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b804 <_tx_byte_pool_delete+0x22c>
4000b628:	e5911000 	ldr	r1, [r1]
4000b62c:	e5801000 	str	r1, [r0]
4000b630:	e5901000 	ldr	r1, [r0]
4000b634:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b638:	e5801004 	str	r1, [r0, #4]
4000b63c:	ea00000d 	b	4000b678 <_tx_byte_pool_delete+0xa0>
4000b640:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b800 <_tx_byte_pool_delete+0x228>
4000b644:	e5911000 	ldr	r1, [r1]
4000b648:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b808 <_tx_byte_pool_delete+0x230>
4000b64c:	e1510002 	cmp	r1, r2
4000b650:	2a000004 	bcs	4000b668 <_tx_byte_pool_delete+0x90>
4000b654:	e3e01000 	mvn	r1, #0
4000b658:	e5801000 	str	r1, [r0]
4000b65c:	e3a01000 	mov	r1, #0
4000b660:	e5801004 	str	r1, [r0, #4]
4000b664:	ea000003 	b	4000b678 <_tx_byte_pool_delete+0xa0>
4000b668:	e59f1198 	ldr	r1, [pc, #408]	; 4000b808 <_tx_byte_pool_delete+0x230>
4000b66c:	e5801000 	str	r1, [r0]
4000b670:	e3a01000 	mov	r1, #0
4000b674:	e5801004 	str	r1, [r0, #4]
4000b678:	e3a01016 	mov	r1, #22
4000b67c:	e5801008 	str	r1, [r0, #8]
4000b680:	e5804010 	str	r4, [r0, #16]
4000b684:	e580d014 	str	sp, [r0, #20]
4000b688:	e3a01000 	mov	r1, #0
4000b68c:	e5801018 	str	r1, [r0, #24]
4000b690:	e580101c 	str	r1, [r0, #28]
4000b694:	e2800020 	add	r0, r0, #32
4000b698:	e59f116c 	ldr	r1, [pc, #364]	; 4000b80c <_tx_byte_pool_delete+0x234>
4000b69c:	e5911000 	ldr	r1, [r1]
4000b6a0:	e1500001 	cmp	r0, r1
4000b6a4:	3a000001 	bcc	4000b6b0 <_tx_byte_pool_delete+0xd8>
4000b6a8:	e59f1160 	ldr	r1, [pc, #352]	; 4000b810 <_tx_byte_pool_delete+0x238>
4000b6ac:	e5910000 	ldr	r0, [r1]
4000b6b0:	e59f1140 	ldr	r1, [pc, #320]	; 4000b7f8 <_tx_byte_pool_delete+0x220>
4000b6b4:	e5810000 	str	r0, [r1]
4000b6b8:	e59f1154 	ldr	r1, [pc, #340]	; 4000b814 <_tx_byte_pool_delete+0x23c>
4000b6bc:	e5911000 	ldr	r1, [r1]
4000b6c0:	e5810020 	str	r0, [r1, #32]
4000b6c4:	e1a00004 	mov	r0, r4
4000b6c8:	eb0012b6 	bl	400101a8 <_tx_trace_object_unregister>
4000b6cc:	e59f0144 	ldr	r0, [pc, #324]	; 4000b818 <_tx_byte_pool_delete+0x240>
4000b6d0:	e5900000 	ldr	r0, [r0]
4000b6d4:	e2400001 	sub	r0, r0, #1
4000b6d8:	e59f1138 	ldr	r1, [pc, #312]	; 4000b818 <_tx_byte_pool_delete+0x240>
4000b6dc:	e5810000 	str	r0, [r1]
4000b6e0:	e3a00000 	mov	r0, #0
4000b6e4:	e5840000 	str	r0, [r4]
4000b6e8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b6ec:	e1500004 	cmp	r0, r4
4000b6f0:	1a000003 	bne	4000b704 <_tx_byte_pool_delete+0x12c>
4000b6f4:	e3a00000 	mov	r0, #0
4000b6f8:	e59f111c 	ldr	r1, [pc, #284]	; 4000b81c <_tx_byte_pool_delete+0x244>
4000b6fc:	e5810000 	str	r0, [r1]
4000b700:	ea00000c 	b	4000b738 <_tx_byte_pool_delete+0x160>
4000b704:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b708:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b70c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b710:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b714:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b718:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b71c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b81c <_tx_byte_pool_delete+0x244>
4000b720:	e5900000 	ldr	r0, [r0]
4000b724:	e1500004 	cmp	r0, r4
4000b728:	1a000002 	bne	4000b738 <_tx_byte_pool_delete+0x160>
4000b72c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b81c <_tx_byte_pool_delete+0x244>
4000b730:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b734:	e5810000 	str	r0, [r1]
4000b738:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b73c:	e5900000 	ldr	r0, [r0]
4000b740:	e2800001 	add	r0, r0, #1
4000b744:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b748:	e5810000 	str	r0, [r1]
4000b74c:	e121f005 	msr	CPSR_c, r5
4000b750:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b754:	e58d0000 	str	r0, [sp]
4000b758:	ea000017 	b	4000b7bc <_tx_byte_pool_delete+0x1e4>
4000b75c:	e10f5000 	mrs	r5, CPSR
4000b760:	e3856080 	orr	r6, r5, #128	; 0x80
4000b764:	e121f006 	msr	CPSR_c, r6
4000b768:	e3a00000 	mov	r0, #0
4000b76c:	e59d1000 	ldr	r1, [sp]
4000b770:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b774:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b778:	e5900000 	ldr	r0, [r0]
4000b77c:	e2800001 	add	r0, r0, #1
4000b780:	e59f1098 	ldr	r1, [pc, #152]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b784:	e5810000 	str	r0, [r1]
4000b788:	e121f005 	msr	CPSR_c, r5
4000b78c:	e3a00001 	mov	r0, #1
4000b790:	e59d1000 	ldr	r1, [sp]
4000b794:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b798:	e59d0000 	ldr	r0, [sp]
4000b79c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b7a0:	e58d0000 	str	r0, [sp]
4000b7a4:	e59d1000 	ldr	r1, [sp]
4000b7a8:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b7ac:	eb000ebc 	bl	4000f2a4 <_tx_thread_system_resume>
4000b7b0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b7b4:	e2400001 	sub	r0, r0, #1
4000b7b8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b7bc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b7c0:	e3500000 	cmp	r0, #0
4000b7c4:	1affffe4 	bne	4000b75c <_tx_byte_pool_delete+0x184>
4000b7c8:	e10f5000 	mrs	r5, CPSR
4000b7cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000b7d0:	e121f006 	msr	CPSR_c, r6
4000b7d4:	e59f0044 	ldr	r0, [pc, #68]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b7d8:	e5900000 	ldr	r0, [r0]
4000b7dc:	e2400001 	sub	r0, r0, #1
4000b7e0:	e59f1038 	ldr	r1, [pc, #56]	; 4000b820 <_tx_byte_pool_delete+0x248>
4000b7e4:	e5810000 	str	r0, [r1]
4000b7e8:	e121f005 	msr	CPSR_c, r5
4000b7ec:	eb000e80 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000b7f0:	e3a00000 	mov	r0, #0
4000b7f4:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b7f8:	4003132c 	.word	0x4003132c
4000b7fc:	40031330 	.word	0x40031330
4000b800:	400312b8 	.word	0x400312b8
4000b804:	400312c0 	.word	0x400312c0
4000b808:	f0f0f0f0 	.word	0xf0f0f0f0
4000b80c:	40031328 	.word	0x40031328
4000b810:	40031324 	.word	0x40031324
4000b814:	40031318 	.word	0x40031318
4000b818:	40031360 	.word	0x40031360
4000b81c:	4003135c 	.word	0x4003135c
4000b820:	400312dc 	.word	0x400312dc

4000b824 <_tx_byte_pool_search>:
4000b824:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b828:	e1a02000 	mov	r2, r0
4000b82c:	e3a08000 	mov	r8, #0
4000b830:	e10f3000 	mrs	r3, CPSR
4000b834:	e383c080 	orr	ip, r3, #128	; 0x80
4000b838:	e121f00c 	msr	CPSR_c, ip
4000b83c:	e5920008 	ldr	r0, [r2, #8]
4000b840:	e1500001 	cmp	r0, r1
4000b844:	8a000002 	bhi	4000b854 <_tx_byte_pool_search+0x30>
4000b848:	e121f003 	msr	CPSR_c, r3
4000b84c:	e3a00000 	mov	r0, #0
4000b850:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b854:	e5925014 	ldr	r5, [r2, #20]
4000b858:	e1a0e005 	mov	lr, r5
4000b85c:	e592000c 	ldr	r0, [r2, #12]
4000b860:	e2807001 	add	r7, r0, #1
4000b864:	e3a06000 	mov	r6, #0
4000b868:	e1a00000 	nop			; (mov r0, r0)
4000b86c:	e59e0004 	ldr	r0, [lr, #4]
4000b870:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b874:	e29aa012 	adds	sl, sl, #18
4000b878:	1a000020 	bne	4000b900 <_tx_byte_pool_search+0xdc>
4000b87c:	e3580000 	cmp	r8, #0
4000b880:	1a000004 	bne	4000b898 <_tx_byte_pool_search+0x74>
4000b884:	e5920014 	ldr	r0, [r2, #20]
4000b888:	e1500005 	cmp	r0, r5
4000b88c:	1a000000 	bne	4000b894 <_tx_byte_pool_search+0x70>
4000b890:	e582e014 	str	lr, [r2, #20]
4000b894:	e3a08001 	mov	r8, #1
4000b898:	e59e4000 	ldr	r4, [lr]
4000b89c:	e044000e 	sub	r0, r4, lr
4000b8a0:	e2406008 	sub	r6, r0, #8
4000b8a4:	e1560001 	cmp	r6, r1
4000b8a8:	3a000000 	bcc	4000b8b0 <_tx_byte_pool_search+0x8c>
4000b8ac:	ea000026 	b	4000b94c <_tx_byte_pool_search+0x128>
4000b8b0:	e3a06000 	mov	r6, #0
4000b8b4:	e5940004 	ldr	r0, [r4, #4]
4000b8b8:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b8bc:	e29aa012 	adds	sl, sl, #18
4000b8c0:	1a000009 	bne	4000b8ec <_tx_byte_pool_search+0xc8>
4000b8c4:	e5940000 	ldr	r0, [r4]
4000b8c8:	e58e0000 	str	r0, [lr]
4000b8cc:	e592000c 	ldr	r0, [r2, #12]
4000b8d0:	e2400001 	sub	r0, r0, #1
4000b8d4:	e582000c 	str	r0, [r2, #12]
4000b8d8:	e5920014 	ldr	r0, [r2, #20]
4000b8dc:	e1500004 	cmp	r0, r4
4000b8e0:	1a000007 	bne	4000b904 <_tx_byte_pool_search+0xe0>
4000b8e4:	e582e014 	str	lr, [r2, #20]
4000b8e8:	ea000005 	b	4000b904 <_tx_byte_pool_search+0xe0>
4000b8ec:	e594e000 	ldr	lr, [r4]
4000b8f0:	e3570000 	cmp	r7, #0
4000b8f4:	0a000002 	beq	4000b904 <_tx_byte_pool_search+0xe0>
4000b8f8:	e2477001 	sub	r7, r7, #1
4000b8fc:	ea000000 	b	4000b904 <_tx_byte_pool_search+0xe0>
4000b900:	e59ee000 	ldr	lr, [lr]
4000b904:	e3570000 	cmp	r7, #0
4000b908:	0a000000 	beq	4000b910 <_tx_byte_pool_search+0xec>
4000b90c:	e2477001 	sub	r7, r7, #1
4000b910:	e121f003 	msr	CPSR_c, r3
4000b914:	e10f3000 	mrs	r3, CPSR
4000b918:	e383c080 	orr	ip, r3, #128	; 0x80
4000b91c:	e121f00c 	msr	CPSR_c, ip
4000b920:	e59f00ac 	ldr	r0, [pc, #172]	; 4000b9d4 <_tx_byte_pool_search+0x1b0>
4000b924:	e5909000 	ldr	r9, [r0]
4000b928:	e5920020 	ldr	r0, [r2, #32]
4000b92c:	e1500009 	cmp	r0, r9
4000b930:	0a000003 	beq	4000b944 <_tx_byte_pool_search+0x120>
4000b934:	e592e014 	ldr	lr, [r2, #20]
4000b938:	e592000c 	ldr	r0, [r2, #12]
4000b93c:	e2807001 	add	r7, r0, #1
4000b940:	e5829020 	str	r9, [r2, #32]
4000b944:	e3570000 	cmp	r7, #0
4000b948:	1affffc7 	bne	4000b86c <_tx_byte_pool_search+0x48>
4000b94c:	e1a00000 	nop			; (mov r0, r0)
4000b950:	e3560000 	cmp	r6, #0
4000b954:	0a00001a 	beq	4000b9c4 <_tx_byte_pool_search+0x1a0>
4000b958:	e0460001 	sub	r0, r6, r1
4000b95c:	e3500014 	cmp	r0, #20
4000b960:	3a00000a 	bcc	4000b990 <_tx_byte_pool_search+0x16c>
4000b964:	e08e0001 	add	r0, lr, r1
4000b968:	e2804008 	add	r4, r0, #8
4000b96c:	e59e0000 	ldr	r0, [lr]
4000b970:	e5840000 	str	r0, [r4]
4000b974:	e59f005c 	ldr	r0, [pc, #92]	; 4000b9d8 <_tx_byte_pool_search+0x1b4>
4000b978:	e5840004 	str	r0, [r4, #4]
4000b97c:	e592000c 	ldr	r0, [r2, #12]
4000b980:	e2800001 	add	r0, r0, #1
4000b984:	e582000c 	str	r0, [r2, #12]
4000b988:	e58e4000 	str	r4, [lr]
4000b98c:	e1a06001 	mov	r6, r1
4000b990:	e58e2004 	str	r2, [lr, #4]
4000b994:	e5920008 	ldr	r0, [r2, #8]
4000b998:	e0400006 	sub	r0, r0, r6
4000b99c:	e2400008 	sub	r0, r0, #8
4000b9a0:	e5820008 	str	r0, [r2, #8]
4000b9a4:	e5920014 	ldr	r0, [r2, #20]
4000b9a8:	e150000e 	cmp	r0, lr
4000b9ac:	1a000001 	bne	4000b9b8 <_tx_byte_pool_search+0x194>
4000b9b0:	e59e0000 	ldr	r0, [lr]
4000b9b4:	e5820014 	str	r0, [r2, #20]
4000b9b8:	e121f003 	msr	CPSR_c, r3
4000b9bc:	e28ee008 	add	lr, lr, #8
4000b9c0:	ea000001 	b	4000b9cc <_tx_byte_pool_search+0x1a8>
4000b9c4:	e121f003 	msr	CPSR_c, r3
4000b9c8:	e3a0e000 	mov	lr, #0
4000b9cc:	e1a0000e 	mov	r0, lr
4000b9d0:	eaffff9e 	b	4000b850 <_tx_byte_pool_search+0x2c>
4000b9d4:	400312c0 	.word	0x400312c0
4000b9d8:	ffffeeee 	.word	0xffffeeee

4000b9dc <_tx_byte_release>:
4000b9dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b9e0:	e1a04000 	mov	r4, r0
4000b9e4:	e1a09004 	mov	r9, r4
4000b9e8:	e1b04009 	movs	r4, r9
4000b9ec:	0a00000f 	beq	4000ba30 <_tx_byte_release+0x54>
4000b9f0:	e2499008 	sub	r9, r9, #8
4000b9f4:	e5990004 	ldr	r0, [r9, #4]
4000b9f8:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000b9fc:	e2911012 	adds	r1, r1, #18
4000ba00:	0a000008 	beq	4000ba28 <_tx_byte_release+0x4c>
4000ba04:	e5997004 	ldr	r7, [r9, #4]
4000ba08:	e3570000 	cmp	r7, #0
4000ba0c:	0a000003 	beq	4000ba20 <_tx_byte_release+0x44>
4000ba10:	e5970000 	ldr	r0, [r7]
4000ba14:	e59f125c 	ldr	r1, [pc, #604]	; 4000bc78 <_tx_byte_release+0x29c>
4000ba18:	e1500001 	cmp	r0, r1
4000ba1c:	0a000005 	beq	4000ba38 <_tx_byte_release+0x5c>
4000ba20:	e3a00003 	mov	r0, #3
4000ba24:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000ba28:	e3a00003 	mov	r0, #3
4000ba2c:	eafffffc 	b	4000ba24 <_tx_byte_release+0x48>
4000ba30:	e3a00003 	mov	r0, #3
4000ba34:	eafffffa 	b	4000ba24 <_tx_byte_release+0x48>
4000ba38:	e59f023c 	ldr	r0, [pc, #572]	; 4000bc7c <_tx_byte_release+0x2a0>
4000ba3c:	e5908000 	ldr	r8, [r0]
4000ba40:	e5878020 	str	r8, [r7, #32]
4000ba44:	e10f5000 	mrs	r5, CPSR
4000ba48:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba4c:	e121f006 	msr	CPSR_c, r6
4000ba50:	e59f1228 	ldr	r1, [pc, #552]	; 4000bc80 <_tx_byte_release+0x2a4>
4000ba54:	e5910000 	ldr	r0, [r1]
4000ba58:	e3500000 	cmp	r0, #0
4000ba5c:	0a000032 	beq	4000bb2c <_tx_byte_release+0x150>
4000ba60:	e59f121c 	ldr	r1, [pc, #540]	; 4000bc84 <_tx_byte_release+0x2a8>
4000ba64:	e5911000 	ldr	r1, [r1]
4000ba68:	e2811001 	add	r1, r1, #1
4000ba6c:	e59f2210 	ldr	r2, [pc, #528]	; 4000bc84 <_tx_byte_release+0x2a8>
4000ba70:	e5821000 	str	r1, [r2]
4000ba74:	e580100c 	str	r1, [r0, #12]
4000ba78:	e59f1208 	ldr	r1, [pc, #520]	; 4000bc88 <_tx_byte_release+0x2ac>
4000ba7c:	e5911000 	ldr	r1, [r1]
4000ba80:	e3510000 	cmp	r1, #0
4000ba84:	1a000006 	bne	4000baa4 <_tx_byte_release+0xc8>
4000ba88:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bc7c <_tx_byte_release+0x2a0>
4000ba8c:	e5911000 	ldr	r1, [r1]
4000ba90:	e5801000 	str	r1, [r0]
4000ba94:	e5901000 	ldr	r1, [r0]
4000ba98:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ba9c:	e5801004 	str	r1, [r0, #4]
4000baa0:	ea00000d 	b	4000badc <_tx_byte_release+0x100>
4000baa4:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bc88 <_tx_byte_release+0x2ac>
4000baa8:	e5911000 	ldr	r1, [r1]
4000baac:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bc8c <_tx_byte_release+0x2b0>
4000bab0:	e1510002 	cmp	r1, r2
4000bab4:	2a000004 	bcs	4000bacc <_tx_byte_release+0xf0>
4000bab8:	e3e01000 	mvn	r1, #0
4000babc:	e5801000 	str	r1, [r0]
4000bac0:	e3a01000 	mov	r1, #0
4000bac4:	e5801004 	str	r1, [r0, #4]
4000bac8:	ea000003 	b	4000badc <_tx_byte_release+0x100>
4000bacc:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bc8c <_tx_byte_release+0x2b0>
4000bad0:	e5801000 	str	r1, [r0]
4000bad4:	e3a01000 	mov	r1, #0
4000bad8:	e5801004 	str	r1, [r0, #4]
4000badc:	e3a0101b 	mov	r1, #27
4000bae0:	e5801008 	str	r1, [r0, #8]
4000bae4:	e5807010 	str	r7, [r0, #16]
4000bae8:	e5804014 	str	r4, [r0, #20]
4000baec:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000baf0:	e5801018 	str	r1, [r0, #24]
4000baf4:	e5971008 	ldr	r1, [r7, #8]
4000baf8:	e580101c 	str	r1, [r0, #28]
4000bafc:	e2800020 	add	r0, r0, #32
4000bb00:	e59f1188 	ldr	r1, [pc, #392]	; 4000bc90 <_tx_byte_release+0x2b4>
4000bb04:	e5911000 	ldr	r1, [r1]
4000bb08:	e1500001 	cmp	r0, r1
4000bb0c:	3a000001 	bcc	4000bb18 <_tx_byte_release+0x13c>
4000bb10:	e59f117c 	ldr	r1, [pc, #380]	; 4000bc94 <_tx_byte_release+0x2b8>
4000bb14:	e5910000 	ldr	r0, [r1]
4000bb18:	e59f1160 	ldr	r1, [pc, #352]	; 4000bc80 <_tx_byte_release+0x2a4>
4000bb1c:	e5810000 	str	r0, [r1]
4000bb20:	e59f1170 	ldr	r1, [pc, #368]	; 4000bc98 <_tx_byte_release+0x2bc>
4000bb24:	e5911000 	ldr	r1, [r1]
4000bb28:	e5810020 	str	r0, [r1, #32]
4000bb2c:	e59f0168 	ldr	r0, [pc, #360]	; 4000bc9c <_tx_byte_release+0x2c0>
4000bb30:	e5890004 	str	r0, [r9, #4]
4000bb34:	e5970008 	ldr	r0, [r7, #8]
4000bb38:	e5991000 	ldr	r1, [r9]
4000bb3c:	e0411009 	sub	r1, r1, r9
4000bb40:	e0800001 	add	r0, r0, r1
4000bb44:	e5870008 	str	r0, [r7, #8]
4000bb48:	e5970014 	ldr	r0, [r7, #20]
4000bb4c:	e1500009 	cmp	r0, r9
4000bb50:	9a000000 	bls	4000bb58 <_tx_byte_release+0x17c>
4000bb54:	e5879014 	str	r9, [r7, #20]
4000bb58:	ea00003e 	b	4000bc58 <_tx_byte_release+0x27c>
4000bb5c:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bb60:	e121f005 	msr	CPSR_c, r5
4000bb64:	e1a00007 	mov	r0, r7
4000bb68:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bb6c:	ebffff2c 	bl	4000b824 <_tx_byte_pool_search>
4000bb70:	e1a09000 	mov	r9, r0
4000bb74:	e10f5000 	mrs	r5, CPSR
4000bb78:	e3856080 	orr	r6, r5, #128	; 0x80
4000bb7c:	e121f006 	msr	CPSR_c, r6
4000bb80:	e3590000 	cmp	r9, #0
4000bb84:	1a000000 	bne	4000bb8c <_tx_byte_release+0x1b0>
4000bb88:	ea000035 	b	4000bc64 <_tx_byte_release+0x288>
4000bb8c:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bb90:	e150000a 	cmp	r0, sl
4000bb94:	0a00000c 	beq	4000bbcc <_tx_byte_release+0x1f0>
4000bb98:	e2499008 	sub	r9, r9, #8
4000bb9c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bc9c <_tx_byte_release+0x2c0>
4000bba0:	e5890004 	str	r0, [r9, #4]
4000bba4:	e5970008 	ldr	r0, [r7, #8]
4000bba8:	e5991000 	ldr	r1, [r9]
4000bbac:	e0411009 	sub	r1, r1, r9
4000bbb0:	e0800001 	add	r0, r0, r1
4000bbb4:	e5870008 	str	r0, [r7, #8]
4000bbb8:	e5970014 	ldr	r0, [r7, #20]
4000bbbc:	e1500009 	cmp	r0, r9
4000bbc0:	9a000000 	bls	4000bbc8 <_tx_byte_release+0x1ec>
4000bbc4:	e5879014 	str	r9, [r7, #20]
4000bbc8:	ea000022 	b	4000bc58 <_tx_byte_release+0x27c>
4000bbcc:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bbd0:	e150000a 	cmp	r0, sl
4000bbd4:	1a000002 	bne	4000bbe4 <_tx_byte_release+0x208>
4000bbd8:	e3a00000 	mov	r0, #0
4000bbdc:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bbe0:	ea000007 	b	4000bc04 <_tx_byte_release+0x228>
4000bbe4:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bbe8:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bbec:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bbf0:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bbf4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bbf8:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bbfc:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bc00:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bc04:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bc08:	e2400001 	sub	r0, r0, #1
4000bc0c:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bc10:	e3a00000 	mov	r0, #0
4000bc14:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bc18:	e59f0080 	ldr	r0, [pc, #128]	; 4000bca0 <_tx_byte_release+0x2c4>
4000bc1c:	e5900000 	ldr	r0, [r0]
4000bc20:	e2800001 	add	r0, r0, #1
4000bc24:	e59f1074 	ldr	r1, [pc, #116]	; 4000bca0 <_tx_byte_release+0x2c4>
4000bc28:	e5810000 	str	r0, [r1]
4000bc2c:	e121f005 	msr	CPSR_c, r5
4000bc30:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bc34:	e5809000 	str	r9, [r0]
4000bc38:	e3a00000 	mov	r0, #0
4000bc3c:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bc40:	e1a0000a 	mov	r0, sl
4000bc44:	eb000d96 	bl	4000f2a4 <_tx_thread_system_resume>
4000bc48:	e10f5000 	mrs	r5, CPSR
4000bc4c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bc50:	e121f006 	msr	CPSR_c, r6
4000bc54:	e1a00000 	nop			; (mov r0, r0)
4000bc58:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bc5c:	e3500000 	cmp	r0, #0
4000bc60:	1affffbd 	bne	4000bb5c <_tx_byte_release+0x180>
4000bc64:	e1a00000 	nop			; (mov r0, r0)
4000bc68:	e121f005 	msr	CPSR_c, r5
4000bc6c:	eb000d60 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000bc70:	e3a00000 	mov	r0, #0
4000bc74:	eaffff6a 	b	4000ba24 <_tx_byte_release+0x48>
4000bc78:	42595445 	.word	0x42595445
4000bc7c:	400312c0 	.word	0x400312c0
4000bc80:	4003132c 	.word	0x4003132c
4000bc84:	40031330 	.word	0x40031330
4000bc88:	400312b8 	.word	0x400312b8
4000bc8c:	f0f0f0f0 	.word	0xf0f0f0f0
4000bc90:	40031328 	.word	0x40031328
4000bc94:	40031324 	.word	0x40031324
4000bc98:	40031318 	.word	0x40031318
4000bc9c:	ffffeeee 	.word	0xffffeeee
4000bca0:	400312dc 	.word	0x400312dc

4000bca4 <_tx_event_flags_create>:
4000bca4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bca8:	e1a04000 	mov	r4, r0
4000bcac:	e1a05001 	mov	r5, r1
4000bcb0:	e3a01028 	mov	r1, #40	; 0x28
4000bcb4:	e1a00004 	mov	r0, r4
4000bcb8:	eb001eb6 	bl	40013798 <__aeabi_memclr4>
4000bcbc:	e5845004 	str	r5, [r4, #4]
4000bcc0:	e10f6000 	mrs	r6, CPSR
4000bcc4:	e3867080 	orr	r7, r6, #128	; 0x80
4000bcc8:	e121f007 	msr	CPSR_c, r7
4000bccc:	e59f0170 	ldr	r0, [pc, #368]	; 4000be44 <_tx_event_flags_create+0x1a0>
4000bcd0:	e5840000 	str	r0, [r4]
4000bcd4:	e59f016c 	ldr	r0, [pc, #364]	; 4000be48 <_tx_event_flags_create+0x1a4>
4000bcd8:	e5900000 	ldr	r0, [r0]
4000bcdc:	e3500000 	cmp	r0, #0
4000bce0:	0a00000e 	beq	4000bd20 <_tx_event_flags_create+0x7c>
4000bce4:	e59f015c 	ldr	r0, [pc, #348]	; 4000be48 <_tx_event_flags_create+0x1a4>
4000bce8:	e5900000 	ldr	r0, [r0]
4000bcec:	e590001c 	ldr	r0, [r0, #28]
4000bcf0:	e58d0004 	str	r0, [sp, #4]
4000bcf4:	e59f014c 	ldr	r0, [pc, #332]	; 4000be48 <_tx_event_flags_create+0x1a4>
4000bcf8:	e5900000 	ldr	r0, [r0]
4000bcfc:	e580401c 	str	r4, [r0, #28]
4000bd00:	e59d0004 	ldr	r0, [sp, #4]
4000bd04:	e5804018 	str	r4, [r0, #24]
4000bd08:	e59d0004 	ldr	r0, [sp, #4]
4000bd0c:	e584001c 	str	r0, [r4, #28]
4000bd10:	e59f0130 	ldr	r0, [pc, #304]	; 4000be48 <_tx_event_flags_create+0x1a4>
4000bd14:	e5900000 	ldr	r0, [r0]
4000bd18:	e5840018 	str	r0, [r4, #24]
4000bd1c:	ea000003 	b	4000bd30 <_tx_event_flags_create+0x8c>
4000bd20:	e59f0120 	ldr	r0, [pc, #288]	; 4000be48 <_tx_event_flags_create+0x1a4>
4000bd24:	e5804000 	str	r4, [r0]
4000bd28:	e5844018 	str	r4, [r4, #24]
4000bd2c:	e584401c 	str	r4, [r4, #28]
4000bd30:	e59f0114 	ldr	r0, [pc, #276]	; 4000be4c <_tx_event_flags_create+0x1a8>
4000bd34:	e5900000 	ldr	r0, [r0]
4000bd38:	e2800001 	add	r0, r0, #1
4000bd3c:	e59f1108 	ldr	r1, [pc, #264]	; 4000be4c <_tx_event_flags_create+0x1a8>
4000bd40:	e5810000 	str	r0, [r1]
4000bd44:	e3a03000 	mov	r3, #0
4000bd48:	e1a02005 	mov	r2, r5
4000bd4c:	e1a01004 	mov	r1, r4
4000bd50:	e3a00006 	mov	r0, #6
4000bd54:	e58d3000 	str	r3, [sp]
4000bd58:	eb0010a7 	bl	4000fffc <_tx_trace_object_register>
4000bd5c:	e59f10ec 	ldr	r1, [pc, #236]	; 4000be50 <_tx_event_flags_create+0x1ac>
4000bd60:	e5910000 	ldr	r0, [r1]
4000bd64:	e3500000 	cmp	r0, #0
4000bd68:	0a000032 	beq	4000be38 <_tx_event_flags_create+0x194>
4000bd6c:	e59f10e0 	ldr	r1, [pc, #224]	; 4000be54 <_tx_event_flags_create+0x1b0>
4000bd70:	e5911000 	ldr	r1, [r1]
4000bd74:	e2811001 	add	r1, r1, #1
4000bd78:	e59f20d4 	ldr	r2, [pc, #212]	; 4000be54 <_tx_event_flags_create+0x1b0>
4000bd7c:	e5821000 	str	r1, [r2]
4000bd80:	e580100c 	str	r1, [r0, #12]
4000bd84:	e59f10cc 	ldr	r1, [pc, #204]	; 4000be58 <_tx_event_flags_create+0x1b4>
4000bd88:	e5911000 	ldr	r1, [r1]
4000bd8c:	e3510000 	cmp	r1, #0
4000bd90:	1a000006 	bne	4000bdb0 <_tx_event_flags_create+0x10c>
4000bd94:	e59f10c0 	ldr	r1, [pc, #192]	; 4000be5c <_tx_event_flags_create+0x1b8>
4000bd98:	e5911000 	ldr	r1, [r1]
4000bd9c:	e5801000 	str	r1, [r0]
4000bda0:	e5901000 	ldr	r1, [r0]
4000bda4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bda8:	e5801004 	str	r1, [r0, #4]
4000bdac:	ea00000d 	b	4000bde8 <_tx_event_flags_create+0x144>
4000bdb0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000be58 <_tx_event_flags_create+0x1b4>
4000bdb4:	e5911000 	ldr	r1, [r1]
4000bdb8:	e59f20a0 	ldr	r2, [pc, #160]	; 4000be60 <_tx_event_flags_create+0x1bc>
4000bdbc:	e1510002 	cmp	r1, r2
4000bdc0:	2a000004 	bcs	4000bdd8 <_tx_event_flags_create+0x134>
4000bdc4:	e3e01000 	mvn	r1, #0
4000bdc8:	e5801000 	str	r1, [r0]
4000bdcc:	e3a01000 	mov	r1, #0
4000bdd0:	e5801004 	str	r1, [r0, #4]
4000bdd4:	ea000003 	b	4000bde8 <_tx_event_flags_create+0x144>
4000bdd8:	e59f1080 	ldr	r1, [pc, #128]	; 4000be60 <_tx_event_flags_create+0x1bc>
4000bddc:	e5801000 	str	r1, [r0]
4000bde0:	e3a01000 	mov	r1, #0
4000bde4:	e5801004 	str	r1, [r0, #4]
4000bde8:	e3a0101e 	mov	r1, #30
4000bdec:	e5801008 	str	r1, [r0, #8]
4000bdf0:	e5804010 	str	r4, [r0, #16]
4000bdf4:	e28d1004 	add	r1, sp, #4
4000bdf8:	e5801014 	str	r1, [r0, #20]
4000bdfc:	e3a01000 	mov	r1, #0
4000be00:	e5801018 	str	r1, [r0, #24]
4000be04:	e580101c 	str	r1, [r0, #28]
4000be08:	e2800020 	add	r0, r0, #32
4000be0c:	e59f1050 	ldr	r1, [pc, #80]	; 4000be64 <_tx_event_flags_create+0x1c0>
4000be10:	e5911000 	ldr	r1, [r1]
4000be14:	e1500001 	cmp	r0, r1
4000be18:	3a000001 	bcc	4000be24 <_tx_event_flags_create+0x180>
4000be1c:	e59f1044 	ldr	r1, [pc, #68]	; 4000be68 <_tx_event_flags_create+0x1c4>
4000be20:	e5910000 	ldr	r0, [r1]
4000be24:	e59f1024 	ldr	r1, [pc, #36]	; 4000be50 <_tx_event_flags_create+0x1ac>
4000be28:	e5810000 	str	r0, [r1]
4000be2c:	e59f1038 	ldr	r1, [pc, #56]	; 4000be6c <_tx_event_flags_create+0x1c8>
4000be30:	e5911000 	ldr	r1, [r1]
4000be34:	e5810020 	str	r0, [r1, #32]
4000be38:	e121f006 	msr	CPSR_c, r6
4000be3c:	e3a00000 	mov	r0, #0
4000be40:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000be44:	4456444e 	.word	0x4456444e
4000be48:	40031344 	.word	0x40031344
4000be4c:	40031348 	.word	0x40031348
4000be50:	4003132c 	.word	0x4003132c
4000be54:	40031330 	.word	0x40031330
4000be58:	400312b8 	.word	0x400312b8
4000be5c:	400312c0 	.word	0x400312c0
4000be60:	f0f0f0f0 	.word	0xf0f0f0f0
4000be64:	40031328 	.word	0x40031328
4000be68:	40031324 	.word	0x40031324
4000be6c:	40031318 	.word	0x40031318

4000be70 <_tx_event_flags_delete>:
4000be70:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000be74:	e1a04000 	mov	r4, r0
4000be78:	e10f5000 	mrs	r5, CPSR
4000be7c:	e3856080 	orr	r6, r5, #128	; 0x80
4000be80:	e121f006 	msr	CPSR_c, r6
4000be84:	e59f1204 	ldr	r1, [pc, #516]	; 4000c090 <_tx_event_flags_delete+0x220>
4000be88:	e5910000 	ldr	r0, [r1]
4000be8c:	e3500000 	cmp	r0, #0
4000be90:	0a000031 	beq	4000bf5c <_tx_event_flags_delete+0xec>
4000be94:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c094 <_tx_event_flags_delete+0x224>
4000be98:	e5911000 	ldr	r1, [r1]
4000be9c:	e2811001 	add	r1, r1, #1
4000bea0:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c094 <_tx_event_flags_delete+0x224>
4000bea4:	e5821000 	str	r1, [r2]
4000bea8:	e580100c 	str	r1, [r0, #12]
4000beac:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c098 <_tx_event_flags_delete+0x228>
4000beb0:	e5911000 	ldr	r1, [r1]
4000beb4:	e3510000 	cmp	r1, #0
4000beb8:	1a000006 	bne	4000bed8 <_tx_event_flags_delete+0x68>
4000bebc:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c09c <_tx_event_flags_delete+0x22c>
4000bec0:	e5911000 	ldr	r1, [r1]
4000bec4:	e5801000 	str	r1, [r0]
4000bec8:	e5901000 	ldr	r1, [r0]
4000becc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bed0:	e5801004 	str	r1, [r0, #4]
4000bed4:	ea00000d 	b	4000bf10 <_tx_event_flags_delete+0xa0>
4000bed8:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c098 <_tx_event_flags_delete+0x228>
4000bedc:	e5911000 	ldr	r1, [r1]
4000bee0:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c0a0 <_tx_event_flags_delete+0x230>
4000bee4:	e1510002 	cmp	r1, r2
4000bee8:	2a000004 	bcs	4000bf00 <_tx_event_flags_delete+0x90>
4000beec:	e3e01000 	mvn	r1, #0
4000bef0:	e5801000 	str	r1, [r0]
4000bef4:	e3a01000 	mov	r1, #0
4000bef8:	e5801004 	str	r1, [r0, #4]
4000befc:	ea000003 	b	4000bf10 <_tx_event_flags_delete+0xa0>
4000bf00:	e59f1198 	ldr	r1, [pc, #408]	; 4000c0a0 <_tx_event_flags_delete+0x230>
4000bf04:	e5801000 	str	r1, [r0]
4000bf08:	e3a01000 	mov	r1, #0
4000bf0c:	e5801004 	str	r1, [r0, #4]
4000bf10:	e3a0101f 	mov	r1, #31
4000bf14:	e5801008 	str	r1, [r0, #8]
4000bf18:	e5804010 	str	r4, [r0, #16]
4000bf1c:	e580d014 	str	sp, [r0, #20]
4000bf20:	e3a01000 	mov	r1, #0
4000bf24:	e5801018 	str	r1, [r0, #24]
4000bf28:	e580101c 	str	r1, [r0, #28]
4000bf2c:	e2800020 	add	r0, r0, #32
4000bf30:	e59f116c 	ldr	r1, [pc, #364]	; 4000c0a4 <_tx_event_flags_delete+0x234>
4000bf34:	e5911000 	ldr	r1, [r1]
4000bf38:	e1500001 	cmp	r0, r1
4000bf3c:	3a000001 	bcc	4000bf48 <_tx_event_flags_delete+0xd8>
4000bf40:	e59f1160 	ldr	r1, [pc, #352]	; 4000c0a8 <_tx_event_flags_delete+0x238>
4000bf44:	e5910000 	ldr	r0, [r1]
4000bf48:	e59f1140 	ldr	r1, [pc, #320]	; 4000c090 <_tx_event_flags_delete+0x220>
4000bf4c:	e5810000 	str	r0, [r1]
4000bf50:	e59f1154 	ldr	r1, [pc, #340]	; 4000c0ac <_tx_event_flags_delete+0x23c>
4000bf54:	e5911000 	ldr	r1, [r1]
4000bf58:	e5810020 	str	r0, [r1, #32]
4000bf5c:	e1a00004 	mov	r0, r4
4000bf60:	eb001090 	bl	400101a8 <_tx_trace_object_unregister>
4000bf64:	e59f0144 	ldr	r0, [pc, #324]	; 4000c0b0 <_tx_event_flags_delete+0x240>
4000bf68:	e5900000 	ldr	r0, [r0]
4000bf6c:	e2400001 	sub	r0, r0, #1
4000bf70:	e59f1138 	ldr	r1, [pc, #312]	; 4000c0b0 <_tx_event_flags_delete+0x240>
4000bf74:	e5810000 	str	r0, [r1]
4000bf78:	e3a00000 	mov	r0, #0
4000bf7c:	e5840000 	str	r0, [r4]
4000bf80:	e5940018 	ldr	r0, [r4, #24]
4000bf84:	e1500004 	cmp	r0, r4
4000bf88:	1a000003 	bne	4000bf9c <_tx_event_flags_delete+0x12c>
4000bf8c:	e3a00000 	mov	r0, #0
4000bf90:	e59f111c 	ldr	r1, [pc, #284]	; 4000c0b4 <_tx_event_flags_delete+0x244>
4000bf94:	e5810000 	str	r0, [r1]
4000bf98:	ea00000c 	b	4000bfd0 <_tx_event_flags_delete+0x160>
4000bf9c:	e594001c 	ldr	r0, [r4, #28]
4000bfa0:	e5941018 	ldr	r1, [r4, #24]
4000bfa4:	e581001c 	str	r0, [r1, #28]
4000bfa8:	e5940018 	ldr	r0, [r4, #24]
4000bfac:	e594101c 	ldr	r1, [r4, #28]
4000bfb0:	e5810018 	str	r0, [r1, #24]
4000bfb4:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c0b4 <_tx_event_flags_delete+0x244>
4000bfb8:	e5900000 	ldr	r0, [r0]
4000bfbc:	e1500004 	cmp	r0, r4
4000bfc0:	1a000002 	bne	4000bfd0 <_tx_event_flags_delete+0x160>
4000bfc4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c0b4 <_tx_event_flags_delete+0x244>
4000bfc8:	e5940018 	ldr	r0, [r4, #24]
4000bfcc:	e5810000 	str	r0, [r1]
4000bfd0:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000bfd4:	e5900000 	ldr	r0, [r0]
4000bfd8:	e2800001 	add	r0, r0, #1
4000bfdc:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000bfe0:	e5810000 	str	r0, [r1]
4000bfe4:	e121f005 	msr	CPSR_c, r5
4000bfe8:	e5940010 	ldr	r0, [r4, #16]
4000bfec:	e58d0000 	str	r0, [sp]
4000bff0:	ea000017 	b	4000c054 <_tx_event_flags_delete+0x1e4>
4000bff4:	e10f5000 	mrs	r5, CPSR
4000bff8:	e3856080 	orr	r6, r5, #128	; 0x80
4000bffc:	e121f006 	msr	CPSR_c, r6
4000c000:	e3a00000 	mov	r0, #0
4000c004:	e59d1000 	ldr	r1, [sp]
4000c008:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c00c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000c010:	e5900000 	ldr	r0, [r0]
4000c014:	e2800001 	add	r0, r0, #1
4000c018:	e59f1098 	ldr	r1, [pc, #152]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000c01c:	e5810000 	str	r0, [r1]
4000c020:	e121f005 	msr	CPSR_c, r5
4000c024:	e3a00001 	mov	r0, #1
4000c028:	e59d1000 	ldr	r1, [sp]
4000c02c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c030:	e59d0000 	ldr	r0, [sp]
4000c034:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c038:	e58d0000 	str	r0, [sp]
4000c03c:	e59d1000 	ldr	r1, [sp]
4000c040:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c044:	eb000c96 	bl	4000f2a4 <_tx_thread_system_resume>
4000c048:	e5940014 	ldr	r0, [r4, #20]
4000c04c:	e2400001 	sub	r0, r0, #1
4000c050:	e5840014 	str	r0, [r4, #20]
4000c054:	e5940014 	ldr	r0, [r4, #20]
4000c058:	e3500000 	cmp	r0, #0
4000c05c:	1affffe4 	bne	4000bff4 <_tx_event_flags_delete+0x184>
4000c060:	e10f5000 	mrs	r5, CPSR
4000c064:	e3856080 	orr	r6, r5, #128	; 0x80
4000c068:	e121f006 	msr	CPSR_c, r6
4000c06c:	e59f0044 	ldr	r0, [pc, #68]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000c070:	e5900000 	ldr	r0, [r0]
4000c074:	e2400001 	sub	r0, r0, #1
4000c078:	e59f1038 	ldr	r1, [pc, #56]	; 4000c0b8 <_tx_event_flags_delete+0x248>
4000c07c:	e5810000 	str	r0, [r1]
4000c080:	e121f005 	msr	CPSR_c, r5
4000c084:	eb000c5a 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000c088:	e3a00000 	mov	r0, #0
4000c08c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c090:	4003132c 	.word	0x4003132c
4000c094:	40031330 	.word	0x40031330
4000c098:	400312b8 	.word	0x400312b8
4000c09c:	400312c0 	.word	0x400312c0
4000c0a0:	f0f0f0f0 	.word	0xf0f0f0f0
4000c0a4:	40031328 	.word	0x40031328
4000c0a8:	40031324 	.word	0x40031324
4000c0ac:	40031318 	.word	0x40031318
4000c0b0:	40031348 	.word	0x40031348
4000c0b4:	40031344 	.word	0x40031344
4000c0b8:	400312dc 	.word	0x400312dc

4000c0bc <_tx_event_flags_get>:
4000c0bc:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c0c0:	e1a04000 	mov	r4, r0
4000c0c4:	e1a05001 	mov	r5, r1
4000c0c8:	e1a06002 	mov	r6, r2
4000c0cc:	e1a07003 	mov	r7, r3
4000c0d0:	e10f8000 	mrs	r8, CPSR
4000c0d4:	e3880080 	orr	r0, r8, #128	; 0x80
4000c0d8:	e58d0004 	str	r0, [sp, #4]
4000c0dc:	e59d0004 	ldr	r0, [sp, #4]
4000c0e0:	e121f000 	msr	CPSR_c, r0
4000c0e4:	e59f1278 	ldr	r1, [pc, #632]	; 4000c364 <_tx_event_flags_get+0x2a8>
4000c0e8:	e5910000 	ldr	r0, [r1]
4000c0ec:	e3500000 	cmp	r0, #0
4000c0f0:	0a000031 	beq	4000c1bc <_tx_event_flags_get+0x100>
4000c0f4:	e59f126c 	ldr	r1, [pc, #620]	; 4000c368 <_tx_event_flags_get+0x2ac>
4000c0f8:	e5911000 	ldr	r1, [r1]
4000c0fc:	e2811001 	add	r1, r1, #1
4000c100:	e59f2260 	ldr	r2, [pc, #608]	; 4000c368 <_tx_event_flags_get+0x2ac>
4000c104:	e5821000 	str	r1, [r2]
4000c108:	e580100c 	str	r1, [r0, #12]
4000c10c:	e59f1258 	ldr	r1, [pc, #600]	; 4000c36c <_tx_event_flags_get+0x2b0>
4000c110:	e5911000 	ldr	r1, [r1]
4000c114:	e3510000 	cmp	r1, #0
4000c118:	1a000006 	bne	4000c138 <_tx_event_flags_get+0x7c>
4000c11c:	e59f124c 	ldr	r1, [pc, #588]	; 4000c370 <_tx_event_flags_get+0x2b4>
4000c120:	e5911000 	ldr	r1, [r1]
4000c124:	e5801000 	str	r1, [r0]
4000c128:	e5901000 	ldr	r1, [r0]
4000c12c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c130:	e5801004 	str	r1, [r0, #4]
4000c134:	ea00000d 	b	4000c170 <_tx_event_flags_get+0xb4>
4000c138:	e59f122c 	ldr	r1, [pc, #556]	; 4000c36c <_tx_event_flags_get+0x2b0>
4000c13c:	e5911000 	ldr	r1, [r1]
4000c140:	e59f222c 	ldr	r2, [pc, #556]	; 4000c374 <_tx_event_flags_get+0x2b8>
4000c144:	e1510002 	cmp	r1, r2
4000c148:	2a000004 	bcs	4000c160 <_tx_event_flags_get+0xa4>
4000c14c:	e3e01000 	mvn	r1, #0
4000c150:	e5801000 	str	r1, [r0]
4000c154:	e3a01000 	mov	r1, #0
4000c158:	e5801004 	str	r1, [r0, #4]
4000c15c:	ea000003 	b	4000c170 <_tx_event_flags_get+0xb4>
4000c160:	e59f120c 	ldr	r1, [pc, #524]	; 4000c374 <_tx_event_flags_get+0x2b8>
4000c164:	e5801000 	str	r1, [r0]
4000c168:	e3a01000 	mov	r1, #0
4000c16c:	e5801004 	str	r1, [r0, #4]
4000c170:	e3a01020 	mov	r1, #32
4000c174:	e5801008 	str	r1, [r0, #8]
4000c178:	e5804010 	str	r4, [r0, #16]
4000c17c:	e5805014 	str	r5, [r0, #20]
4000c180:	e5941008 	ldr	r1, [r4, #8]
4000c184:	e5801018 	str	r1, [r0, #24]
4000c188:	e580601c 	str	r6, [r0, #28]
4000c18c:	e2800020 	add	r0, r0, #32
4000c190:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c378 <_tx_event_flags_get+0x2bc>
4000c194:	e5911000 	ldr	r1, [r1]
4000c198:	e1500001 	cmp	r0, r1
4000c19c:	3a000001 	bcc	4000c1a8 <_tx_event_flags_get+0xec>
4000c1a0:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c37c <_tx_event_flags_get+0x2c0>
4000c1a4:	e5910000 	ldr	r0, [r1]
4000c1a8:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c364 <_tx_event_flags_get+0x2a8>
4000c1ac:	e5810000 	str	r0, [r1]
4000c1b0:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c380 <_tx_event_flags_get+0x2c4>
4000c1b4:	e5911000 	ldr	r1, [r1]
4000c1b8:	e5810020 	str	r0, [r1, #32]
4000c1bc:	e594a008 	ldr	sl, [r4, #8]
4000c1c0:	e594b020 	ldr	fp, [r4, #32]
4000c1c4:	e35b0000 	cmp	fp, #0
4000c1c8:	0a000000 	beq	4000c1d0 <_tx_event_flags_get+0x114>
4000c1cc:	e1caa00b 	bic	sl, sl, fp
4000c1d0:	e3160002 	tst	r6, #2
4000c1d4:	0a000006 	beq	4000c1f4 <_tx_event_flags_get+0x138>
4000c1d8:	e00a0005 	and	r0, sl, r5
4000c1dc:	e1500005 	cmp	r0, r5
4000c1e0:	1a000001 	bne	4000c1ec <_tx_event_flags_get+0x130>
4000c1e4:	e3a09000 	mov	r9, #0
4000c1e8:	ea000006 	b	4000c208 <_tx_event_flags_get+0x14c>
4000c1ec:	e3a09007 	mov	r9, #7
4000c1f0:	ea000004 	b	4000c208 <_tx_event_flags_get+0x14c>
4000c1f4:	e11a0005 	tst	sl, r5
4000c1f8:	0a000001 	beq	4000c204 <_tx_event_flags_get+0x148>
4000c1fc:	e3a09000 	mov	r9, #0
4000c200:	ea000000 	b	4000c208 <_tx_event_flags_get+0x14c>
4000c204:	e3a09007 	mov	r9, #7
4000c208:	e3590000 	cmp	r9, #0
4000c20c:	1a000010 	bne	4000c254 <_tx_event_flags_get+0x198>
4000c210:	e587a000 	str	sl, [r7]
4000c214:	e3160001 	tst	r6, #1
4000c218:	0a00004e 	beq	4000c358 <_tx_event_flags_get+0x29c>
4000c21c:	e5940014 	ldr	r0, [r4, #20]
4000c220:	e3500000 	cmp	r0, #0
4000c224:	0a000006 	beq	4000c244 <_tx_event_flags_get+0x188>
4000c228:	e5940010 	ldr	r0, [r4, #16]
4000c22c:	e3500000 	cmp	r0, #0
4000c230:	1a000003 	bne	4000c244 <_tx_event_flags_get+0x188>
4000c234:	e5940020 	ldr	r0, [r4, #32]
4000c238:	e1800005 	orr	r0, r0, r5
4000c23c:	e5840020 	str	r0, [r4, #32]
4000c240:	ea000044 	b	4000c358 <_tx_event_flags_get+0x29c>
4000c244:	e5940008 	ldr	r0, [r4, #8]
4000c248:	e1c00005 	bic	r0, r0, r5
4000c24c:	e5840008 	str	r0, [r4, #8]
4000c250:	ea000040 	b	4000c358 <_tx_event_flags_get+0x29c>
4000c254:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c258:	e3500000 	cmp	r0, #0
4000c25c:	0a00003c 	beq	4000c354 <_tx_event_flags_get+0x298>
4000c260:	e59f0108 	ldr	r0, [pc, #264]	; 4000c370 <_tx_event_flags_get+0x2b4>
4000c264:	e5900000 	ldr	r0, [r0]
4000c268:	e58d0000 	str	r0, [sp]
4000c26c:	e59f1110 	ldr	r1, [pc, #272]	; 4000c384 <_tx_event_flags_get+0x2c8>
4000c270:	e59d0000 	ldr	r0, [sp]
4000c274:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c278:	e59d0000 	ldr	r0, [sp]
4000c27c:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c280:	e59d0000 	ldr	r0, [sp]
4000c284:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c288:	e59d0000 	ldr	r0, [sp]
4000c28c:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c290:	e59d0000 	ldr	r0, [sp]
4000c294:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c298:	e5940010 	ldr	r0, [r4, #16]
4000c29c:	e3500000 	cmp	r0, #0
4000c2a0:	0a00000e 	beq	4000c2e0 <_tx_event_flags_get+0x224>
4000c2a4:	e5941010 	ldr	r1, [r4, #16]
4000c2a8:	e59d0000 	ldr	r0, [sp]
4000c2ac:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c2b0:	e5940010 	ldr	r0, [r4, #16]
4000c2b4:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c2b8:	e59d0000 	ldr	r0, [sp]
4000c2bc:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c2c0:	e59d0000 	ldr	r0, [sp]
4000c2c4:	e5941010 	ldr	r1, [r4, #16]
4000c2c8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c2cc:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c2d0:	e59d0000 	ldr	r0, [sp]
4000c2d4:	e5941010 	ldr	r1, [r4, #16]
4000c2d8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c2dc:	ea000005 	b	4000c2f8 <_tx_event_flags_get+0x23c>
4000c2e0:	e59d0000 	ldr	r0, [sp]
4000c2e4:	e5840010 	str	r0, [r4, #16]
4000c2e8:	e59d0000 	ldr	r0, [sp]
4000c2ec:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c2f0:	e59d0000 	ldr	r0, [sp]
4000c2f4:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c2f8:	e5940014 	ldr	r0, [r4, #20]
4000c2fc:	e2800001 	add	r0, r0, #1
4000c300:	e5840014 	str	r0, [r4, #20]
4000c304:	e3a00007 	mov	r0, #7
4000c308:	e59d1000 	ldr	r1, [sp]
4000c30c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c310:	e3a01001 	mov	r1, #1
4000c314:	e59d0000 	ldr	r0, [sp]
4000c318:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c31c:	e59d0000 	ldr	r0, [sp]
4000c320:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c324:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c328:	e59f0058 	ldr	r0, [pc, #88]	; 4000c388 <_tx_event_flags_get+0x2cc>
4000c32c:	e5900000 	ldr	r0, [r0]
4000c330:	e2800001 	add	r0, r0, #1
4000c334:	e59f104c 	ldr	r1, [pc, #76]	; 4000c388 <_tx_event_flags_get+0x2cc>
4000c338:	e5810000 	str	r0, [r1]
4000c33c:	e121f008 	msr	CPSR_c, r8
4000c340:	e59d0000 	ldr	r0, [sp]
4000c344:	ebfff22f 	bl	40008c08 <_tx_thread_system_suspend>
4000c348:	e59d0000 	ldr	r0, [sp]
4000c34c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c350:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c354:	e3a09007 	mov	r9, #7
4000c358:	e121f008 	msr	CPSR_c, r8
4000c35c:	e1a00009 	mov	r0, r9
4000c360:	eafffffa 	b	4000c350 <_tx_event_flags_get+0x294>
4000c364:	4003132c 	.word	0x4003132c
4000c368:	40031330 	.word	0x40031330
4000c36c:	400312b8 	.word	0x400312b8
4000c370:	400312c0 	.word	0x400312c0
4000c374:	f0f0f0f0 	.word	0xf0f0f0f0
4000c378:	40031328 	.word	0x40031328
4000c37c:	40031324 	.word	0x40031324
4000c380:	40031318 	.word	0x40031318
4000c384:	400102b4 	.word	0x400102b4
4000c388:	400312dc 	.word	0x400312dc

4000c38c <_tx_event_flags_set>:
4000c38c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c390:	e24dd01c 	sub	sp, sp, #28
4000c394:	e1a04000 	mov	r4, r0
4000c398:	e1a05001 	mov	r5, r1
4000c39c:	e1a06002 	mov	r6, r2
4000c3a0:	e10f7000 	mrs	r7, CPSR
4000c3a4:	e3870080 	orr	r0, r7, #128	; 0x80
4000c3a8:	e58d0018 	str	r0, [sp, #24]
4000c3ac:	e59d0018 	ldr	r0, [sp, #24]
4000c3b0:	e121f000 	msr	CPSR_c, r0
4000c3b4:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c950 <_tx_event_flags_set+0x5c4>
4000c3b8:	e5910000 	ldr	r0, [r1]
4000c3bc:	e3500000 	cmp	r0, #0
4000c3c0:	0a000031 	beq	4000c48c <_tx_event_flags_set+0x100>
4000c3c4:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c954 <_tx_event_flags_set+0x5c8>
4000c3c8:	e5911000 	ldr	r1, [r1]
4000c3cc:	e2811001 	add	r1, r1, #1
4000c3d0:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c954 <_tx_event_flags_set+0x5c8>
4000c3d4:	e5821000 	str	r1, [r2]
4000c3d8:	e580100c 	str	r1, [r0, #12]
4000c3dc:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c958 <_tx_event_flags_set+0x5cc>
4000c3e0:	e5911000 	ldr	r1, [r1]
4000c3e4:	e3510000 	cmp	r1, #0
4000c3e8:	1a000006 	bne	4000c408 <_tx_event_flags_set+0x7c>
4000c3ec:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c95c <_tx_event_flags_set+0x5d0>
4000c3f0:	e5911000 	ldr	r1, [r1]
4000c3f4:	e5801000 	str	r1, [r0]
4000c3f8:	e5901000 	ldr	r1, [r0]
4000c3fc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c400:	e5801004 	str	r1, [r0, #4]
4000c404:	ea00000d 	b	4000c440 <_tx_event_flags_set+0xb4>
4000c408:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c958 <_tx_event_flags_set+0x5cc>
4000c40c:	e5911000 	ldr	r1, [r1]
4000c410:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c960 <_tx_event_flags_set+0x5d4>
4000c414:	e1510002 	cmp	r1, r2
4000c418:	2a000004 	bcs	4000c430 <_tx_event_flags_set+0xa4>
4000c41c:	e3e01000 	mvn	r1, #0
4000c420:	e5801000 	str	r1, [r0]
4000c424:	e3a01000 	mov	r1, #0
4000c428:	e5801004 	str	r1, [r0, #4]
4000c42c:	ea000003 	b	4000c440 <_tx_event_flags_set+0xb4>
4000c430:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c960 <_tx_event_flags_set+0x5d4>
4000c434:	e5801000 	str	r1, [r0]
4000c438:	e3a01000 	mov	r1, #0
4000c43c:	e5801004 	str	r1, [r0, #4]
4000c440:	e3a01024 	mov	r1, #36	; 0x24
4000c444:	e5801008 	str	r1, [r0, #8]
4000c448:	e5804010 	str	r4, [r0, #16]
4000c44c:	e5805014 	str	r5, [r0, #20]
4000c450:	e5806018 	str	r6, [r0, #24]
4000c454:	e5941014 	ldr	r1, [r4, #20]
4000c458:	e580101c 	str	r1, [r0, #28]
4000c45c:	e2800020 	add	r0, r0, #32
4000c460:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c964 <_tx_event_flags_set+0x5d8>
4000c464:	e5911000 	ldr	r1, [r1]
4000c468:	e1500001 	cmp	r0, r1
4000c46c:	3a000001 	bcc	4000c478 <_tx_event_flags_set+0xec>
4000c470:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c968 <_tx_event_flags_set+0x5dc>
4000c474:	e5910000 	ldr	r0, [r1]
4000c478:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c950 <_tx_event_flags_set+0x5c4>
4000c47c:	e5810000 	str	r0, [r1]
4000c480:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c96c <_tx_event_flags_set+0x5e0>
4000c484:	e5911000 	ldr	r1, [r1]
4000c488:	e5810020 	str	r0, [r1, #32]
4000c48c:	e3160002 	tst	r6, #2
4000c490:	0a000011 	beq	4000c4dc <_tx_event_flags_set+0x150>
4000c494:	e5940014 	ldr	r0, [r4, #20]
4000c498:	e3500000 	cmp	r0, #0
4000c49c:	0a000007 	beq	4000c4c0 <_tx_event_flags_set+0x134>
4000c4a0:	e5940010 	ldr	r0, [r4, #16]
4000c4a4:	e3500000 	cmp	r0, #0
4000c4a8:	1a000004 	bne	4000c4c0 <_tx_event_flags_set+0x134>
4000c4ac:	e1e01005 	mvn	r1, r5
4000c4b0:	e5940020 	ldr	r0, [r4, #32]
4000c4b4:	e1800001 	orr	r0, r0, r1
4000c4b8:	e5840020 	str	r0, [r4, #32]
4000c4bc:	ea000002 	b	4000c4cc <_tx_event_flags_set+0x140>
4000c4c0:	e5940008 	ldr	r0, [r4, #8]
4000c4c4:	e0000005 	and	r0, r0, r5
4000c4c8:	e5840008 	str	r0, [r4, #8]
4000c4cc:	e121f007 	msr	CPSR_c, r7
4000c4d0:	e3a00000 	mov	r0, #0
4000c4d4:	e28dd01c 	add	sp, sp, #28
4000c4d8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c4dc:	e5940008 	ldr	r0, [r4, #8]
4000c4e0:	e1800005 	orr	r0, r0, r5
4000c4e4:	e5840008 	str	r0, [r4, #8]
4000c4e8:	e5940020 	ldr	r0, [r4, #32]
4000c4ec:	e3500000 	cmp	r0, #0
4000c4f0:	0a000002 	beq	4000c500 <_tx_event_flags_set+0x174>
4000c4f4:	e5940020 	ldr	r0, [r4, #32]
4000c4f8:	e1c00005 	bic	r0, r0, r5
4000c4fc:	e5840020 	str	r0, [r4, #32]
4000c500:	e5940010 	ldr	r0, [r4, #16]
4000c504:	e3500000 	cmp	r0, #0
4000c508:	0a000102 	beq	4000c918 <_tx_event_flags_set+0x58c>
4000c50c:	e5940014 	ldr	r0, [r4, #20]
4000c510:	e3500001 	cmp	r0, #1
4000c514:	1a000048 	bne	4000c63c <_tx_event_flags_set+0x2b0>
4000c518:	e5940010 	ldr	r0, [r4, #16]
4000c51c:	e58d0014 	str	r0, [sp, #20]
4000c520:	e59d0014 	ldr	r0, [sp, #20]
4000c524:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c528:	e3100002 	tst	r0, #2
4000c52c:	0a00000b 	beq	4000c560 <_tx_event_flags_set+0x1d4>
4000c530:	e5940008 	ldr	r0, [r4, #8]
4000c534:	e59d1014 	ldr	r1, [sp, #20]
4000c538:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c53c:	e0000001 	and	r0, r0, r1
4000c540:	e59d1014 	ldr	r1, [sp, #20]
4000c544:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c548:	e1500001 	cmp	r0, r1
4000c54c:	1a000001 	bne	4000c558 <_tx_event_flags_set+0x1cc>
4000c550:	e3a08000 	mov	r8, #0
4000c554:	ea000009 	b	4000c580 <_tx_event_flags_set+0x1f4>
4000c558:	e3a08007 	mov	r8, #7
4000c55c:	ea000007 	b	4000c580 <_tx_event_flags_set+0x1f4>
4000c560:	e5940008 	ldr	r0, [r4, #8]
4000c564:	e59d1014 	ldr	r1, [sp, #20]
4000c568:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c56c:	e1100001 	tst	r0, r1
4000c570:	0a000001 	beq	4000c57c <_tx_event_flags_set+0x1f0>
4000c574:	e3a08000 	mov	r8, #0
4000c578:	ea000000 	b	4000c580 <_tx_event_flags_set+0x1f4>
4000c57c:	e3a08007 	mov	r8, #7
4000c580:	e3580000 	cmp	r8, #0
4000c584:	1a000024 	bne	4000c61c <_tx_event_flags_set+0x290>
4000c588:	e5941008 	ldr	r1, [r4, #8]
4000c58c:	e59d0014 	ldr	r0, [sp, #20]
4000c590:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c594:	e5801000 	str	r1, [r0]
4000c598:	e59d0014 	ldr	r0, [sp, #20]
4000c59c:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c5a0:	e3100001 	tst	r0, #1
4000c5a4:	0a000004 	beq	4000c5bc <_tx_event_flags_set+0x230>
4000c5a8:	e5940008 	ldr	r0, [r4, #8]
4000c5ac:	e59d1014 	ldr	r1, [sp, #20]
4000c5b0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5b4:	e1c00001 	bic	r0, r0, r1
4000c5b8:	e5840008 	str	r0, [r4, #8]
4000c5bc:	e3a00000 	mov	r0, #0
4000c5c0:	e5840010 	str	r0, [r4, #16]
4000c5c4:	e5840014 	str	r0, [r4, #20]
4000c5c8:	e3a01000 	mov	r1, #0
4000c5cc:	e59d0014 	ldr	r0, [sp, #20]
4000c5d0:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c5d4:	e59f0394 	ldr	r0, [pc, #916]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c5d8:	e5900000 	ldr	r0, [r0]
4000c5dc:	e2800001 	add	r0, r0, #1
4000c5e0:	e59f1388 	ldr	r1, [pc, #904]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c5e4:	e5810000 	str	r0, [r1]
4000c5e8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c5ec:	e121f007 	msr	CPSR_c, r7
4000c5f0:	e35b0000 	cmp	fp, #0
4000c5f4:	0a000001 	beq	4000c600 <_tx_event_flags_set+0x274>
4000c5f8:	e1a00004 	mov	r0, r4
4000c5fc:	e12fff3b 	blx	fp
4000c600:	e3a00000 	mov	r0, #0
4000c604:	e59d1014 	ldr	r1, [sp, #20]
4000c608:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c60c:	e59d0014 	ldr	r0, [sp, #20]
4000c610:	eb000b23 	bl	4000f2a4 <_tx_thread_system_resume>
4000c614:	e3a00000 	mov	r0, #0
4000c618:	eaffffad 	b	4000c4d4 <_tx_event_flags_set+0x148>
4000c61c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c620:	e121f007 	msr	CPSR_c, r7
4000c624:	e35b0000 	cmp	fp, #0
4000c628:	0a000001 	beq	4000c634 <_tx_event_flags_set+0x2a8>
4000c62c:	e1a00004 	mov	r0, r4
4000c630:	e12fff3b 	blx	fp
4000c634:	e3a00000 	mov	r0, #0
4000c638:	eaffffa5 	b	4000c4d4 <_tx_event_flags_set+0x148>
4000c63c:	e5940010 	ldr	r0, [r4, #16]
4000c640:	e58d0004 	str	r0, [sp, #4]
4000c644:	e59d0004 	ldr	r0, [sp, #4]
4000c648:	e58d0014 	str	r0, [sp, #20]
4000c64c:	e3a00000 	mov	r0, #0
4000c650:	e5840010 	str	r0, [r4, #16]
4000c654:	e58d000c 	str	r0, [sp, #12]
4000c658:	e58d0008 	str	r0, [sp, #8]
4000c65c:	e5940014 	ldr	r0, [r4, #20]
4000c660:	e58d0000 	str	r0, [sp]
4000c664:	e5949008 	ldr	r9, [r4, #8]
4000c668:	e59f0300 	ldr	r0, [pc, #768]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c66c:	e5900000 	ldr	r0, [r0]
4000c670:	e2800001 	add	r0, r0, #1
4000c674:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c678:	e5810000 	str	r0, [r1]
4000c67c:	e1a00000 	nop			; (mov r0, r0)
4000c680:	e121f007 	msr	CPSR_c, r7
4000c684:	e10f7000 	mrs	r7, CPSR
4000c688:	e3870080 	orr	r0, r7, #128	; 0x80
4000c68c:	e58d0018 	str	r0, [sp, #24]
4000c690:	e59d0018 	ldr	r0, [sp, #24]
4000c694:	e121f000 	msr	CPSR_c, r0
4000c698:	e594000c 	ldr	r0, [r4, #12]
4000c69c:	e3500000 	cmp	r0, #0
4000c6a0:	0a00000b 	beq	4000c6d4 <_tx_event_flags_set+0x348>
4000c6a4:	e3a00000 	mov	r0, #0
4000c6a8:	e584000c 	str	r0, [r4, #12]
4000c6ac:	e59d0004 	ldr	r0, [sp, #4]
4000c6b0:	e58d0014 	str	r0, [sp, #20]
4000c6b4:	e5940014 	ldr	r0, [r4, #20]
4000c6b8:	e58d0000 	str	r0, [sp]
4000c6bc:	e5940008 	ldr	r0, [r4, #8]
4000c6c0:	e1899000 	orr	r9, r9, r0
4000c6c4:	e59d0014 	ldr	r0, [sp, #20]
4000c6c8:	e3500000 	cmp	r0, #0
4000c6cc:	1a000000 	bne	4000c6d4 <_tx_event_flags_set+0x348>
4000c6d0:	ea00005d 	b	4000c84c <_tx_event_flags_set+0x4c0>
4000c6d4:	e59d0014 	ldr	r0, [sp, #20]
4000c6d8:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c6dc:	e31a0002 	tst	sl, #2
4000c6e0:	0a00000a 	beq	4000c710 <_tx_event_flags_set+0x384>
4000c6e4:	e59d0014 	ldr	r0, [sp, #20]
4000c6e8:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c6ec:	e0000009 	and	r0, r0, r9
4000c6f0:	e59d1014 	ldr	r1, [sp, #20]
4000c6f4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c6f8:	e1500001 	cmp	r0, r1
4000c6fc:	1a000001 	bne	4000c708 <_tx_event_flags_set+0x37c>
4000c700:	e3a08000 	mov	r8, #0
4000c704:	ea000008 	b	4000c72c <_tx_event_flags_set+0x3a0>
4000c708:	e3a08007 	mov	r8, #7
4000c70c:	ea000006 	b	4000c72c <_tx_event_flags_set+0x3a0>
4000c710:	e59d0014 	ldr	r0, [sp, #20]
4000c714:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c718:	e1100009 	tst	r0, r9
4000c71c:	0a000001 	beq	4000c728 <_tx_event_flags_set+0x39c>
4000c720:	e3a08000 	mov	r8, #0
4000c724:	ea000000 	b	4000c72c <_tx_event_flags_set+0x3a0>
4000c728:	e3a08007 	mov	r8, #7
4000c72c:	e59d0014 	ldr	r0, [sp, #20]
4000c730:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c734:	e58d0010 	str	r0, [sp, #16]
4000c738:	e3580000 	cmp	r8, #0
4000c73c:	1a00003c 	bne	4000c834 <_tx_event_flags_set+0x4a8>
4000c740:	e59d0014 	ldr	r0, [sp, #20]
4000c744:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c748:	e5809000 	str	r9, [r0]
4000c74c:	e31a0001 	tst	sl, #1
4000c750:	0a000004 	beq	4000c768 <_tx_event_flags_set+0x3dc>
4000c754:	e5940008 	ldr	r0, [r4, #8]
4000c758:	e59d1014 	ldr	r1, [sp, #20]
4000c75c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c760:	e1c00001 	bic	r0, r0, r1
4000c764:	e5840008 	str	r0, [r4, #8]
4000c768:	e59d0014 	ldr	r0, [sp, #20]
4000c76c:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c770:	e1510000 	cmp	r1, r0
4000c774:	1a000002 	bne	4000c784 <_tx_event_flags_set+0x3f8>
4000c778:	e3a00000 	mov	r0, #0
4000c77c:	e58d0004 	str	r0, [sp, #4]
4000c780:	ea000010 	b	4000c7c8 <_tx_event_flags_set+0x43c>
4000c784:	e59d0004 	ldr	r0, [sp, #4]
4000c788:	e59d1014 	ldr	r1, [sp, #20]
4000c78c:	e1500001 	cmp	r0, r1
4000c790:	1a000002 	bne	4000c7a0 <_tx_event_flags_set+0x414>
4000c794:	e59d0014 	ldr	r0, [sp, #20]
4000c798:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c79c:	e58d0004 	str	r0, [sp, #4]
4000c7a0:	e59d0014 	ldr	r0, [sp, #20]
4000c7a4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c7a8:	e59d1014 	ldr	r1, [sp, #20]
4000c7ac:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c7b0:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c7b4:	e59d0014 	ldr	r0, [sp, #20]
4000c7b8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7bc:	e59d1014 	ldr	r1, [sp, #20]
4000c7c0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c7c4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c7c8:	e5940014 	ldr	r0, [r4, #20]
4000c7cc:	e2400001 	sub	r0, r0, #1
4000c7d0:	e5840014 	str	r0, [r4, #20]
4000c7d4:	e3a00000 	mov	r0, #0
4000c7d8:	e59d1014 	ldr	r1, [sp, #20]
4000c7dc:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c7e0:	e59d1014 	ldr	r1, [sp, #20]
4000c7e4:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c7e8:	e59d000c 	ldr	r0, [sp, #12]
4000c7ec:	e3500000 	cmp	r0, #0
4000c7f0:	1a000007 	bne	4000c814 <_tx_event_flags_set+0x488>
4000c7f4:	e59d0014 	ldr	r0, [sp, #20]
4000c7f8:	e58d000c 	str	r0, [sp, #12]
4000c7fc:	e59d0014 	ldr	r0, [sp, #20]
4000c800:	e58d0008 	str	r0, [sp, #8]
4000c804:	e3a01000 	mov	r1, #0
4000c808:	e59d0014 	ldr	r0, [sp, #20]
4000c80c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c810:	ea000007 	b	4000c834 <_tx_event_flags_set+0x4a8>
4000c814:	e59d0014 	ldr	r0, [sp, #20]
4000c818:	e59d1008 	ldr	r1, [sp, #8]
4000c81c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c820:	e3a00000 	mov	r0, #0
4000c824:	e59d1014 	ldr	r1, [sp, #20]
4000c828:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c82c:	e59d0014 	ldr	r0, [sp, #20]
4000c830:	e58d0008 	str	r0, [sp, #8]
4000c834:	e59d0010 	ldr	r0, [sp, #16]
4000c838:	e58d0014 	str	r0, [sp, #20]
4000c83c:	e59d0000 	ldr	r0, [sp]
4000c840:	e2500001 	subs	r0, r0, #1
4000c844:	e58d0000 	str	r0, [sp]
4000c848:	1affff8c 	bne	4000c680 <_tx_event_flags_set+0x2f4>
4000c84c:	e1a00000 	nop			; (mov r0, r0)
4000c850:	e59d0004 	ldr	r0, [sp, #4]
4000c854:	e5840010 	str	r0, [r4, #16]
4000c858:	e5940020 	ldr	r0, [r4, #32]
4000c85c:	e3500000 	cmp	r0, #0
4000c860:	0a000005 	beq	4000c87c <_tx_event_flags_set+0x4f0>
4000c864:	e5940008 	ldr	r0, [r4, #8]
4000c868:	e5941020 	ldr	r1, [r4, #32]
4000c86c:	e1c00001 	bic	r0, r0, r1
4000c870:	e5840008 	str	r0, [r4, #8]
4000c874:	e3a00000 	mov	r0, #0
4000c878:	e5840020 	str	r0, [r4, #32]
4000c87c:	e121f007 	msr	CPSR_c, r7
4000c880:	e59d000c 	ldr	r0, [sp, #12]
4000c884:	e58d0014 	str	r0, [sp, #20]
4000c888:	ea000011 	b	4000c8d4 <_tx_event_flags_set+0x548>
4000c88c:	e59d0014 	ldr	r0, [sp, #20]
4000c890:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c894:	e58d0010 	str	r0, [sp, #16]
4000c898:	e10f7000 	mrs	r7, CPSR
4000c89c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c8a0:	e58d0018 	str	r0, [sp, #24]
4000c8a4:	e59d0018 	ldr	r0, [sp, #24]
4000c8a8:	e121f000 	msr	CPSR_c, r0
4000c8ac:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c8b0:	e5900000 	ldr	r0, [r0]
4000c8b4:	e2800001 	add	r0, r0, #1
4000c8b8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c8bc:	e5810000 	str	r0, [r1]
4000c8c0:	e121f007 	msr	CPSR_c, r7
4000c8c4:	e59d0014 	ldr	r0, [sp, #20]
4000c8c8:	eb000a75 	bl	4000f2a4 <_tx_thread_system_resume>
4000c8cc:	e59d0010 	ldr	r0, [sp, #16]
4000c8d0:	e58d0014 	str	r0, [sp, #20]
4000c8d4:	e59d0014 	ldr	r0, [sp, #20]
4000c8d8:	e3500000 	cmp	r0, #0
4000c8dc:	1affffea 	bne	4000c88c <_tx_event_flags_set+0x500>
4000c8e0:	e10f7000 	mrs	r7, CPSR
4000c8e4:	e3870080 	orr	r0, r7, #128	; 0x80
4000c8e8:	e58d0018 	str	r0, [sp, #24]
4000c8ec:	e59d0018 	ldr	r0, [sp, #24]
4000c8f0:	e121f000 	msr	CPSR_c, r0
4000c8f4:	e59f0074 	ldr	r0, [pc, #116]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c8f8:	e5900000 	ldr	r0, [r0]
4000c8fc:	e2400001 	sub	r0, r0, #1
4000c900:	e59f1068 	ldr	r1, [pc, #104]	; 4000c970 <_tx_event_flags_set+0x5e4>
4000c904:	e5810000 	str	r0, [r1]
4000c908:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c90c:	e121f007 	msr	CPSR_c, r7
4000c910:	eb000a37 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000c914:	ea000007 	b	4000c938 <_tx_event_flags_set+0x5ac>
4000c918:	e5940014 	ldr	r0, [r4, #20]
4000c91c:	e3500000 	cmp	r0, #0
4000c920:	0a000002 	beq	4000c930 <_tx_event_flags_set+0x5a4>
4000c924:	e594000c 	ldr	r0, [r4, #12]
4000c928:	e2800001 	add	r0, r0, #1
4000c92c:	e584000c 	str	r0, [r4, #12]
4000c930:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c934:	e121f007 	msr	CPSR_c, r7
4000c938:	e35b0000 	cmp	fp, #0
4000c93c:	0a000001 	beq	4000c948 <_tx_event_flags_set+0x5bc>
4000c940:	e1a00004 	mov	r0, r4
4000c944:	e12fff3b 	blx	fp
4000c948:	e3a00000 	mov	r0, #0
4000c94c:	eafffee0 	b	4000c4d4 <_tx_event_flags_set+0x148>
4000c950:	4003132c 	.word	0x4003132c
4000c954:	40031330 	.word	0x40031330
4000c958:	400312b8 	.word	0x400312b8
4000c95c:	400312c0 	.word	0x400312c0
4000c960:	f0f0f0f0 	.word	0xf0f0f0f0
4000c964:	40031328 	.word	0x40031328
4000c968:	40031324 	.word	0x40031324
4000c96c:	40031318 	.word	0x40031318
4000c970:	400312dc 	.word	0x400312dc

4000c974 <_tx_initialize_high_level>:
4000c974:	e92d4010 	push	{r4, lr}
4000c978:	ebfff38a 	bl	400097a8 <_tx_trace_initialize>
4000c97c:	ebffeff0 	bl	40008944 <_tx_thread_initialize>
4000c980:	ebfff26b 	bl	40009334 <_tx_timer_initialize>
4000c984:	e3a00000 	mov	r0, #0
4000c988:	e59f105c 	ldr	r1, [pc, #92]	; 4000c9ec <_tx_initialize_high_level+0x78>
4000c98c:	e5810000 	str	r0, [r1]
4000c990:	e59f1058 	ldr	r1, [pc, #88]	; 4000c9f0 <_tx_initialize_high_level+0x7c>
4000c994:	e5810000 	str	r0, [r1]
4000c998:	e59f1054 	ldr	r1, [pc, #84]	; 4000c9f4 <_tx_initialize_high_level+0x80>
4000c99c:	e5810000 	str	r0, [r1]
4000c9a0:	e59f1050 	ldr	r1, [pc, #80]	; 4000c9f8 <_tx_initialize_high_level+0x84>
4000c9a4:	e5810000 	str	r0, [r1]
4000c9a8:	e59f104c 	ldr	r1, [pc, #76]	; 4000c9fc <_tx_initialize_high_level+0x88>
4000c9ac:	e5810000 	str	r0, [r1]
4000c9b0:	e59f1048 	ldr	r1, [pc, #72]	; 4000ca00 <_tx_initialize_high_level+0x8c>
4000c9b4:	e5810000 	str	r0, [r1]
4000c9b8:	e59f1044 	ldr	r1, [pc, #68]	; 4000ca04 <_tx_initialize_high_level+0x90>
4000c9bc:	e5810000 	str	r0, [r1]
4000c9c0:	e59f1040 	ldr	r1, [pc, #64]	; 4000ca08 <_tx_initialize_high_level+0x94>
4000c9c4:	e5810000 	str	r0, [r1]
4000c9c8:	e59f103c 	ldr	r1, [pc, #60]	; 4000ca0c <_tx_initialize_high_level+0x98>
4000c9cc:	e5810000 	str	r0, [r1]
4000c9d0:	e59f1038 	ldr	r1, [pc, #56]	; 4000ca10 <_tx_initialize_high_level+0x9c>
4000c9d4:	e5810000 	str	r0, [r1]
4000c9d8:	e59f1034 	ldr	r1, [pc, #52]	; 4000ca14 <_tx_initialize_high_level+0xa0>
4000c9dc:	e5810000 	str	r0, [r1]
4000c9e0:	e59f1030 	ldr	r1, [pc, #48]	; 4000ca18 <_tx_initialize_high_level+0xa4>
4000c9e4:	e5810000 	str	r0, [r1]
4000c9e8:	e8bd8010 	pop	{r4, pc}
4000c9ec:	40031334 	.word	0x40031334
4000c9f0:	40031338 	.word	0x40031338
4000c9f4:	4003133c 	.word	0x4003133c
4000c9f8:	40031340 	.word	0x40031340
4000c9fc:	40031344 	.word	0x40031344
4000ca00:	40031348 	.word	0x40031348
4000ca04:	40031354 	.word	0x40031354
4000ca08:	40031358 	.word	0x40031358
4000ca0c:	4003135c 	.word	0x4003135c
4000ca10:	40031360 	.word	0x40031360
4000ca14:	4003134c 	.word	0x4003134c
4000ca18:	40031350 	.word	0x40031350

4000ca1c <_tx_mutex_create>:
4000ca1c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000ca20:	e1a04000 	mov	r4, r0
4000ca24:	e1a05001 	mov	r5, r1
4000ca28:	e1a06002 	mov	r6, r2
4000ca2c:	e3a01038 	mov	r1, #56	; 0x38
4000ca30:	e1a00004 	mov	r0, r4
4000ca34:	eb001b57 	bl	40013798 <__aeabi_memclr4>
4000ca38:	e5845004 	str	r5, [r4, #4]
4000ca3c:	e5846010 	str	r6, [r4, #16]
4000ca40:	e10f7000 	mrs	r7, CPSR
4000ca44:	e3878080 	orr	r8, r7, #128	; 0x80
4000ca48:	e121f008 	msr	CPSR_c, r8
4000ca4c:	e59f0174 	ldr	r0, [pc, #372]	; 4000cbc8 <_tx_mutex_create+0x1ac>
4000ca50:	e5840000 	str	r0, [r4]
4000ca54:	e59f0170 	ldr	r0, [pc, #368]	; 4000cbcc <_tx_mutex_create+0x1b0>
4000ca58:	e5900000 	ldr	r0, [r0]
4000ca5c:	e3500000 	cmp	r0, #0
4000ca60:	0a00000e 	beq	4000caa0 <_tx_mutex_create+0x84>
4000ca64:	e59f0160 	ldr	r0, [pc, #352]	; 4000cbcc <_tx_mutex_create+0x1b0>
4000ca68:	e5900000 	ldr	r0, [r0]
4000ca6c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000ca70:	e58d0004 	str	r0, [sp, #4]
4000ca74:	e59f0150 	ldr	r0, [pc, #336]	; 4000cbcc <_tx_mutex_create+0x1b0>
4000ca78:	e5900000 	ldr	r0, [r0]
4000ca7c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000ca80:	e59d0004 	ldr	r0, [sp, #4]
4000ca84:	e5804024 	str	r4, [r0, #36]	; 0x24
4000ca88:	e59d0004 	ldr	r0, [sp, #4]
4000ca8c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ca90:	e59f0134 	ldr	r0, [pc, #308]	; 4000cbcc <_tx_mutex_create+0x1b0>
4000ca94:	e5900000 	ldr	r0, [r0]
4000ca98:	e5840024 	str	r0, [r4, #36]	; 0x24
4000ca9c:	ea000003 	b	4000cab0 <_tx_mutex_create+0x94>
4000caa0:	e59f0124 	ldr	r0, [pc, #292]	; 4000cbcc <_tx_mutex_create+0x1b0>
4000caa4:	e5804000 	str	r4, [r0]
4000caa8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000caac:	e5844028 	str	r4, [r4, #40]	; 0x28
4000cab0:	e59f0118 	ldr	r0, [pc, #280]	; 4000cbd0 <_tx_mutex_create+0x1b4>
4000cab4:	e5900000 	ldr	r0, [r0]
4000cab8:	e2800001 	add	r0, r0, #1
4000cabc:	e59f110c 	ldr	r1, [pc, #268]	; 4000cbd0 <_tx_mutex_create+0x1b4>
4000cac0:	e5810000 	str	r0, [r1]
4000cac4:	e3a03000 	mov	r3, #0
4000cac8:	e58d3000 	str	r3, [sp]
4000cacc:	e1a03006 	mov	r3, r6
4000cad0:	e1a02005 	mov	r2, r5
4000cad4:	e1a01004 	mov	r1, r4
4000cad8:	e3a00005 	mov	r0, #5
4000cadc:	eb000d46 	bl	4000fffc <_tx_trace_object_register>
4000cae0:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cbd4 <_tx_mutex_create+0x1b8>
4000cae4:	e5910000 	ldr	r0, [r1]
4000cae8:	e3500000 	cmp	r0, #0
4000caec:	0a000032 	beq	4000cbbc <_tx_mutex_create+0x1a0>
4000caf0:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cbd8 <_tx_mutex_create+0x1bc>
4000caf4:	e5911000 	ldr	r1, [r1]
4000caf8:	e2811001 	add	r1, r1, #1
4000cafc:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cbd8 <_tx_mutex_create+0x1bc>
4000cb00:	e5821000 	str	r1, [r2]
4000cb04:	e580100c 	str	r1, [r0, #12]
4000cb08:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cbdc <_tx_mutex_create+0x1c0>
4000cb0c:	e5911000 	ldr	r1, [r1]
4000cb10:	e3510000 	cmp	r1, #0
4000cb14:	1a000006 	bne	4000cb34 <_tx_mutex_create+0x118>
4000cb18:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cbe0 <_tx_mutex_create+0x1c4>
4000cb1c:	e5911000 	ldr	r1, [r1]
4000cb20:	e5801000 	str	r1, [r0]
4000cb24:	e5901000 	ldr	r1, [r0]
4000cb28:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cb2c:	e5801004 	str	r1, [r0, #4]
4000cb30:	ea00000d 	b	4000cb6c <_tx_mutex_create+0x150>
4000cb34:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cbdc <_tx_mutex_create+0x1c0>
4000cb38:	e5911000 	ldr	r1, [r1]
4000cb3c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cbe4 <_tx_mutex_create+0x1c8>
4000cb40:	e1510002 	cmp	r1, r2
4000cb44:	2a000004 	bcs	4000cb5c <_tx_mutex_create+0x140>
4000cb48:	e3e01000 	mvn	r1, #0
4000cb4c:	e5801000 	str	r1, [r0]
4000cb50:	e3a01000 	mov	r1, #0
4000cb54:	e5801004 	str	r1, [r0, #4]
4000cb58:	ea000003 	b	4000cb6c <_tx_mutex_create+0x150>
4000cb5c:	e59f1080 	ldr	r1, [pc, #128]	; 4000cbe4 <_tx_mutex_create+0x1c8>
4000cb60:	e5801000 	str	r1, [r0]
4000cb64:	e3a01000 	mov	r1, #0
4000cb68:	e5801004 	str	r1, [r0, #4]
4000cb6c:	e3a01032 	mov	r1, #50	; 0x32
4000cb70:	e5801008 	str	r1, [r0, #8]
4000cb74:	e5804010 	str	r4, [r0, #16]
4000cb78:	e5806014 	str	r6, [r0, #20]
4000cb7c:	e28d1004 	add	r1, sp, #4
4000cb80:	e5801018 	str	r1, [r0, #24]
4000cb84:	e3a01000 	mov	r1, #0
4000cb88:	e580101c 	str	r1, [r0, #28]
4000cb8c:	e2800020 	add	r0, r0, #32
4000cb90:	e59f1050 	ldr	r1, [pc, #80]	; 4000cbe8 <_tx_mutex_create+0x1cc>
4000cb94:	e5911000 	ldr	r1, [r1]
4000cb98:	e1500001 	cmp	r0, r1
4000cb9c:	3a000001 	bcc	4000cba8 <_tx_mutex_create+0x18c>
4000cba0:	e59f1044 	ldr	r1, [pc, #68]	; 4000cbec <_tx_mutex_create+0x1d0>
4000cba4:	e5910000 	ldr	r0, [r1]
4000cba8:	e59f1024 	ldr	r1, [pc, #36]	; 4000cbd4 <_tx_mutex_create+0x1b8>
4000cbac:	e5810000 	str	r0, [r1]
4000cbb0:	e59f1038 	ldr	r1, [pc, #56]	; 4000cbf0 <_tx_mutex_create+0x1d4>
4000cbb4:	e5911000 	ldr	r1, [r1]
4000cbb8:	e5810020 	str	r0, [r1, #32]
4000cbbc:	e121f007 	msr	CPSR_c, r7
4000cbc0:	e3a00000 	mov	r0, #0
4000cbc4:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cbc8:	4d555445 	.word	0x4d555445
4000cbcc:	4003134c 	.word	0x4003134c
4000cbd0:	40031350 	.word	0x40031350
4000cbd4:	4003132c 	.word	0x4003132c
4000cbd8:	40031330 	.word	0x40031330
4000cbdc:	400312b8 	.word	0x400312b8
4000cbe0:	400312c0 	.word	0x400312c0
4000cbe4:	f0f0f0f0 	.word	0xf0f0f0f0
4000cbe8:	40031328 	.word	0x40031328
4000cbec:	40031324 	.word	0x40031324
4000cbf0:	40031318 	.word	0x40031318

4000cbf4 <_tx_mutex_delete>:
4000cbf4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cbf8:	e1a04000 	mov	r4, r0
4000cbfc:	e10f5000 	mrs	r5, CPSR
4000cc00:	e3856080 	orr	r6, r5, #128	; 0x80
4000cc04:	e121f006 	msr	CPSR_c, r6
4000cc08:	e59f1294 	ldr	r1, [pc, #660]	; 4000cea4 <_tx_mutex_delete+0x2b0>
4000cc0c:	e5910000 	ldr	r0, [r1]
4000cc10:	e3500000 	cmp	r0, #0
4000cc14:	0a000031 	beq	4000cce0 <_tx_mutex_delete+0xec>
4000cc18:	e59f1288 	ldr	r1, [pc, #648]	; 4000cea8 <_tx_mutex_delete+0x2b4>
4000cc1c:	e5911000 	ldr	r1, [r1]
4000cc20:	e2811001 	add	r1, r1, #1
4000cc24:	e59f227c 	ldr	r2, [pc, #636]	; 4000cea8 <_tx_mutex_delete+0x2b4>
4000cc28:	e5821000 	str	r1, [r2]
4000cc2c:	e580100c 	str	r1, [r0, #12]
4000cc30:	e59f1274 	ldr	r1, [pc, #628]	; 4000ceac <_tx_mutex_delete+0x2b8>
4000cc34:	e5911000 	ldr	r1, [r1]
4000cc38:	e3510000 	cmp	r1, #0
4000cc3c:	1a000006 	bne	4000cc5c <_tx_mutex_delete+0x68>
4000cc40:	e59f1268 	ldr	r1, [pc, #616]	; 4000ceb0 <_tx_mutex_delete+0x2bc>
4000cc44:	e5911000 	ldr	r1, [r1]
4000cc48:	e5801000 	str	r1, [r0]
4000cc4c:	e5901000 	ldr	r1, [r0]
4000cc50:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cc54:	e5801004 	str	r1, [r0, #4]
4000cc58:	ea00000d 	b	4000cc94 <_tx_mutex_delete+0xa0>
4000cc5c:	e59f1248 	ldr	r1, [pc, #584]	; 4000ceac <_tx_mutex_delete+0x2b8>
4000cc60:	e5911000 	ldr	r1, [r1]
4000cc64:	e59f2248 	ldr	r2, [pc, #584]	; 4000ceb4 <_tx_mutex_delete+0x2c0>
4000cc68:	e1510002 	cmp	r1, r2
4000cc6c:	2a000004 	bcs	4000cc84 <_tx_mutex_delete+0x90>
4000cc70:	e3e01000 	mvn	r1, #0
4000cc74:	e5801000 	str	r1, [r0]
4000cc78:	e3a01000 	mov	r1, #0
4000cc7c:	e5801004 	str	r1, [r0, #4]
4000cc80:	ea000003 	b	4000cc94 <_tx_mutex_delete+0xa0>
4000cc84:	e59f1228 	ldr	r1, [pc, #552]	; 4000ceb4 <_tx_mutex_delete+0x2c0>
4000cc88:	e5801000 	str	r1, [r0]
4000cc8c:	e3a01000 	mov	r1, #0
4000cc90:	e5801004 	str	r1, [r0, #4]
4000cc94:	e3a01033 	mov	r1, #51	; 0x33
4000cc98:	e5801008 	str	r1, [r0, #8]
4000cc9c:	e5804010 	str	r4, [r0, #16]
4000cca0:	e580d014 	str	sp, [r0, #20]
4000cca4:	e3a01000 	mov	r1, #0
4000cca8:	e5801018 	str	r1, [r0, #24]
4000ccac:	e580101c 	str	r1, [r0, #28]
4000ccb0:	e2800020 	add	r0, r0, #32
4000ccb4:	e59f11fc 	ldr	r1, [pc, #508]	; 4000ceb8 <_tx_mutex_delete+0x2c4>
4000ccb8:	e5911000 	ldr	r1, [r1]
4000ccbc:	e1500001 	cmp	r0, r1
4000ccc0:	3a000001 	bcc	4000cccc <_tx_mutex_delete+0xd8>
4000ccc4:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cebc <_tx_mutex_delete+0x2c8>
4000ccc8:	e5910000 	ldr	r0, [r1]
4000cccc:	e59f11d0 	ldr	r1, [pc, #464]	; 4000cea4 <_tx_mutex_delete+0x2b0>
4000ccd0:	e5810000 	str	r0, [r1]
4000ccd4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cec0 <_tx_mutex_delete+0x2cc>
4000ccd8:	e5911000 	ldr	r1, [r1]
4000ccdc:	e5810020 	str	r0, [r1, #32]
4000cce0:	e1a00004 	mov	r0, r4
4000cce4:	eb000d2f 	bl	400101a8 <_tx_trace_object_unregister>
4000cce8:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cec4 <_tx_mutex_delete+0x2d0>
4000ccec:	e5900000 	ldr	r0, [r0]
4000ccf0:	e2400001 	sub	r0, r0, #1
4000ccf4:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cec4 <_tx_mutex_delete+0x2d0>
4000ccf8:	e5810000 	str	r0, [r1]
4000ccfc:	e3a00000 	mov	r0, #0
4000cd00:	e5840000 	str	r0, [r4]
4000cd04:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd08:	e1500004 	cmp	r0, r4
4000cd0c:	1a000003 	bne	4000cd20 <_tx_mutex_delete+0x12c>
4000cd10:	e3a00000 	mov	r0, #0
4000cd14:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cec8 <_tx_mutex_delete+0x2d4>
4000cd18:	e5810000 	str	r0, [r1]
4000cd1c:	ea00000c 	b	4000cd54 <_tx_mutex_delete+0x160>
4000cd20:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cd24:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cd28:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cd2c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd30:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cd34:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cd38:	e59f0188 	ldr	r0, [pc, #392]	; 4000cec8 <_tx_mutex_delete+0x2d4>
4000cd3c:	e5900000 	ldr	r0, [r0]
4000cd40:	e1500004 	cmp	r0, r4
4000cd44:	1a000002 	bne	4000cd54 <_tx_mutex_delete+0x160>
4000cd48:	e59f1178 	ldr	r1, [pc, #376]	; 4000cec8 <_tx_mutex_delete+0x2d4>
4000cd4c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd50:	e5810000 	str	r0, [r1]
4000cd54:	e594000c 	ldr	r0, [r4, #12]
4000cd58:	e58d0000 	str	r0, [sp]
4000cd5c:	e5940010 	ldr	r0, [r4, #16]
4000cd60:	e3500000 	cmp	r0, #0
4000cd64:	0a00001c 	beq	4000cddc <_tx_mutex_delete+0x1e8>
4000cd68:	e59d0000 	ldr	r0, [sp]
4000cd6c:	e3500000 	cmp	r0, #0
4000cd70:	0a000019 	beq	4000cddc <_tx_mutex_delete+0x1e8>
4000cd74:	e59d0000 	ldr	r0, [sp]
4000cd78:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cd7c:	e2400001 	sub	r0, r0, #1
4000cd80:	e59d1000 	ldr	r1, [sp]
4000cd84:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cd88:	e59d0000 	ldr	r0, [sp]
4000cd8c:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cd90:	e3500000 	cmp	r0, #0
4000cd94:	1a000003 	bne	4000cda8 <_tx_mutex_delete+0x1b4>
4000cd98:	e3a00000 	mov	r0, #0
4000cd9c:	e59d1000 	ldr	r1, [sp]
4000cda0:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cda4:	ea00000c 	b	4000cddc <_tx_mutex_delete+0x1e8>
4000cda8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cdac:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cdb0:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cdb4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cdb8:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cdbc:	e5810030 	str	r0, [r1, #48]	; 0x30
4000cdc0:	e59d0000 	ldr	r0, [sp]
4000cdc4:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000cdc8:	e1500004 	cmp	r0, r4
4000cdcc:	1a000002 	bne	4000cddc <_tx_mutex_delete+0x1e8>
4000cdd0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cdd4:	e59d1000 	ldr	r1, [sp]
4000cdd8:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cddc:	e3a00000 	mov	r0, #0
4000cde0:	e584000c 	str	r0, [r4, #12]
4000cde4:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000cde8:	e5900000 	ldr	r0, [r0]
4000cdec:	e2800001 	add	r0, r0, #1
4000cdf0:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000cdf4:	e5810000 	str	r0, [r1]
4000cdf8:	e121f005 	msr	CPSR_c, r5
4000cdfc:	e594001c 	ldr	r0, [r4, #28]
4000ce00:	e58d0000 	str	r0, [sp]
4000ce04:	ea000017 	b	4000ce68 <_tx_mutex_delete+0x274>
4000ce08:	e10f5000 	mrs	r5, CPSR
4000ce0c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce10:	e121f006 	msr	CPSR_c, r6
4000ce14:	e3a00000 	mov	r0, #0
4000ce18:	e59d1000 	ldr	r1, [sp]
4000ce1c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000ce20:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000ce24:	e5900000 	ldr	r0, [r0]
4000ce28:	e2800001 	add	r0, r0, #1
4000ce2c:	e59f1098 	ldr	r1, [pc, #152]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000ce30:	e5810000 	str	r0, [r1]
4000ce34:	e121f005 	msr	CPSR_c, r5
4000ce38:	e3a00001 	mov	r0, #1
4000ce3c:	e59d1000 	ldr	r1, [sp]
4000ce40:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ce44:	e59d0000 	ldr	r0, [sp]
4000ce48:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ce4c:	e58d0000 	str	r0, [sp]
4000ce50:	e59d1000 	ldr	r1, [sp]
4000ce54:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000ce58:	eb000911 	bl	4000f2a4 <_tx_thread_system_resume>
4000ce5c:	e5940020 	ldr	r0, [r4, #32]
4000ce60:	e2400001 	sub	r0, r0, #1
4000ce64:	e5840020 	str	r0, [r4, #32]
4000ce68:	e5940020 	ldr	r0, [r4, #32]
4000ce6c:	e3500000 	cmp	r0, #0
4000ce70:	1affffe4 	bne	4000ce08 <_tx_mutex_delete+0x214>
4000ce74:	e10f5000 	mrs	r5, CPSR
4000ce78:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce7c:	e121f006 	msr	CPSR_c, r6
4000ce80:	e59f0044 	ldr	r0, [pc, #68]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000ce84:	e5900000 	ldr	r0, [r0]
4000ce88:	e2400001 	sub	r0, r0, #1
4000ce8c:	e59f1038 	ldr	r1, [pc, #56]	; 4000cecc <_tx_mutex_delete+0x2d8>
4000ce90:	e5810000 	str	r0, [r1]
4000ce94:	e121f005 	msr	CPSR_c, r5
4000ce98:	eb0008d5 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000ce9c:	e3a00000 	mov	r0, #0
4000cea0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000cea4:	4003132c 	.word	0x4003132c
4000cea8:	40031330 	.word	0x40031330
4000ceac:	400312b8 	.word	0x400312b8
4000ceb0:	400312c0 	.word	0x400312c0
4000ceb4:	f0f0f0f0 	.word	0xf0f0f0f0
4000ceb8:	40031328 	.word	0x40031328
4000cebc:	40031324 	.word	0x40031324
4000cec0:	40031318 	.word	0x40031318
4000cec4:	40031350 	.word	0x40031350
4000cec8:	4003134c 	.word	0x4003134c
4000cecc:	400312dc 	.word	0x400312dc

4000ced0 <_tx_mutex_get>:
4000ced0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ced4:	e1a04000 	mov	r4, r0
4000ced8:	e1a05001 	mov	r5, r1
4000cedc:	e10f6000 	mrs	r6, CPSR
4000cee0:	e3867080 	orr	r7, r6, #128	; 0x80
4000cee4:	e121f007 	msr	CPSR_c, r7
4000cee8:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d19c <_tx_mutex_get+0x2cc>
4000ceec:	e5910000 	ldr	r0, [r1]
4000cef0:	e3500000 	cmp	r0, #0
4000cef4:	0a000032 	beq	4000cfc4 <_tx_mutex_get+0xf4>
4000cef8:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d1a0 <_tx_mutex_get+0x2d0>
4000cefc:	e5911000 	ldr	r1, [r1]
4000cf00:	e2811001 	add	r1, r1, #1
4000cf04:	e59f2294 	ldr	r2, [pc, #660]	; 4000d1a0 <_tx_mutex_get+0x2d0>
4000cf08:	e5821000 	str	r1, [r2]
4000cf0c:	e580100c 	str	r1, [r0, #12]
4000cf10:	e59f128c 	ldr	r1, [pc, #652]	; 4000d1a4 <_tx_mutex_get+0x2d4>
4000cf14:	e5911000 	ldr	r1, [r1]
4000cf18:	e3510000 	cmp	r1, #0
4000cf1c:	1a000006 	bne	4000cf3c <_tx_mutex_get+0x6c>
4000cf20:	e59f1280 	ldr	r1, [pc, #640]	; 4000d1a8 <_tx_mutex_get+0x2d8>
4000cf24:	e5911000 	ldr	r1, [r1]
4000cf28:	e5801000 	str	r1, [r0]
4000cf2c:	e5901000 	ldr	r1, [r0]
4000cf30:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cf34:	e5801004 	str	r1, [r0, #4]
4000cf38:	ea00000d 	b	4000cf74 <_tx_mutex_get+0xa4>
4000cf3c:	e59f1260 	ldr	r1, [pc, #608]	; 4000d1a4 <_tx_mutex_get+0x2d4>
4000cf40:	e5911000 	ldr	r1, [r1]
4000cf44:	e59f2260 	ldr	r2, [pc, #608]	; 4000d1ac <_tx_mutex_get+0x2dc>
4000cf48:	e1510002 	cmp	r1, r2
4000cf4c:	2a000004 	bcs	4000cf64 <_tx_mutex_get+0x94>
4000cf50:	e3e01000 	mvn	r1, #0
4000cf54:	e5801000 	str	r1, [r0]
4000cf58:	e3a01000 	mov	r1, #0
4000cf5c:	e5801004 	str	r1, [r0, #4]
4000cf60:	ea000003 	b	4000cf74 <_tx_mutex_get+0xa4>
4000cf64:	e59f1240 	ldr	r1, [pc, #576]	; 4000d1ac <_tx_mutex_get+0x2dc>
4000cf68:	e5801000 	str	r1, [r0]
4000cf6c:	e3a01000 	mov	r1, #0
4000cf70:	e5801004 	str	r1, [r0, #4]
4000cf74:	e3a01034 	mov	r1, #52	; 0x34
4000cf78:	e5801008 	str	r1, [r0, #8]
4000cf7c:	e5804010 	str	r4, [r0, #16]
4000cf80:	e5805014 	str	r5, [r0, #20]
4000cf84:	e594100c 	ldr	r1, [r4, #12]
4000cf88:	e5801018 	str	r1, [r0, #24]
4000cf8c:	e5941008 	ldr	r1, [r4, #8]
4000cf90:	e580101c 	str	r1, [r0, #28]
4000cf94:	e2800020 	add	r0, r0, #32
4000cf98:	e59f1210 	ldr	r1, [pc, #528]	; 4000d1b0 <_tx_mutex_get+0x2e0>
4000cf9c:	e5911000 	ldr	r1, [r1]
4000cfa0:	e1500001 	cmp	r0, r1
4000cfa4:	3a000001 	bcc	4000cfb0 <_tx_mutex_get+0xe0>
4000cfa8:	e59f1204 	ldr	r1, [pc, #516]	; 4000d1b4 <_tx_mutex_get+0x2e4>
4000cfac:	e5910000 	ldr	r0, [r1]
4000cfb0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d19c <_tx_mutex_get+0x2cc>
4000cfb4:	e5810000 	str	r0, [r1]
4000cfb8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d1b8 <_tx_mutex_get+0x2e8>
4000cfbc:	e5911000 	ldr	r1, [r1]
4000cfc0:	e5810020 	str	r0, [r1, #32]
4000cfc4:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d1a8 <_tx_mutex_get+0x2d8>
4000cfc8:	e5909000 	ldr	r9, [r0]
4000cfcc:	e5940008 	ldr	r0, [r4, #8]
4000cfd0:	e3500000 	cmp	r0, #0
4000cfd4:	1a000025 	bne	4000d070 <_tx_mutex_get+0x1a0>
4000cfd8:	e3a00001 	mov	r0, #1
4000cfdc:	e5840008 	str	r0, [r4, #8]
4000cfe0:	e584900c 	str	r9, [r4, #12]
4000cfe4:	e5940010 	ldr	r0, [r4, #16]
4000cfe8:	e3500000 	cmp	r0, #0
4000cfec:	0a00001d 	beq	4000d068 <_tx_mutex_get+0x198>
4000cff0:	e3590000 	cmp	r9, #0
4000cff4:	0a00001b 	beq	4000d068 <_tx_mutex_get+0x198>
4000cff8:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cffc:	e5840014 	str	r0, [r4, #20]
4000d000:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d004:	e5840018 	str	r0, [r4, #24]
4000d008:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d00c:	e3500000 	cmp	r0, #0
4000d010:	0a000008 	beq	4000d038 <_tx_mutex_get+0x168>
4000d014:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d018:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d01c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d020:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d024:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d028:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d02c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d030:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d034:	ea000006 	b	4000d054 <_tx_mutex_get+0x184>
4000d038:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d03c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d040:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d044:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d048:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d04c:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d050:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d054:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d058:	e2800001 	add	r0, r0, #1
4000d05c:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d060:	e3a00020 	mov	r0, #32
4000d064:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d068:	e3a08000 	mov	r8, #0
4000d06c:	ea000047 	b	4000d190 <_tx_mutex_get+0x2c0>
4000d070:	e594000c 	ldr	r0, [r4, #12]
4000d074:	e1500009 	cmp	r0, r9
4000d078:	1a000004 	bne	4000d090 <_tx_mutex_get+0x1c0>
4000d07c:	e5940008 	ldr	r0, [r4, #8]
4000d080:	e2800001 	add	r0, r0, #1
4000d084:	e5840008 	str	r0, [r4, #8]
4000d088:	e3a08000 	mov	r8, #0
4000d08c:	ea00003f 	b	4000d190 <_tx_mutex_get+0x2c0>
4000d090:	e3550000 	cmp	r5, #0
4000d094:	0a00003c 	beq	4000d18c <_tx_mutex_get+0x2bc>
4000d098:	e59f011c 	ldr	r0, [pc, #284]	; 4000d1bc <_tx_mutex_get+0x2ec>
4000d09c:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d0a0:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d0a4:	e594001c 	ldr	r0, [r4, #28]
4000d0a8:	e3500000 	cmp	r0, #0
4000d0ac:	0a00000a 	beq	4000d0dc <_tx_mutex_get+0x20c>
4000d0b0:	e594001c 	ldr	r0, [r4, #28]
4000d0b4:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d0b8:	e594001c 	ldr	r0, [r4, #28]
4000d0bc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d0c0:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d0c4:	e594001c 	ldr	r0, [r4, #28]
4000d0c8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d0cc:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d0d0:	e594001c 	ldr	r0, [r4, #28]
4000d0d4:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d0d8:	ea000002 	b	4000d0e8 <_tx_mutex_get+0x218>
4000d0dc:	e584901c 	str	r9, [r4, #28]
4000d0e0:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d0e4:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d0e8:	e5940020 	ldr	r0, [r4, #32]
4000d0ec:	e2800001 	add	r0, r0, #1
4000d0f0:	e5840020 	str	r0, [r4, #32]
4000d0f4:	e3a0000d 	mov	r0, #13
4000d0f8:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d0fc:	e3a00001 	mov	r0, #1
4000d100:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d104:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d108:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d1c0 <_tx_mutex_get+0x2f0>
4000d10c:	e5900000 	ldr	r0, [r0]
4000d110:	e2800001 	add	r0, r0, #1
4000d114:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d1c0 <_tx_mutex_get+0x2f0>
4000d118:	e5810000 	str	r0, [r1]
4000d11c:	e121f006 	msr	CPSR_c, r6
4000d120:	e5940010 	ldr	r0, [r4, #16]
4000d124:	e3500000 	cmp	r0, #0
4000d128:	0a000013 	beq	4000d17c <_tx_mutex_get+0x2ac>
4000d12c:	e594000c 	ldr	r0, [r4, #12]
4000d130:	e3500000 	cmp	r0, #0
4000d134:	0a000010 	beq	4000d17c <_tx_mutex_get+0x2ac>
4000d138:	e3590000 	cmp	r9, #0
4000d13c:	0a00000e 	beq	4000d17c <_tx_mutex_get+0x2ac>
4000d140:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d144:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d148:	e1500001 	cmp	r0, r1
4000d14c:	9a000001 	bls	4000d158 <_tx_mutex_get+0x288>
4000d150:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d154:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d158:	e594000c 	ldr	r0, [r4, #12]
4000d15c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d160:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d164:	e1500001 	cmp	r0, r1
4000d168:	9a000003 	bls	4000d17c <_tx_mutex_get+0x2ac>
4000d16c:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d170:	e1a01002 	mov	r1, r2
4000d174:	e594000c 	ldr	r0, [r4, #12]
4000d178:	eb000011 	bl	4000d1c4 <_tx_mutex_priority_change>
4000d17c:	e1a00009 	mov	r0, r9
4000d180:	ebffeea0 	bl	40008c08 <_tx_thread_system_suspend>
4000d184:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d188:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d18c:	e3a0801d 	mov	r8, #29
4000d190:	e121f006 	msr	CPSR_c, r6
4000d194:	e1a00008 	mov	r0, r8
4000d198:	eafffffa 	b	4000d188 <_tx_mutex_get+0x2b8>
4000d19c:	4003132c 	.word	0x4003132c
4000d1a0:	40031330 	.word	0x40031330
4000d1a4:	400312b8 	.word	0x400312b8
4000d1a8:	400312c0 	.word	0x400312c0
4000d1ac:	f0f0f0f0 	.word	0xf0f0f0f0
4000d1b0:	40031328 	.word	0x40031328
4000d1b4:	40031324 	.word	0x40031324
4000d1b8:	40031318 	.word	0x40031318
4000d1bc:	40010384 	.word	0x40010384
4000d1c0:	400312dc 	.word	0x400312dc

4000d1c4 <_tx_mutex_priority_change>:
4000d1c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d1c8:	e1a04000 	mov	r4, r0
4000d1cc:	e1a05001 	mov	r5, r1
4000d1d0:	e1a06002 	mov	r6, r2
4000d1d4:	e10f7000 	mrs	r7, CPSR
4000d1d8:	e3878080 	orr	r8, r7, #128	; 0x80
4000d1dc:	e121f008 	msr	CPSR_c, r8
4000d1e0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d1e4:	e3500000 	cmp	r0, #0
4000d1e8:	0a000003 	beq	4000d1fc <_tx_mutex_priority_change+0x38>
4000d1ec:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d1f0:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d1f4:	e121f007 	msr	CPSR_c, r7
4000d1f8:	ea000011 	b	4000d244 <_tx_mutex_priority_change+0x80>
4000d1fc:	e59f0044 	ldr	r0, [pc, #68]	; 4000d248 <_tx_mutex_priority_change+0x84>
4000d200:	e5900000 	ldr	r0, [r0]
4000d204:	e2800002 	add	r0, r0, #2
4000d208:	e59f1038 	ldr	r1, [pc, #56]	; 4000d248 <_tx_mutex_priority_change+0x84>
4000d20c:	e5810000 	str	r0, [r1]
4000d210:	e3a00003 	mov	r0, #3
4000d214:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d218:	e3a00001 	mov	r0, #1
4000d21c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d220:	e3a00000 	mov	r0, #0
4000d224:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d228:	e121f007 	msr	CPSR_c, r7
4000d22c:	e1a00004 	mov	r0, r4
4000d230:	ebffee74 	bl	40008c08 <_tx_thread_system_suspend>
4000d234:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d238:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d23c:	e1a00004 	mov	r0, r4
4000d240:	eb000817 	bl	4000f2a4 <_tx_thread_system_resume>
4000d244:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d248:	400312dc 	.word	0x400312dc

4000d24c <_tx_mutex_put>:
4000d24c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d250:	e1a04000 	mov	r4, r0
4000d254:	e10f5000 	mrs	r5, CPSR
4000d258:	e3856080 	orr	r6, r5, #128	; 0x80
4000d25c:	e121f006 	msr	CPSR_c, r6
4000d260:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d6fc <_tx_mutex_put+0x4b0>
4000d264:	e5910000 	ldr	r0, [r1]
4000d268:	e3500000 	cmp	r0, #0
4000d26c:	0a000032 	beq	4000d33c <_tx_mutex_put+0xf0>
4000d270:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d700 <_tx_mutex_put+0x4b4>
4000d274:	e5911000 	ldr	r1, [r1]
4000d278:	e2811001 	add	r1, r1, #1
4000d27c:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d700 <_tx_mutex_put+0x4b4>
4000d280:	e5821000 	str	r1, [r2]
4000d284:	e580100c 	str	r1, [r0, #12]
4000d288:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d704 <_tx_mutex_put+0x4b8>
4000d28c:	e5911000 	ldr	r1, [r1]
4000d290:	e3510000 	cmp	r1, #0
4000d294:	1a000006 	bne	4000d2b4 <_tx_mutex_put+0x68>
4000d298:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d708 <_tx_mutex_put+0x4bc>
4000d29c:	e5911000 	ldr	r1, [r1]
4000d2a0:	e5801000 	str	r1, [r0]
4000d2a4:	e5901000 	ldr	r1, [r0]
4000d2a8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d2ac:	e5801004 	str	r1, [r0, #4]
4000d2b0:	ea00000d 	b	4000d2ec <_tx_mutex_put+0xa0>
4000d2b4:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d704 <_tx_mutex_put+0x4b8>
4000d2b8:	e5911000 	ldr	r1, [r1]
4000d2bc:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d70c <_tx_mutex_put+0x4c0>
4000d2c0:	e1510002 	cmp	r1, r2
4000d2c4:	2a000004 	bcs	4000d2dc <_tx_mutex_put+0x90>
4000d2c8:	e3e01000 	mvn	r1, #0
4000d2cc:	e5801000 	str	r1, [r0]
4000d2d0:	e3a01000 	mov	r1, #0
4000d2d4:	e5801004 	str	r1, [r0, #4]
4000d2d8:	ea000003 	b	4000d2ec <_tx_mutex_put+0xa0>
4000d2dc:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d70c <_tx_mutex_put+0x4c0>
4000d2e0:	e5801000 	str	r1, [r0]
4000d2e4:	e3a01000 	mov	r1, #0
4000d2e8:	e5801004 	str	r1, [r0, #4]
4000d2ec:	e3a01039 	mov	r1, #57	; 0x39
4000d2f0:	e5801008 	str	r1, [r0, #8]
4000d2f4:	e5804010 	str	r4, [r0, #16]
4000d2f8:	e594100c 	ldr	r1, [r4, #12]
4000d2fc:	e5801014 	str	r1, [r0, #20]
4000d300:	e5941008 	ldr	r1, [r4, #8]
4000d304:	e5801018 	str	r1, [r0, #24]
4000d308:	e580d01c 	str	sp, [r0, #28]
4000d30c:	e2800020 	add	r0, r0, #32
4000d310:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d710 <_tx_mutex_put+0x4c4>
4000d314:	e5911000 	ldr	r1, [r1]
4000d318:	e1500001 	cmp	r0, r1
4000d31c:	3a000001 	bcc	4000d328 <_tx_mutex_put+0xdc>
4000d320:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d714 <_tx_mutex_put+0x4c8>
4000d324:	e5910000 	ldr	r0, [r1]
4000d328:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d6fc <_tx_mutex_put+0x4b0>
4000d32c:	e5810000 	str	r0, [r1]
4000d330:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d718 <_tx_mutex_put+0x4cc>
4000d334:	e5911000 	ldr	r1, [r1]
4000d338:	e5810020 	str	r0, [r1, #32]
4000d33c:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d708 <_tx_mutex_put+0x4bc>
4000d340:	e5907000 	ldr	r7, [r0]
4000d344:	e5940008 	ldr	r0, [r4, #8]
4000d348:	e3500000 	cmp	r0, #0
4000d34c:	0a0000e7 	beq	4000d6f0 <_tx_mutex_put+0x4a4>
4000d350:	e594000c 	ldr	r0, [r4, #12]
4000d354:	e1500007 	cmp	r0, r7
4000d358:	1a0000e4 	bne	4000d6f0 <_tx_mutex_put+0x4a4>
4000d35c:	e5940008 	ldr	r0, [r4, #8]
4000d360:	e2400001 	sub	r0, r0, #1
4000d364:	e5840008 	str	r0, [r4, #8]
4000d368:	e5940008 	ldr	r0, [r4, #8]
4000d36c:	e3500000 	cmp	r0, #0
4000d370:	0a000002 	beq	4000d380 <_tx_mutex_put+0x134>
4000d374:	e121f005 	msr	CPSR_c, r5
4000d378:	e3a00000 	mov	r0, #0
4000d37c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d380:	e3a08000 	mov	r8, #0
4000d384:	e3a09000 	mov	r9, #0
4000d388:	e3a0a000 	mov	sl, #0
4000d38c:	e5940010 	ldr	r0, [r4, #16]
4000d390:	e3500000 	cmp	r0, #0
4000d394:	0a000033 	beq	4000d468 <_tx_mutex_put+0x21c>
4000d398:	e3570000 	cmp	r7, #0
4000d39c:	0a000031 	beq	4000d468 <_tx_mutex_put+0x21c>
4000d3a0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d3a4:	e2400001 	sub	r0, r0, #1
4000d3a8:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d3ac:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d3b0:	e3500000 	cmp	r0, #0
4000d3b4:	1a000002 	bne	4000d3c4 <_tx_mutex_put+0x178>
4000d3b8:	e3a00000 	mov	r0, #0
4000d3bc:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d3c0:	ea00000a 	b	4000d3f0 <_tx_mutex_put+0x1a4>
4000d3c4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d3c8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d3cc:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d3d0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d3d4:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d3d8:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d3dc:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d3e0:	e1500004 	cmp	r0, r4
4000d3e4:	1a000001 	bne	4000d3f0 <_tx_mutex_put+0x1a4>
4000d3e8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d3ec:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d3f0:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d3f4:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d3f8:	e59f031c 	ldr	r0, [pc, #796]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d3fc:	e5900000 	ldr	r0, [r0]
4000d400:	e2800001 	add	r0, r0, #1
4000d404:	e59f1310 	ldr	r1, [pc, #784]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d408:	e5810000 	str	r0, [r1]
4000d40c:	e121f005 	msr	CPSR_c, r5
4000d410:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d414:	ea000009 	b	4000d440 <_tx_mutex_put+0x1f4>
4000d418:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d41c:	e1500009 	cmp	r0, r9
4000d420:	2a000001 	bcs	4000d42c <_tx_mutex_put+0x1e0>
4000d424:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d428:	e1a0a009 	mov	sl, r9
4000d42c:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d430:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d434:	e150000b 	cmp	r0, fp
4000d438:	1a000000 	bne	4000d440 <_tx_mutex_put+0x1f4>
4000d43c:	e3a0b000 	mov	fp, #0
4000d440:	e35b0000 	cmp	fp, #0
4000d444:	1afffff3 	bne	4000d418 <_tx_mutex_put+0x1cc>
4000d448:	e10f5000 	mrs	r5, CPSR
4000d44c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d450:	e121f006 	msr	CPSR_c, r6
4000d454:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d458:	e5900000 	ldr	r0, [r0]
4000d45c:	e2400001 	sub	r0, r0, #1
4000d460:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d464:	e5810000 	str	r0, [r1]
4000d468:	e5940020 	ldr	r0, [r4, #32]
4000d46c:	e3500001 	cmp	r0, #1
4000d470:	9a000012 	bls	4000d4c0 <_tx_mutex_put+0x274>
4000d474:	e5940010 	ldr	r0, [r4, #16]
4000d478:	e3500000 	cmp	r0, #0
4000d47c:	0a00000f 	beq	4000d4c0 <_tx_mutex_put+0x274>
4000d480:	e59f0294 	ldr	r0, [pc, #660]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d484:	e5900000 	ldr	r0, [r0]
4000d488:	e2800001 	add	r0, r0, #1
4000d48c:	e59f1288 	ldr	r1, [pc, #648]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d490:	e5810000 	str	r0, [r1]
4000d494:	e121f005 	msr	CPSR_c, r5
4000d498:	e1a00004 	mov	r0, r4
4000d49c:	eb000bec 	bl	40010454 <_tx_mutex_prioritize>
4000d4a0:	e10f5000 	mrs	r5, CPSR
4000d4a4:	e3856080 	orr	r6, r5, #128	; 0x80
4000d4a8:	e121f006 	msr	CPSR_c, r6
4000d4ac:	e59f0268 	ldr	r0, [pc, #616]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d4b0:	e5900000 	ldr	r0, [r0]
4000d4b4:	e2400001 	sub	r0, r0, #1
4000d4b8:	e59f125c 	ldr	r1, [pc, #604]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d4bc:	e5810000 	str	r0, [r1]
4000d4c0:	e594001c 	ldr	r0, [r4, #28]
4000d4c4:	e3500000 	cmp	r0, #0
4000d4c8:	1a000024 	bne	4000d560 <_tx_mutex_put+0x314>
4000d4cc:	e59f0248 	ldr	r0, [pc, #584]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d4d0:	e5900000 	ldr	r0, [r0]
4000d4d4:	e2800001 	add	r0, r0, #1
4000d4d8:	e59f123c 	ldr	r1, [pc, #572]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d4dc:	e5810000 	str	r0, [r1]
4000d4e0:	e121f005 	msr	CPSR_c, r5
4000d4e4:	e5940010 	ldr	r0, [r4, #16]
4000d4e8:	e3500000 	cmp	r0, #0
4000d4ec:	0a00000a 	beq	4000d51c <_tx_mutex_put+0x2d0>
4000d4f0:	e3a00020 	mov	r0, #32
4000d4f4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d4f8:	e3570000 	cmp	r7, #0
4000d4fc:	0a000006 	beq	4000d51c <_tx_mutex_put+0x2d0>
4000d500:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d504:	e1500009 	cmp	r0, r9
4000d508:	0a000003 	beq	4000d51c <_tx_mutex_put+0x2d0>
4000d50c:	e1a0200a 	mov	r2, sl
4000d510:	e1a01009 	mov	r1, r9
4000d514:	e594000c 	ldr	r0, [r4, #12]
4000d518:	ebffff29 	bl	4000d1c4 <_tx_mutex_priority_change>
4000d51c:	e10f5000 	mrs	r5, CPSR
4000d520:	e3856080 	orr	r6, r5, #128	; 0x80
4000d524:	e121f006 	msr	CPSR_c, r6
4000d528:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d52c:	e5900000 	ldr	r0, [r0]
4000d530:	e2400001 	sub	r0, r0, #1
4000d534:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d538:	e5810000 	str	r0, [r1]
4000d53c:	e5940008 	ldr	r0, [r4, #8]
4000d540:	e3500000 	cmp	r0, #0
4000d544:	1a000001 	bne	4000d550 <_tx_mutex_put+0x304>
4000d548:	e3a00000 	mov	r0, #0
4000d54c:	e584000c 	str	r0, [r4, #12]
4000d550:	e121f005 	msr	CPSR_c, r5
4000d554:	eb000726 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4000d558:	e3a00000 	mov	r0, #0
4000d55c:	eaffff86 	b	4000d37c <_tx_mutex_put+0x130>
4000d560:	e594701c 	ldr	r7, [r4, #28]
4000d564:	e5940010 	ldr	r0, [r4, #16]
4000d568:	e3500000 	cmp	r0, #0
4000d56c:	0a00001f 	beq	4000d5f0 <_tx_mutex_put+0x3a4>
4000d570:	e594800c 	ldr	r8, [r4, #12]
4000d574:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d578:	e5840014 	str	r0, [r4, #20]
4000d57c:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d580:	e5840018 	str	r0, [r4, #24]
4000d584:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d588:	e3500000 	cmp	r0, #0
4000d58c:	0a00000b 	beq	4000d5c0 <_tx_mutex_put+0x374>
4000d590:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d594:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d598:	e58d0000 	str	r0, [sp]
4000d59c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5a0:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d5a4:	e59d0000 	ldr	r0, [sp]
4000d5a8:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d5ac:	e59d0000 	ldr	r0, [sp]
4000d5b0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d5b4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5b8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d5bc:	ea000006 	b	4000d5dc <_tx_mutex_put+0x390>
4000d5c0:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d5c4:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d5c8:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d5cc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d5d0:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d5d4:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d5d8:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d5dc:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d5e0:	e2800001 	add	r0, r0, #1
4000d5e4:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d5e8:	e3a00020 	mov	r0, #32
4000d5ec:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d5f0:	e3a00001 	mov	r0, #1
4000d5f4:	e5840008 	str	r0, [r4, #8]
4000d5f8:	e584700c 	str	r7, [r4, #12]
4000d5fc:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d600:	e1500007 	cmp	r0, r7
4000d604:	1a000002 	bne	4000d614 <_tx_mutex_put+0x3c8>
4000d608:	e3a00000 	mov	r0, #0
4000d60c:	e584001c 	str	r0, [r4, #28]
4000d610:	ea000007 	b	4000d634 <_tx_mutex_put+0x3e8>
4000d614:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d618:	e584001c 	str	r0, [r4, #28]
4000d61c:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d620:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d624:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d628:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d62c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d630:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d634:	e5940020 	ldr	r0, [r4, #32]
4000d638:	e2400001 	sub	r0, r0, #1
4000d63c:	e5840020 	str	r0, [r4, #32]
4000d640:	e3a00000 	mov	r0, #0
4000d644:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d648:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d64c:	e5900000 	ldr	r0, [r0]
4000d650:	e2800001 	add	r0, r0, #1
4000d654:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d71c <_tx_mutex_put+0x4d0>
4000d658:	e5810000 	str	r0, [r1]
4000d65c:	e121f005 	msr	CPSR_c, r5
4000d660:	e3a00000 	mov	r0, #0
4000d664:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d668:	e5940010 	ldr	r0, [r4, #16]
4000d66c:	e3500000 	cmp	r0, #0
4000d670:	0a00001a 	beq	4000d6e0 <_tx_mutex_put+0x494>
4000d674:	e5940020 	ldr	r0, [r4, #32]
4000d678:	e3500000 	cmp	r0, #0
4000d67c:	0a00000e 	beq	4000d6bc <_tx_mutex_put+0x470>
4000d680:	e5940020 	ldr	r0, [r4, #32]
4000d684:	e3500001 	cmp	r0, #1
4000d688:	9a000001 	bls	4000d694 <_tx_mutex_put+0x448>
4000d68c:	e1a00004 	mov	r0, r4
4000d690:	eb000b6f 	bl	40010454 <_tx_mutex_prioritize>
4000d694:	e10f5000 	mrs	r5, CPSR
4000d698:	e3856080 	orr	r6, r5, #128	; 0x80
4000d69c:	e121f006 	msr	CPSR_c, r6
4000d6a0:	e594001c 	ldr	r0, [r4, #28]
4000d6a4:	e3500000 	cmp	r0, #0
4000d6a8:	0a000002 	beq	4000d6b8 <_tx_mutex_put+0x46c>
4000d6ac:	e594001c 	ldr	r0, [r4, #28]
4000d6b0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d6b4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d6b8:	e121f005 	msr	CPSR_c, r5
4000d6bc:	e3580000 	cmp	r8, #0
4000d6c0:	0a000006 	beq	4000d6e0 <_tx_mutex_put+0x494>
4000d6c4:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d6c8:	e1500009 	cmp	r0, r9
4000d6cc:	0a000003 	beq	4000d6e0 <_tx_mutex_put+0x494>
4000d6d0:	e1a0200a 	mov	r2, sl
4000d6d4:	e1a01009 	mov	r1, r9
4000d6d8:	e1a00008 	mov	r0, r8
4000d6dc:	ebfffeb8 	bl	4000d1c4 <_tx_mutex_priority_change>
4000d6e0:	e1a00007 	mov	r0, r7
4000d6e4:	eb0006ee 	bl	4000f2a4 <_tx_thread_system_resume>
4000d6e8:	e3a00000 	mov	r0, #0
4000d6ec:	eaffff22 	b	4000d37c <_tx_mutex_put+0x130>
4000d6f0:	e121f005 	msr	CPSR_c, r5
4000d6f4:	e3a0001e 	mov	r0, #30
4000d6f8:	eaffff1f 	b	4000d37c <_tx_mutex_put+0x130>
4000d6fc:	4003132c 	.word	0x4003132c
4000d700:	40031330 	.word	0x40031330
4000d704:	400312b8 	.word	0x400312b8
4000d708:	400312c0 	.word	0x400312c0
4000d70c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d710:	40031328 	.word	0x40031328
4000d714:	40031324 	.word	0x40031324
4000d718:	40031318 	.word	0x40031318
4000d71c:	400312dc 	.word	0x400312dc

4000d720 <_tx_queue_create>:
4000d720:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d724:	e1a04000 	mov	r4, r0
4000d728:	e1a05001 	mov	r5, r1
4000d72c:	e1a06002 	mov	r6, r2
4000d730:	e1a07003 	mov	r7, r3
4000d734:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d738:	e3a0103c 	mov	r1, #60	; 0x3c
4000d73c:	e1a00004 	mov	r0, r4
4000d740:	eb001814 	bl	40013798 <__aeabi_memclr4>
4000d744:	e5845004 	str	r5, [r4, #4]
4000d748:	e5846008 	str	r6, [r4, #8]
4000d74c:	e1a01106 	lsl	r1, r6, #2
4000d750:	e1a00008 	mov	r0, r8
4000d754:	eb000ca6 	bl	400109f4 <__aeabi_uidivmod>
4000d758:	e1a0b000 	mov	fp, r0
4000d75c:	e000069b 	mul	r0, fp, r6
4000d760:	e58d0004 	str	r0, [sp, #4]
4000d764:	e5847018 	str	r7, [r4, #24]
4000d768:	e59d0004 	ldr	r0, [sp, #4]
4000d76c:	e0870100 	add	r0, r7, r0, lsl #2
4000d770:	e584001c 	str	r0, [r4, #28]
4000d774:	e5847020 	str	r7, [r4, #32]
4000d778:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d77c:	e584b014 	str	fp, [r4, #20]
4000d780:	e584b00c 	str	fp, [r4, #12]
4000d784:	e10f9000 	mrs	r9, CPSR
4000d788:	e3890080 	orr	r0, r9, #128	; 0x80
4000d78c:	e58d0008 	str	r0, [sp, #8]
4000d790:	e59d0008 	ldr	r0, [sp, #8]
4000d794:	e121f000 	msr	CPSR_c, r0
4000d798:	e59f0160 	ldr	r0, [pc, #352]	; 4000d900 <_tx_queue_create+0x1e0>
4000d79c:	e5840000 	str	r0, [r4]
4000d7a0:	e59f015c 	ldr	r0, [pc, #348]	; 4000d904 <_tx_queue_create+0x1e4>
4000d7a4:	e5900000 	ldr	r0, [r0]
4000d7a8:	e3500000 	cmp	r0, #0
4000d7ac:	0a00000b 	beq	4000d7e0 <_tx_queue_create+0xc0>
4000d7b0:	e59f014c 	ldr	r0, [pc, #332]	; 4000d904 <_tx_queue_create+0x1e4>
4000d7b4:	e5900000 	ldr	r0, [r0]
4000d7b8:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d7bc:	e59f0140 	ldr	r0, [pc, #320]	; 4000d904 <_tx_queue_create+0x1e4>
4000d7c0:	e5900000 	ldr	r0, [r0]
4000d7c4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d7c8:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d7cc:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d7d0:	e59f012c 	ldr	r0, [pc, #300]	; 4000d904 <_tx_queue_create+0x1e4>
4000d7d4:	e5900000 	ldr	r0, [r0]
4000d7d8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d7dc:	ea000003 	b	4000d7f0 <_tx_queue_create+0xd0>
4000d7e0:	e59f011c 	ldr	r0, [pc, #284]	; 4000d904 <_tx_queue_create+0x1e4>
4000d7e4:	e5804000 	str	r4, [r0]
4000d7e8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d7ec:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d7f0:	e59f0110 	ldr	r0, [pc, #272]	; 4000d908 <_tx_queue_create+0x1e8>
4000d7f4:	e5900000 	ldr	r0, [r0]
4000d7f8:	e2800001 	add	r0, r0, #1
4000d7fc:	e59f1104 	ldr	r1, [pc, #260]	; 4000d908 <_tx_queue_create+0x1e8>
4000d800:	e5810000 	str	r0, [r1]
4000d804:	e3a03000 	mov	r3, #0
4000d808:	e58d3000 	str	r3, [sp]
4000d80c:	e1a03008 	mov	r3, r8
4000d810:	e1a02005 	mov	r2, r5
4000d814:	e1a01004 	mov	r1, r4
4000d818:	e3a00003 	mov	r0, #3
4000d81c:	eb0009f6 	bl	4000fffc <_tx_trace_object_register>
4000d820:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d90c <_tx_queue_create+0x1ec>
4000d824:	e5910000 	ldr	r0, [r1]
4000d828:	e3500000 	cmp	r0, #0
4000d82c:	0a000030 	beq	4000d8f4 <_tx_queue_create+0x1d4>
4000d830:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d910 <_tx_queue_create+0x1f0>
4000d834:	e5911000 	ldr	r1, [r1]
4000d838:	e2811001 	add	r1, r1, #1
4000d83c:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d910 <_tx_queue_create+0x1f0>
4000d840:	e5821000 	str	r1, [r2]
4000d844:	e580100c 	str	r1, [r0, #12]
4000d848:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d914 <_tx_queue_create+0x1f4>
4000d84c:	e5911000 	ldr	r1, [r1]
4000d850:	e3510000 	cmp	r1, #0
4000d854:	1a000006 	bne	4000d874 <_tx_queue_create+0x154>
4000d858:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d918 <_tx_queue_create+0x1f8>
4000d85c:	e5911000 	ldr	r1, [r1]
4000d860:	e5801000 	str	r1, [r0]
4000d864:	e5901000 	ldr	r1, [r0]
4000d868:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d86c:	e5801004 	str	r1, [r0, #4]
4000d870:	ea00000d 	b	4000d8ac <_tx_queue_create+0x18c>
4000d874:	e59f1098 	ldr	r1, [pc, #152]	; 4000d914 <_tx_queue_create+0x1f4>
4000d878:	e5911000 	ldr	r1, [r1]
4000d87c:	e59f2098 	ldr	r2, [pc, #152]	; 4000d91c <_tx_queue_create+0x1fc>
4000d880:	e1510002 	cmp	r1, r2
4000d884:	2a000004 	bcs	4000d89c <_tx_queue_create+0x17c>
4000d888:	e3e01000 	mvn	r1, #0
4000d88c:	e5801000 	str	r1, [r0]
4000d890:	e3a01000 	mov	r1, #0
4000d894:	e5801004 	str	r1, [r0, #4]
4000d898:	ea000003 	b	4000d8ac <_tx_queue_create+0x18c>
4000d89c:	e59f1078 	ldr	r1, [pc, #120]	; 4000d91c <_tx_queue_create+0x1fc>
4000d8a0:	e5801000 	str	r1, [r0]
4000d8a4:	e3a01000 	mov	r1, #0
4000d8a8:	e5801004 	str	r1, [r0, #4]
4000d8ac:	e3a0103c 	mov	r1, #60	; 0x3c
4000d8b0:	e5801008 	str	r1, [r0, #8]
4000d8b4:	e5804010 	str	r4, [r0, #16]
4000d8b8:	e5806014 	str	r6, [r0, #20]
4000d8bc:	e5807018 	str	r7, [r0, #24]
4000d8c0:	e580801c 	str	r8, [r0, #28]
4000d8c4:	e2800020 	add	r0, r0, #32
4000d8c8:	e59f1050 	ldr	r1, [pc, #80]	; 4000d920 <_tx_queue_create+0x200>
4000d8cc:	e5911000 	ldr	r1, [r1]
4000d8d0:	e1500001 	cmp	r0, r1
4000d8d4:	3a000001 	bcc	4000d8e0 <_tx_queue_create+0x1c0>
4000d8d8:	e59f1044 	ldr	r1, [pc, #68]	; 4000d924 <_tx_queue_create+0x204>
4000d8dc:	e5910000 	ldr	r0, [r1]
4000d8e0:	e59f1024 	ldr	r1, [pc, #36]	; 4000d90c <_tx_queue_create+0x1ec>
4000d8e4:	e5810000 	str	r0, [r1]
4000d8e8:	e59f1038 	ldr	r1, [pc, #56]	; 4000d928 <_tx_queue_create+0x208>
4000d8ec:	e5911000 	ldr	r1, [r1]
4000d8f0:	e5810020 	str	r0, [r1, #32]
4000d8f4:	e121f009 	msr	CPSR_c, r9
4000d8f8:	e3a00000 	mov	r0, #0
4000d8fc:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d900:	51554555 	.word	0x51554555
4000d904:	4003133c 	.word	0x4003133c
4000d908:	40031340 	.word	0x40031340
4000d90c:	4003132c 	.word	0x4003132c
4000d910:	40031330 	.word	0x40031330
4000d914:	400312b8 	.word	0x400312b8
4000d918:	400312c0 	.word	0x400312c0
4000d91c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d920:	40031328 	.word	0x40031328
4000d924:	40031324 	.word	0x40031324
4000d928:	40031318 	.word	0x40031318

4000d92c <_tx_queue_front_send>:
4000d92c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d930:	e1a04000 	mov	r4, r0
4000d934:	e1a05001 	mov	r5, r1
4000d938:	e1a06002 	mov	r6, r2
4000d93c:	e10f7000 	mrs	r7, CPSR
4000d940:	e3870080 	orr	r0, r7, #128	; 0x80
4000d944:	e58d0004 	str	r0, [sp, #4]
4000d948:	e59d0004 	ldr	r0, [sp, #4]
4000d94c:	e121f000 	msr	CPSR_c, r0
4000d950:	e59f1368 	ldr	r1, [pc, #872]	; 4000dcc0 <_tx_queue_front_send+0x394>
4000d954:	e5910000 	ldr	r0, [r1]
4000d958:	e3500000 	cmp	r0, #0
4000d95c:	0a000031 	beq	4000da28 <_tx_queue_front_send+0xfc>
4000d960:	e59f135c 	ldr	r1, [pc, #860]	; 4000dcc4 <_tx_queue_front_send+0x398>
4000d964:	e5911000 	ldr	r1, [r1]
4000d968:	e2811001 	add	r1, r1, #1
4000d96c:	e59f2350 	ldr	r2, [pc, #848]	; 4000dcc4 <_tx_queue_front_send+0x398>
4000d970:	e5821000 	str	r1, [r2]
4000d974:	e580100c 	str	r1, [r0, #12]
4000d978:	e59f1348 	ldr	r1, [pc, #840]	; 4000dcc8 <_tx_queue_front_send+0x39c>
4000d97c:	e5911000 	ldr	r1, [r1]
4000d980:	e3510000 	cmp	r1, #0
4000d984:	1a000006 	bne	4000d9a4 <_tx_queue_front_send+0x78>
4000d988:	e59f133c 	ldr	r1, [pc, #828]	; 4000dccc <_tx_queue_front_send+0x3a0>
4000d98c:	e5911000 	ldr	r1, [r1]
4000d990:	e5801000 	str	r1, [r0]
4000d994:	e5901000 	ldr	r1, [r0]
4000d998:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d99c:	e5801004 	str	r1, [r0, #4]
4000d9a0:	ea00000d 	b	4000d9dc <_tx_queue_front_send+0xb0>
4000d9a4:	e59f131c 	ldr	r1, [pc, #796]	; 4000dcc8 <_tx_queue_front_send+0x39c>
4000d9a8:	e5911000 	ldr	r1, [r1]
4000d9ac:	e59f231c 	ldr	r2, [pc, #796]	; 4000dcd0 <_tx_queue_front_send+0x3a4>
4000d9b0:	e1510002 	cmp	r1, r2
4000d9b4:	2a000004 	bcs	4000d9cc <_tx_queue_front_send+0xa0>
4000d9b8:	e3e01000 	mvn	r1, #0
4000d9bc:	e5801000 	str	r1, [r0]
4000d9c0:	e3a01000 	mov	r1, #0
4000d9c4:	e5801004 	str	r1, [r0, #4]
4000d9c8:	ea000003 	b	4000d9dc <_tx_queue_front_send+0xb0>
4000d9cc:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dcd0 <_tx_queue_front_send+0x3a4>
4000d9d0:	e5801000 	str	r1, [r0]
4000d9d4:	e3a01000 	mov	r1, #0
4000d9d8:	e5801004 	str	r1, [r0, #4]
4000d9dc:	e3a0103f 	mov	r1, #63	; 0x3f
4000d9e0:	e5801008 	str	r1, [r0, #8]
4000d9e4:	e5804010 	str	r4, [r0, #16]
4000d9e8:	e5805014 	str	r5, [r0, #20]
4000d9ec:	e5806018 	str	r6, [r0, #24]
4000d9f0:	e5941010 	ldr	r1, [r4, #16]
4000d9f4:	e580101c 	str	r1, [r0, #28]
4000d9f8:	e2800020 	add	r0, r0, #32
4000d9fc:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dcd4 <_tx_queue_front_send+0x3a8>
4000da00:	e5911000 	ldr	r1, [r1]
4000da04:	e1500001 	cmp	r0, r1
4000da08:	3a000001 	bcc	4000da14 <_tx_queue_front_send+0xe8>
4000da0c:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dcd8 <_tx_queue_front_send+0x3ac>
4000da10:	e5910000 	ldr	r0, [r1]
4000da14:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dcc0 <_tx_queue_front_send+0x394>
4000da18:	e5810000 	str	r0, [r1]
4000da1c:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dcdc <_tx_queue_front_send+0x3b0>
4000da20:	e5911000 	ldr	r1, [r1]
4000da24:	e5810020 	str	r0, [r1, #32]
4000da28:	e5940014 	ldr	r0, [r4, #20]
4000da2c:	e3500000 	cmp	r0, #0
4000da30:	0a000064 	beq	4000dbc8 <_tx_queue_front_send+0x29c>
4000da34:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000da38:	e3500000 	cmp	r0, #0
4000da3c:	1a00002b 	bne	4000daf0 <_tx_queue_front_send+0x1c4>
4000da40:	e5940020 	ldr	r0, [r4, #32]
4000da44:	e5941018 	ldr	r1, [r4, #24]
4000da48:	e1500001 	cmp	r0, r1
4000da4c:	1a000004 	bne	4000da64 <_tx_queue_front_send+0x138>
4000da50:	e594001c 	ldr	r0, [r4, #28]
4000da54:	e5941008 	ldr	r1, [r4, #8]
4000da58:	e0400101 	sub	r0, r0, r1, lsl #2
4000da5c:	e5840020 	str	r0, [r4, #32]
4000da60:	ea000003 	b	4000da74 <_tx_queue_front_send+0x148>
4000da64:	e5940020 	ldr	r0, [r4, #32]
4000da68:	e5941008 	ldr	r1, [r4, #8]
4000da6c:	e0400101 	sub	r0, r0, r1, lsl #2
4000da70:	e5840020 	str	r0, [r4, #32]
4000da74:	e5940014 	ldr	r0, [r4, #20]
4000da78:	e2400001 	sub	r0, r0, #1
4000da7c:	e5840014 	str	r0, [r4, #20]
4000da80:	e5940010 	ldr	r0, [r4, #16]
4000da84:	e2800001 	add	r0, r0, #1
4000da88:	e5840010 	str	r0, [r4, #16]
4000da8c:	e1a09005 	mov	r9, r5
4000da90:	e594a020 	ldr	sl, [r4, #32]
4000da94:	e594b008 	ldr	fp, [r4, #8]
4000da98:	e1a00000 	nop			; (mov r0, r0)
4000da9c:	e5990000 	ldr	r0, [r9]
4000daa0:	e58a0000 	str	r0, [sl]
4000daa4:	e24bb001 	sub	fp, fp, #1
4000daa8:	e35b0000 	cmp	fp, #0
4000daac:	1a000000 	bne	4000dab4 <_tx_queue_front_send+0x188>
4000dab0:	ea000002 	b	4000dac0 <_tx_queue_front_send+0x194>
4000dab4:	e28aa004 	add	sl, sl, #4
4000dab8:	e2899004 	add	r9, r9, #4
4000dabc:	eafffff6 	b	4000da9c <_tx_queue_front_send+0x170>
4000dac0:	e1a00000 	nop			; (mov r0, r0)
4000dac4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dac8:	e58d0000 	str	r0, [sp]
4000dacc:	e121f007 	msr	CPSR_c, r7
4000dad0:	e59d0000 	ldr	r0, [sp]
4000dad4:	e3500000 	cmp	r0, #0
4000dad8:	0a000002 	beq	4000dae8 <_tx_queue_front_send+0x1bc>
4000dadc:	e1a00004 	mov	r0, r4
4000dae0:	e59d1000 	ldr	r1, [sp]
4000dae4:	e12fff31 	blx	r1
4000dae8:	e3a00000 	mov	r0, #0
4000daec:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000daf0:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000daf4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000daf8:	e1500008 	cmp	r0, r8
4000dafc:	1a000002 	bne	4000db0c <_tx_queue_front_send+0x1e0>
4000db00:	e3a00000 	mov	r0, #0
4000db04:	e5840028 	str	r0, [r4, #40]	; 0x28
4000db08:	ea000007 	b	4000db2c <_tx_queue_front_send+0x200>
4000db0c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db10:	e5840028 	str	r0, [r4, #40]	; 0x28
4000db14:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000db18:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000db1c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000db20:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db24:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000db28:	e5810070 	str	r0, [r1, #112]	; 0x70
4000db2c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000db30:	e2400001 	sub	r0, r0, #1
4000db34:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000db38:	e3a00000 	mov	r0, #0
4000db3c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000db40:	e59f0198 	ldr	r0, [pc, #408]	; 4000dce0 <_tx_queue_front_send+0x3b4>
4000db44:	e5900000 	ldr	r0, [r0]
4000db48:	e2800001 	add	r0, r0, #1
4000db4c:	e59f118c 	ldr	r1, [pc, #396]	; 4000dce0 <_tx_queue_front_send+0x3b4>
4000db50:	e5810000 	str	r0, [r1]
4000db54:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db58:	e58d0000 	str	r0, [sp]
4000db5c:	e121f007 	msr	CPSR_c, r7
4000db60:	e1a09005 	mov	r9, r5
4000db64:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000db68:	e594b008 	ldr	fp, [r4, #8]
4000db6c:	e1a00000 	nop			; (mov r0, r0)
4000db70:	e5990000 	ldr	r0, [r9]
4000db74:	e58a0000 	str	r0, [sl]
4000db78:	e24bb001 	sub	fp, fp, #1
4000db7c:	e35b0000 	cmp	fp, #0
4000db80:	1a000000 	bne	4000db88 <_tx_queue_front_send+0x25c>
4000db84:	ea000002 	b	4000db94 <_tx_queue_front_send+0x268>
4000db88:	e28aa004 	add	sl, sl, #4
4000db8c:	e2899004 	add	r9, r9, #4
4000db90:	eafffff6 	b	4000db70 <_tx_queue_front_send+0x244>
4000db94:	e1a00000 	nop			; (mov r0, r0)
4000db98:	e3a00000 	mov	r0, #0
4000db9c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dba0:	e1a00008 	mov	r0, r8
4000dba4:	eb0005be 	bl	4000f2a4 <_tx_thread_system_resume>
4000dba8:	e59d0000 	ldr	r0, [sp]
4000dbac:	e3500000 	cmp	r0, #0
4000dbb0:	0a000002 	beq	4000dbc0 <_tx_queue_front_send+0x294>
4000dbb4:	e1a00004 	mov	r0, r4
4000dbb8:	e59d1000 	ldr	r1, [sp]
4000dbbc:	e12fff31 	blx	r1
4000dbc0:	e3a00000 	mov	r0, #0
4000dbc4:	eaffffc8 	b	4000daec <_tx_queue_front_send+0x1c0>
4000dbc8:	e3560000 	cmp	r6, #0
4000dbcc:	0a000038 	beq	4000dcb4 <_tx_queue_front_send+0x388>
4000dbd0:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dccc <_tx_queue_front_send+0x3a0>
4000dbd4:	e5908000 	ldr	r8, [r0]
4000dbd8:	e59f0104 	ldr	r0, [pc, #260]	; 4000dce4 <_tx_queue_front_send+0x3b8>
4000dbdc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dbe0:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dbe4:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dbe8:	e3a00001 	mov	r0, #1
4000dbec:	e5880080 	str	r0, [r8, #128]	; 0x80
4000dbf0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dbf4:	e3500000 	cmp	r0, #0
4000dbf8:	0a00000b 	beq	4000dc2c <_tx_queue_front_send+0x300>
4000dbfc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc00:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dc04:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc08:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dc0c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000dc10:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc14:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dc18:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dc1c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc20:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dc24:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dc28:	ea000002 	b	4000dc38 <_tx_queue_front_send+0x30c>
4000dc2c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dc30:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dc34:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dc38:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dc3c:	e2800001 	add	r0, r0, #1
4000dc40:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dc44:	e3a00005 	mov	r0, #5
4000dc48:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dc4c:	e3a00001 	mov	r0, #1
4000dc50:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dc54:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dc58:	e59f0080 	ldr	r0, [pc, #128]	; 4000dce0 <_tx_queue_front_send+0x3b4>
4000dc5c:	e5900000 	ldr	r0, [r0]
4000dc60:	e2800001 	add	r0, r0, #1
4000dc64:	e59f1074 	ldr	r1, [pc, #116]	; 4000dce0 <_tx_queue_front_send+0x3b4>
4000dc68:	e5810000 	str	r0, [r1]
4000dc6c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dc70:	e58d0000 	str	r0, [sp]
4000dc74:	e121f007 	msr	CPSR_c, r7
4000dc78:	e1a00008 	mov	r0, r8
4000dc7c:	ebffebe1 	bl	40008c08 <_tx_thread_system_suspend>
4000dc80:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dc84:	e58d0000 	str	r0, [sp]
4000dc88:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dc8c:	e3500000 	cmp	r0, #0
4000dc90:	1a000005 	bne	4000dcac <_tx_queue_front_send+0x380>
4000dc94:	e59d0000 	ldr	r0, [sp]
4000dc98:	e3500000 	cmp	r0, #0
4000dc9c:	0a000002 	beq	4000dcac <_tx_queue_front_send+0x380>
4000dca0:	e1a00004 	mov	r0, r4
4000dca4:	e59d1000 	ldr	r1, [sp]
4000dca8:	e12fff31 	blx	r1
4000dcac:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dcb0:	eaffff8d 	b	4000daec <_tx_queue_front_send+0x1c0>
4000dcb4:	e121f007 	msr	CPSR_c, r7
4000dcb8:	e3a0000b 	mov	r0, #11
4000dcbc:	eaffff8a 	b	4000daec <_tx_queue_front_send+0x1c0>
4000dcc0:	4003132c 	.word	0x4003132c
4000dcc4:	40031330 	.word	0x40031330
4000dcc8:	400312b8 	.word	0x400312b8
4000dccc:	400312c0 	.word	0x400312c0
4000dcd0:	f0f0f0f0 	.word	0xf0f0f0f0
4000dcd4:	40031328 	.word	0x40031328
4000dcd8:	40031324 	.word	0x40031324
4000dcdc:	40031318 	.word	0x40031318
4000dce0:	400312dc 	.word	0x400312dc
4000dce4:	400106c8 	.word	0x400106c8

4000dce8 <_tx_queue_receive>:
4000dce8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dcec:	e1a04000 	mov	r4, r0
4000dcf0:	e1a05001 	mov	r5, r1
4000dcf4:	e1a06002 	mov	r6, r2
4000dcf8:	e10f7000 	mrs	r7, CPSR
4000dcfc:	e3870080 	orr	r0, r7, #128	; 0x80
4000dd00:	e58d0000 	str	r0, [sp]
4000dd04:	e59d0000 	ldr	r0, [sp]
4000dd08:	e121f000 	msr	CPSR_c, r0
4000dd0c:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e120 <_tx_queue_receive+0x438>
4000dd10:	e5910000 	ldr	r0, [r1]
4000dd14:	e3500000 	cmp	r0, #0
4000dd18:	0a000031 	beq	4000dde4 <_tx_queue_receive+0xfc>
4000dd1c:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e124 <_tx_queue_receive+0x43c>
4000dd20:	e5911000 	ldr	r1, [r1]
4000dd24:	e2811001 	add	r1, r1, #1
4000dd28:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e124 <_tx_queue_receive+0x43c>
4000dd2c:	e5821000 	str	r1, [r2]
4000dd30:	e580100c 	str	r1, [r0, #12]
4000dd34:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e128 <_tx_queue_receive+0x440>
4000dd38:	e5911000 	ldr	r1, [r1]
4000dd3c:	e3510000 	cmp	r1, #0
4000dd40:	1a000006 	bne	4000dd60 <_tx_queue_receive+0x78>
4000dd44:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e12c <_tx_queue_receive+0x444>
4000dd48:	e5911000 	ldr	r1, [r1]
4000dd4c:	e5801000 	str	r1, [r0]
4000dd50:	e5901000 	ldr	r1, [r0]
4000dd54:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dd58:	e5801004 	str	r1, [r0, #4]
4000dd5c:	ea00000d 	b	4000dd98 <_tx_queue_receive+0xb0>
4000dd60:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e128 <_tx_queue_receive+0x440>
4000dd64:	e5911000 	ldr	r1, [r1]
4000dd68:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e130 <_tx_queue_receive+0x448>
4000dd6c:	e1510002 	cmp	r1, r2
4000dd70:	2a000004 	bcs	4000dd88 <_tx_queue_receive+0xa0>
4000dd74:	e3e01000 	mvn	r1, #0
4000dd78:	e5801000 	str	r1, [r0]
4000dd7c:	e3a01000 	mov	r1, #0
4000dd80:	e5801004 	str	r1, [r0, #4]
4000dd84:	ea000003 	b	4000dd98 <_tx_queue_receive+0xb0>
4000dd88:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e130 <_tx_queue_receive+0x448>
4000dd8c:	e5801000 	str	r1, [r0]
4000dd90:	e3a01000 	mov	r1, #0
4000dd94:	e5801004 	str	r1, [r0, #4]
4000dd98:	e3a01044 	mov	r1, #68	; 0x44
4000dd9c:	e5801008 	str	r1, [r0, #8]
4000dda0:	e5804010 	str	r4, [r0, #16]
4000dda4:	e5805014 	str	r5, [r0, #20]
4000dda8:	e5806018 	str	r6, [r0, #24]
4000ddac:	e5941010 	ldr	r1, [r4, #16]
4000ddb0:	e580101c 	str	r1, [r0, #28]
4000ddb4:	e2800020 	add	r0, r0, #32
4000ddb8:	e59f1374 	ldr	r1, [pc, #884]	; 4000e134 <_tx_queue_receive+0x44c>
4000ddbc:	e5911000 	ldr	r1, [r1]
4000ddc0:	e1500001 	cmp	r0, r1
4000ddc4:	3a000001 	bcc	4000ddd0 <_tx_queue_receive+0xe8>
4000ddc8:	e59f1368 	ldr	r1, [pc, #872]	; 4000e138 <_tx_queue_receive+0x450>
4000ddcc:	e5910000 	ldr	r0, [r1]
4000ddd0:	e59f1348 	ldr	r1, [pc, #840]	; 4000e120 <_tx_queue_receive+0x438>
4000ddd4:	e5810000 	str	r0, [r1]
4000ddd8:	e59f135c 	ldr	r1, [pc, #860]	; 4000e13c <_tx_queue_receive+0x454>
4000dddc:	e5911000 	ldr	r1, [r1]
4000dde0:	e5810020 	str	r0, [r1, #32]
4000dde4:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dde8:	e3580000 	cmp	r8, #0
4000ddec:	0a00002f 	beq	4000deb0 <_tx_queue_receive+0x1c8>
4000ddf0:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000ddf4:	e3500000 	cmp	r0, #0
4000ddf8:	0a00002c 	beq	4000deb0 <_tx_queue_receive+0x1c8>
4000ddfc:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000de00:	e1a0a005 	mov	sl, r5
4000de04:	e594b008 	ldr	fp, [r4, #8]
4000de08:	e1a00000 	nop			; (mov r0, r0)
4000de0c:	e5990000 	ldr	r0, [r9]
4000de10:	e58a0000 	str	r0, [sl]
4000de14:	e24bb001 	sub	fp, fp, #1
4000de18:	e35b0000 	cmp	fp, #0
4000de1c:	1a000000 	bne	4000de24 <_tx_queue_receive+0x13c>
4000de20:	ea000002 	b	4000de30 <_tx_queue_receive+0x148>
4000de24:	e28aa004 	add	sl, sl, #4
4000de28:	e2899004 	add	r9, r9, #4
4000de2c:	eafffff6 	b	4000de0c <_tx_queue_receive+0x124>
4000de30:	e1a00000 	nop			; (mov r0, r0)
4000de34:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de38:	e1500008 	cmp	r0, r8
4000de3c:	1a000002 	bne	4000de4c <_tx_queue_receive+0x164>
4000de40:	e3a00000 	mov	r0, #0
4000de44:	e5840028 	str	r0, [r4, #40]	; 0x28
4000de48:	ea000007 	b	4000de6c <_tx_queue_receive+0x184>
4000de4c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de50:	e5840028 	str	r0, [r4, #40]	; 0x28
4000de54:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000de58:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000de5c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000de60:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de64:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000de68:	e5810070 	str	r0, [r1, #112]	; 0x70
4000de6c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000de70:	e2400001 	sub	r0, r0, #1
4000de74:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000de78:	e3a00000 	mov	r0, #0
4000de7c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000de80:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e140 <_tx_queue_receive+0x458>
4000de84:	e5900000 	ldr	r0, [r0]
4000de88:	e2800001 	add	r0, r0, #1
4000de8c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e140 <_tx_queue_receive+0x458>
4000de90:	e5810000 	str	r0, [r1]
4000de94:	e121f007 	msr	CPSR_c, r7
4000de98:	e3a00000 	mov	r0, #0
4000de9c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dea0:	e1a00008 	mov	r0, r8
4000dea4:	eb0004fe 	bl	4000f2a4 <_tx_thread_system_resume>
4000dea8:	e3a00000 	mov	r0, #0
4000deac:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000deb0:	e5940010 	ldr	r0, [r4, #16]
4000deb4:	e3500000 	cmp	r0, #0
4000deb8:	0a000068 	beq	4000e060 <_tx_queue_receive+0x378>
4000debc:	e5949020 	ldr	r9, [r4, #32]
4000dec0:	e1a0a005 	mov	sl, r5
4000dec4:	e594b008 	ldr	fp, [r4, #8]
4000dec8:	e1a00000 	nop			; (mov r0, r0)
4000decc:	e5990000 	ldr	r0, [r9]
4000ded0:	e58a0000 	str	r0, [sl]
4000ded4:	e24bb001 	sub	fp, fp, #1
4000ded8:	e35b0000 	cmp	fp, #0
4000dedc:	1a000000 	bne	4000dee4 <_tx_queue_receive+0x1fc>
4000dee0:	ea000002 	b	4000def0 <_tx_queue_receive+0x208>
4000dee4:	e28aa004 	add	sl, sl, #4
4000dee8:	e2899004 	add	r9, r9, #4
4000deec:	eafffff6 	b	4000decc <_tx_queue_receive+0x1e4>
4000def0:	e1a00000 	nop			; (mov r0, r0)
4000def4:	e5940020 	ldr	r0, [r4, #32]
4000def8:	e5941008 	ldr	r1, [r4, #8]
4000defc:	e0800101 	add	r0, r0, r1, lsl #2
4000df00:	e5840020 	str	r0, [r4, #32]
4000df04:	e5940020 	ldr	r0, [r4, #32]
4000df08:	e594101c 	ldr	r1, [r4, #28]
4000df0c:	e1500001 	cmp	r0, r1
4000df10:	3a000001 	bcc	4000df1c <_tx_queue_receive+0x234>
4000df14:	e5940018 	ldr	r0, [r4, #24]
4000df18:	e5840020 	str	r0, [r4, #32]
4000df1c:	e3580000 	cmp	r8, #0
4000df20:	1a000008 	bne	4000df48 <_tx_queue_receive+0x260>
4000df24:	e5940014 	ldr	r0, [r4, #20]
4000df28:	e2800001 	add	r0, r0, #1
4000df2c:	e5840014 	str	r0, [r4, #20]
4000df30:	e5940010 	ldr	r0, [r4, #16]
4000df34:	e2400001 	sub	r0, r0, #1
4000df38:	e5840010 	str	r0, [r4, #16]
4000df3c:	e121f007 	msr	CPSR_c, r7
4000df40:	e3a00000 	mov	r0, #0
4000df44:	eaffffd8 	b	4000deac <_tx_queue_receive+0x1c4>
4000df48:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e140 <_tx_queue_receive+0x458>
4000df4c:	e5900000 	ldr	r0, [r0]
4000df50:	e2800001 	add	r0, r0, #1
4000df54:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e140 <_tx_queue_receive+0x458>
4000df58:	e5810000 	str	r0, [r1]
4000df5c:	e121f007 	msr	CPSR_c, r7
4000df60:	e10f7000 	mrs	r7, CPSR
4000df64:	e3870080 	orr	r0, r7, #128	; 0x80
4000df68:	e58d0000 	str	r0, [sp]
4000df6c:	e59d0000 	ldr	r0, [sp]
4000df70:	e121f000 	msr	CPSR_c, r0
4000df74:	e2810000 	add	r0, r1, #0
4000df78:	e5900000 	ldr	r0, [r0]
4000df7c:	e2400001 	sub	r0, r0, #1
4000df80:	e5810000 	str	r0, [r1]
4000df84:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000df88:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000df8c:	e594b008 	ldr	fp, [r4, #8]
4000df90:	e1a00000 	nop			; (mov r0, r0)
4000df94:	e5990000 	ldr	r0, [r9]
4000df98:	e58a0000 	str	r0, [sl]
4000df9c:	e24bb001 	sub	fp, fp, #1
4000dfa0:	e35b0000 	cmp	fp, #0
4000dfa4:	1a000000 	bne	4000dfac <_tx_queue_receive+0x2c4>
4000dfa8:	ea000002 	b	4000dfb8 <_tx_queue_receive+0x2d0>
4000dfac:	e28aa004 	add	sl, sl, #4
4000dfb0:	e2899004 	add	r9, r9, #4
4000dfb4:	eafffff6 	b	4000df94 <_tx_queue_receive+0x2ac>
4000dfb8:	e1a00000 	nop			; (mov r0, r0)
4000dfbc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000dfc0:	e5941008 	ldr	r1, [r4, #8]
4000dfc4:	e0800101 	add	r0, r0, r1, lsl #2
4000dfc8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000dfcc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000dfd0:	e594101c 	ldr	r1, [r4, #28]
4000dfd4:	e1500001 	cmp	r0, r1
4000dfd8:	3a000001 	bcc	4000dfe4 <_tx_queue_receive+0x2fc>
4000dfdc:	e5940018 	ldr	r0, [r4, #24]
4000dfe0:	e5840024 	str	r0, [r4, #36]	; 0x24
4000dfe4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dfe8:	e1500008 	cmp	r0, r8
4000dfec:	1a000002 	bne	4000dffc <_tx_queue_receive+0x314>
4000dff0:	e3a00000 	mov	r0, #0
4000dff4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dff8:	ea000007 	b	4000e01c <_tx_queue_receive+0x334>
4000dffc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e000:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e004:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e008:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e00c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e010:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e014:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e018:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e01c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e020:	e2400001 	sub	r0, r0, #1
4000e024:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e028:	e3a00000 	mov	r0, #0
4000e02c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e030:	e59f0108 	ldr	r0, [pc, #264]	; 4000e140 <_tx_queue_receive+0x458>
4000e034:	e5900000 	ldr	r0, [r0]
4000e038:	e2800001 	add	r0, r0, #1
4000e03c:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e140 <_tx_queue_receive+0x458>
4000e040:	e5810000 	str	r0, [r1]
4000e044:	e121f007 	msr	CPSR_c, r7
4000e048:	e3a00000 	mov	r0, #0
4000e04c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e050:	e1a00008 	mov	r0, r8
4000e054:	eb000492 	bl	4000f2a4 <_tx_thread_system_resume>
4000e058:	e3a00000 	mov	r0, #0
4000e05c:	eaffff92 	b	4000deac <_tx_queue_receive+0x1c4>
4000e060:	e3560000 	cmp	r6, #0
4000e064:	0a00002a 	beq	4000e114 <_tx_queue_receive+0x42c>
4000e068:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e12c <_tx_queue_receive+0x444>
4000e06c:	e5908000 	ldr	r8, [r0]
4000e070:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e144 <_tx_queue_receive+0x45c>
4000e074:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e078:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e07c:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e080:	e3a00000 	mov	r0, #0
4000e084:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e088:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e08c:	e3500000 	cmp	r0, #0
4000e090:	0a00000a 	beq	4000e0c0 <_tx_queue_receive+0x3d8>
4000e094:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e098:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e09c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0a0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e0a4:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e0a8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0ac:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e0b0:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e0b4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0b8:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e0bc:	ea000002 	b	4000e0cc <_tx_queue_receive+0x3e4>
4000e0c0:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e0c4:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e0c8:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e0cc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e0d0:	e2800001 	add	r0, r0, #1
4000e0d4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e0d8:	e3a00005 	mov	r0, #5
4000e0dc:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e0e0:	e3a00001 	mov	r0, #1
4000e0e4:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e0e8:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e0ec:	e59f004c 	ldr	r0, [pc, #76]	; 4000e140 <_tx_queue_receive+0x458>
4000e0f0:	e5900000 	ldr	r0, [r0]
4000e0f4:	e2800001 	add	r0, r0, #1
4000e0f8:	e59f1040 	ldr	r1, [pc, #64]	; 4000e140 <_tx_queue_receive+0x458>
4000e0fc:	e5810000 	str	r0, [r1]
4000e100:	e121f007 	msr	CPSR_c, r7
4000e104:	e1a00008 	mov	r0, r8
4000e108:	ebffeabe 	bl	40008c08 <_tx_thread_system_suspend>
4000e10c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e110:	eaffff65 	b	4000deac <_tx_queue_receive+0x1c4>
4000e114:	e121f007 	msr	CPSR_c, r7
4000e118:	e3a0000a 	mov	r0, #10
4000e11c:	eaffff62 	b	4000deac <_tx_queue_receive+0x1c4>
4000e120:	4003132c 	.word	0x4003132c
4000e124:	40031330 	.word	0x40031330
4000e128:	400312b8 	.word	0x400312b8
4000e12c:	400312c0 	.word	0x400312c0
4000e130:	f0f0f0f0 	.word	0xf0f0f0f0
4000e134:	40031328 	.word	0x40031328
4000e138:	40031324 	.word	0x40031324
4000e13c:	40031318 	.word	0x40031318
4000e140:	400312dc 	.word	0x400312dc
4000e144:	400106c8 	.word	0x400106c8

4000e148 <_tx_queue_send>:
4000e148:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e14c:	e1a04000 	mov	r4, r0
4000e150:	e1a05001 	mov	r5, r1
4000e154:	e1a06002 	mov	r6, r2
4000e158:	e10f7000 	mrs	r7, CPSR
4000e15c:	e3870080 	orr	r0, r7, #128	; 0x80
4000e160:	e58d0004 	str	r0, [sp, #4]
4000e164:	e59d0004 	ldr	r0, [sp, #4]
4000e168:	e121f000 	msr	CPSR_c, r0
4000e16c:	e59f1358 	ldr	r1, [pc, #856]	; 4000e4cc <_tx_queue_send+0x384>
4000e170:	e5910000 	ldr	r0, [r1]
4000e174:	e3500000 	cmp	r0, #0
4000e178:	0a000031 	beq	4000e244 <_tx_queue_send+0xfc>
4000e17c:	e59f134c 	ldr	r1, [pc, #844]	; 4000e4d0 <_tx_queue_send+0x388>
4000e180:	e5911000 	ldr	r1, [r1]
4000e184:	e2811001 	add	r1, r1, #1
4000e188:	e59f2340 	ldr	r2, [pc, #832]	; 4000e4d0 <_tx_queue_send+0x388>
4000e18c:	e5821000 	str	r1, [r2]
4000e190:	e580100c 	str	r1, [r0, #12]
4000e194:	e59f1338 	ldr	r1, [pc, #824]	; 4000e4d4 <_tx_queue_send+0x38c>
4000e198:	e5911000 	ldr	r1, [r1]
4000e19c:	e3510000 	cmp	r1, #0
4000e1a0:	1a000006 	bne	4000e1c0 <_tx_queue_send+0x78>
4000e1a4:	e59f132c 	ldr	r1, [pc, #812]	; 4000e4d8 <_tx_queue_send+0x390>
4000e1a8:	e5911000 	ldr	r1, [r1]
4000e1ac:	e5801000 	str	r1, [r0]
4000e1b0:	e5901000 	ldr	r1, [r0]
4000e1b4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e1b8:	e5801004 	str	r1, [r0, #4]
4000e1bc:	ea00000d 	b	4000e1f8 <_tx_queue_send+0xb0>
4000e1c0:	e59f130c 	ldr	r1, [pc, #780]	; 4000e4d4 <_tx_queue_send+0x38c>
4000e1c4:	e5911000 	ldr	r1, [r1]
4000e1c8:	e59f230c 	ldr	r2, [pc, #780]	; 4000e4dc <_tx_queue_send+0x394>
4000e1cc:	e1510002 	cmp	r1, r2
4000e1d0:	2a000004 	bcs	4000e1e8 <_tx_queue_send+0xa0>
4000e1d4:	e3e01000 	mvn	r1, #0
4000e1d8:	e5801000 	str	r1, [r0]
4000e1dc:	e3a01000 	mov	r1, #0
4000e1e0:	e5801004 	str	r1, [r0, #4]
4000e1e4:	ea000003 	b	4000e1f8 <_tx_queue_send+0xb0>
4000e1e8:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e4dc <_tx_queue_send+0x394>
4000e1ec:	e5801000 	str	r1, [r0]
4000e1f0:	e3a01000 	mov	r1, #0
4000e1f4:	e5801004 	str	r1, [r0, #4]
4000e1f8:	e3a01045 	mov	r1, #69	; 0x45
4000e1fc:	e5801008 	str	r1, [r0, #8]
4000e200:	e5804010 	str	r4, [r0, #16]
4000e204:	e5805014 	str	r5, [r0, #20]
4000e208:	e5806018 	str	r6, [r0, #24]
4000e20c:	e5941010 	ldr	r1, [r4, #16]
4000e210:	e580101c 	str	r1, [r0, #28]
4000e214:	e2800020 	add	r0, r0, #32
4000e218:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e4e0 <_tx_queue_send+0x398>
4000e21c:	e5911000 	ldr	r1, [r1]
4000e220:	e1500001 	cmp	r0, r1
4000e224:	3a000001 	bcc	4000e230 <_tx_queue_send+0xe8>
4000e228:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e4e4 <_tx_queue_send+0x39c>
4000e22c:	e5910000 	ldr	r0, [r1]
4000e230:	e59f1294 	ldr	r1, [pc, #660]	; 4000e4cc <_tx_queue_send+0x384>
4000e234:	e5810000 	str	r0, [r1]
4000e238:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e4e8 <_tx_queue_send+0x3a0>
4000e23c:	e5911000 	ldr	r1, [r1]
4000e240:	e5810020 	str	r0, [r1, #32]
4000e244:	e5940014 	ldr	r0, [r4, #20]
4000e248:	e3500000 	cmp	r0, #0
4000e24c:	0a000061 	beq	4000e3d8 <_tx_queue_send+0x290>
4000e250:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e254:	e3500000 	cmp	r0, #0
4000e258:	1a000028 	bne	4000e300 <_tx_queue_send+0x1b8>
4000e25c:	e5940014 	ldr	r0, [r4, #20]
4000e260:	e2400001 	sub	r0, r0, #1
4000e264:	e5840014 	str	r0, [r4, #20]
4000e268:	e5940010 	ldr	r0, [r4, #16]
4000e26c:	e2800001 	add	r0, r0, #1
4000e270:	e5840010 	str	r0, [r4, #16]
4000e274:	e1a09005 	mov	r9, r5
4000e278:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e27c:	e594b008 	ldr	fp, [r4, #8]
4000e280:	e1a00000 	nop			; (mov r0, r0)
4000e284:	e5990000 	ldr	r0, [r9]
4000e288:	e58a0000 	str	r0, [sl]
4000e28c:	e24bb001 	sub	fp, fp, #1
4000e290:	e35b0000 	cmp	fp, #0
4000e294:	1a000000 	bne	4000e29c <_tx_queue_send+0x154>
4000e298:	ea000002 	b	4000e2a8 <_tx_queue_send+0x160>
4000e29c:	e28aa004 	add	sl, sl, #4
4000e2a0:	e2899004 	add	r9, r9, #4
4000e2a4:	eafffff6 	b	4000e284 <_tx_queue_send+0x13c>
4000e2a8:	e1a00000 	nop			; (mov r0, r0)
4000e2ac:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e2b0:	e5941008 	ldr	r1, [r4, #8]
4000e2b4:	e0800101 	add	r0, r0, r1, lsl #2
4000e2b8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e2bc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e2c0:	e594101c 	ldr	r1, [r4, #28]
4000e2c4:	e1500001 	cmp	r0, r1
4000e2c8:	3a000001 	bcc	4000e2d4 <_tx_queue_send+0x18c>
4000e2cc:	e5940018 	ldr	r0, [r4, #24]
4000e2d0:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e2d4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e2d8:	e58d0000 	str	r0, [sp]
4000e2dc:	e121f007 	msr	CPSR_c, r7
4000e2e0:	e59d0000 	ldr	r0, [sp]
4000e2e4:	e3500000 	cmp	r0, #0
4000e2e8:	0a000002 	beq	4000e2f8 <_tx_queue_send+0x1b0>
4000e2ec:	e1a00004 	mov	r0, r4
4000e2f0:	e59d1000 	ldr	r1, [sp]
4000e2f4:	e12fff31 	blx	r1
4000e2f8:	e3a00000 	mov	r0, #0
4000e2fc:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e300:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e304:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e308:	e1500008 	cmp	r0, r8
4000e30c:	1a000002 	bne	4000e31c <_tx_queue_send+0x1d4>
4000e310:	e3a00000 	mov	r0, #0
4000e314:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e318:	ea000007 	b	4000e33c <_tx_queue_send+0x1f4>
4000e31c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e320:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e324:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e328:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e32c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e330:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e334:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e338:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e33c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e340:	e2400001 	sub	r0, r0, #1
4000e344:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e348:	e3a00000 	mov	r0, #0
4000e34c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e350:	e59f0194 	ldr	r0, [pc, #404]	; 4000e4ec <_tx_queue_send+0x3a4>
4000e354:	e5900000 	ldr	r0, [r0]
4000e358:	e2800001 	add	r0, r0, #1
4000e35c:	e59f1188 	ldr	r1, [pc, #392]	; 4000e4ec <_tx_queue_send+0x3a4>
4000e360:	e5810000 	str	r0, [r1]
4000e364:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e368:	e58d0000 	str	r0, [sp]
4000e36c:	e121f007 	msr	CPSR_c, r7
4000e370:	e1a09005 	mov	r9, r5
4000e374:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e378:	e594b008 	ldr	fp, [r4, #8]
4000e37c:	e1a00000 	nop			; (mov r0, r0)
4000e380:	e5990000 	ldr	r0, [r9]
4000e384:	e58a0000 	str	r0, [sl]
4000e388:	e24bb001 	sub	fp, fp, #1
4000e38c:	e35b0000 	cmp	fp, #0
4000e390:	1a000000 	bne	4000e398 <_tx_queue_send+0x250>
4000e394:	ea000002 	b	4000e3a4 <_tx_queue_send+0x25c>
4000e398:	e28aa004 	add	sl, sl, #4
4000e39c:	e2899004 	add	r9, r9, #4
4000e3a0:	eafffff6 	b	4000e380 <_tx_queue_send+0x238>
4000e3a4:	e1a00000 	nop			; (mov r0, r0)
4000e3a8:	e3a00000 	mov	r0, #0
4000e3ac:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e3b0:	e1a00008 	mov	r0, r8
4000e3b4:	eb0003ba 	bl	4000f2a4 <_tx_thread_system_resume>
4000e3b8:	e59d0000 	ldr	r0, [sp]
4000e3bc:	e3500000 	cmp	r0, #0
4000e3c0:	0a000002 	beq	4000e3d0 <_tx_queue_send+0x288>
4000e3c4:	e1a00004 	mov	r0, r4
4000e3c8:	e59d1000 	ldr	r1, [sp]
4000e3cc:	e12fff31 	blx	r1
4000e3d0:	e3a00000 	mov	r0, #0
4000e3d4:	eaffffc8 	b	4000e2fc <_tx_queue_send+0x1b4>
4000e3d8:	e3560000 	cmp	r6, #0
4000e3dc:	0a000037 	beq	4000e4c0 <_tx_queue_send+0x378>
4000e3e0:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e4d8 <_tx_queue_send+0x390>
4000e3e4:	e5908000 	ldr	r8, [r0]
4000e3e8:	e59f0100 	ldr	r0, [pc, #256]	; 4000e4f0 <_tx_queue_send+0x3a8>
4000e3ec:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e3f0:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e3f4:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e3f8:	e3a00000 	mov	r0, #0
4000e3fc:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e400:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e404:	e3500000 	cmp	r0, #0
4000e408:	0a00000a 	beq	4000e438 <_tx_queue_send+0x2f0>
4000e40c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e410:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e414:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e418:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e41c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e420:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e424:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e428:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e42c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e430:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e434:	ea000002 	b	4000e444 <_tx_queue_send+0x2fc>
4000e438:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e43c:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e440:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e444:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e448:	e2800001 	add	r0, r0, #1
4000e44c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e450:	e3a00005 	mov	r0, #5
4000e454:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e458:	e3a00001 	mov	r0, #1
4000e45c:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e460:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e464:	e59f0080 	ldr	r0, [pc, #128]	; 4000e4ec <_tx_queue_send+0x3a4>
4000e468:	e5900000 	ldr	r0, [r0]
4000e46c:	e2800001 	add	r0, r0, #1
4000e470:	e59f1074 	ldr	r1, [pc, #116]	; 4000e4ec <_tx_queue_send+0x3a4>
4000e474:	e5810000 	str	r0, [r1]
4000e478:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e47c:	e58d0000 	str	r0, [sp]
4000e480:	e121f007 	msr	CPSR_c, r7
4000e484:	e1a00008 	mov	r0, r8
4000e488:	ebffe9de 	bl	40008c08 <_tx_thread_system_suspend>
4000e48c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e490:	e58d0000 	str	r0, [sp]
4000e494:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e498:	e3500000 	cmp	r0, #0
4000e49c:	1a000005 	bne	4000e4b8 <_tx_queue_send+0x370>
4000e4a0:	e59d0000 	ldr	r0, [sp]
4000e4a4:	e3500000 	cmp	r0, #0
4000e4a8:	0a000002 	beq	4000e4b8 <_tx_queue_send+0x370>
4000e4ac:	e1a00004 	mov	r0, r4
4000e4b0:	e59d1000 	ldr	r1, [sp]
4000e4b4:	e12fff31 	blx	r1
4000e4b8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e4bc:	eaffff8e 	b	4000e2fc <_tx_queue_send+0x1b4>
4000e4c0:	e121f007 	msr	CPSR_c, r7
4000e4c4:	e3a0000b 	mov	r0, #11
4000e4c8:	eaffff8b 	b	4000e2fc <_tx_queue_send+0x1b4>
4000e4cc:	4003132c 	.word	0x4003132c
4000e4d0:	40031330 	.word	0x40031330
4000e4d4:	400312b8 	.word	0x400312b8
4000e4d8:	400312c0 	.word	0x400312c0
4000e4dc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e4e0:	40031328 	.word	0x40031328
4000e4e4:	40031324 	.word	0x40031324
4000e4e8:	40031318 	.word	0x40031318
4000e4ec:	400312dc 	.word	0x400312dc
4000e4f0:	400106c8 	.word	0x400106c8

4000e4f4 <_tx_thread_create>:
4000e4f4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e4f8:	e24dd014 	sub	sp, sp, #20
4000e4fc:	e1a04000 	mov	r4, r0
4000e500:	e1a05001 	mov	r5, r1
4000e504:	e28da048 	add	sl, sp, #72	; 0x48
4000e508:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e50c:	e3a00000 	mov	r0, #0
4000e510:	e58d0004 	str	r0, [sp, #4]
4000e514:	e3a020ef 	mov	r2, #239	; 0xef
4000e518:	e1a01007 	mov	r1, r7
4000e51c:	e1a00006 	mov	r0, r6
4000e520:	eb0014c4 	bl	40013838 <__aeabi_memset>
4000e524:	e1a00127 	lsr	r0, r7, #2
4000e528:	e3a01004 	mov	r1, #4
4000e52c:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e530:	e3a010a8 	mov	r1, #168	; 0xa8
4000e534:	e1a00004 	mov	r0, r4
4000e538:	eb001496 	bl	40013798 <__aeabi_memclr4>
4000e53c:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e540:	e59d001c 	ldr	r0, [sp, #28]
4000e544:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e548:	e59d0020 	ldr	r0, [sp, #32]
4000e54c:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e550:	e584600c 	str	r6, [r4, #12]
4000e554:	e5847014 	str	r7, [r4, #20]
4000e558:	e2470001 	sub	r0, r7, #1
4000e55c:	e0800006 	add	r0, r0, r6
4000e560:	e5840010 	str	r0, [r4, #16]
4000e564:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e568:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e56c:	e584a018 	str	sl, [r4, #24]
4000e570:	e584a01c 	str	sl, [r4, #28]
4000e574:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e578:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e57c:	e3a00003 	mov	r0, #3
4000e580:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e584:	e59f0268 	ldr	r0, [pc, #616]	; 4000e7f4 <_tx_thread_create+0x300>
4000e588:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e58c:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e590:	e59f1260 	ldr	r1, [pc, #608]	; 4000e7f8 <_tx_thread_create+0x304>
4000e594:	e1a00004 	mov	r0, r4
4000e598:	eb000727 	bl	4001023c <_tx_thread_stack_build>
4000e59c:	e5940008 	ldr	r0, [r4, #8]
4000e5a0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e5a4:	e10f0000 	mrs	r0, CPSR
4000e5a8:	e58d0010 	str	r0, [sp, #16]
4000e5ac:	e59d0010 	ldr	r0, [sp, #16]
4000e5b0:	e380b080 	orr	fp, r0, #128	; 0x80
4000e5b4:	e121f00b 	msr	CPSR_c, fp
4000e5b8:	e59f023c 	ldr	r0, [pc, #572]	; 4000e7fc <_tx_thread_create+0x308>
4000e5bc:	e5840000 	str	r0, [r4]
4000e5c0:	e59f0238 	ldr	r0, [pc, #568]	; 4000e800 <_tx_thread_create+0x30c>
4000e5c4:	e5900000 	ldr	r0, [r0]
4000e5c8:	e3500000 	cmp	r0, #0
4000e5cc:	0a00000e 	beq	4000e60c <_tx_thread_create+0x118>
4000e5d0:	e59f0228 	ldr	r0, [pc, #552]	; 4000e800 <_tx_thread_create+0x30c>
4000e5d4:	e5900000 	ldr	r0, [r0]
4000e5d8:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e5dc:	e58d000c 	str	r0, [sp, #12]
4000e5e0:	e59f0218 	ldr	r0, [pc, #536]	; 4000e800 <_tx_thread_create+0x30c>
4000e5e4:	e5900000 	ldr	r0, [r0]
4000e5e8:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e5ec:	e59d000c 	ldr	r0, [sp, #12]
4000e5f0:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e5f4:	e59d000c 	ldr	r0, [sp, #12]
4000e5f8:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e5fc:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e800 <_tx_thread_create+0x30c>
4000e600:	e5900000 	ldr	r0, [r0]
4000e604:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e608:	ea000003 	b	4000e61c <_tx_thread_create+0x128>
4000e60c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e800 <_tx_thread_create+0x30c>
4000e610:	e5804000 	str	r4, [r0]
4000e614:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e618:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e61c:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e804 <_tx_thread_create+0x310>
4000e620:	e5900000 	ldr	r0, [r0]
4000e624:	e2800001 	add	r0, r0, #1
4000e628:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e804 <_tx_thread_create+0x310>
4000e62c:	e5810000 	str	r0, [r1]
4000e630:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e808 <_tx_thread_create+0x314>
4000e634:	e5900000 	ldr	r0, [r0]
4000e638:	e2800001 	add	r0, r0, #1
4000e63c:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e808 <_tx_thread_create+0x314>
4000e640:	e5810000 	str	r0, [r1]
4000e644:	e1a03006 	mov	r3, r6
4000e648:	e1a02005 	mov	r2, r5
4000e64c:	e1a01004 	mov	r1, r4
4000e650:	e3a00001 	mov	r0, #1
4000e654:	e58d7000 	str	r7, [sp]
4000e658:	eb000667 	bl	4000fffc <_tx_trace_object_register>
4000e65c:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e80c <_tx_thread_create+0x318>
4000e660:	e5910000 	ldr	r0, [r1]
4000e664:	e3500000 	cmp	r0, #0
4000e668:	0a000030 	beq	4000e730 <_tx_thread_create+0x23c>
4000e66c:	e59f119c 	ldr	r1, [pc, #412]	; 4000e810 <_tx_thread_create+0x31c>
4000e670:	e5911000 	ldr	r1, [r1]
4000e674:	e2811001 	add	r1, r1, #1
4000e678:	e59f2190 	ldr	r2, [pc, #400]	; 4000e810 <_tx_thread_create+0x31c>
4000e67c:	e5821000 	str	r1, [r2]
4000e680:	e580100c 	str	r1, [r0, #12]
4000e684:	e59f1188 	ldr	r1, [pc, #392]	; 4000e814 <_tx_thread_create+0x320>
4000e688:	e5911000 	ldr	r1, [r1]
4000e68c:	e3510000 	cmp	r1, #0
4000e690:	1a000006 	bne	4000e6b0 <_tx_thread_create+0x1bc>
4000e694:	e59f117c 	ldr	r1, [pc, #380]	; 4000e818 <_tx_thread_create+0x324>
4000e698:	e5911000 	ldr	r1, [r1]
4000e69c:	e5801000 	str	r1, [r0]
4000e6a0:	e5901000 	ldr	r1, [r0]
4000e6a4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e6a8:	e5801004 	str	r1, [r0, #4]
4000e6ac:	ea00000d 	b	4000e6e8 <_tx_thread_create+0x1f4>
4000e6b0:	e59f115c 	ldr	r1, [pc, #348]	; 4000e814 <_tx_thread_create+0x320>
4000e6b4:	e5911000 	ldr	r1, [r1]
4000e6b8:	e59f215c 	ldr	r2, [pc, #348]	; 4000e81c <_tx_thread_create+0x328>
4000e6bc:	e1510002 	cmp	r1, r2
4000e6c0:	2a000004 	bcs	4000e6d8 <_tx_thread_create+0x1e4>
4000e6c4:	e3e01000 	mvn	r1, #0
4000e6c8:	e5801000 	str	r1, [r0]
4000e6cc:	e3a01000 	mov	r1, #0
4000e6d0:	e5801004 	str	r1, [r0, #4]
4000e6d4:	ea000003 	b	4000e6e8 <_tx_thread_create+0x1f4>
4000e6d8:	e59f113c 	ldr	r1, [pc, #316]	; 4000e81c <_tx_thread_create+0x328>
4000e6dc:	e5801000 	str	r1, [r0]
4000e6e0:	e3a01000 	mov	r1, #0
4000e6e4:	e5801004 	str	r1, [r0, #4]
4000e6e8:	e3a01064 	mov	r1, #100	; 0x64
4000e6ec:	e5801008 	str	r1, [r0, #8]
4000e6f0:	e5804010 	str	r4, [r0, #16]
4000e6f4:	e5808014 	str	r8, [r0, #20]
4000e6f8:	e5806018 	str	r6, [r0, #24]
4000e6fc:	e580701c 	str	r7, [r0, #28]
4000e700:	e2800020 	add	r0, r0, #32
4000e704:	e59f1114 	ldr	r1, [pc, #276]	; 4000e820 <_tx_thread_create+0x32c>
4000e708:	e5911000 	ldr	r1, [r1]
4000e70c:	e1500001 	cmp	r0, r1
4000e710:	3a000001 	bcc	4000e71c <_tx_thread_create+0x228>
4000e714:	e59f1108 	ldr	r1, [pc, #264]	; 4000e824 <_tx_thread_create+0x330>
4000e718:	e5910000 	ldr	r0, [r1]
4000e71c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e80c <_tx_thread_create+0x318>
4000e720:	e5810000 	str	r0, [r1]
4000e724:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e828 <_tx_thread_create+0x334>
4000e728:	e5911000 	ldr	r1, [r1]
4000e72c:	e5810020 	str	r0, [r1, #32]
4000e730:	e59d0010 	ldr	r0, [sp, #16]
4000e734:	e121f000 	msr	CPSR_c, r0
4000e738:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e73c:	e3500000 	cmp	r0, #0
4000e740:	0a00001c 	beq	4000e7b8 <_tx_thread_create+0x2c4>
4000e744:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e814 <_tx_thread_create+0x320>
4000e748:	e5900000 	ldr	r0, [r0]
4000e74c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e81c <_tx_thread_create+0x328>
4000e750:	e1500001 	cmp	r0, r1
4000e754:	3a00000c 	bcc	4000e78c <_tx_thread_create+0x298>
4000e758:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e82c <_tx_thread_create+0x338>
4000e75c:	e5900000 	ldr	r0, [r0]
4000e760:	e58d0008 	str	r0, [sp, #8]
4000e764:	e59d0008 	ldr	r0, [sp, #8]
4000e768:	e3500000 	cmp	r0, #0
4000e76c:	0a000008 	beq	4000e794 <_tx_thread_create+0x2a0>
4000e770:	e59d0008 	ldr	r0, [sp, #8]
4000e774:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e778:	e58d0004 	str	r0, [sp, #4]
4000e77c:	e59d0008 	ldr	r0, [sp, #8]
4000e780:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e784:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e788:	ea000001 	b	4000e794 <_tx_thread_create+0x2a0>
4000e78c:	e3a00000 	mov	r0, #0
4000e790:	e58d0008 	str	r0, [sp, #8]
4000e794:	e1a00004 	mov	r0, r4
4000e798:	eb0002c1 	bl	4000f2a4 <_tx_thread_system_resume>
4000e79c:	e59d0008 	ldr	r0, [sp, #8]
4000e7a0:	e3500000 	cmp	r0, #0
4000e7a4:	0a00000f 	beq	4000e7e8 <_tx_thread_create+0x2f4>
4000e7a8:	e59d0008 	ldr	r0, [sp, #8]
4000e7ac:	e59d1004 	ldr	r1, [sp, #4]
4000e7b0:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e7b4:	ea00000b 	b	4000e7e8 <_tx_thread_create+0x2f4>
4000e7b8:	e10f0000 	mrs	r0, CPSR
4000e7bc:	e58d0010 	str	r0, [sp, #16]
4000e7c0:	e59d0010 	ldr	r0, [sp, #16]
4000e7c4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e7c8:	e121f00b 	msr	CPSR_c, fp
4000e7cc:	e59f0034 	ldr	r0, [pc, #52]	; 4000e808 <_tx_thread_create+0x314>
4000e7d0:	e5900000 	ldr	r0, [r0]
4000e7d4:	e2400001 	sub	r0, r0, #1
4000e7d8:	e59f1028 	ldr	r1, [pc, #40]	; 4000e808 <_tx_thread_create+0x314>
4000e7dc:	e5810000 	str	r0, [r1]
4000e7e0:	e59d0010 	ldr	r0, [sp, #16]
4000e7e4:	e121f000 	msr	CPSR_c, r0
4000e7e8:	e3a00000 	mov	r0, #0
4000e7ec:	e28dd024 	add	sp, sp, #36	; 0x24
4000e7f0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e7f4:	4000f7d4 	.word	0x4000f7d4
4000e7f8:	4000f038 	.word	0x4000f038
4000e7fc:	54485244 	.word	0x54485244
4000e800:	400312c8 	.word	0x400312c8
4000e804:	400312cc 	.word	0x400312cc
4000e808:	400312dc 	.word	0x400312dc
4000e80c:	4003132c 	.word	0x4003132c
4000e810:	40031330 	.word	0x40031330
4000e814:	400312b8 	.word	0x400312b8
4000e818:	400312c0 	.word	0x400312c0
4000e81c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e820:	40031328 	.word	0x40031328
4000e824:	40031324 	.word	0x40031324
4000e828:	40031318 	.word	0x40031318
4000e82c:	400312c4 	.word	0x400312c4

4000e830 <_tx_thread_info_get>:
4000e830:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e834:	e1a0c000 	mov	ip, r0
4000e838:	e28d7028 	add	r7, sp, #40	; 0x28
4000e83c:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e840:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e844:	e10f8000 	mrs	r8, CPSR
4000e848:	e3889080 	orr	r9, r8, #128	; 0x80
4000e84c:	e121f009 	msr	CPSR_c, r9
4000e850:	e59fa160 	ldr	sl, [pc, #352]	; 4000e9b8 <_tx_thread_info_get+0x188>
4000e854:	e59a0000 	ldr	r0, [sl]
4000e858:	e3500000 	cmp	r0, #0
4000e85c:	0a000032 	beq	4000e92c <_tx_thread_info_get+0xfc>
4000e860:	e59fa154 	ldr	sl, [pc, #340]	; 4000e9bc <_tx_thread_info_get+0x18c>
4000e864:	e59aa000 	ldr	sl, [sl]
4000e868:	e28aa001 	add	sl, sl, #1
4000e86c:	e59fb148 	ldr	fp, [pc, #328]	; 4000e9bc <_tx_thread_info_get+0x18c>
4000e870:	e58ba000 	str	sl, [fp]
4000e874:	e580a00c 	str	sl, [r0, #12]
4000e878:	e59fa140 	ldr	sl, [pc, #320]	; 4000e9c0 <_tx_thread_info_get+0x190>
4000e87c:	e59aa000 	ldr	sl, [sl]
4000e880:	e35a0000 	cmp	sl, #0
4000e884:	1a000006 	bne	4000e8a4 <_tx_thread_info_get+0x74>
4000e888:	e59fa134 	ldr	sl, [pc, #308]	; 4000e9c4 <_tx_thread_info_get+0x194>
4000e88c:	e59aa000 	ldr	sl, [sl]
4000e890:	e580a000 	str	sl, [r0]
4000e894:	e590a000 	ldr	sl, [r0]
4000e898:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e89c:	e580a004 	str	sl, [r0, #4]
4000e8a0:	ea00000d 	b	4000e8dc <_tx_thread_info_get+0xac>
4000e8a4:	e59fa114 	ldr	sl, [pc, #276]	; 4000e9c0 <_tx_thread_info_get+0x190>
4000e8a8:	e59aa000 	ldr	sl, [sl]
4000e8ac:	e59fb114 	ldr	fp, [pc, #276]	; 4000e9c8 <_tx_thread_info_get+0x198>
4000e8b0:	e15a000b 	cmp	sl, fp
4000e8b4:	2a000004 	bcs	4000e8cc <_tx_thread_info_get+0x9c>
4000e8b8:	e3e0a000 	mvn	sl, #0
4000e8bc:	e580a000 	str	sl, [r0]
4000e8c0:	e3a0a000 	mov	sl, #0
4000e8c4:	e580a004 	str	sl, [r0, #4]
4000e8c8:	ea000003 	b	4000e8dc <_tx_thread_info_get+0xac>
4000e8cc:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e9c8 <_tx_thread_info_get+0x198>
4000e8d0:	e580a000 	str	sl, [r0]
4000e8d4:	e3a0a000 	mov	sl, #0
4000e8d8:	e580a004 	str	sl, [r0, #4]
4000e8dc:	e3a0a068 	mov	sl, #104	; 0x68
4000e8e0:	e580a008 	str	sl, [r0, #8]
4000e8e4:	e580c010 	str	ip, [r0, #16]
4000e8e8:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e8ec:	e580a014 	str	sl, [r0, #20]
4000e8f0:	e3a0a000 	mov	sl, #0
4000e8f4:	e580a018 	str	sl, [r0, #24]
4000e8f8:	e580a01c 	str	sl, [r0, #28]
4000e8fc:	e2800020 	add	r0, r0, #32
4000e900:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000e9cc <_tx_thread_info_get+0x19c>
4000e904:	e59aa000 	ldr	sl, [sl]
4000e908:	e150000a 	cmp	r0, sl
4000e90c:	3a000001 	bcc	4000e918 <_tx_thread_info_get+0xe8>
4000e910:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000e9d0 <_tx_thread_info_get+0x1a0>
4000e914:	e59a0000 	ldr	r0, [sl]
4000e918:	e59fa098 	ldr	sl, [pc, #152]	; 4000e9b8 <_tx_thread_info_get+0x188>
4000e91c:	e58a0000 	str	r0, [sl]
4000e920:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000e9d4 <_tx_thread_info_get+0x1a4>
4000e924:	e59aa000 	ldr	sl, [sl]
4000e928:	e58a0020 	str	r0, [sl, #32]
4000e92c:	e3510000 	cmp	r1, #0
4000e930:	0a000001 	beq	4000e93c <_tx_thread_info_get+0x10c>
4000e934:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e938:	e5810000 	str	r0, [r1]
4000e93c:	e3520000 	cmp	r2, #0
4000e940:	0a000001 	beq	4000e94c <_tx_thread_info_get+0x11c>
4000e944:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e948:	e5820000 	str	r0, [r2]
4000e94c:	e3530000 	cmp	r3, #0
4000e950:	0a000001 	beq	4000e95c <_tx_thread_info_get+0x12c>
4000e954:	e59c0004 	ldr	r0, [ip, #4]
4000e958:	e5830000 	str	r0, [r3]
4000e95c:	e35e0000 	cmp	lr, #0
4000e960:	0a000001 	beq	4000e96c <_tx_thread_info_get+0x13c>
4000e964:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e968:	e58e0000 	str	r0, [lr]
4000e96c:	e3540000 	cmp	r4, #0
4000e970:	0a000001 	beq	4000e97c <_tx_thread_info_get+0x14c>
4000e974:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e978:	e5840000 	str	r0, [r4]
4000e97c:	e3550000 	cmp	r5, #0
4000e980:	0a000001 	beq	4000e98c <_tx_thread_info_get+0x15c>
4000e984:	e59c0018 	ldr	r0, [ip, #24]
4000e988:	e5850000 	str	r0, [r5]
4000e98c:	e3560000 	cmp	r6, #0
4000e990:	0a000001 	beq	4000e99c <_tx_thread_info_get+0x16c>
4000e994:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e998:	e5860000 	str	r0, [r6]
4000e99c:	e3570000 	cmp	r7, #0
4000e9a0:	0a000001 	beq	4000e9ac <_tx_thread_info_get+0x17c>
4000e9a4:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e9a8:	e5870000 	str	r0, [r7]
4000e9ac:	e121f008 	msr	CPSR_c, r8
4000e9b0:	e3a00000 	mov	r0, #0
4000e9b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e9b8:	4003132c 	.word	0x4003132c
4000e9bc:	40031330 	.word	0x40031330
4000e9c0:	400312b8 	.word	0x400312b8
4000e9c4:	400312c0 	.word	0x400312c0
4000e9c8:	f0f0f0f0 	.word	0xf0f0f0f0
4000e9cc:	40031328 	.word	0x40031328
4000e9d0:	40031324 	.word	0x40031324
4000e9d4:	40031318 	.word	0x40031318

4000e9d8 <_tx_thread_priority_change>:
4000e9d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e9dc:	e1a04000 	mov	r4, r0
4000e9e0:	e1a05001 	mov	r5, r1
4000e9e4:	e1a06002 	mov	r6, r2
4000e9e8:	e10f7000 	mrs	r7, CPSR
4000e9ec:	e3878080 	orr	r8, r7, #128	; 0x80
4000e9f0:	e121f008 	msr	CPSR_c, r8
4000e9f4:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000e9f8:	e5860000 	str	r0, [r6]
4000e9fc:	e59f1150 	ldr	r1, [pc, #336]	; 4000eb54 <_tx_thread_priority_change+0x17c>
4000ea00:	e5910000 	ldr	r0, [r1]
4000ea04:	e3500000 	cmp	r0, #0
4000ea08:	0a000032 	beq	4000ead8 <_tx_thread_priority_change+0x100>
4000ea0c:	e59f1144 	ldr	r1, [pc, #324]	; 4000eb58 <_tx_thread_priority_change+0x180>
4000ea10:	e5911000 	ldr	r1, [r1]
4000ea14:	e2811001 	add	r1, r1, #1
4000ea18:	e59f2138 	ldr	r2, [pc, #312]	; 4000eb58 <_tx_thread_priority_change+0x180>
4000ea1c:	e5821000 	str	r1, [r2]
4000ea20:	e580100c 	str	r1, [r0, #12]
4000ea24:	e59f1130 	ldr	r1, [pc, #304]	; 4000eb5c <_tx_thread_priority_change+0x184>
4000ea28:	e5911000 	ldr	r1, [r1]
4000ea2c:	e3510000 	cmp	r1, #0
4000ea30:	1a000006 	bne	4000ea50 <_tx_thread_priority_change+0x78>
4000ea34:	e59f1124 	ldr	r1, [pc, #292]	; 4000eb60 <_tx_thread_priority_change+0x188>
4000ea38:	e5911000 	ldr	r1, [r1]
4000ea3c:	e5801000 	str	r1, [r0]
4000ea40:	e5901000 	ldr	r1, [r0]
4000ea44:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ea48:	e5801004 	str	r1, [r0, #4]
4000ea4c:	ea00000d 	b	4000ea88 <_tx_thread_priority_change+0xb0>
4000ea50:	e59f1104 	ldr	r1, [pc, #260]	; 4000eb5c <_tx_thread_priority_change+0x184>
4000ea54:	e5911000 	ldr	r1, [r1]
4000ea58:	e59f2104 	ldr	r2, [pc, #260]	; 4000eb64 <_tx_thread_priority_change+0x18c>
4000ea5c:	e1510002 	cmp	r1, r2
4000ea60:	2a000004 	bcs	4000ea78 <_tx_thread_priority_change+0xa0>
4000ea64:	e3e01000 	mvn	r1, #0
4000ea68:	e5801000 	str	r1, [r0]
4000ea6c:	e3a01000 	mov	r1, #0
4000ea70:	e5801004 	str	r1, [r0, #4]
4000ea74:	ea000003 	b	4000ea88 <_tx_thread_priority_change+0xb0>
4000ea78:	e59f10e4 	ldr	r1, [pc, #228]	; 4000eb64 <_tx_thread_priority_change+0x18c>
4000ea7c:	e5801000 	str	r1, [r0]
4000ea80:	e3a01000 	mov	r1, #0
4000ea84:	e5801004 	str	r1, [r0, #4]
4000ea88:	e3a0106c 	mov	r1, #108	; 0x6c
4000ea8c:	e5801008 	str	r1, [r0, #8]
4000ea90:	e5804010 	str	r4, [r0, #16]
4000ea94:	e5805014 	str	r5, [r0, #20]
4000ea98:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ea9c:	e5801018 	str	r1, [r0, #24]
4000eaa0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000eaa4:	e580101c 	str	r1, [r0, #28]
4000eaa8:	e2800020 	add	r0, r0, #32
4000eaac:	e59f10b4 	ldr	r1, [pc, #180]	; 4000eb68 <_tx_thread_priority_change+0x190>
4000eab0:	e5911000 	ldr	r1, [r1]
4000eab4:	e1500001 	cmp	r0, r1
4000eab8:	3a000001 	bcc	4000eac4 <_tx_thread_priority_change+0xec>
4000eabc:	e59f10a8 	ldr	r1, [pc, #168]	; 4000eb6c <_tx_thread_priority_change+0x194>
4000eac0:	e5910000 	ldr	r0, [r1]
4000eac4:	e59f1088 	ldr	r1, [pc, #136]	; 4000eb54 <_tx_thread_priority_change+0x17c>
4000eac8:	e5810000 	str	r0, [r1]
4000eacc:	e59f109c 	ldr	r1, [pc, #156]	; 4000eb70 <_tx_thread_priority_change+0x198>
4000ead0:	e5911000 	ldr	r1, [r1]
4000ead4:	e5810020 	str	r0, [r1, #32]
4000ead8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000eadc:	e3500000 	cmp	r0, #0
4000eae0:	0a000005 	beq	4000eafc <_tx_thread_priority_change+0x124>
4000eae4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eae8:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eaec:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eaf0:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eaf4:	e121f007 	msr	CPSR_c, r7
4000eaf8:	ea000013 	b	4000eb4c <_tx_thread_priority_change+0x174>
4000eafc:	e59f0070 	ldr	r0, [pc, #112]	; 4000eb74 <_tx_thread_priority_change+0x19c>
4000eb00:	e5900000 	ldr	r0, [r0]
4000eb04:	e2800002 	add	r0, r0, #2
4000eb08:	e59f1064 	ldr	r1, [pc, #100]	; 4000eb74 <_tx_thread_priority_change+0x19c>
4000eb0c:	e5810000 	str	r0, [r1]
4000eb10:	e3a00003 	mov	r0, #3
4000eb14:	e5840030 	str	r0, [r4, #48]	; 0x30
4000eb18:	e3a00001 	mov	r0, #1
4000eb1c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000eb20:	e3a00000 	mov	r0, #0
4000eb24:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000eb28:	e121f007 	msr	CPSR_c, r7
4000eb2c:	e1a00004 	mov	r0, r4
4000eb30:	ebffe834 	bl	40008c08 <_tx_thread_system_suspend>
4000eb34:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eb38:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eb3c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eb40:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eb44:	e1a00004 	mov	r0, r4
4000eb48:	eb0001d5 	bl	4000f2a4 <_tx_thread_system_resume>
4000eb4c:	e3a00000 	mov	r0, #0
4000eb50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000eb54:	4003132c 	.word	0x4003132c
4000eb58:	40031330 	.word	0x40031330
4000eb5c:	400312b8 	.word	0x400312b8
4000eb60:	400312c0 	.word	0x400312c0
4000eb64:	f0f0f0f0 	.word	0xf0f0f0f0
4000eb68:	40031328 	.word	0x40031328
4000eb6c:	40031324 	.word	0x40031324
4000eb70:	40031318 	.word	0x40031318
4000eb74:	400312dc 	.word	0x400312dc

4000eb78 <_tx_thread_relinquish>:
4000eb78:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000eb7c:	e59f02b0 	ldr	r0, [pc, #688]	; 4000ee34 <_tx_thread_relinquish+0x2bc>
4000eb80:	e5900000 	ldr	r0, [r0]
4000eb84:	e58d0000 	str	r0, [sp]
4000eb88:	e59d0000 	ldr	r0, [sp]
4000eb8c:	e5900008 	ldr	r0, [r0, #8]
4000eb90:	e59d1000 	ldr	r1, [sp]
4000eb94:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000eb98:	e1500001 	cmp	r0, r1
4000eb9c:	2a000003 	bcs	4000ebb0 <_tx_thread_relinquish+0x38>
4000eba0:	e59d0000 	ldr	r0, [sp]
4000eba4:	e5900008 	ldr	r0, [r0, #8]
4000eba8:	e59d1000 	ldr	r1, [sp]
4000ebac:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ebb0:	e59d0000 	ldr	r0, [sp]
4000ebb4:	e590000c 	ldr	r0, [r0, #12]
4000ebb8:	e5900000 	ldr	r0, [r0]
4000ebbc:	e59f1274 	ldr	r1, [pc, #628]	; 4000ee38 <_tx_thread_relinquish+0x2c0>
4000ebc0:	e1500001 	cmp	r0, r1
4000ebc4:	1a00000a 	bne	4000ebf4 <_tx_thread_relinquish+0x7c>
4000ebc8:	e59d0000 	ldr	r0, [sp]
4000ebcc:	e5900010 	ldr	r0, [r0, #16]
4000ebd0:	e5900001 	ldr	r0, [r0, #1]
4000ebd4:	e1500001 	cmp	r0, r1
4000ebd8:	1a000005 	bne	4000ebf4 <_tx_thread_relinquish+0x7c>
4000ebdc:	e59d0000 	ldr	r0, [sp]
4000ebe0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ebe4:	e59d1000 	ldr	r1, [sp]
4000ebe8:	e591100c 	ldr	r1, [r1, #12]
4000ebec:	e1500001 	cmp	r0, r1
4000ebf0:	2a000001 	bcs	4000ebfc <_tx_thread_relinquish+0x84>
4000ebf4:	e59d0000 	ldr	r0, [sp]
4000ebf8:	eb00016a 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000ebfc:	e59d0000 	ldr	r0, [sp]
4000ec00:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ec04:	e5100004 	ldr	r0, [r0, #-4]
4000ec08:	e59f1228 	ldr	r1, [pc, #552]	; 4000ee38 <_tx_thread_relinquish+0x2c0>
4000ec0c:	e1500001 	cmp	r0, r1
4000ec10:	0a000001 	beq	4000ec1c <_tx_thread_relinquish+0xa4>
4000ec14:	e59d0000 	ldr	r0, [sp]
4000ec18:	eb00012d 	bl	4000f0d4 <_tx_thread_stack_analyze>
4000ec1c:	e10f4000 	mrs	r4, CPSR
4000ec20:	e3845080 	orr	r5, r4, #128	; 0x80
4000ec24:	e121f005 	msr	CPSR_c, r5
4000ec28:	e59f120c 	ldr	r1, [pc, #524]	; 4000ee3c <_tx_thread_relinquish+0x2c4>
4000ec2c:	e5910000 	ldr	r0, [r1]
4000ec30:	e3500000 	cmp	r0, #0
4000ec34:	0a000031 	beq	4000ed00 <_tx_thread_relinquish+0x188>
4000ec38:	e59f1200 	ldr	r1, [pc, #512]	; 4000ee40 <_tx_thread_relinquish+0x2c8>
4000ec3c:	e5911000 	ldr	r1, [r1]
4000ec40:	e2811001 	add	r1, r1, #1
4000ec44:	e59f21f4 	ldr	r2, [pc, #500]	; 4000ee40 <_tx_thread_relinquish+0x2c8>
4000ec48:	e5821000 	str	r1, [r2]
4000ec4c:	e580100c 	str	r1, [r0, #12]
4000ec50:	e59f11ec 	ldr	r1, [pc, #492]	; 4000ee44 <_tx_thread_relinquish+0x2cc>
4000ec54:	e5911000 	ldr	r1, [r1]
4000ec58:	e3510000 	cmp	r1, #0
4000ec5c:	1a000006 	bne	4000ec7c <_tx_thread_relinquish+0x104>
4000ec60:	e59f11cc 	ldr	r1, [pc, #460]	; 4000ee34 <_tx_thread_relinquish+0x2bc>
4000ec64:	e5911000 	ldr	r1, [r1]
4000ec68:	e5801000 	str	r1, [r0]
4000ec6c:	e5901000 	ldr	r1, [r0]
4000ec70:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec74:	e5801004 	str	r1, [r0, #4]
4000ec78:	ea00000d 	b	4000ecb4 <_tx_thread_relinquish+0x13c>
4000ec7c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000ee44 <_tx_thread_relinquish+0x2cc>
4000ec80:	e5911000 	ldr	r1, [r1]
4000ec84:	e59f21bc 	ldr	r2, [pc, #444]	; 4000ee48 <_tx_thread_relinquish+0x2d0>
4000ec88:	e1510002 	cmp	r1, r2
4000ec8c:	2a000004 	bcs	4000eca4 <_tx_thread_relinquish+0x12c>
4000ec90:	e3e01000 	mvn	r1, #0
4000ec94:	e5801000 	str	r1, [r0]
4000ec98:	e3a01000 	mov	r1, #0
4000ec9c:	e5801004 	str	r1, [r0, #4]
4000eca0:	ea000003 	b	4000ecb4 <_tx_thread_relinquish+0x13c>
4000eca4:	e59f119c 	ldr	r1, [pc, #412]	; 4000ee48 <_tx_thread_relinquish+0x2d0>
4000eca8:	e5801000 	str	r1, [r0]
4000ecac:	e3a01000 	mov	r1, #0
4000ecb0:	e5801004 	str	r1, [r0, #4]
4000ecb4:	e3a0106d 	mov	r1, #109	; 0x6d
4000ecb8:	e5801008 	str	r1, [r0, #8]
4000ecbc:	e580d010 	str	sp, [r0, #16]
4000ecc0:	e3a01000 	mov	r1, #0
4000ecc4:	e5801014 	str	r1, [r0, #20]
4000ecc8:	e5801018 	str	r1, [r0, #24]
4000eccc:	e580101c 	str	r1, [r0, #28]
4000ecd0:	e2800020 	add	r0, r0, #32
4000ecd4:	e59f1170 	ldr	r1, [pc, #368]	; 4000ee4c <_tx_thread_relinquish+0x2d4>
4000ecd8:	e5911000 	ldr	r1, [r1]
4000ecdc:	e1500001 	cmp	r0, r1
4000ece0:	3a000001 	bcc	4000ecec <_tx_thread_relinquish+0x174>
4000ece4:	e59f1164 	ldr	r1, [pc, #356]	; 4000ee50 <_tx_thread_relinquish+0x2d8>
4000ece8:	e5910000 	ldr	r0, [r1]
4000ecec:	e59f1148 	ldr	r1, [pc, #328]	; 4000ee3c <_tx_thread_relinquish+0x2c4>
4000ecf0:	e5810000 	str	r0, [r1]
4000ecf4:	e59f1158 	ldr	r1, [pc, #344]	; 4000ee54 <_tx_thread_relinquish+0x2dc>
4000ecf8:	e5911000 	ldr	r1, [r1]
4000ecfc:	e5810020 	str	r0, [r1, #32]
4000ed00:	e59d0000 	ldr	r0, [sp]
4000ed04:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ed08:	e59d0000 	ldr	r0, [sp]
4000ed0c:	e5900020 	ldr	r0, [r0, #32]
4000ed10:	e59d1000 	ldr	r1, [sp]
4000ed14:	e1500001 	cmp	r0, r1
4000ed18:	0a000013 	beq	4000ed6c <_tx_thread_relinquish+0x1f4>
4000ed1c:	e59d0000 	ldr	r0, [sp]
4000ed20:	e5900020 	ldr	r0, [r0, #32]
4000ed24:	e59f112c 	ldr	r1, [pc, #300]	; 4000ee58 <_tx_thread_relinquish+0x2e0>
4000ed28:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ed2c:	e59d0000 	ldr	r0, [sp]
4000ed30:	e5900020 	ldr	r0, [r0, #32]
4000ed34:	e59f1120 	ldr	r1, [pc, #288]	; 4000ee5c <_tx_thread_relinquish+0x2e4>
4000ed38:	e5810000 	str	r0, [r1]
4000ed3c:	e59f011c 	ldr	r0, [pc, #284]	; 4000ee60 <_tx_thread_relinquish+0x2e8>
4000ed40:	e5900000 	ldr	r0, [r0]
4000ed44:	e3500000 	cmp	r0, #0
4000ed48:	0a000007 	beq	4000ed6c <_tx_thread_relinquish+0x1f4>
4000ed4c:	e59f010c 	ldr	r0, [pc, #268]	; 4000ee60 <_tx_thread_relinquish+0x2e8>
4000ed50:	e5900000 	ldr	r0, [r0]
4000ed54:	e59d1000 	ldr	r1, [sp]
4000ed58:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ed5c:	e3a02001 	mov	r2, #1
4000ed60:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ed64:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ee60 <_tx_thread_relinquish+0x2e8>
4000ed68:	e5810000 	str	r0, [r1]
4000ed6c:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ee64 <_tx_thread_relinquish+0x2ec>
4000ed70:	e5900000 	ldr	r0, [r0]
4000ed74:	e1500006 	cmp	r0, r6
4000ed78:	2a000005 	bcs	4000ed94 <_tx_thread_relinquish+0x21c>
4000ed7c:	e59f00d4 	ldr	r0, [pc, #212]	; 4000ee58 <_tx_thread_relinquish+0x2e0>
4000ed80:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ee64 <_tx_thread_relinquish+0x2ec>
4000ed84:	e5911000 	ldr	r1, [r1]
4000ed88:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000ed8c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ee5c <_tx_thread_relinquish+0x2e4>
4000ed90:	e5810000 	str	r0, [r1]
4000ed94:	e121f004 	msr	CPSR_c, r4
4000ed98:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ee5c <_tx_thread_relinquish+0x2e4>
4000ed9c:	e5900000 	ldr	r0, [r0]
4000eda0:	e59d1000 	ldr	r1, [sp]
4000eda4:	e1500001 	cmp	r0, r1
4000eda8:	0a000020 	beq	4000ee30 <_tx_thread_relinquish+0x2b8>
4000edac:	e59f00a8 	ldr	r0, [pc, #168]	; 4000ee5c <_tx_thread_relinquish+0x2e4>
4000edb0:	e5900000 	ldr	r0, [r0]
4000edb4:	e58d0000 	str	r0, [sp]
4000edb8:	e59d0000 	ldr	r0, [sp]
4000edbc:	e5900008 	ldr	r0, [r0, #8]
4000edc0:	e59d1000 	ldr	r1, [sp]
4000edc4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000edc8:	e1500001 	cmp	r0, r1
4000edcc:	2a000003 	bcs	4000ede0 <_tx_thread_relinquish+0x268>
4000edd0:	e59d0000 	ldr	r0, [sp]
4000edd4:	e5900008 	ldr	r0, [r0, #8]
4000edd8:	e59d1000 	ldr	r1, [sp]
4000eddc:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ede0:	e59d0000 	ldr	r0, [sp]
4000ede4:	e590000c 	ldr	r0, [r0, #12]
4000ede8:	e5900000 	ldr	r0, [r0]
4000edec:	e59f1044 	ldr	r1, [pc, #68]	; 4000ee38 <_tx_thread_relinquish+0x2c0>
4000edf0:	e1500001 	cmp	r0, r1
4000edf4:	1a00000a 	bne	4000ee24 <_tx_thread_relinquish+0x2ac>
4000edf8:	e59d0000 	ldr	r0, [sp]
4000edfc:	e5900010 	ldr	r0, [r0, #16]
4000ee00:	e5900001 	ldr	r0, [r0, #1]
4000ee04:	e1500001 	cmp	r0, r1
4000ee08:	1a000005 	bne	4000ee24 <_tx_thread_relinquish+0x2ac>
4000ee0c:	e59d0000 	ldr	r0, [sp]
4000ee10:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee14:	e59d1000 	ldr	r1, [sp]
4000ee18:	e591100c 	ldr	r1, [r1, #12]
4000ee1c:	e1500001 	cmp	r0, r1
4000ee20:	2a000001 	bcs	4000ee2c <_tx_thread_relinquish+0x2b4>
4000ee24:	e59d0000 	ldr	r0, [sp]
4000ee28:	eb0000de 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000ee2c:	ebffef86 	bl	4000ac4c <_tx_thread_system_return>
4000ee30:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ee34:	400312c0 	.word	0x400312c0
4000ee38:	efefefef 	.word	0xefefefef
4000ee3c:	4003132c 	.word	0x4003132c
4000ee40:	40031330 	.word	0x40031330
4000ee44:	400312b8 	.word	0x400312b8
4000ee48:	f0f0f0f0 	.word	0xf0f0f0f0
4000ee4c:	40031328 	.word	0x40031328
4000ee50:	40031324 	.word	0x40031324
4000ee54:	40031318 	.word	0x40031318
4000ee58:	40032cf4 	.word	0x40032cf4
4000ee5c:	400312c4 	.word	0x400312c4
4000ee60:	400312d4 	.word	0x400312d4
4000ee64:	400312d8 	.word	0x400312d8

4000ee68 <_tx_thread_resume>:
4000ee68:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000ee6c:	e1a04000 	mov	r4, r0
4000ee70:	e3a00000 	mov	r0, #0
4000ee74:	e58d0000 	str	r0, [sp]
4000ee78:	e10f5000 	mrs	r5, CPSR
4000ee7c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ee80:	e121f006 	msr	CPSR_c, r6
4000ee84:	e59f1184 	ldr	r1, [pc, #388]	; 4000f010 <_tx_thread_resume+0x1a8>
4000ee88:	e5910000 	ldr	r0, [r1]
4000ee8c:	e3500000 	cmp	r0, #0
4000ee90:	0a000032 	beq	4000ef60 <_tx_thread_resume+0xf8>
4000ee94:	e59f1178 	ldr	r1, [pc, #376]	; 4000f014 <_tx_thread_resume+0x1ac>
4000ee98:	e5911000 	ldr	r1, [r1]
4000ee9c:	e2811001 	add	r1, r1, #1
4000eea0:	e59f216c 	ldr	r2, [pc, #364]	; 4000f014 <_tx_thread_resume+0x1ac>
4000eea4:	e5821000 	str	r1, [r2]
4000eea8:	e580100c 	str	r1, [r0, #12]
4000eeac:	e59f1164 	ldr	r1, [pc, #356]	; 4000f018 <_tx_thread_resume+0x1b0>
4000eeb0:	e5911000 	ldr	r1, [r1]
4000eeb4:	e3510000 	cmp	r1, #0
4000eeb8:	1a000006 	bne	4000eed8 <_tx_thread_resume+0x70>
4000eebc:	e59f1158 	ldr	r1, [pc, #344]	; 4000f01c <_tx_thread_resume+0x1b4>
4000eec0:	e5911000 	ldr	r1, [r1]
4000eec4:	e5801000 	str	r1, [r0]
4000eec8:	e5901000 	ldr	r1, [r0]
4000eecc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eed0:	e5801004 	str	r1, [r0, #4]
4000eed4:	ea00000d 	b	4000ef10 <_tx_thread_resume+0xa8>
4000eed8:	e59f1138 	ldr	r1, [pc, #312]	; 4000f018 <_tx_thread_resume+0x1b0>
4000eedc:	e5911000 	ldr	r1, [r1]
4000eee0:	e59f2138 	ldr	r2, [pc, #312]	; 4000f020 <_tx_thread_resume+0x1b8>
4000eee4:	e1510002 	cmp	r1, r2
4000eee8:	2a000004 	bcs	4000ef00 <_tx_thread_resume+0x98>
4000eeec:	e3e01000 	mvn	r1, #0
4000eef0:	e5801000 	str	r1, [r0]
4000eef4:	e3a01000 	mov	r1, #0
4000eef8:	e5801004 	str	r1, [r0, #4]
4000eefc:	ea000003 	b	4000ef10 <_tx_thread_resume+0xa8>
4000ef00:	e59f1118 	ldr	r1, [pc, #280]	; 4000f020 <_tx_thread_resume+0x1b8>
4000ef04:	e5801000 	str	r1, [r0]
4000ef08:	e3a01000 	mov	r1, #0
4000ef0c:	e5801004 	str	r1, [r0, #4]
4000ef10:	e3a0106f 	mov	r1, #111	; 0x6f
4000ef14:	e5801008 	str	r1, [r0, #8]
4000ef18:	e5804010 	str	r4, [r0, #16]
4000ef1c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ef20:	e5801014 	str	r1, [r0, #20]
4000ef24:	e580d018 	str	sp, [r0, #24]
4000ef28:	e3a01000 	mov	r1, #0
4000ef2c:	e580101c 	str	r1, [r0, #28]
4000ef30:	e2800020 	add	r0, r0, #32
4000ef34:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f024 <_tx_thread_resume+0x1bc>
4000ef38:	e5911000 	ldr	r1, [r1]
4000ef3c:	e1500001 	cmp	r0, r1
4000ef40:	3a000001 	bcc	4000ef4c <_tx_thread_resume+0xe4>
4000ef44:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f028 <_tx_thread_resume+0x1c0>
4000ef48:	e5910000 	ldr	r0, [r1]
4000ef4c:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f010 <_tx_thread_resume+0x1a8>
4000ef50:	e5810000 	str	r0, [r1]
4000ef54:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f02c <_tx_thread_resume+0x1c4>
4000ef58:	e5911000 	ldr	r1, [r1]
4000ef5c:	e5810020 	str	r0, [r1, #32]
4000ef60:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ef64:	e3500003 	cmp	r0, #3
4000ef68:	1a00001c 	bne	4000efe0 <_tx_thread_resume+0x178>
4000ef6c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f030 <_tx_thread_resume+0x1c8>
4000ef70:	e5900000 	ldr	r0, [r0]
4000ef74:	e2800001 	add	r0, r0, #1
4000ef78:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f030 <_tx_thread_resume+0x1c8>
4000ef7c:	e5810000 	str	r0, [r1]
4000ef80:	e121f005 	msr	CPSR_c, r5
4000ef84:	e59f008c 	ldr	r0, [pc, #140]	; 4000f018 <_tx_thread_resume+0x1b0>
4000ef88:	e5900000 	ldr	r0, [r0]
4000ef8c:	e59f108c 	ldr	r1, [pc, #140]	; 4000f020 <_tx_thread_resume+0x1b8>
4000ef90:	e1500001 	cmp	r0, r1
4000ef94:	3a000008 	bcc	4000efbc <_tx_thread_resume+0x154>
4000ef98:	e59f0094 	ldr	r0, [pc, #148]	; 4000f034 <_tx_thread_resume+0x1cc>
4000ef9c:	e5907000 	ldr	r7, [r0]
4000efa0:	e3570000 	cmp	r7, #0
4000efa4:	0a000005 	beq	4000efc0 <_tx_thread_resume+0x158>
4000efa8:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000efac:	e58d0000 	str	r0, [sp]
4000efb0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000efb4:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000efb8:	ea000000 	b	4000efc0 <_tx_thread_resume+0x158>
4000efbc:	e3a07000 	mov	r7, #0
4000efc0:	e1a00004 	mov	r0, r4
4000efc4:	eb0000b6 	bl	4000f2a4 <_tx_thread_system_resume>
4000efc8:	e3570000 	cmp	r7, #0
4000efcc:	0a000001 	beq	4000efd8 <_tx_thread_resume+0x170>
4000efd0:	e59d0000 	ldr	r0, [sp]
4000efd4:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000efd8:	e3a08000 	mov	r8, #0
4000efdc:	ea000009 	b	4000f008 <_tx_thread_resume+0x1a0>
4000efe0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000efe4:	e3500000 	cmp	r0, #0
4000efe8:	0a000004 	beq	4000f000 <_tx_thread_resume+0x198>
4000efec:	e3a00000 	mov	r0, #0
4000eff0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000eff4:	e121f005 	msr	CPSR_c, r5
4000eff8:	e3a08019 	mov	r8, #25
4000effc:	ea000001 	b	4000f008 <_tx_thread_resume+0x1a0>
4000f000:	e121f005 	msr	CPSR_c, r5
4000f004:	e3a08012 	mov	r8, #18
4000f008:	e1a00008 	mov	r0, r8
4000f00c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f010:	4003132c 	.word	0x4003132c
4000f014:	40031330 	.word	0x40031330
4000f018:	400312b8 	.word	0x400312b8
4000f01c:	400312c0 	.word	0x400312c0
4000f020:	f0f0f0f0 	.word	0xf0f0f0f0
4000f024:	40031328 	.word	0x40031328
4000f028:	40031324 	.word	0x40031324
4000f02c:	40031318 	.word	0x40031318
4000f030:	400312dc 	.word	0x400312dc
4000f034:	400312c4 	.word	0x400312c4

4000f038 <_tx_thread_shell_entry>:
4000f038:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f03c:	e59f0088 	ldr	r0, [pc, #136]	; 4000f0cc <_tx_thread_shell_entry+0x94>
4000f040:	e5907000 	ldr	r7, [r0]
4000f044:	e10f4000 	mrs	r4, CPSR
4000f048:	e3845080 	orr	r5, r4, #128	; 0x80
4000f04c:	e121f005 	msr	CPSR_c, r5
4000f050:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f054:	e121f004 	msr	CPSR_c, r4
4000f058:	e3560000 	cmp	r6, #0
4000f05c:	0a000002 	beq	4000f06c <_tx_thread_shell_entry+0x34>
4000f060:	e3a01000 	mov	r1, #0
4000f064:	e1a00007 	mov	r0, r7
4000f068:	e12fff36 	blx	r6
4000f06c:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f070:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f074:	e12fff31 	blx	r1
4000f078:	e10f4000 	mrs	r4, CPSR
4000f07c:	e3845080 	orr	r5, r4, #128	; 0x80
4000f080:	e121f005 	msr	CPSR_c, r5
4000f084:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f088:	e3a00001 	mov	r0, #1
4000f08c:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f090:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f094:	e59f0034 	ldr	r0, [pc, #52]	; 4000f0d0 <_tx_thread_shell_entry+0x98>
4000f098:	e5900000 	ldr	r0, [r0]
4000f09c:	e2800001 	add	r0, r0, #1
4000f0a0:	e59f1028 	ldr	r1, [pc, #40]	; 4000f0d0 <_tx_thread_shell_entry+0x98>
4000f0a4:	e5810000 	str	r0, [r1]
4000f0a8:	e121f004 	msr	CPSR_c, r4
4000f0ac:	e3560000 	cmp	r6, #0
4000f0b0:	0a000002 	beq	4000f0c0 <_tx_thread_shell_entry+0x88>
4000f0b4:	e3a01001 	mov	r1, #1
4000f0b8:	e1a00007 	mov	r0, r7
4000f0bc:	e12fff36 	blx	r6
4000f0c0:	e1a00007 	mov	r0, r7
4000f0c4:	ebffe6cf 	bl	40008c08 <_tx_thread_system_suspend>
4000f0c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f0cc:	400312c0 	.word	0x400312c0
4000f0d0:	400312dc 	.word	0x400312dc

4000f0d4 <_tx_thread_stack_analyze>:
4000f0d4:	e92d4070 	push	{r4, r5, r6, lr}
4000f0d8:	e10f1000 	mrs	r1, CPSR
4000f0dc:	e3812080 	orr	r2, r1, #128	; 0x80
4000f0e0:	e121f002 	msr	CPSR_c, r2
4000f0e4:	e3500000 	cmp	r0, #0
4000f0e8:	0a000003 	beq	4000f0fc <_tx_thread_stack_analyze+0x28>
4000f0ec:	e5905000 	ldr	r5, [r0]
4000f0f0:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f1a0 <_tx_thread_stack_analyze+0xcc>
4000f0f4:	e1550006 	cmp	r5, r6
4000f0f8:	0a000001 	beq	4000f104 <_tx_thread_stack_analyze+0x30>
4000f0fc:	e121f001 	msr	CPSR_c, r1
4000f100:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f104:	e590c008 	ldr	ip, [r0, #8]
4000f108:	e590300c 	ldr	r3, [r0, #12]
4000f10c:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f110:	e121f001 	msr	CPSR_c, r1
4000f114:	e24ec004 	sub	ip, lr, #4
4000f118:	e04e6003 	sub	r6, lr, r3
4000f11c:	e1a05146 	asr	r5, r6, #2
4000f120:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f124:	e1a040c6 	asr	r4, r6, #1
4000f128:	e083c104 	add	ip, r3, r4, lsl #2
4000f12c:	e1a00000 	nop			; (mov r0, r0)
4000f130:	e59c5000 	ldr	r5, [ip]
4000f134:	e59f6068 	ldr	r6, [pc, #104]	; 4000f1a4 <_tx_thread_stack_analyze+0xd0>
4000f138:	e1550006 	cmp	r5, r6
4000f13c:	0a000002 	beq	4000f14c <_tx_thread_stack_analyze+0x78>
4000f140:	e1a050a4 	lsr	r5, r4, #1
4000f144:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f148:	ea000001 	b	4000f154 <_tx_thread_stack_analyze+0x80>
4000f14c:	e1a050a4 	lsr	r5, r4, #1
4000f150:	e08cc105 	add	ip, ip, r5, lsl #2
4000f154:	e1a040a4 	lsr	r4, r4, #1
4000f158:	e3540001 	cmp	r4, #1
4000f15c:	8afffff3 	bhi	4000f130 <_tx_thread_stack_analyze+0x5c>
4000f160:	ea000000 	b	4000f168 <_tx_thread_stack_analyze+0x94>
4000f164:	e28cc004 	add	ip, ip, #4
4000f168:	e59c5000 	ldr	r5, [ip]
4000f16c:	e59f6030 	ldr	r6, [pc, #48]	; 4000f1a4 <_tx_thread_stack_analyze+0xd0>
4000f170:	e1550006 	cmp	r5, r6
4000f174:	0afffffa 	beq	4000f164 <_tx_thread_stack_analyze+0x90>
4000f178:	e10f1000 	mrs	r1, CPSR
4000f17c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f180:	e121f002 	msr	CPSR_c, r2
4000f184:	e5905000 	ldr	r5, [r0]
4000f188:	e59f6010 	ldr	r6, [pc, #16]	; 4000f1a0 <_tx_thread_stack_analyze+0xcc>
4000f18c:	e1550006 	cmp	r5, r6
4000f190:	1a000000 	bne	4000f198 <_tx_thread_stack_analyze+0xc4>
4000f194:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f198:	e121f001 	msr	CPSR_c, r1
4000f19c:	eaffffd7 	b	4000f100 <_tx_thread_stack_analyze+0x2c>
4000f1a0:	54485244 	.word	0x54485244
4000f1a4:	efefefef 	.word	0xefefefef

4000f1a8 <_tx_thread_stack_error_handler>:
4000f1a8:	e92d4070 	push	{r4, r5, r6, lr}
4000f1ac:	e1a04000 	mov	r4, r0
4000f1b0:	e10f5000 	mrs	r5, CPSR
4000f1b4:	e3856080 	orr	r6, r5, #128	; 0x80
4000f1b8:	e121f006 	msr	CPSR_c, r6
4000f1bc:	e59f002c 	ldr	r0, [pc, #44]	; 4000f1f0 <_tx_thread_stack_error_handler+0x48>
4000f1c0:	e5900000 	ldr	r0, [r0]
4000f1c4:	e3500000 	cmp	r0, #0
4000f1c8:	0a000004 	beq	4000f1e0 <_tx_thread_stack_error_handler+0x38>
4000f1cc:	e1a00004 	mov	r0, r4
4000f1d0:	e59f1018 	ldr	r1, [pc, #24]	; 4000f1f0 <_tx_thread_stack_error_handler+0x48>
4000f1d4:	e5911000 	ldr	r1, [r1]
4000f1d8:	e12fff31 	blx	r1
4000f1dc:	ea000001 	b	4000f1e8 <_tx_thread_stack_error_handler+0x40>
4000f1e0:	e1a00000 	nop			; (mov r0, r0)
4000f1e4:	eafffffe 	b	4000f1e4 <_tx_thread_stack_error_handler+0x3c>
4000f1e8:	e121f005 	msr	CPSR_c, r5
4000f1ec:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f1f0:	400312e4 	.word	0x400312e4

4000f1f4 <_tx_thread_system_preempt_check>:
4000f1f4:	e92d4010 	push	{r4, lr}
4000f1f8:	e59f0090 	ldr	r0, [pc, #144]	; 4000f290 <_tx_thread_system_preempt_check+0x9c>
4000f1fc:	e5900000 	ldr	r0, [r0]
4000f200:	e59f108c 	ldr	r1, [pc, #140]	; 4000f294 <_tx_thread_system_preempt_check+0xa0>
4000f204:	e5911000 	ldr	r1, [r1]
4000f208:	e1500001 	cmp	r0, r1
4000f20c:	0a00001e 	beq	4000f28c <_tx_thread_system_preempt_check+0x98>
4000f210:	e59f0080 	ldr	r0, [pc, #128]	; 4000f298 <_tx_thread_system_preempt_check+0xa4>
4000f214:	e5900000 	ldr	r0, [r0]
4000f218:	e59f107c 	ldr	r1, [pc, #124]	; 4000f29c <_tx_thread_system_preempt_check+0xa8>
4000f21c:	e5911000 	ldr	r1, [r1]
4000f220:	e1900001 	orrs	r0, r0, r1
4000f224:	1a000018 	bne	4000f28c <_tx_thread_system_preempt_check+0x98>
4000f228:	e59f0064 	ldr	r0, [pc, #100]	; 4000f294 <_tx_thread_system_preempt_check+0xa0>
4000f22c:	e5904000 	ldr	r4, [r0]
4000f230:	e5940008 	ldr	r0, [r4, #8]
4000f234:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f238:	e1500001 	cmp	r0, r1
4000f23c:	2a000001 	bcs	4000f248 <_tx_thread_system_preempt_check+0x54>
4000f240:	e5940008 	ldr	r0, [r4, #8]
4000f244:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f248:	e594000c 	ldr	r0, [r4, #12]
4000f24c:	e5900000 	ldr	r0, [r0]
4000f250:	e59f1048 	ldr	r1, [pc, #72]	; 4000f2a0 <_tx_thread_system_preempt_check+0xac>
4000f254:	e1500001 	cmp	r0, r1
4000f258:	1a000007 	bne	4000f27c <_tx_thread_system_preempt_check+0x88>
4000f25c:	e5940010 	ldr	r0, [r4, #16]
4000f260:	e5900001 	ldr	r0, [r0, #1]
4000f264:	e1500001 	cmp	r0, r1
4000f268:	1a000003 	bne	4000f27c <_tx_thread_system_preempt_check+0x88>
4000f26c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f270:	e594100c 	ldr	r1, [r4, #12]
4000f274:	e1500001 	cmp	r0, r1
4000f278:	2a000001 	bcs	4000f284 <_tx_thread_system_preempt_check+0x90>
4000f27c:	e1a00004 	mov	r0, r4
4000f280:	ebffffc8 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000f284:	ebffee70 	bl	4000ac4c <_tx_thread_system_return>
4000f288:	e1a00000 	nop			; (mov r0, r0)
4000f28c:	e8bd8010 	pop	{r4, pc}
4000f290:	400312c0 	.word	0x400312c0
4000f294:	400312c4 	.word	0x400312c4
4000f298:	400312b8 	.word	0x400312b8
4000f29c:	400312dc 	.word	0x400312dc
4000f2a0:	efefefef 	.word	0xefefefef

4000f2a4 <_tx_thread_system_resume>:
4000f2a4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f2a8:	e1a04000 	mov	r4, r0
4000f2ac:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f2b0:	e3500000 	cmp	r0, #0
4000f2b4:	0a000002 	beq	4000f2c4 <_tx_thread_system_resume+0x20>
4000f2b8:	e284004c 	add	r0, r4, #76	; 0x4c
4000f2bc:	eb000325 	bl	4000ff58 <_tx_timer_system_deactivate>
4000f2c0:	ea000001 	b	4000f2cc <_tx_thread_system_resume+0x28>
4000f2c4:	e3a00000 	mov	r0, #0
4000f2c8:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f2cc:	e5940008 	ldr	r0, [r4, #8]
4000f2d0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f2d4:	e1500001 	cmp	r0, r1
4000f2d8:	2a000001 	bcs	4000f2e4 <_tx_thread_system_resume+0x40>
4000f2dc:	e5940008 	ldr	r0, [r4, #8]
4000f2e0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f2e4:	e594000c 	ldr	r0, [r4, #12]
4000f2e8:	e5900000 	ldr	r0, [r0]
4000f2ec:	e59f133c 	ldr	r1, [pc, #828]	; 4000f630 <_tx_thread_system_resume+0x38c>
4000f2f0:	e1500001 	cmp	r0, r1
4000f2f4:	1a000007 	bne	4000f318 <_tx_thread_system_resume+0x74>
4000f2f8:	e5940010 	ldr	r0, [r4, #16]
4000f2fc:	e5900001 	ldr	r0, [r0, #1]
4000f300:	e1500001 	cmp	r0, r1
4000f304:	1a000003 	bne	4000f318 <_tx_thread_system_resume+0x74>
4000f308:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f30c:	e594100c 	ldr	r1, [r4, #12]
4000f310:	e1500001 	cmp	r0, r1
4000f314:	2a000001 	bcs	4000f320 <_tx_thread_system_resume+0x7c>
4000f318:	e1a00004 	mov	r0, r4
4000f31c:	ebffffa1 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000f320:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f324:	e5100004 	ldr	r0, [r0, #-4]
4000f328:	e59f1300 	ldr	r1, [pc, #768]	; 4000f630 <_tx_thread_system_resume+0x38c>
4000f32c:	e1500001 	cmp	r0, r1
4000f330:	0a000001 	beq	4000f33c <_tx_thread_system_resume+0x98>
4000f334:	e1a00004 	mov	r0, r4
4000f338:	ebffff65 	bl	4000f0d4 <_tx_thread_stack_analyze>
4000f33c:	e10f5000 	mrs	r5, CPSR
4000f340:	e3856080 	orr	r6, r5, #128	; 0x80
4000f344:	e121f006 	msr	CPSR_c, r6
4000f348:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f634 <_tx_thread_system_resume+0x390>
4000f34c:	e5900000 	ldr	r0, [r0]
4000f350:	e2400001 	sub	r0, r0, #1
4000f354:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f634 <_tx_thread_system_resume+0x390>
4000f358:	e5810000 	str	r0, [r1]
4000f35c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f360:	e3500000 	cmp	r0, #0
4000f364:	0a000009 	beq	4000f390 <_tx_thread_system_resume+0xec>
4000f368:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f36c:	e3500001 	cmp	r0, #1
4000f370:	0a000084 	beq	4000f588 <_tx_thread_system_resume+0x2e4>
4000f374:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f378:	e3500002 	cmp	r0, #2
4000f37c:	0a000081 	beq	4000f588 <_tx_thread_system_resume+0x2e4>
4000f380:	e3a00000 	mov	r0, #0
4000f384:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f388:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f38c:	ea00007d 	b	4000f588 <_tx_thread_system_resume+0x2e4>
4000f390:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f394:	e3500000 	cmp	r0, #0
4000f398:	0a00007a 	beq	4000f588 <_tx_thread_system_resume+0x2e4>
4000f39c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f3a0:	e3500000 	cmp	r0, #0
4000f3a4:	0a000004 	beq	4000f3bc <_tx_thread_system_resume+0x118>
4000f3a8:	e3a00000 	mov	r0, #0
4000f3ac:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f3b0:	e3a00003 	mov	r0, #3
4000f3b4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f3b8:	ea000072 	b	4000f588 <_tx_thread_system_resume+0x2e4>
4000f3bc:	e59f1274 	ldr	r1, [pc, #628]	; 4000f638 <_tx_thread_system_resume+0x394>
4000f3c0:	e5910000 	ldr	r0, [r1]
4000f3c4:	e3500000 	cmp	r0, #0
4000f3c8:	0a000032 	beq	4000f498 <_tx_thread_system_resume+0x1f4>
4000f3cc:	e59f1268 	ldr	r1, [pc, #616]	; 4000f63c <_tx_thread_system_resume+0x398>
4000f3d0:	e5911000 	ldr	r1, [r1]
4000f3d4:	e2811001 	add	r1, r1, #1
4000f3d8:	e59f225c 	ldr	r2, [pc, #604]	; 4000f63c <_tx_thread_system_resume+0x398>
4000f3dc:	e5821000 	str	r1, [r2]
4000f3e0:	e580100c 	str	r1, [r0, #12]
4000f3e4:	e59f1254 	ldr	r1, [pc, #596]	; 4000f640 <_tx_thread_system_resume+0x39c>
4000f3e8:	e5911000 	ldr	r1, [r1]
4000f3ec:	e3510000 	cmp	r1, #0
4000f3f0:	1a000006 	bne	4000f410 <_tx_thread_system_resume+0x16c>
4000f3f4:	e59f1248 	ldr	r1, [pc, #584]	; 4000f644 <_tx_thread_system_resume+0x3a0>
4000f3f8:	e5911000 	ldr	r1, [r1]
4000f3fc:	e5801000 	str	r1, [r0]
4000f400:	e5901000 	ldr	r1, [r0]
4000f404:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f408:	e5801004 	str	r1, [r0, #4]
4000f40c:	ea00000d 	b	4000f448 <_tx_thread_system_resume+0x1a4>
4000f410:	e59f1228 	ldr	r1, [pc, #552]	; 4000f640 <_tx_thread_system_resume+0x39c>
4000f414:	e5911000 	ldr	r1, [r1]
4000f418:	e59f2228 	ldr	r2, [pc, #552]	; 4000f648 <_tx_thread_system_resume+0x3a4>
4000f41c:	e1510002 	cmp	r1, r2
4000f420:	2a000004 	bcs	4000f438 <_tx_thread_system_resume+0x194>
4000f424:	e3e01000 	mvn	r1, #0
4000f428:	e5801000 	str	r1, [r0]
4000f42c:	e3a01000 	mov	r1, #0
4000f430:	e5801004 	str	r1, [r0, #4]
4000f434:	ea000003 	b	4000f448 <_tx_thread_system_resume+0x1a4>
4000f438:	e59f1208 	ldr	r1, [pc, #520]	; 4000f648 <_tx_thread_system_resume+0x3a4>
4000f43c:	e5801000 	str	r1, [r0]
4000f440:	e3a01000 	mov	r1, #0
4000f444:	e5801004 	str	r1, [r0, #4]
4000f448:	e3a01001 	mov	r1, #1
4000f44c:	e5801008 	str	r1, [r0, #8]
4000f450:	e5804010 	str	r4, [r0, #16]
4000f454:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f458:	e5801014 	str	r1, [r0, #20]
4000f45c:	e580d018 	str	sp, [r0, #24]
4000f460:	e3a01000 	mov	r1, #0
4000f464:	e580101c 	str	r1, [r0, #28]
4000f468:	e2800020 	add	r0, r0, #32
4000f46c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f64c <_tx_thread_system_resume+0x3a8>
4000f470:	e5911000 	ldr	r1, [r1]
4000f474:	e1500001 	cmp	r0, r1
4000f478:	3a000001 	bcc	4000f484 <_tx_thread_system_resume+0x1e0>
4000f47c:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f650 <_tx_thread_system_resume+0x3ac>
4000f480:	e5910000 	ldr	r0, [r1]
4000f484:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f638 <_tx_thread_system_resume+0x394>
4000f488:	e5810000 	str	r0, [r1]
4000f48c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f654 <_tx_thread_system_resume+0x3b0>
4000f490:	e5911000 	ldr	r1, [r1]
4000f494:	e5810020 	str	r0, [r1, #32]
4000f498:	e3a00000 	mov	r0, #0
4000f49c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f4a0:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f4a4:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f658 <_tx_thread_system_resume+0x3b4>
4000f4a8:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f4ac:	e3580000 	cmp	r8, #0
4000f4b0:	0a000005 	beq	4000f4cc <_tx_thread_system_resume+0x228>
4000f4b4:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f4b8:	e5894020 	str	r4, [r9, #32]
4000f4bc:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f4c0:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f4c4:	e5848020 	str	r8, [r4, #32]
4000f4c8:	ea00002e 	b	4000f588 <_tx_thread_system_resume+0x2e4>
4000f4cc:	e59f0184 	ldr	r0, [pc, #388]	; 4000f658 <_tx_thread_system_resume+0x3b4>
4000f4d0:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f4d4:	e5844020 	str	r4, [r4, #32]
4000f4d8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f4dc:	e59f0178 	ldr	r0, [pc, #376]	; 4000f65c <_tx_thread_system_resume+0x3b8>
4000f4e0:	e5900000 	ldr	r0, [r0]
4000f4e4:	e3a01001 	mov	r1, #1
4000f4e8:	e1800711 	orr	r0, r0, r1, lsl r7
4000f4ec:	e59f1168 	ldr	r1, [pc, #360]	; 4000f65c <_tx_thread_system_resume+0x3b8>
4000f4f0:	e5810000 	str	r0, [r1]
4000f4f4:	e59f0164 	ldr	r0, [pc, #356]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f4f8:	e5900000 	ldr	r0, [r0]
4000f4fc:	e58d0000 	str	r0, [sp]
4000f500:	e59d0000 	ldr	r0, [sp]
4000f504:	e3500000 	cmp	r0, #0
4000f508:	1a000004 	bne	4000f520 <_tx_thread_system_resume+0x27c>
4000f50c:	e59f014c 	ldr	r0, [pc, #332]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f510:	e5804000 	str	r4, [r0]
4000f514:	e59f0148 	ldr	r0, [pc, #328]	; 4000f664 <_tx_thread_system_resume+0x3c0>
4000f518:	e5807000 	str	r7, [r0]
4000f51c:	ea000019 	b	4000f588 <_tx_thread_system_resume+0x2e4>
4000f520:	e59f013c 	ldr	r0, [pc, #316]	; 4000f664 <_tx_thread_system_resume+0x3c0>
4000f524:	e5900000 	ldr	r0, [r0]
4000f528:	e1570000 	cmp	r7, r0
4000f52c:	2a000015 	bcs	4000f588 <_tx_thread_system_resume+0x2e4>
4000f530:	e59f012c 	ldr	r0, [pc, #300]	; 4000f664 <_tx_thread_system_resume+0x3c0>
4000f534:	e5807000 	str	r7, [r0]
4000f538:	e59d0000 	ldr	r0, [sp]
4000f53c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f540:	e1500007 	cmp	r0, r7
4000f544:	9a00000f 	bls	4000f588 <_tx_thread_system_resume+0x2e4>
4000f548:	e59d0000 	ldr	r0, [sp]
4000f54c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f550:	e59d1000 	ldr	r1, [sp]
4000f554:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f558:	e1500001 	cmp	r0, r1
4000f55c:	0a000007 	beq	4000f580 <_tx_thread_system_resume+0x2dc>
4000f560:	e59f0100 	ldr	r0, [pc, #256]	; 4000f668 <_tx_thread_system_resume+0x3c4>
4000f564:	e5900000 	ldr	r0, [r0]
4000f568:	e59d1000 	ldr	r1, [sp]
4000f56c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f570:	e3a02001 	mov	r2, #1
4000f574:	e1800112 	orr	r0, r0, r2, lsl r1
4000f578:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f668 <_tx_thread_system_resume+0x3c4>
4000f57c:	e5810000 	str	r0, [r1]
4000f580:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f584:	e5804000 	str	r4, [r0]
4000f588:	e121f005 	msr	CPSR_c, r5
4000f58c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f644 <_tx_thread_system_resume+0x3a0>
4000f590:	e5900000 	ldr	r0, [r0]
4000f594:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f598:	e5911000 	ldr	r1, [r1]
4000f59c:	e1500001 	cmp	r0, r1
4000f5a0:	0a000021 	beq	4000f62c <_tx_thread_system_resume+0x388>
4000f5a4:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f5a8:	e5900000 	ldr	r0, [r0]
4000f5ac:	e1540000 	cmp	r4, r0
4000f5b0:	0a000016 	beq	4000f610 <_tx_thread_system_resume+0x36c>
4000f5b4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f660 <_tx_thread_system_resume+0x3bc>
4000f5b8:	e5904000 	ldr	r4, [r0]
4000f5bc:	e5940008 	ldr	r0, [r4, #8]
4000f5c0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f5c4:	e1500001 	cmp	r0, r1
4000f5c8:	2a000001 	bcs	4000f5d4 <_tx_thread_system_resume+0x330>
4000f5cc:	e5940008 	ldr	r0, [r4, #8]
4000f5d0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f5d4:	e594000c 	ldr	r0, [r4, #12]
4000f5d8:	e5900000 	ldr	r0, [r0]
4000f5dc:	e59f104c 	ldr	r1, [pc, #76]	; 4000f630 <_tx_thread_system_resume+0x38c>
4000f5e0:	e1500001 	cmp	r0, r1
4000f5e4:	1a000007 	bne	4000f608 <_tx_thread_system_resume+0x364>
4000f5e8:	e5940010 	ldr	r0, [r4, #16]
4000f5ec:	e5900001 	ldr	r0, [r0, #1]
4000f5f0:	e1500001 	cmp	r0, r1
4000f5f4:	1a000003 	bne	4000f608 <_tx_thread_system_resume+0x364>
4000f5f8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f5fc:	e594100c 	ldr	r1, [r4, #12]
4000f600:	e1500001 	cmp	r0, r1
4000f604:	2a000001 	bcs	4000f610 <_tx_thread_system_resume+0x36c>
4000f608:	e1a00004 	mov	r0, r4
4000f60c:	ebfffee5 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000f610:	e59f0028 	ldr	r0, [pc, #40]	; 4000f640 <_tx_thread_system_resume+0x39c>
4000f614:	e5900000 	ldr	r0, [r0]
4000f618:	e59f1014 	ldr	r1, [pc, #20]	; 4000f634 <_tx_thread_system_resume+0x390>
4000f61c:	e5911000 	ldr	r1, [r1]
4000f620:	e1900001 	orrs	r0, r0, r1
4000f624:	1a000000 	bne	4000f62c <_tx_thread_system_resume+0x388>
4000f628:	ebffed87 	bl	4000ac4c <_tx_thread_system_return>
4000f62c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f630:	efefefef 	.word	0xefefefef
4000f634:	400312dc 	.word	0x400312dc
4000f638:	4003132c 	.word	0x4003132c
4000f63c:	40031330 	.word	0x40031330
4000f640:	400312b8 	.word	0x400312b8
4000f644:	400312c0 	.word	0x400312c0
4000f648:	f0f0f0f0 	.word	0xf0f0f0f0
4000f64c:	40031328 	.word	0x40031328
4000f650:	40031324 	.word	0x40031324
4000f654:	40031318 	.word	0x40031318
4000f658:	40032cf4 	.word	0x40032cf4
4000f65c:	400312d0 	.word	0x400312d0
4000f660:	400312c4 	.word	0x400312c4
4000f664:	400312d8 	.word	0x400312d8
4000f668:	400312d4 	.word	0x400312d4

4000f66c <_tx_thread_time_slice>:
4000f66c:	e92d4070 	push	{r4, r5, r6, lr}
4000f670:	e59f0140 	ldr	r0, [pc, #320]	; 4000f7b8 <_tx_thread_time_slice+0x14c>
4000f674:	e5906000 	ldr	r6, [r0]
4000f678:	e5960008 	ldr	r0, [r6, #8]
4000f67c:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f680:	e1500001 	cmp	r0, r1
4000f684:	2a000001 	bcs	4000f690 <_tx_thread_time_slice+0x24>
4000f688:	e5960008 	ldr	r0, [r6, #8]
4000f68c:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f690:	e596000c 	ldr	r0, [r6, #12]
4000f694:	e5900000 	ldr	r0, [r0]
4000f698:	e59f111c 	ldr	r1, [pc, #284]	; 4000f7bc <_tx_thread_time_slice+0x150>
4000f69c:	e1500001 	cmp	r0, r1
4000f6a0:	1a000007 	bne	4000f6c4 <_tx_thread_time_slice+0x58>
4000f6a4:	e5960010 	ldr	r0, [r6, #16]
4000f6a8:	e5900001 	ldr	r0, [r0, #1]
4000f6ac:	e1500001 	cmp	r0, r1
4000f6b0:	1a000003 	bne	4000f6c4 <_tx_thread_time_slice+0x58>
4000f6b4:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f6b8:	e596100c 	ldr	r1, [r6, #12]
4000f6bc:	e1500001 	cmp	r0, r1
4000f6c0:	2a000001 	bcs	4000f6cc <_tx_thread_time_slice+0x60>
4000f6c4:	e1a00006 	mov	r0, r6
4000f6c8:	ebfffeb6 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000f6cc:	e10f4000 	mrs	r4, CPSR
4000f6d0:	e3845080 	orr	r5, r4, #128	; 0x80
4000f6d4:	e121f005 	msr	CPSR_c, r5
4000f6d8:	e3a00000 	mov	r0, #0
4000f6dc:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f7c0 <_tx_thread_time_slice+0x154>
4000f6e0:	e5810000 	str	r0, [r1]
4000f6e4:	e3560000 	cmp	r6, #0
4000f6e8:	0a000030 	beq	4000f7b0 <_tx_thread_time_slice+0x144>
4000f6ec:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f6f0:	e3500000 	cmp	r0, #0
4000f6f4:	1a00002d 	bne	4000f7b0 <_tx_thread_time_slice+0x144>
4000f6f8:	e596001c 	ldr	r0, [r6, #28]
4000f6fc:	e5860018 	str	r0, [r6, #24]
4000f700:	e5960020 	ldr	r0, [r6, #32]
4000f704:	e1500006 	cmp	r0, r6
4000f708:	0a000025 	beq	4000f7a4 <_tx_thread_time_slice+0x138>
4000f70c:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f710:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f714:	e1500001 	cmp	r0, r1
4000f718:	1a000021 	bne	4000f7a4 <_tx_thread_time_slice+0x138>
4000f71c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f7c4 <_tx_thread_time_slice+0x158>
4000f720:	e5960020 	ldr	r0, [r6, #32]
4000f724:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f728:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f72c:	e2820000 	add	r0, r2, #0
4000f730:	e59f1090 	ldr	r1, [pc, #144]	; 4000f7c8 <_tx_thread_time_slice+0x15c>
4000f734:	e5911000 	ldr	r1, [r1]
4000f738:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f73c:	e59f1088 	ldr	r1, [pc, #136]	; 4000f7cc <_tx_thread_time_slice+0x160>
4000f740:	e5810000 	str	r0, [r1]
4000f744:	e2810000 	add	r0, r1, #0
4000f748:	e5906000 	ldr	r6, [r0]
4000f74c:	e5960008 	ldr	r0, [r6, #8]
4000f750:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f754:	e1500001 	cmp	r0, r1
4000f758:	2a000001 	bcs	4000f764 <_tx_thread_time_slice+0xf8>
4000f75c:	e5960008 	ldr	r0, [r6, #8]
4000f760:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f764:	e596000c 	ldr	r0, [r6, #12]
4000f768:	e5900000 	ldr	r0, [r0]
4000f76c:	e59f1048 	ldr	r1, [pc, #72]	; 4000f7bc <_tx_thread_time_slice+0x150>
4000f770:	e1500001 	cmp	r0, r1
4000f774:	1a000007 	bne	4000f798 <_tx_thread_time_slice+0x12c>
4000f778:	e5960010 	ldr	r0, [r6, #16]
4000f77c:	e5900001 	ldr	r0, [r0, #1]
4000f780:	e1500001 	cmp	r0, r1
4000f784:	1a000003 	bne	4000f798 <_tx_thread_time_slice+0x12c>
4000f788:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f78c:	e596100c 	ldr	r1, [r6, #12]
4000f790:	e1500001 	cmp	r0, r1
4000f794:	2a000005 	bcs	4000f7b0 <_tx_thread_time_slice+0x144>
4000f798:	e1a00006 	mov	r0, r6
4000f79c:	ebfffe81 	bl	4000f1a8 <_tx_thread_stack_error_handler>
4000f7a0:	ea000002 	b	4000f7b0 <_tx_thread_time_slice+0x144>
4000f7a4:	e59f1024 	ldr	r1, [pc, #36]	; 4000f7d0 <_tx_thread_time_slice+0x164>
4000f7a8:	e5960018 	ldr	r0, [r6, #24]
4000f7ac:	e5810000 	str	r0, [r1]
4000f7b0:	e121f004 	msr	CPSR_c, r4
4000f7b4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f7b8:	400312c0 	.word	0x400312c0
4000f7bc:	efefefef 	.word	0xefefefef
4000f7c0:	400312f0 	.word	0x400312f0
4000f7c4:	40032cf4 	.word	0x40032cf4
4000f7c8:	400312d8 	.word	0x400312d8
4000f7cc:	400312c4 	.word	0x400312c4
4000f7d0:	400312ec 	.word	0x400312ec

4000f7d4 <_tx_thread_timeout>:
4000f7d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f7d8:	e1a04000 	mov	r4, r0
4000f7dc:	e1a08004 	mov	r8, r4
4000f7e0:	e10f5000 	mrs	r5, CPSR
4000f7e4:	e3856080 	orr	r6, r5, #128	; 0x80
4000f7e8:	e121f006 	msr	CPSR_c, r6
4000f7ec:	e1a04008 	mov	r4, r8
4000f7f0:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f7f4:	e3500004 	cmp	r0, #4
4000f7f8:	1a000008 	bne	4000f820 <_tx_thread_timeout+0x4c>
4000f7fc:	e59f0038 	ldr	r0, [pc, #56]	; 4000f83c <_tx_thread_timeout+0x68>
4000f800:	e5900000 	ldr	r0, [r0]
4000f804:	e2800001 	add	r0, r0, #1
4000f808:	e59f102c 	ldr	r1, [pc, #44]	; 4000f83c <_tx_thread_timeout+0x68>
4000f80c:	e5810000 	str	r0, [r1]
4000f810:	e121f005 	msr	CPSR_c, r5
4000f814:	e1a00008 	mov	r0, r8
4000f818:	ebfffea1 	bl	4000f2a4 <_tx_thread_system_resume>
4000f81c:	ea000005 	b	4000f838 <_tx_thread_timeout+0x64>
4000f820:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f824:	e121f005 	msr	CPSR_c, r5
4000f828:	e3570000 	cmp	r7, #0
4000f82c:	0a000001 	beq	4000f838 <_tx_thread_timeout+0x64>
4000f830:	e1a00008 	mov	r0, r8
4000f834:	e12fff37 	blx	r7
4000f838:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f83c:	400312dc 	.word	0x400312dc

4000f840 <_tx_timer_activate>:
4000f840:	e92d4070 	push	{r4, r5, r6, lr}
4000f844:	e1a04000 	mov	r4, r0
4000f848:	e10f5000 	mrs	r5, CPSR
4000f84c:	e3856080 	orr	r6, r5, #128	; 0x80
4000f850:	e121f006 	msr	CPSR_c, r6
4000f854:	e59f1104 	ldr	r1, [pc, #260]	; 4000f960 <_tx_timer_activate+0x120>
4000f858:	e5910000 	ldr	r0, [r1]
4000f85c:	e3500000 	cmp	r0, #0
4000f860:	0a000031 	beq	4000f92c <_tx_timer_activate+0xec>
4000f864:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f964 <_tx_timer_activate+0x124>
4000f868:	e5911000 	ldr	r1, [r1]
4000f86c:	e2811001 	add	r1, r1, #1
4000f870:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f964 <_tx_timer_activate+0x124>
4000f874:	e5821000 	str	r1, [r2]
4000f878:	e580100c 	str	r1, [r0, #12]
4000f87c:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f968 <_tx_timer_activate+0x128>
4000f880:	e5911000 	ldr	r1, [r1]
4000f884:	e3510000 	cmp	r1, #0
4000f888:	1a000006 	bne	4000f8a8 <_tx_timer_activate+0x68>
4000f88c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f96c <_tx_timer_activate+0x12c>
4000f890:	e5911000 	ldr	r1, [r1]
4000f894:	e5801000 	str	r1, [r0]
4000f898:	e5901000 	ldr	r1, [r0]
4000f89c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f8a0:	e5801004 	str	r1, [r0, #4]
4000f8a4:	ea00000d 	b	4000f8e0 <_tx_timer_activate+0xa0>
4000f8a8:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f968 <_tx_timer_activate+0x128>
4000f8ac:	e5911000 	ldr	r1, [r1]
4000f8b0:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f970 <_tx_timer_activate+0x130>
4000f8b4:	e1510002 	cmp	r1, r2
4000f8b8:	2a000004 	bcs	4000f8d0 <_tx_timer_activate+0x90>
4000f8bc:	e3e01000 	mvn	r1, #0
4000f8c0:	e5801000 	str	r1, [r0]
4000f8c4:	e3a01000 	mov	r1, #0
4000f8c8:	e5801004 	str	r1, [r0, #4]
4000f8cc:	ea000003 	b	4000f8e0 <_tx_timer_activate+0xa0>
4000f8d0:	e59f1098 	ldr	r1, [pc, #152]	; 4000f970 <_tx_timer_activate+0x130>
4000f8d4:	e5801000 	str	r1, [r0]
4000f8d8:	e3a01000 	mov	r1, #0
4000f8dc:	e5801004 	str	r1, [r0, #4]
4000f8e0:	e3a0107a 	mov	r1, #122	; 0x7a
4000f8e4:	e5801008 	str	r1, [r0, #8]
4000f8e8:	e5804010 	str	r4, [r0, #16]
4000f8ec:	e3a01000 	mov	r1, #0
4000f8f0:	e5801014 	str	r1, [r0, #20]
4000f8f4:	e5801018 	str	r1, [r0, #24]
4000f8f8:	e580101c 	str	r1, [r0, #28]
4000f8fc:	e2800020 	add	r0, r0, #32
4000f900:	e59f106c 	ldr	r1, [pc, #108]	; 4000f974 <_tx_timer_activate+0x134>
4000f904:	e5911000 	ldr	r1, [r1]
4000f908:	e1500001 	cmp	r0, r1
4000f90c:	3a000001 	bcc	4000f918 <_tx_timer_activate+0xd8>
4000f910:	e59f1060 	ldr	r1, [pc, #96]	; 4000f978 <_tx_timer_activate+0x138>
4000f914:	e5910000 	ldr	r0, [r1]
4000f918:	e59f1040 	ldr	r1, [pc, #64]	; 4000f960 <_tx_timer_activate+0x120>
4000f91c:	e5810000 	str	r0, [r1]
4000f920:	e59f1054 	ldr	r1, [pc, #84]	; 4000f97c <_tx_timer_activate+0x13c>
4000f924:	e5911000 	ldr	r1, [r1]
4000f928:	e5810020 	str	r0, [r1, #32]
4000f92c:	e121f005 	msr	CPSR_c, r5
4000f930:	e5940020 	ldr	r0, [r4, #32]
4000f934:	e3500000 	cmp	r0, #0
4000f938:	1a000002 	bne	4000f948 <_tx_timer_activate+0x108>
4000f93c:	e5940008 	ldr	r0, [r4, #8]
4000f940:	e3500000 	cmp	r0, #0
4000f944:	1a000001 	bne	4000f950 <_tx_timer_activate+0x110>
4000f948:	e3a00017 	mov	r0, #23
4000f94c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f950:	e2840008 	add	r0, r4, #8
4000f954:	ebffe6c7 	bl	40009478 <_tx_timer_system_activate>
4000f958:	e3a00000 	mov	r0, #0
4000f95c:	eafffffa 	b	4000f94c <_tx_timer_activate+0x10c>
4000f960:	4003132c 	.word	0x4003132c
4000f964:	40031330 	.word	0x40031330
4000f968:	400312b8 	.word	0x400312b8
4000f96c:	400312c0 	.word	0x400312c0
4000f970:	f0f0f0f0 	.word	0xf0f0f0f0
4000f974:	40031328 	.word	0x40031328
4000f978:	40031324 	.word	0x40031324
4000f97c:	40031318 	.word	0x40031318

4000f980 <_tx_timer_change>:
4000f980:	e92d4030 	push	{r4, r5, lr}
4000f984:	e1a03000 	mov	r3, r0
4000f988:	e10fc000 	mrs	ip, CPSR
4000f98c:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f990:	e121f00e 	msr	CPSR_c, lr
4000f994:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fa8c <_tx_timer_change+0x10c>
4000f998:	e5940000 	ldr	r0, [r4]
4000f99c:	e3500000 	cmp	r0, #0
4000f9a0:	0a000031 	beq	4000fa6c <_tx_timer_change+0xec>
4000f9a4:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fa90 <_tx_timer_change+0x110>
4000f9a8:	e5944000 	ldr	r4, [r4]
4000f9ac:	e2844001 	add	r4, r4, #1
4000f9b0:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fa90 <_tx_timer_change+0x110>
4000f9b4:	e5854000 	str	r4, [r5]
4000f9b8:	e580400c 	str	r4, [r0, #12]
4000f9bc:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fa94 <_tx_timer_change+0x114>
4000f9c0:	e5944000 	ldr	r4, [r4]
4000f9c4:	e3540000 	cmp	r4, #0
4000f9c8:	1a000006 	bne	4000f9e8 <_tx_timer_change+0x68>
4000f9cc:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fa98 <_tx_timer_change+0x118>
4000f9d0:	e5944000 	ldr	r4, [r4]
4000f9d4:	e5804000 	str	r4, [r0]
4000f9d8:	e5904000 	ldr	r4, [r0]
4000f9dc:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000f9e0:	e5804004 	str	r4, [r0, #4]
4000f9e4:	ea00000d 	b	4000fa20 <_tx_timer_change+0xa0>
4000f9e8:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fa94 <_tx_timer_change+0x114>
4000f9ec:	e5944000 	ldr	r4, [r4]
4000f9f0:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fa9c <_tx_timer_change+0x11c>
4000f9f4:	e1540005 	cmp	r4, r5
4000f9f8:	2a000004 	bcs	4000fa10 <_tx_timer_change+0x90>
4000f9fc:	e3e04000 	mvn	r4, #0
4000fa00:	e5804000 	str	r4, [r0]
4000fa04:	e3a04000 	mov	r4, #0
4000fa08:	e5804004 	str	r4, [r0, #4]
4000fa0c:	ea000003 	b	4000fa20 <_tx_timer_change+0xa0>
4000fa10:	e59f4084 	ldr	r4, [pc, #132]	; 4000fa9c <_tx_timer_change+0x11c>
4000fa14:	e5804000 	str	r4, [r0]
4000fa18:	e3a04000 	mov	r4, #0
4000fa1c:	e5804004 	str	r4, [r0, #4]
4000fa20:	e3a0407b 	mov	r4, #123	; 0x7b
4000fa24:	e5804008 	str	r4, [r0, #8]
4000fa28:	e5803010 	str	r3, [r0, #16]
4000fa2c:	e5801014 	str	r1, [r0, #20]
4000fa30:	e5802018 	str	r2, [r0, #24]
4000fa34:	e3a04000 	mov	r4, #0
4000fa38:	e580401c 	str	r4, [r0, #28]
4000fa3c:	e2800020 	add	r0, r0, #32
4000fa40:	e59f4058 	ldr	r4, [pc, #88]	; 4000faa0 <_tx_timer_change+0x120>
4000fa44:	e5944000 	ldr	r4, [r4]
4000fa48:	e1500004 	cmp	r0, r4
4000fa4c:	3a000001 	bcc	4000fa58 <_tx_timer_change+0xd8>
4000fa50:	e59f404c 	ldr	r4, [pc, #76]	; 4000faa4 <_tx_timer_change+0x124>
4000fa54:	e5940000 	ldr	r0, [r4]
4000fa58:	e59f402c 	ldr	r4, [pc, #44]	; 4000fa8c <_tx_timer_change+0x10c>
4000fa5c:	e5840000 	str	r0, [r4]
4000fa60:	e59f4040 	ldr	r4, [pc, #64]	; 4000faa8 <_tx_timer_change+0x128>
4000fa64:	e5944000 	ldr	r4, [r4]
4000fa68:	e5840020 	str	r0, [r4, #32]
4000fa6c:	e5930020 	ldr	r0, [r3, #32]
4000fa70:	e3500000 	cmp	r0, #0
4000fa74:	1a000001 	bne	4000fa80 <_tx_timer_change+0x100>
4000fa78:	e5831008 	str	r1, [r3, #8]
4000fa7c:	e583200c 	str	r2, [r3, #12]
4000fa80:	e121f00c 	msr	CPSR_c, ip
4000fa84:	e3a00000 	mov	r0, #0
4000fa88:	e8bd8030 	pop	{r4, r5, pc}
4000fa8c:	4003132c 	.word	0x4003132c
4000fa90:	40031330 	.word	0x40031330
4000fa94:	400312b8 	.word	0x400312b8
4000fa98:	400312c0 	.word	0x400312c0
4000fa9c:	f0f0f0f0 	.word	0xf0f0f0f0
4000faa0:	40031328 	.word	0x40031328
4000faa4:	40031324 	.word	0x40031324
4000faa8:	40031318 	.word	0x40031318

4000faac <_tx_timer_create>:
4000faac:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fab0:	e1a04000 	mov	r4, r0
4000fab4:	e1a05001 	mov	r5, r1
4000fab8:	e1a06002 	mov	r6, r2
4000fabc:	e1a07003 	mov	r7, r3
4000fac0:	e28da030 	add	sl, sp, #48	; 0x30
4000fac4:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fac8:	e3a0102c 	mov	r1, #44	; 0x2c
4000facc:	e1a00004 	mov	r0, r4
4000fad0:	eb000f30 	bl	40013798 <__aeabi_memclr4>
4000fad4:	e5845004 	str	r5, [r4, #4]
4000fad8:	e5848008 	str	r8, [r4, #8]
4000fadc:	e584900c 	str	r9, [r4, #12]
4000fae0:	e5846010 	str	r6, [r4, #16]
4000fae4:	e5847014 	str	r7, [r4, #20]
4000fae8:	e10fb000 	mrs	fp, CPSR
4000faec:	e38b0080 	orr	r0, fp, #128	; 0x80
4000faf0:	e58d0008 	str	r0, [sp, #8]
4000faf4:	e59d0008 	ldr	r0, [sp, #8]
4000faf8:	e121f000 	msr	CPSR_c, r0
4000fafc:	e59f0178 	ldr	r0, [pc, #376]	; 4000fc7c <_tx_timer_create+0x1d0>
4000fb00:	e5840000 	str	r0, [r4]
4000fb04:	e59f0174 	ldr	r0, [pc, #372]	; 4000fc80 <_tx_timer_create+0x1d4>
4000fb08:	e5900000 	ldr	r0, [r0]
4000fb0c:	e3500000 	cmp	r0, #0
4000fb10:	0a00000e 	beq	4000fb50 <_tx_timer_create+0xa4>
4000fb14:	e59f0164 	ldr	r0, [pc, #356]	; 4000fc80 <_tx_timer_create+0x1d4>
4000fb18:	e5900000 	ldr	r0, [r0]
4000fb1c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fb20:	e58d0004 	str	r0, [sp, #4]
4000fb24:	e59f0154 	ldr	r0, [pc, #340]	; 4000fc80 <_tx_timer_create+0x1d4>
4000fb28:	e5900000 	ldr	r0, [r0]
4000fb2c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fb30:	e59d0004 	ldr	r0, [sp, #4]
4000fb34:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fb38:	e59d0004 	ldr	r0, [sp, #4]
4000fb3c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fb40:	e59f0138 	ldr	r0, [pc, #312]	; 4000fc80 <_tx_timer_create+0x1d4>
4000fb44:	e5900000 	ldr	r0, [r0]
4000fb48:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fb4c:	ea000003 	b	4000fb60 <_tx_timer_create+0xb4>
4000fb50:	e59f0128 	ldr	r0, [pc, #296]	; 4000fc80 <_tx_timer_create+0x1d4>
4000fb54:	e5804000 	str	r4, [r0]
4000fb58:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fb5c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fb60:	e59f011c 	ldr	r0, [pc, #284]	; 4000fc84 <_tx_timer_create+0x1d8>
4000fb64:	e5900000 	ldr	r0, [r0]
4000fb68:	e2800001 	add	r0, r0, #1
4000fb6c:	e59f1110 	ldr	r1, [pc, #272]	; 4000fc84 <_tx_timer_create+0x1d8>
4000fb70:	e5810000 	str	r0, [r1]
4000fb74:	e1a03008 	mov	r3, r8
4000fb78:	e1a02005 	mov	r2, r5
4000fb7c:	e1a01004 	mov	r1, r4
4000fb80:	e3a00002 	mov	r0, #2
4000fb84:	e58d9000 	str	r9, [sp]
4000fb88:	eb00011b 	bl	4000fffc <_tx_trace_object_register>
4000fb8c:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fc88 <_tx_timer_create+0x1dc>
4000fb90:	e5910000 	ldr	r0, [r1]
4000fb94:	e3500000 	cmp	r0, #0
4000fb98:	0a000030 	beq	4000fc60 <_tx_timer_create+0x1b4>
4000fb9c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fc8c <_tx_timer_create+0x1e0>
4000fba0:	e5911000 	ldr	r1, [r1]
4000fba4:	e2811001 	add	r1, r1, #1
4000fba8:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fc8c <_tx_timer_create+0x1e0>
4000fbac:	e5821000 	str	r1, [r2]
4000fbb0:	e580100c 	str	r1, [r0, #12]
4000fbb4:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fc90 <_tx_timer_create+0x1e4>
4000fbb8:	e5911000 	ldr	r1, [r1]
4000fbbc:	e3510000 	cmp	r1, #0
4000fbc0:	1a000006 	bne	4000fbe0 <_tx_timer_create+0x134>
4000fbc4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fc94 <_tx_timer_create+0x1e8>
4000fbc8:	e5911000 	ldr	r1, [r1]
4000fbcc:	e5801000 	str	r1, [r0]
4000fbd0:	e5901000 	ldr	r1, [r0]
4000fbd4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fbd8:	e5801004 	str	r1, [r0, #4]
4000fbdc:	ea00000d 	b	4000fc18 <_tx_timer_create+0x16c>
4000fbe0:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fc90 <_tx_timer_create+0x1e4>
4000fbe4:	e5911000 	ldr	r1, [r1]
4000fbe8:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fc98 <_tx_timer_create+0x1ec>
4000fbec:	e1510002 	cmp	r1, r2
4000fbf0:	2a000004 	bcs	4000fc08 <_tx_timer_create+0x15c>
4000fbf4:	e3e01000 	mvn	r1, #0
4000fbf8:	e5801000 	str	r1, [r0]
4000fbfc:	e3a01000 	mov	r1, #0
4000fc00:	e5801004 	str	r1, [r0, #4]
4000fc04:	ea000003 	b	4000fc18 <_tx_timer_create+0x16c>
4000fc08:	e59f1088 	ldr	r1, [pc, #136]	; 4000fc98 <_tx_timer_create+0x1ec>
4000fc0c:	e5801000 	str	r1, [r0]
4000fc10:	e3a01000 	mov	r1, #0
4000fc14:	e5801004 	str	r1, [r0, #4]
4000fc18:	e3a0107c 	mov	r1, #124	; 0x7c
4000fc1c:	e5801008 	str	r1, [r0, #8]
4000fc20:	e5804010 	str	r4, [r0, #16]
4000fc24:	e5808014 	str	r8, [r0, #20]
4000fc28:	e5809018 	str	r9, [r0, #24]
4000fc2c:	e580a01c 	str	sl, [r0, #28]
4000fc30:	e2800020 	add	r0, r0, #32
4000fc34:	e59f1060 	ldr	r1, [pc, #96]	; 4000fc9c <_tx_timer_create+0x1f0>
4000fc38:	e5911000 	ldr	r1, [r1]
4000fc3c:	e1500001 	cmp	r0, r1
4000fc40:	3a000001 	bcc	4000fc4c <_tx_timer_create+0x1a0>
4000fc44:	e59f1054 	ldr	r1, [pc, #84]	; 4000fca0 <_tx_timer_create+0x1f4>
4000fc48:	e5910000 	ldr	r0, [r1]
4000fc4c:	e59f1034 	ldr	r1, [pc, #52]	; 4000fc88 <_tx_timer_create+0x1dc>
4000fc50:	e5810000 	str	r0, [r1]
4000fc54:	e59f1048 	ldr	r1, [pc, #72]	; 4000fca4 <_tx_timer_create+0x1f8>
4000fc58:	e5911000 	ldr	r1, [r1]
4000fc5c:	e5810020 	str	r0, [r1, #32]
4000fc60:	e121f00b 	msr	CPSR_c, fp
4000fc64:	e35a0000 	cmp	sl, #0
4000fc68:	0a000001 	beq	4000fc74 <_tx_timer_create+0x1c8>
4000fc6c:	e2840008 	add	r0, r4, #8
4000fc70:	ebffe600 	bl	40009478 <_tx_timer_system_activate>
4000fc74:	e3a00000 	mov	r0, #0
4000fc78:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fc7c:	4154494d 	.word	0x4154494d
4000fc80:	40031304 	.word	0x40031304
4000fc84:	40031308 	.word	0x40031308
4000fc88:	4003132c 	.word	0x4003132c
4000fc8c:	40031330 	.word	0x40031330
4000fc90:	400312b8 	.word	0x400312b8
4000fc94:	400312c0 	.word	0x400312c0
4000fc98:	f0f0f0f0 	.word	0xf0f0f0f0
4000fc9c:	40031328 	.word	0x40031328
4000fca0:	40031324 	.word	0x40031324
4000fca4:	40031318 	.word	0x40031318

4000fca8 <_tx_timer_deactivate>:
4000fca8:	e92d4018 	push	{r3, r4, lr}
4000fcac:	e1a01000 	mov	r1, r0
4000fcb0:	e281c008 	add	ip, r1, #8
4000fcb4:	e10f2000 	mrs	r2, CPSR
4000fcb8:	e3823080 	orr	r3, r2, #128	; 0x80
4000fcbc:	e121f003 	msr	CPSR_c, r3
4000fcc0:	e59fe228 	ldr	lr, [pc, #552]	; 4000fef0 <_tx_timer_deactivate+0x248>
4000fcc4:	e59e0000 	ldr	r0, [lr]
4000fcc8:	e3500000 	cmp	r0, #0
4000fccc:	0a000031 	beq	4000fd98 <_tx_timer_deactivate+0xf0>
4000fcd0:	e59fe21c 	ldr	lr, [pc, #540]	; 4000fef4 <_tx_timer_deactivate+0x24c>
4000fcd4:	e59ee000 	ldr	lr, [lr]
4000fcd8:	e28ee001 	add	lr, lr, #1
4000fcdc:	e59f4210 	ldr	r4, [pc, #528]	; 4000fef4 <_tx_timer_deactivate+0x24c>
4000fce0:	e584e000 	str	lr, [r4]
4000fce4:	e580e00c 	str	lr, [r0, #12]
4000fce8:	e59fe208 	ldr	lr, [pc, #520]	; 4000fef8 <_tx_timer_deactivate+0x250>
4000fcec:	e59ee000 	ldr	lr, [lr]
4000fcf0:	e35e0000 	cmp	lr, #0
4000fcf4:	1a000006 	bne	4000fd14 <_tx_timer_deactivate+0x6c>
4000fcf8:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000fefc <_tx_timer_deactivate+0x254>
4000fcfc:	e59ee000 	ldr	lr, [lr]
4000fd00:	e580e000 	str	lr, [r0]
4000fd04:	e590e000 	ldr	lr, [r0]
4000fd08:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fd0c:	e580e004 	str	lr, [r0, #4]
4000fd10:	ea00000d 	b	4000fd4c <_tx_timer_deactivate+0xa4>
4000fd14:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000fef8 <_tx_timer_deactivate+0x250>
4000fd18:	e59ee000 	ldr	lr, [lr]
4000fd1c:	e59f41dc 	ldr	r4, [pc, #476]	; 4000ff00 <_tx_timer_deactivate+0x258>
4000fd20:	e15e0004 	cmp	lr, r4
4000fd24:	2a000004 	bcs	4000fd3c <_tx_timer_deactivate+0x94>
4000fd28:	e3e0e000 	mvn	lr, #0
4000fd2c:	e580e000 	str	lr, [r0]
4000fd30:	e3a0e000 	mov	lr, #0
4000fd34:	e580e004 	str	lr, [r0, #4]
4000fd38:	ea000003 	b	4000fd4c <_tx_timer_deactivate+0xa4>
4000fd3c:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000ff00 <_tx_timer_deactivate+0x258>
4000fd40:	e580e000 	str	lr, [r0]
4000fd44:	e3a0e000 	mov	lr, #0
4000fd48:	e580e004 	str	lr, [r0, #4]
4000fd4c:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fd50:	e580e008 	str	lr, [r0, #8]
4000fd54:	e5801010 	str	r1, [r0, #16]
4000fd58:	e580d014 	str	sp, [r0, #20]
4000fd5c:	e3a0e000 	mov	lr, #0
4000fd60:	e580e018 	str	lr, [r0, #24]
4000fd64:	e580e01c 	str	lr, [r0, #28]
4000fd68:	e2800020 	add	r0, r0, #32
4000fd6c:	e59fe190 	ldr	lr, [pc, #400]	; 4000ff04 <_tx_timer_deactivate+0x25c>
4000fd70:	e59ee000 	ldr	lr, [lr]
4000fd74:	e150000e 	cmp	r0, lr
4000fd78:	3a000001 	bcc	4000fd84 <_tx_timer_deactivate+0xdc>
4000fd7c:	e59fe184 	ldr	lr, [pc, #388]	; 4000ff08 <_tx_timer_deactivate+0x260>
4000fd80:	e59e0000 	ldr	r0, [lr]
4000fd84:	e59fe164 	ldr	lr, [pc, #356]	; 4000fef0 <_tx_timer_deactivate+0x248>
4000fd88:	e58e0000 	str	r0, [lr]
4000fd8c:	e59fe178 	ldr	lr, [pc, #376]	; 4000ff0c <_tx_timer_deactivate+0x264>
4000fd90:	e59ee000 	ldr	lr, [lr]
4000fd94:	e58e0020 	str	r0, [lr, #32]
4000fd98:	e59fe170 	ldr	lr, [pc, #368]	; 4000ff10 <_tx_timer_deactivate+0x268>
4000fd9c:	e59c0018 	ldr	r0, [ip, #24]
4000fda0:	e59ee000 	ldr	lr, [lr]
4000fda4:	e150000e 	cmp	r0, lr
4000fda8:	3a00002b 	bcc	4000fe5c <_tx_timer_deactivate+0x1b4>
4000fdac:	e59fe160 	ldr	lr, [pc, #352]	; 4000ff14 <_tx_timer_deactivate+0x26c>
4000fdb0:	e59c0018 	ldr	r0, [ip, #24]
4000fdb4:	e59ee000 	ldr	lr, [lr]
4000fdb8:	e150000e 	cmp	r0, lr
4000fdbc:	2a000026 	bcs	4000fe5c <_tx_timer_deactivate+0x1b4>
4000fdc0:	e59fe150 	ldr	lr, [pc, #336]	; 4000ff18 <_tx_timer_deactivate+0x270>
4000fdc4:	e59c0018 	ldr	r0, [ip, #24]
4000fdc8:	e59ee000 	ldr	lr, [lr]
4000fdcc:	e150000e 	cmp	r0, lr
4000fdd0:	3a000007 	bcc	4000fdf4 <_tx_timer_deactivate+0x14c>
4000fdd4:	e59fe13c 	ldr	lr, [pc, #316]	; 4000ff18 <_tx_timer_deactivate+0x270>
4000fdd8:	e59c0018 	ldr	r0, [ip, #24]
4000fddc:	e59ee000 	ldr	lr, [lr]
4000fde0:	e040000e 	sub	r0, r0, lr
4000fde4:	e3a0e001 	mov	lr, #1
4000fde8:	e08e0140 	add	r0, lr, r0, asr #2
4000fdec:	e58d0000 	str	r0, [sp]
4000fdf0:	ea00000e 	b	4000fe30 <_tx_timer_deactivate+0x188>
4000fdf4:	e59fe114 	ldr	lr, [pc, #276]	; 4000ff10 <_tx_timer_deactivate+0x268>
4000fdf8:	e59c0018 	ldr	r0, [ip, #24]
4000fdfc:	e59ee000 	ldr	lr, [lr]
4000fe00:	e040000e 	sub	r0, r0, lr
4000fe04:	e1a00140 	asr	r0, r0, #2
4000fe08:	e58d0000 	str	r0, [sp]
4000fe0c:	e59f0100 	ldr	r0, [pc, #256]	; 4000ff14 <_tx_timer_deactivate+0x26c>
4000fe10:	e5900000 	ldr	r0, [r0]
4000fe14:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000ff18 <_tx_timer_deactivate+0x270>
4000fe18:	e59ee000 	ldr	lr, [lr]
4000fe1c:	e040000e 	sub	r0, r0, lr
4000fe20:	e59de000 	ldr	lr, [sp]
4000fe24:	e08e0140 	add	r0, lr, r0, asr #2
4000fe28:	e2800001 	add	r0, r0, #1
4000fe2c:	e58d0000 	str	r0, [sp]
4000fe30:	e59c0000 	ldr	r0, [ip]
4000fe34:	e3500020 	cmp	r0, #32
4000fe38:	9a000005 	bls	4000fe54 <_tx_timer_deactivate+0x1ac>
4000fe3c:	e59c0000 	ldr	r0, [ip]
4000fe40:	e2400020 	sub	r0, r0, #32
4000fe44:	e59de000 	ldr	lr, [sp]
4000fe48:	e080000e 	add	r0, r0, lr
4000fe4c:	e58c0000 	str	r0, [ip]
4000fe50:	ea000001 	b	4000fe5c <_tx_timer_deactivate+0x1b4>
4000fe54:	e59d0000 	ldr	r0, [sp]
4000fe58:	e58c0000 	str	r0, [ip]
4000fe5c:	e59c0018 	ldr	r0, [ip, #24]
4000fe60:	e3500000 	cmp	r0, #0
4000fe64:	0a00001e 	beq	4000fee4 <_tx_timer_deactivate+0x23c>
4000fe68:	e59c0010 	ldr	r0, [ip, #16]
4000fe6c:	e150000c 	cmp	r0, ip
4000fe70:	1a000009 	bne	4000fe9c <_tx_timer_deactivate+0x1f4>
4000fe74:	e59c0018 	ldr	r0, [ip, #24]
4000fe78:	e5900000 	ldr	r0, [r0]
4000fe7c:	e150000c 	cmp	r0, ip
4000fe80:	1a000002 	bne	4000fe90 <_tx_timer_deactivate+0x1e8>
4000fe84:	e3a00000 	mov	r0, #0
4000fe88:	e59ce018 	ldr	lr, [ip, #24]
4000fe8c:	e58e0000 	str	r0, [lr]
4000fe90:	e3a00000 	mov	r0, #0
4000fe94:	e58c0018 	str	r0, [ip, #24]
4000fe98:	ea000011 	b	4000fee4 <_tx_timer_deactivate+0x23c>
4000fe9c:	e59c0014 	ldr	r0, [ip, #20]
4000fea0:	e59ce010 	ldr	lr, [ip, #16]
4000fea4:	e58e0014 	str	r0, [lr, #20]
4000fea8:	e59c0010 	ldr	r0, [ip, #16]
4000feac:	e59ce014 	ldr	lr, [ip, #20]
4000feb0:	e58e0010 	str	r0, [lr, #16]
4000feb4:	e59c0018 	ldr	r0, [ip, #24]
4000feb8:	e5900000 	ldr	r0, [r0]
4000febc:	e150000c 	cmp	r0, ip
4000fec0:	1a000005 	bne	4000fedc <_tx_timer_deactivate+0x234>
4000fec4:	e59c0018 	ldr	r0, [ip, #24]
4000fec8:	e59ce010 	ldr	lr, [ip, #16]
4000fecc:	e58e0018 	str	r0, [lr, #24]
4000fed0:	e59c0010 	ldr	r0, [ip, #16]
4000fed4:	e59ce018 	ldr	lr, [ip, #24]
4000fed8:	e58e0000 	str	r0, [lr]
4000fedc:	e3a00000 	mov	r0, #0
4000fee0:	e58c0018 	str	r0, [ip, #24]
4000fee4:	e121f002 	msr	CPSR_c, r2
4000fee8:	e3a00000 	mov	r0, #0
4000feec:	e8bd8018 	pop	{r3, r4, pc}
4000fef0:	4003132c 	.word	0x4003132c
4000fef4:	40031330 	.word	0x40031330
4000fef8:	400312b8 	.word	0x400312b8
4000fefc:	400312c0 	.word	0x400312c0
4000ff00:	f0f0f0f0 	.word	0xf0f0f0f0
4000ff04:	40031328 	.word	0x40031328
4000ff08:	40031324 	.word	0x40031324
4000ff0c:	40031318 	.word	0x40031318
4000ff10:	400312f4 	.word	0x400312f4
4000ff14:	400312f8 	.word	0x400312f8
4000ff18:	400312fc 	.word	0x400312fc

4000ff1c <_tx_timer_expiration_process>:
4000ff1c:	e92d4070 	push	{r4, r5, r6, lr}
4000ff20:	e10f4000 	mrs	r4, CPSR
4000ff24:	e3845080 	orr	r5, r4, #128	; 0x80
4000ff28:	e121f005 	msr	CPSR_c, r5
4000ff2c:	e59f001c 	ldr	r0, [pc, #28]	; 4000ff50 <_tx_timer_expiration_process+0x34>
4000ff30:	e5900000 	ldr	r0, [r0]
4000ff34:	e2800001 	add	r0, r0, #1
4000ff38:	e59f1010 	ldr	r1, [pc, #16]	; 4000ff50 <_tx_timer_expiration_process+0x34>
4000ff3c:	e5810000 	str	r0, [r1]
4000ff40:	e121f004 	msr	CPSR_c, r4
4000ff44:	e59f0008 	ldr	r0, [pc, #8]	; 4000ff54 <_tx_timer_expiration_process+0x38>
4000ff48:	ebfffcd5 	bl	4000f2a4 <_tx_thread_system_resume>
4000ff4c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ff50:	400312dc 	.word	0x400312dc
4000ff54:	40032df4 	.word	0x40032df4

4000ff58 <_tx_timer_system_deactivate>:
4000ff58:	e1a01000 	mov	r1, r0
4000ff5c:	e10f2000 	mrs	r2, CPSR
4000ff60:	e3823080 	orr	r3, r2, #128	; 0x80
4000ff64:	e121f003 	msr	CPSR_c, r3
4000ff68:	e5910018 	ldr	r0, [r1, #24]
4000ff6c:	e3500000 	cmp	r0, #0
4000ff70:	0a00001e 	beq	4000fff0 <_tx_timer_system_deactivate+0x98>
4000ff74:	e5910010 	ldr	r0, [r1, #16]
4000ff78:	e1500001 	cmp	r0, r1
4000ff7c:	1a000009 	bne	4000ffa8 <_tx_timer_system_deactivate+0x50>
4000ff80:	e5910018 	ldr	r0, [r1, #24]
4000ff84:	e5900000 	ldr	r0, [r0]
4000ff88:	e1500001 	cmp	r0, r1
4000ff8c:	1a000002 	bne	4000ff9c <_tx_timer_system_deactivate+0x44>
4000ff90:	e3a00000 	mov	r0, #0
4000ff94:	e591c018 	ldr	ip, [r1, #24]
4000ff98:	e58c0000 	str	r0, [ip]
4000ff9c:	e3a00000 	mov	r0, #0
4000ffa0:	e5810018 	str	r0, [r1, #24]
4000ffa4:	ea000011 	b	4000fff0 <_tx_timer_system_deactivate+0x98>
4000ffa8:	e5910014 	ldr	r0, [r1, #20]
4000ffac:	e591c010 	ldr	ip, [r1, #16]
4000ffb0:	e58c0014 	str	r0, [ip, #20]
4000ffb4:	e5910010 	ldr	r0, [r1, #16]
4000ffb8:	e591c014 	ldr	ip, [r1, #20]
4000ffbc:	e58c0010 	str	r0, [ip, #16]
4000ffc0:	e5910018 	ldr	r0, [r1, #24]
4000ffc4:	e5900000 	ldr	r0, [r0]
4000ffc8:	e1500001 	cmp	r0, r1
4000ffcc:	1a000005 	bne	4000ffe8 <_tx_timer_system_deactivate+0x90>
4000ffd0:	e5910018 	ldr	r0, [r1, #24]
4000ffd4:	e591c010 	ldr	ip, [r1, #16]
4000ffd8:	e58c0018 	str	r0, [ip, #24]
4000ffdc:	e5910010 	ldr	r0, [r1, #16]
4000ffe0:	e591c018 	ldr	ip, [r1, #24]
4000ffe4:	e58c0000 	str	r0, [ip]
4000ffe8:	e3a00000 	mov	r0, #0
4000ffec:	e5810018 	str	r0, [r1, #24]
4000fff0:	e121f002 	msr	CPSR_c, r2
4000fff4:	e3a00000 	mov	r0, #0
4000fff8:	e12fff1e 	bx	lr

4000fffc <_tx_trace_object_register>:
4000fffc:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40010000:	e1a04000 	mov	r4, r0
40010004:	e1a05001 	mov	r5, r1
40010008:	e1a06002 	mov	r6, r2
4001000c:	e1a07003 	mov	r7, r3
40010010:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
40010014:	e59f0184 	ldr	r0, [pc, #388]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010018:	e5900000 	ldr	r0, [r0]
4001001c:	e3500000 	cmp	r0, #0
40010020:	1a000000 	bne	40010028 <_tx_trace_object_register+0x2c>
40010024:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40010028:	e59f1174 	ldr	r1, [pc, #372]	; 400101a4 <_tx_trace_object_register+0x1a8>
4001002c:	e5911000 	ldr	r1, [r1]
40010030:	e59f2168 	ldr	r2, [pc, #360]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010034:	e5922000 	ldr	r2, [r2]
40010038:	e0410002 	sub	r0, r1, r2
4001003c:	e3a01030 	mov	r1, #48	; 0x30
40010040:	eb0002bd 	bl	40010b3c <__aeabi_idivmod>
40010044:	e1a0a000 	mov	sl, r0
40010048:	e1a0b00a 	mov	fp, sl
4001004c:	e3a09000 	mov	r9, #0
40010050:	ea00001b 	b	400100c4 <_tx_trace_object_register+0xc8>
40010054:	e0890089 	add	r0, r9, r9, lsl #1
40010058:	e59f1140 	ldr	r1, [pc, #320]	; 400101a0 <_tx_trace_object_register+0x1a4>
4001005c:	e5911000 	ldr	r1, [r1]
40010060:	e0810200 	add	r0, r1, r0, lsl #4
40010064:	e5900004 	ldr	r0, [r0, #4]
40010068:	e1500005 	cmp	r0, r5
4001006c:	1a000001 	bne	40010078 <_tx_trace_object_register+0x7c>
40010070:	e1a0b009 	mov	fp, r9
40010074:	ea000014 	b	400100cc <_tx_trace_object_register+0xd0>
40010078:	e0890089 	add	r0, r9, r9, lsl #1
4001007c:	e59f111c 	ldr	r1, [pc, #284]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010080:	e5911000 	ldr	r1, [r1]
40010084:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
40010088:	e3500000 	cmp	r0, #0
4001008c:	0a00000b 	beq	400100c0 <_tx_trace_object_register+0xc4>
40010090:	e15b000a 	cmp	fp, sl
40010094:	1a000001 	bne	400100a0 <_tx_trace_object_register+0xa4>
40010098:	e1a0b009 	mov	fp, r9
4001009c:	ea000007 	b	400100c0 <_tx_trace_object_register+0xc4>
400100a0:	e08b008b 	add	r0, fp, fp, lsl #1
400100a4:	e59f10f4 	ldr	r1, [pc, #244]	; 400101a0 <_tx_trace_object_register+0x1a4>
400100a8:	e5911000 	ldr	r1, [r1]
400100ac:	e0810200 	add	r0, r1, r0, lsl #4
400100b0:	e5d00001 	ldrb	r0, [r0, #1]
400100b4:	e3500000 	cmp	r0, #0
400100b8:	0a000000 	beq	400100c0 <_tx_trace_object_register+0xc4>
400100bc:	e1a0b009 	mov	fp, r9
400100c0:	e2899001 	add	r9, r9, #1
400100c4:	e159000a 	cmp	r9, sl
400100c8:	3affffe1 	bcc	40010054 <_tx_trace_object_register+0x58>
400100cc:	e1a00000 	nop			; (mov r0, r0)
400100d0:	e15b000a 	cmp	fp, sl
400100d4:	2a000030 	bcs	4001019c <_tx_trace_object_register+0x1a0>
400100d8:	e3a00000 	mov	r0, #0
400100dc:	e08b108b 	add	r1, fp, fp, lsl #1
400100e0:	e59f20b8 	ldr	r2, [pc, #184]	; 400101a0 <_tx_trace_object_register+0x1a4>
400100e4:	e5922000 	ldr	r2, [r2]
400100e8:	e7c20201 	strb	r0, [r2, r1, lsl #4]
400100ec:	e08b008b 	add	r0, fp, fp, lsl #1
400100f0:	e59f10a8 	ldr	r1, [pc, #168]	; 400101a0 <_tx_trace_object_register+0x1a4>
400100f4:	e5911000 	ldr	r1, [r1]
400100f8:	e0810200 	add	r0, r1, r0, lsl #4
400100fc:	e5c04001 	strb	r4, [r0, #1]
40010100:	e08b008b 	add	r0, fp, fp, lsl #1
40010104:	e59f1094 	ldr	r1, [pc, #148]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010108:	e5911000 	ldr	r1, [r1]
4001010c:	e0810200 	add	r0, r1, r0, lsl #4
40010110:	e5805004 	str	r5, [r0, #4]
40010114:	e08b008b 	add	r0, fp, fp, lsl #1
40010118:	e59f1080 	ldr	r1, [pc, #128]	; 400101a0 <_tx_trace_object_register+0x1a4>
4001011c:	e5911000 	ldr	r1, [r1]
40010120:	e0810200 	add	r0, r1, r0, lsl #4
40010124:	e5807008 	str	r7, [r0, #8]
40010128:	e08b008b 	add	r0, fp, fp, lsl #1
4001012c:	e59f106c 	ldr	r1, [pc, #108]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010130:	e5911000 	ldr	r1, [r1]
40010134:	e0810200 	add	r0, r1, r0, lsl #4
40010138:	e580800c 	str	r8, [r0, #12]
4001013c:	e3a09000 	mov	r9, #0
40010140:	ea00000b 	b	40010174 <_tx_trace_object_register+0x178>
40010144:	e7d60009 	ldrb	r0, [r6, r9]
40010148:	e08b108b 	add	r1, fp, fp, lsl #1
4001014c:	e59f204c 	ldr	r2, [pc, #76]	; 400101a0 <_tx_trace_object_register+0x1a4>
40010150:	e5922000 	ldr	r2, [r2]
40010154:	e0821201 	add	r1, r2, r1, lsl #4
40010158:	e2811010 	add	r1, r1, #16
4001015c:	e7c10009 	strb	r0, [r1, r9]
40010160:	e7d60009 	ldrb	r0, [r6, r9]
40010164:	e3500000 	cmp	r0, #0
40010168:	1a000000 	bne	40010170 <_tx_trace_object_register+0x174>
4001016c:	ea000002 	b	4001017c <_tx_trace_object_register+0x180>
40010170:	e2899001 	add	r9, r9, #1
40010174:	e359001f 	cmp	r9, #31
40010178:	3afffff1 	bcc	40010144 <_tx_trace_object_register+0x148>
4001017c:	e1a00000 	nop			; (mov r0, r0)
40010180:	e3a00000 	mov	r0, #0
40010184:	e08b108b 	add	r1, fp, fp, lsl #1
40010188:	e59f2010 	ldr	r2, [pc, #16]	; 400101a0 <_tx_trace_object_register+0x1a4>
4001018c:	e5922000 	ldr	r2, [r2]
40010190:	e0821201 	add	r1, r2, r1, lsl #4
40010194:	e2811010 	add	r1, r1, #16
40010198:	e7c10009 	strb	r0, [r1, r9]
4001019c:	eaffffa0 	b	40010024 <_tx_trace_object_register+0x28>
400101a0:	4003131c 	.word	0x4003131c
400101a4:	40031320 	.word	0x40031320

400101a8 <_tx_trace_object_unregister>:
400101a8:	e92d4070 	push	{r4, r5, r6, lr}
400101ac:	e1a04000 	mov	r4, r0
400101b0:	e59f007c 	ldr	r0, [pc, #124]	; 40010234 <_tx_trace_object_unregister+0x8c>
400101b4:	e5900000 	ldr	r0, [r0]
400101b8:	e3500000 	cmp	r0, #0
400101bc:	1a000000 	bne	400101c4 <_tx_trace_object_unregister+0x1c>
400101c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400101c4:	e59f106c 	ldr	r1, [pc, #108]	; 40010238 <_tx_trace_object_unregister+0x90>
400101c8:	e5911000 	ldr	r1, [r1]
400101cc:	e59f2060 	ldr	r2, [pc, #96]	; 40010234 <_tx_trace_object_unregister+0x8c>
400101d0:	e5922000 	ldr	r2, [r2]
400101d4:	e0410002 	sub	r0, r1, r2
400101d8:	e3a01030 	mov	r1, #48	; 0x30
400101dc:	eb000256 	bl	40010b3c <__aeabi_idivmod>
400101e0:	e1a05000 	mov	r5, r0
400101e4:	e3a06000 	mov	r6, #0
400101e8:	ea00000d 	b	40010224 <_tx_trace_object_unregister+0x7c>
400101ec:	e0860086 	add	r0, r6, r6, lsl #1
400101f0:	e59f103c 	ldr	r1, [pc, #60]	; 40010234 <_tx_trace_object_unregister+0x8c>
400101f4:	e5911000 	ldr	r1, [r1]
400101f8:	e0810200 	add	r0, r1, r0, lsl #4
400101fc:	e5900004 	ldr	r0, [r0, #4]
40010200:	e1500004 	cmp	r0, r4
40010204:	1a000005 	bne	40010220 <_tx_trace_object_unregister+0x78>
40010208:	e3a00001 	mov	r0, #1
4001020c:	e0861086 	add	r1, r6, r6, lsl #1
40010210:	e59f201c 	ldr	r2, [pc, #28]	; 40010234 <_tx_trace_object_unregister+0x8c>
40010214:	e5922000 	ldr	r2, [r2]
40010218:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001021c:	ea000002 	b	4001022c <_tx_trace_object_unregister+0x84>
40010220:	e2866001 	add	r6, r6, #1
40010224:	e1560005 	cmp	r6, r5
40010228:	3affffef 	bcc	400101ec <_tx_trace_object_unregister+0x44>
4001022c:	e1a00000 	nop			; (mov r0, r0)
40010230:	eaffffe2 	b	400101c0 <_tx_trace_object_unregister+0x18>
40010234:	4003131c 	.word	0x4003131c
40010238:	40031320 	.word	0x40031320

4001023c <_tx_thread_stack_build>:
4001023c:	e5902010 	ldr	r2, [r0, #16]
40010240:	e3c22007 	bic	r2, r2, #7
40010244:	e242204c 	sub	r2, r2, #76	; 0x4c
40010248:	e3a03001 	mov	r3, #1
4001024c:	e5823000 	str	r3, [r2]
40010250:	e3a03000 	mov	r3, #0
40010254:	e5823008 	str	r3, [r2, #8]
40010258:	e582300c 	str	r3, [r2, #12]
4001025c:	e5823010 	str	r3, [r2, #16]
40010260:	e5823014 	str	r3, [r2, #20]
40010264:	e5823018 	str	r3, [r2, #24]
40010268:	e582301c 	str	r3, [r2, #28]
4001026c:	e5823020 	str	r3, [r2, #32]
40010270:	e5823024 	str	r3, [r2, #36]	; 0x24
40010274:	e5823028 	str	r3, [r2, #40]	; 0x28
40010278:	e582302c 	str	r3, [r2, #44]	; 0x2c
4001027c:	e590300c 	ldr	r3, [r0, #12]
40010280:	e5823030 	str	r3, [r2, #48]	; 0x30
40010284:	e3a03000 	mov	r3, #0
40010288:	e5823034 	str	r3, [r2, #52]	; 0x34
4001028c:	e5823038 	str	r3, [r2, #56]	; 0x38
40010290:	e582303c 	str	r3, [r2, #60]	; 0x3c
40010294:	e5821040 	str	r1, [r2, #64]	; 0x40
40010298:	e5823044 	str	r3, [r2, #68]	; 0x44
4001029c:	e10f1000 	mrs	r1, CPSR
400102a0:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400102a4:	e3813013 	orr	r3, r1, #19
400102a8:	e5823004 	str	r3, [r2, #4]
400102ac:	e5802008 	str	r2, [r0, #8]
400102b0:	e12fff1e 	bx	lr

400102b4 <_tx_event_flags_cleanup>:
400102b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400102b8:	e1a04000 	mov	r4, r0
400102bc:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400102c0:	e10f5000 	mrs	r5, CPSR
400102c4:	e3856080 	orr	r6, r5, #128	; 0x80
400102c8:	e121f006 	msr	CPSR_c, r6
400102cc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400102d0:	e3500000 	cmp	r0, #0
400102d4:	0a000026 	beq	40010374 <_tx_event_flags_cleanup+0xc0>
400102d8:	e3570000 	cmp	r7, #0
400102dc:	0a000024 	beq	40010374 <_tx_event_flags_cleanup+0xc0>
400102e0:	e5970000 	ldr	r0, [r7]
400102e4:	e59f1090 	ldr	r1, [pc, #144]	; 4001037c <_tx_event_flags_cleanup+0xc8>
400102e8:	e1500001 	cmp	r0, r1
400102ec:	1a000020 	bne	40010374 <_tx_event_flags_cleanup+0xc0>
400102f0:	e3a00000 	mov	r0, #0
400102f4:	e5840068 	str	r0, [r4, #104]	; 0x68
400102f8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102fc:	e1500004 	cmp	r0, r4
40010300:	1a000002 	bne	40010310 <_tx_event_flags_cleanup+0x5c>
40010304:	e3a00000 	mov	r0, #0
40010308:	e5870010 	str	r0, [r7, #16]
4001030c:	ea000007 	b	40010330 <_tx_event_flags_cleanup+0x7c>
40010310:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010314:	e5870010 	str	r0, [r7, #16]
40010318:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001031c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010320:	e5810074 	str	r0, [r1, #116]	; 0x74
40010324:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010328:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001032c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010330:	e5970014 	ldr	r0, [r7, #20]
40010334:	e2400001 	sub	r0, r0, #1
40010338:	e5870014 	str	r0, [r7, #20]
4001033c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010340:	e3500007 	cmp	r0, #7
40010344:	1a00000a 	bne	40010374 <_tx_event_flags_cleanup+0xc0>
40010348:	e3a00007 	mov	r0, #7
4001034c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010350:	e59f0028 	ldr	r0, [pc, #40]	; 40010380 <_tx_event_flags_cleanup+0xcc>
40010354:	e5900000 	ldr	r0, [r0]
40010358:	e2800001 	add	r0, r0, #1
4001035c:	e59f101c 	ldr	r1, [pc, #28]	; 40010380 <_tx_event_flags_cleanup+0xcc>
40010360:	e5810000 	str	r0, [r1]
40010364:	e121f005 	msr	CPSR_c, r5
40010368:	e1a00004 	mov	r0, r4
4001036c:	ebfffbcc 	bl	4000f2a4 <_tx_thread_system_resume>
40010370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010374:	e121f005 	msr	CPSR_c, r5
40010378:	eafffffc 	b	40010370 <_tx_event_flags_cleanup+0xbc>
4001037c:	4456444e 	.word	0x4456444e
40010380:	400312dc 	.word	0x400312dc

40010384 <_tx_mutex_cleanup>:
40010384:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010388:	e1a04000 	mov	r4, r0
4001038c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010390:	e10f5000 	mrs	r5, CPSR
40010394:	e3856080 	orr	r6, r5, #128	; 0x80
40010398:	e121f006 	msr	CPSR_c, r6
4001039c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400103a0:	e3500000 	cmp	r0, #0
400103a4:	0a000026 	beq	40010444 <_tx_mutex_cleanup+0xc0>
400103a8:	e3570000 	cmp	r7, #0
400103ac:	0a000024 	beq	40010444 <_tx_mutex_cleanup+0xc0>
400103b0:	e5970000 	ldr	r0, [r7]
400103b4:	e59f1090 	ldr	r1, [pc, #144]	; 4001044c <_tx_mutex_cleanup+0xc8>
400103b8:	e1500001 	cmp	r0, r1
400103bc:	1a000020 	bne	40010444 <_tx_mutex_cleanup+0xc0>
400103c0:	e3a00000 	mov	r0, #0
400103c4:	e5840068 	str	r0, [r4, #104]	; 0x68
400103c8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400103cc:	e1500004 	cmp	r0, r4
400103d0:	1a000002 	bne	400103e0 <_tx_mutex_cleanup+0x5c>
400103d4:	e3a00000 	mov	r0, #0
400103d8:	e587001c 	str	r0, [r7, #28]
400103dc:	ea000007 	b	40010400 <_tx_mutex_cleanup+0x7c>
400103e0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400103e4:	e587001c 	str	r0, [r7, #28]
400103e8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400103ec:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400103f0:	e5810074 	str	r0, [r1, #116]	; 0x74
400103f4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400103f8:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400103fc:	e5810070 	str	r0, [r1, #112]	; 0x70
40010400:	e5970020 	ldr	r0, [r7, #32]
40010404:	e2400001 	sub	r0, r0, #1
40010408:	e5870020 	str	r0, [r7, #32]
4001040c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010410:	e350000d 	cmp	r0, #13
40010414:	1a00000a 	bne	40010444 <_tx_mutex_cleanup+0xc0>
40010418:	e3a0001d 	mov	r0, #29
4001041c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010420:	e59f0028 	ldr	r0, [pc, #40]	; 40010450 <_tx_mutex_cleanup+0xcc>
40010424:	e5900000 	ldr	r0, [r0]
40010428:	e2800001 	add	r0, r0, #1
4001042c:	e59f101c 	ldr	r1, [pc, #28]	; 40010450 <_tx_mutex_cleanup+0xcc>
40010430:	e5810000 	str	r0, [r1]
40010434:	e121f005 	msr	CPSR_c, r5
40010438:	e1a00004 	mov	r0, r4
4001043c:	ebfffb98 	bl	4000f2a4 <_tx_thread_system_resume>
40010440:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010444:	e121f005 	msr	CPSR_c, r5
40010448:	eafffffc 	b	40010440 <_tx_mutex_cleanup+0xbc>
4001044c:	4d555445 	.word	0x4d555445
40010450:	400312dc 	.word	0x400312dc

40010454 <_tx_mutex_prioritize>:
40010454:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40010458:	e1a04000 	mov	r4, r0
4001045c:	e10f5000 	mrs	r5, CPSR
40010460:	e3856080 	orr	r6, r5, #128	; 0x80
40010464:	e121f006 	msr	CPSR_c, r6
40010468:	e59f1234 	ldr	r1, [pc, #564]	; 400106a4 <_tx_mutex_prioritize+0x250>
4001046c:	e5910000 	ldr	r0, [r1]
40010470:	e3500000 	cmp	r0, #0
40010474:	0a000032 	beq	40010544 <_tx_mutex_prioritize+0xf0>
40010478:	e59f1228 	ldr	r1, [pc, #552]	; 400106a8 <_tx_mutex_prioritize+0x254>
4001047c:	e5911000 	ldr	r1, [r1]
40010480:	e2811001 	add	r1, r1, #1
40010484:	e59f221c 	ldr	r2, [pc, #540]	; 400106a8 <_tx_mutex_prioritize+0x254>
40010488:	e5821000 	str	r1, [r2]
4001048c:	e580100c 	str	r1, [r0, #12]
40010490:	e59f1214 	ldr	r1, [pc, #532]	; 400106ac <_tx_mutex_prioritize+0x258>
40010494:	e5911000 	ldr	r1, [r1]
40010498:	e3510000 	cmp	r1, #0
4001049c:	1a000006 	bne	400104bc <_tx_mutex_prioritize+0x68>
400104a0:	e59f1208 	ldr	r1, [pc, #520]	; 400106b0 <_tx_mutex_prioritize+0x25c>
400104a4:	e5911000 	ldr	r1, [r1]
400104a8:	e5801000 	str	r1, [r0]
400104ac:	e5901000 	ldr	r1, [r0]
400104b0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400104b4:	e5801004 	str	r1, [r0, #4]
400104b8:	ea00000d 	b	400104f4 <_tx_mutex_prioritize+0xa0>
400104bc:	e59f11e8 	ldr	r1, [pc, #488]	; 400106ac <_tx_mutex_prioritize+0x258>
400104c0:	e5911000 	ldr	r1, [r1]
400104c4:	e59f21e8 	ldr	r2, [pc, #488]	; 400106b4 <_tx_mutex_prioritize+0x260>
400104c8:	e1510002 	cmp	r1, r2
400104cc:	2a000004 	bcs	400104e4 <_tx_mutex_prioritize+0x90>
400104d0:	e3e01000 	mvn	r1, #0
400104d4:	e5801000 	str	r1, [r0]
400104d8:	e3a01000 	mov	r1, #0
400104dc:	e5801004 	str	r1, [r0, #4]
400104e0:	ea000003 	b	400104f4 <_tx_mutex_prioritize+0xa0>
400104e4:	e59f11c8 	ldr	r1, [pc, #456]	; 400106b4 <_tx_mutex_prioritize+0x260>
400104e8:	e5801000 	str	r1, [r0]
400104ec:	e3a01000 	mov	r1, #0
400104f0:	e5801004 	str	r1, [r0, #4]
400104f4:	e3a01038 	mov	r1, #56	; 0x38
400104f8:	e5801008 	str	r1, [r0, #8]
400104fc:	e5804010 	str	r4, [r0, #16]
40010500:	e5941020 	ldr	r1, [r4, #32]
40010504:	e5801014 	str	r1, [r0, #20]
40010508:	e580d018 	str	sp, [r0, #24]
4001050c:	e3a01000 	mov	r1, #0
40010510:	e580101c 	str	r1, [r0, #28]
40010514:	e2800020 	add	r0, r0, #32
40010518:	e59f1198 	ldr	r1, [pc, #408]	; 400106b8 <_tx_mutex_prioritize+0x264>
4001051c:	e5911000 	ldr	r1, [r1]
40010520:	e1500001 	cmp	r0, r1
40010524:	3a000001 	bcc	40010530 <_tx_mutex_prioritize+0xdc>
40010528:	e59f118c 	ldr	r1, [pc, #396]	; 400106bc <_tx_mutex_prioritize+0x268>
4001052c:	e5910000 	ldr	r0, [r1]
40010530:	e59f116c 	ldr	r1, [pc, #364]	; 400106a4 <_tx_mutex_prioritize+0x250>
40010534:	e5810000 	str	r0, [r1]
40010538:	e59f1180 	ldr	r1, [pc, #384]	; 400106c0 <_tx_mutex_prioritize+0x26c>
4001053c:	e5911000 	ldr	r1, [r1]
40010540:	e5810020 	str	r0, [r1, #32]
40010544:	e5940020 	ldr	r0, [r4, #32]
40010548:	e3500002 	cmp	r0, #2
4001054c:	2a000002 	bcs	4001055c <_tx_mutex_prioritize+0x108>
40010550:	e121f005 	msr	CPSR_c, r5
40010554:	e3a00000 	mov	r0, #0
40010558:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4001055c:	e5940020 	ldr	r0, [r4, #32]
40010560:	e3500002 	cmp	r0, #2
40010564:	1a00000c 	bne	4001059c <_tx_mutex_prioritize+0x148>
40010568:	e594001c 	ldr	r0, [r4, #28]
4001056c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010570:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010574:	e594101c 	ldr	r1, [r4, #28]
40010578:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4001057c:	e1500001 	cmp	r0, r1
40010580:	2a000002 	bcs	40010590 <_tx_mutex_prioritize+0x13c>
40010584:	e594001c 	ldr	r0, [r4, #28]
40010588:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001058c:	e584001c 	str	r0, [r4, #28]
40010590:	e121f005 	msr	CPSR_c, r5
40010594:	e3a00000 	mov	r0, #0
40010598:	eaffffee 	b	40010558 <_tx_mutex_prioritize+0x104>
4001059c:	e594901c 	ldr	r9, [r4, #28]
400105a0:	e5940020 	ldr	r0, [r4, #32]
400105a4:	e58d0000 	str	r0, [sp]
400105a8:	e594801c 	ldr	r8, [r4, #28]
400105ac:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400105b0:	e59f010c 	ldr	r0, [pc, #268]	; 400106c4 <_tx_mutex_prioritize+0x270>
400105b4:	e5900000 	ldr	r0, [r0]
400105b8:	e2800001 	add	r0, r0, #1
400105bc:	e59f1100 	ldr	r1, [pc, #256]	; 400106c4 <_tx_mutex_prioritize+0x270>
400105c0:	e5810000 	str	r0, [r1]
400105c4:	e1a00000 	nop			; (mov r0, r0)
400105c8:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400105cc:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
400105d0:	e1500001 	cmp	r0, r1
400105d4:	2a000000 	bcs	400105dc <_tx_mutex_prioritize+0x188>
400105d8:	e1a08007 	mov	r8, r7
400105dc:	e121f005 	msr	CPSR_c, r5
400105e0:	e10f5000 	mrs	r5, CPSR
400105e4:	e3856080 	orr	r6, r5, #128	; 0x80
400105e8:	e121f006 	msr	CPSR_c, r6
400105ec:	e594001c 	ldr	r0, [r4, #28]
400105f0:	e1500009 	cmp	r0, r9
400105f4:	1a000005 	bne	40010610 <_tx_mutex_prioritize+0x1bc>
400105f8:	e5940020 	ldr	r0, [r4, #32]
400105fc:	e59d1000 	ldr	r1, [sp]
40010600:	e1500001 	cmp	r0, r1
40010604:	1a000001 	bne	40010610 <_tx_mutex_prioritize+0x1bc>
40010608:	e5977070 	ldr	r7, [r7, #112]	; 0x70
4001060c:	ea000004 	b	40010624 <_tx_mutex_prioritize+0x1d0>
40010610:	e594901c 	ldr	r9, [r4, #28]
40010614:	e5940020 	ldr	r0, [r4, #32]
40010618:	e58d0000 	str	r0, [sp]
4001061c:	e594801c 	ldr	r8, [r4, #28]
40010620:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010624:	e594001c 	ldr	r0, [r4, #28]
40010628:	e1500007 	cmp	r0, r7
4001062c:	1affffe5 	bne	400105c8 <_tx_mutex_prioritize+0x174>
40010630:	e59f008c 	ldr	r0, [pc, #140]	; 400106c4 <_tx_mutex_prioritize+0x270>
40010634:	e5900000 	ldr	r0, [r0]
40010638:	e2400001 	sub	r0, r0, #1
4001063c:	e59f1080 	ldr	r1, [pc, #128]	; 400106c4 <_tx_mutex_prioritize+0x270>
40010640:	e5810000 	str	r0, [r1]
40010644:	e594001c 	ldr	r0, [r4, #28]
40010648:	e1500008 	cmp	r0, r8
4001064c:	0a000010 	beq	40010694 <_tx_mutex_prioritize+0x240>
40010650:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010654:	e5981070 	ldr	r1, [r8, #112]	; 0x70
40010658:	e5810074 	str	r0, [r1, #116]	; 0x74
4001065c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010660:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010664:	e5810070 	str	r0, [r1, #112]	; 0x70
40010668:	e594001c 	ldr	r0, [r4, #28]
4001066c:	e5880070 	str	r0, [r8, #112]	; 0x70
40010670:	e594001c 	ldr	r0, [r4, #28]
40010674:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010678:	e5880074 	str	r0, [r8, #116]	; 0x74
4001067c:	e594001c 	ldr	r0, [r4, #28]
40010680:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010684:	e5808070 	str	r8, [r0, #112]	; 0x70
40010688:	e594001c 	ldr	r0, [r4, #28]
4001068c:	e5808074 	str	r8, [r0, #116]	; 0x74
40010690:	e584801c 	str	r8, [r4, #28]
40010694:	e121f005 	msr	CPSR_c, r5
40010698:	ebfffad5 	bl	4000f1f4 <_tx_thread_system_preempt_check>
4001069c:	e3a00000 	mov	r0, #0
400106a0:	eaffffac 	b	40010558 <_tx_mutex_prioritize+0x104>
400106a4:	4003132c 	.word	0x4003132c
400106a8:	40031330 	.word	0x40031330
400106ac:	400312b8 	.word	0x400312b8
400106b0:	400312c0 	.word	0x400312c0
400106b4:	f0f0f0f0 	.word	0xf0f0f0f0
400106b8:	40031328 	.word	0x40031328
400106bc:	40031324 	.word	0x40031324
400106c0:	40031318 	.word	0x40031318
400106c4:	400312dc 	.word	0x400312dc

400106c8 <_tx_queue_cleanup>:
400106c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400106cc:	e1a04000 	mov	r4, r0
400106d0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400106d4:	e10f5000 	mrs	r5, CPSR
400106d8:	e3856080 	orr	r6, r5, #128	; 0x80
400106dc:	e121f006 	msr	CPSR_c, r6
400106e0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400106e4:	e3500000 	cmp	r0, #0
400106e8:	0a00002c 	beq	400107a0 <_tx_queue_cleanup+0xd8>
400106ec:	e3570000 	cmp	r7, #0
400106f0:	0a00002a 	beq	400107a0 <_tx_queue_cleanup+0xd8>
400106f4:	e5970000 	ldr	r0, [r7]
400106f8:	e59f10a8 	ldr	r1, [pc, #168]	; 400107a8 <_tx_queue_cleanup+0xe0>
400106fc:	e1500001 	cmp	r0, r1
40010700:	1a000026 	bne	400107a0 <_tx_queue_cleanup+0xd8>
40010704:	e3a00000 	mov	r0, #0
40010708:	e5840068 	str	r0, [r4, #104]	; 0x68
4001070c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010710:	e1500004 	cmp	r0, r4
40010714:	1a000002 	bne	40010724 <_tx_queue_cleanup+0x5c>
40010718:	e3a00000 	mov	r0, #0
4001071c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010720:	ea000007 	b	40010744 <_tx_queue_cleanup+0x7c>
40010724:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010728:	e5870028 	str	r0, [r7, #40]	; 0x28
4001072c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010730:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010734:	e5810074 	str	r0, [r1, #116]	; 0x74
40010738:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001073c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010740:	e5810070 	str	r0, [r1, #112]	; 0x70
40010744:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010748:	e2400001 	sub	r0, r0, #1
4001074c:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010750:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010754:	e3500005 	cmp	r0, #5
40010758:	1a000010 	bne	400107a0 <_tx_queue_cleanup+0xd8>
4001075c:	e5970010 	ldr	r0, [r7, #16]
40010760:	e3500000 	cmp	r0, #0
40010764:	0a000002 	beq	40010774 <_tx_queue_cleanup+0xac>
40010768:	e3a0000b 	mov	r0, #11
4001076c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010770:	ea000001 	b	4001077c <_tx_queue_cleanup+0xb4>
40010774:	e3a0000a 	mov	r0, #10
40010778:	e5840084 	str	r0, [r4, #132]	; 0x84
4001077c:	e59f0028 	ldr	r0, [pc, #40]	; 400107ac <_tx_queue_cleanup+0xe4>
40010780:	e5900000 	ldr	r0, [r0]
40010784:	e2800001 	add	r0, r0, #1
40010788:	e59f101c 	ldr	r1, [pc, #28]	; 400107ac <_tx_queue_cleanup+0xe4>
4001078c:	e5810000 	str	r0, [r1]
40010790:	e121f005 	msr	CPSR_c, r5
40010794:	e1a00004 	mov	r0, r4
40010798:	ebfffac1 	bl	4000f2a4 <_tx_thread_system_resume>
4001079c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400107a0:	e121f005 	msr	CPSR_c, r5
400107a4:	eafffffc 	b	4001079c <_tx_queue_cleanup+0xd4>
400107a8:	51554555 	.word	0x51554555
400107ac:	400312dc 	.word	0x400312dc

400107b0 <strcpy>:
400107b0:	e0202001 	eor	r2, r0, r1
400107b4:	e1a0c000 	mov	ip, r0
400107b8:	e3120003 	tst	r2, #3
400107bc:	1a000032 	bne	4001088c <strcpy+0xdc>
400107c0:	e3110003 	tst	r1, #3
400107c4:	1a000021 	bne	40010850 <strcpy+0xa0>
400107c8:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
400107cc:	e3a05001 	mov	r5, #1
400107d0:	e1855405 	orr	r5, r5, r5, lsl #8
400107d4:	e1855805 	orr	r5, r5, r5, lsl #16
400107d8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
400107dc:	e3110004 	tst	r1, #4
400107e0:	e4913004 	ldr	r3, [r1], #4
400107e4:	0a000005 	beq	40010800 <strcpy+0x50>
400107e8:	e0432005 	sub	r2, r3, r5
400107ec:	e1d22003 	bics	r2, r2, r3
400107f0:	e1120385 	tst	r2, r5, lsl #7
400107f4:	048c3004 	streq	r3, [ip], #4
400107f8:	04913004 	ldreq	r3, [r1], #4
400107fc:	1a00000c 	bne	40010834 <strcpy+0x84>
40010800:	e4914004 	ldr	r4, [r1], #4
40010804:	e0432005 	sub	r2, r3, r5
40010808:	e1d22003 	bics	r2, r2, r3
4001080c:	e1120385 	tst	r2, r5, lsl #7
40010810:	e0442005 	sub	r2, r4, r5
40010814:	1a000006 	bne	40010834 <strcpy+0x84>
40010818:	e48c3004 	str	r3, [ip], #4
4001081c:	e1d22004 	bics	r2, r2, r4
40010820:	e1120385 	tst	r2, r5, lsl #7
40010824:	04913004 	ldreq	r3, [r1], #4
40010828:	048c4004 	streq	r4, [ip], #4
4001082c:	0afffff3 	beq	40010800 <strcpy+0x50>
40010830:	e1a03004 	mov	r3, r4
40010834:	e4cc3001 	strb	r3, [ip], #1
40010838:	e31300ff 	tst	r3, #255	; 0xff
4001083c:	e1a03463 	ror	r3, r3, #8
40010840:	1afffffb 	bne	40010834 <strcpy+0x84>
40010844:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010848:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
4001084c:	e12fff1e 	bx	lr
40010850:	e3110001 	tst	r1, #1
40010854:	0a000003 	beq	40010868 <strcpy+0xb8>
40010858:	e4d12001 	ldrb	r2, [r1], #1
4001085c:	e4cc2001 	strb	r2, [ip], #1
40010860:	e3520000 	cmp	r2, #0
40010864:	012fff1e 	bxeq	lr
40010868:	e3110002 	tst	r1, #2
4001086c:	0affffd5 	beq	400107c8 <strcpy+0x18>
40010870:	e0d120b2 	ldrh	r2, [r1], #2
40010874:	e31200ff 	tst	r2, #255	; 0xff
40010878:	10cc20b2 	strhne	r2, [ip], #2
4001087c:	05cc2000 	strbeq	r2, [ip]
40010880:	13120cff 	tstne	r2, #65280	; 0xff00
40010884:	1affffcf 	bne	400107c8 <strcpy+0x18>
40010888:	e12fff1e 	bx	lr
4001088c:	e4d12001 	ldrb	r2, [r1], #1
40010890:	e4cc2001 	strb	r2, [ip], #1
40010894:	e3520000 	cmp	r2, #0
40010898:	1afffffb 	bne	4001088c <strcpy+0xdc>
4001089c:	e12fff1e 	bx	lr

400108a0 <strlen>:
400108a0:	e3c01003 	bic	r1, r0, #3
400108a4:	e2100003 	ands	r0, r0, #3
400108a8:	e2600000 	rsb	r0, r0, #0
400108ac:	e4913004 	ldr	r3, [r1], #4
400108b0:	e280c004 	add	ip, r0, #4
400108b4:	e1a0c18c 	lsl	ip, ip, #3
400108b8:	e3e02000 	mvn	r2, #0
400108bc:	11833c32 	orrne	r3, r3, r2, lsr ip
400108c0:	e3a0c001 	mov	ip, #1
400108c4:	e18cc40c 	orr	ip, ip, ip, lsl #8
400108c8:	e18cc80c 	orr	ip, ip, ip, lsl #16
400108cc:	e043200c 	sub	r2, r3, ip
400108d0:	e1c22003 	bic	r2, r2, r3
400108d4:	e012238c 	ands	r2, r2, ip, lsl #7
400108d8:	04913004 	ldreq	r3, [r1], #4
400108dc:	02800004 	addeq	r0, r0, #4
400108e0:	0afffff9 	beq	400108cc <strlen+0x2c>
400108e4:	e31300ff 	tst	r3, #255	; 0xff
400108e8:	12800001 	addne	r0, r0, #1
400108ec:	13130cff 	tstne	r3, #65280	; 0xff00
400108f0:	12800001 	addne	r0, r0, #1
400108f4:	131308ff 	tstne	r3, #16711680	; 0xff0000
400108f8:	12800001 	addne	r0, r0, #1
400108fc:	e12fff1e 	bx	lr

40010900 <__aeabi_uidiv>:
40010900:	e2512001 	subs	r2, r1, #1
40010904:	012fff1e 	bxeq	lr
40010908:	3a000036 	bcc	400109e8 <__aeabi_uidiv+0xe8>
4001090c:	e1500001 	cmp	r0, r1
40010910:	9a000022 	bls	400109a0 <__aeabi_uidiv+0xa0>
40010914:	e1110002 	tst	r1, r2
40010918:	0a000023 	beq	400109ac <__aeabi_uidiv+0xac>
4001091c:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010920:	01a01181 	lsleq	r1, r1, #3
40010924:	03a03008 	moveq	r3, #8
40010928:	13a03001 	movne	r3, #1
4001092c:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010930:	31510000 	cmpcc	r1, r0
40010934:	31a01201 	lslcc	r1, r1, #4
40010938:	31a03203 	lslcc	r3, r3, #4
4001093c:	3afffffa 	bcc	4001092c <__aeabi_uidiv+0x2c>
40010940:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010944:	31510000 	cmpcc	r1, r0
40010948:	31a01081 	lslcc	r1, r1, #1
4001094c:	31a03083 	lslcc	r3, r3, #1
40010950:	3afffffa 	bcc	40010940 <__aeabi_uidiv+0x40>
40010954:	e3a02000 	mov	r2, #0
40010958:	e1500001 	cmp	r0, r1
4001095c:	20400001 	subcs	r0, r0, r1
40010960:	21822003 	orrcs	r2, r2, r3
40010964:	e15000a1 	cmp	r0, r1, lsr #1
40010968:	204000a1 	subcs	r0, r0, r1, lsr #1
4001096c:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010970:	e1500121 	cmp	r0, r1, lsr #2
40010974:	20400121 	subcs	r0, r0, r1, lsr #2
40010978:	21822123 	orrcs	r2, r2, r3, lsr #2
4001097c:	e15001a1 	cmp	r0, r1, lsr #3
40010980:	204001a1 	subcs	r0, r0, r1, lsr #3
40010984:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010988:	e3500000 	cmp	r0, #0
4001098c:	11b03223 	lsrsne	r3, r3, #4
40010990:	11a01221 	lsrne	r1, r1, #4
40010994:	1affffef 	bne	40010958 <__aeabi_uidiv+0x58>
40010998:	e1a00002 	mov	r0, r2
4001099c:	e12fff1e 	bx	lr
400109a0:	03a00001 	moveq	r0, #1
400109a4:	13a00000 	movne	r0, #0
400109a8:	e12fff1e 	bx	lr
400109ac:	e3510801 	cmp	r1, #65536	; 0x10000
400109b0:	21a01821 	lsrcs	r1, r1, #16
400109b4:	23a02010 	movcs	r2, #16
400109b8:	33a02000 	movcc	r2, #0
400109bc:	e3510c01 	cmp	r1, #256	; 0x100
400109c0:	21a01421 	lsrcs	r1, r1, #8
400109c4:	22822008 	addcs	r2, r2, #8
400109c8:	e3510010 	cmp	r1, #16
400109cc:	21a01221 	lsrcs	r1, r1, #4
400109d0:	22822004 	addcs	r2, r2, #4
400109d4:	e3510004 	cmp	r1, #4
400109d8:	82822003 	addhi	r2, r2, #3
400109dc:	908220a1 	addls	r2, r2, r1, lsr #1
400109e0:	e1a00230 	lsr	r0, r0, r2
400109e4:	e12fff1e 	bx	lr
400109e8:	e3500000 	cmp	r0, #0
400109ec:	13e00000 	mvnne	r0, #0
400109f0:	ea000059 	b	40010b5c <__aeabi_idiv0>

400109f4 <__aeabi_uidivmod>:
400109f4:	e3510000 	cmp	r1, #0
400109f8:	0afffffa 	beq	400109e8 <__aeabi_uidiv+0xe8>
400109fc:	e92d4003 	push	{r0, r1, lr}
40010a00:	ebffffbe 	bl	40010900 <__aeabi_uidiv>
40010a04:	e8bd4006 	pop	{r1, r2, lr}
40010a08:	e0030092 	mul	r3, r2, r0
40010a0c:	e0411003 	sub	r1, r1, r3
40010a10:	e12fff1e 	bx	lr

40010a14 <__aeabi_idiv>:
40010a14:	e3510000 	cmp	r1, #0
40010a18:	0a000043 	beq	40010b2c <.divsi3_skip_div0_test+0x110>

40010a1c <.divsi3_skip_div0_test>:
40010a1c:	e020c001 	eor	ip, r0, r1
40010a20:	42611000 	rsbmi	r1, r1, #0
40010a24:	e2512001 	subs	r2, r1, #1
40010a28:	0a000027 	beq	40010acc <.divsi3_skip_div0_test+0xb0>
40010a2c:	e1b03000 	movs	r3, r0
40010a30:	42603000 	rsbmi	r3, r0, #0
40010a34:	e1530001 	cmp	r3, r1
40010a38:	9a000026 	bls	40010ad8 <.divsi3_skip_div0_test+0xbc>
40010a3c:	e1110002 	tst	r1, r2
40010a40:	0a000028 	beq	40010ae8 <.divsi3_skip_div0_test+0xcc>
40010a44:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010a48:	01a01181 	lsleq	r1, r1, #3
40010a4c:	03a02008 	moveq	r2, #8
40010a50:	13a02001 	movne	r2, #1
40010a54:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010a58:	31510003 	cmpcc	r1, r3
40010a5c:	31a01201 	lslcc	r1, r1, #4
40010a60:	31a02202 	lslcc	r2, r2, #4
40010a64:	3afffffa 	bcc	40010a54 <.divsi3_skip_div0_test+0x38>
40010a68:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010a6c:	31510003 	cmpcc	r1, r3
40010a70:	31a01081 	lslcc	r1, r1, #1
40010a74:	31a02082 	lslcc	r2, r2, #1
40010a78:	3afffffa 	bcc	40010a68 <.divsi3_skip_div0_test+0x4c>
40010a7c:	e3a00000 	mov	r0, #0
40010a80:	e1530001 	cmp	r3, r1
40010a84:	20433001 	subcs	r3, r3, r1
40010a88:	21800002 	orrcs	r0, r0, r2
40010a8c:	e15300a1 	cmp	r3, r1, lsr #1
40010a90:	204330a1 	subcs	r3, r3, r1, lsr #1
40010a94:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010a98:	e1530121 	cmp	r3, r1, lsr #2
40010a9c:	20433121 	subcs	r3, r3, r1, lsr #2
40010aa0:	21800122 	orrcs	r0, r0, r2, lsr #2
40010aa4:	e15301a1 	cmp	r3, r1, lsr #3
40010aa8:	204331a1 	subcs	r3, r3, r1, lsr #3
40010aac:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010ab0:	e3530000 	cmp	r3, #0
40010ab4:	11b02222 	lsrsne	r2, r2, #4
40010ab8:	11a01221 	lsrne	r1, r1, #4
40010abc:	1affffef 	bne	40010a80 <.divsi3_skip_div0_test+0x64>
40010ac0:	e35c0000 	cmp	ip, #0
40010ac4:	42600000 	rsbmi	r0, r0, #0
40010ac8:	e12fff1e 	bx	lr
40010acc:	e13c0000 	teq	ip, r0
40010ad0:	42600000 	rsbmi	r0, r0, #0
40010ad4:	e12fff1e 	bx	lr
40010ad8:	33a00000 	movcc	r0, #0
40010adc:	01a00fcc 	asreq	r0, ip, #31
40010ae0:	03800001 	orreq	r0, r0, #1
40010ae4:	e12fff1e 	bx	lr
40010ae8:	e3510801 	cmp	r1, #65536	; 0x10000
40010aec:	21a01821 	lsrcs	r1, r1, #16
40010af0:	23a02010 	movcs	r2, #16
40010af4:	33a02000 	movcc	r2, #0
40010af8:	e3510c01 	cmp	r1, #256	; 0x100
40010afc:	21a01421 	lsrcs	r1, r1, #8
40010b00:	22822008 	addcs	r2, r2, #8
40010b04:	e3510010 	cmp	r1, #16
40010b08:	21a01221 	lsrcs	r1, r1, #4
40010b0c:	22822004 	addcs	r2, r2, #4
40010b10:	e3510004 	cmp	r1, #4
40010b14:	82822003 	addhi	r2, r2, #3
40010b18:	908220a1 	addls	r2, r2, r1, lsr #1
40010b1c:	e35c0000 	cmp	ip, #0
40010b20:	e1a00233 	lsr	r0, r3, r2
40010b24:	42600000 	rsbmi	r0, r0, #0
40010b28:	e12fff1e 	bx	lr
40010b2c:	e3500000 	cmp	r0, #0
40010b30:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010b34:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010b38:	ea000007 	b	40010b5c <__aeabi_idiv0>

40010b3c <__aeabi_idivmod>:
40010b3c:	e3510000 	cmp	r1, #0
40010b40:	0afffff9 	beq	40010b2c <.divsi3_skip_div0_test+0x110>
40010b44:	e92d4003 	push	{r0, r1, lr}
40010b48:	ebffffb3 	bl	40010a1c <.divsi3_skip_div0_test>
40010b4c:	e8bd4006 	pop	{r1, r2, lr}
40010b50:	e0030092 	mul	r3, r2, r0
40010b54:	e0411003 	sub	r1, r1, r3
40010b58:	e12fff1e 	bx	lr

40010b5c <__aeabi_idiv0>:
40010b5c:	e12fff1e 	bx	lr

40010b60 <DelayArray>:
40010b60:	010402bc 01040104 010402bc 01040104     ................
40010b70:	01040104 01040104 01040104 01040104     ................
40010b80:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010b90:	02bc0104 010402bc 010402bc 010401f4     ................
40010ba0:	01040104 00000104 00000000 00000000     ................
	...
40010be0:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010bf0:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010c00:	75657551 73252065 61747320 25206574     Queue %s state %
40010c10:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010c20:	68632065 206b6365 75657571 20444965     e check queueID 
40010c30:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010c40:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010c50:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010c60:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010c70:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010c80:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010c90:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010ca0:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010cb0:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010cc0:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010cd0:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010ce0:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010cf0:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010d00:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010d10:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010d20:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010d30:	00000a0d                                ....

40010d34 <CyFxUSBDeviceDscr>:
40010d34:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010d44:	00000100                                ....

40010d48 <CyFxUSBDeviceDscrSS>:
40010d48:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010d58:	00000100                                ....

40010d5c <CyFxUSBDeviceQualDscr>:
40010d5c:	0200060a 400102ef 00000001              .......@....

40010d68 <CyFxUSBFSConfigDscr>:
40010d68:	00090209 80000100 00000032              ........2...

40010d74 <CyFxUSBHSConfigDscr>:
40010d74:	01240209 80000102 000b08fa 00030e02     ..$.............
40010d84:	00040900 010e0100 240d0000 50010001     ...........$...P
40010d94:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010da4:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010db4:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010dc4:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010dd4:	03240900 00010104 05070003 00400382     ..$...........@.
40010de4:	03250508 04090040 0e000001 0e000002     ..%.@...........
40010df4:	75010124 04008300 01010102 04241b00     $..u..........$.
40010e04:	55590201 00003259 00800010 3800aa00     ..YUY2.........8
40010e14:	0110719b 00000608 0105241e e0028002     .q.......$......
40010e24:	d4e00001 d4e0000e 0960000e 05161500     ..........`.....
40010e34:	16150100 241e0005 e0020205 00014001     .......$.....@..
40010e44:	000ed4e0 000ed4e0 150004b0 01000516     ................
40010e54:	00051615 0003240a e0028001 24060001     .....$.........$
40010e64:	0000000d 01010409 00020e01 83050700     ................
40010e74:	01140005 02010409 00020e01 83050700     ................
40010e84:	01130005 03010409 00020e01 83050700     ................
40010e94:	01040005                                ....

40010e98 <CyFxUSBBOSDscr>:
40010e98:	00160f05 02100702 00000000 0003100a     ................
40010ea8:	0003000e 00000000                       ........

40010eb0 <CyFxUSBSSConfigDscr>:
40010eb0:	01080209 80000102 000b0864 00030e02     ........d.......
40010ec0:	00040900 010e0100 240d0000 50010001     ...........$...P
40010ed0:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010ee0:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40010ef0:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010f00:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40010f10:	03240900 00010104 05070003 04000382     ..$.............
40010f20:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010f30:	00020e00 01240e00 83005701 01020400     ......$..W......
40010f40:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010f50:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010f60:	80020105 00043807 00317040 003b5380     .....8..@p1..S;.
40010f70:	15003f48 01000516 00051615 0003240a     H?...........$..
40010f80:	38078001 24060004 0000000d 01010409     ...8...$........
40010f90:	00020e01 83050700 01140001 00013006     .............0..
40010fa0:	04090c00 0e010201 07000002 00018305     ................
40010fb0:	3006010c 0400000f                       ...0....

40010fb8 <CyFxUSBStringLangIDDscr>:
40010fb8:	04090304                                ....

40010fbc <CyFxUSBManufactureDscr>:
40010fbc:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010fcc:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010fdc:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010fec:	006f0069 0073006e                       i.o.n.s.

40010ff4 <CyFxUSBProductDscr>:
40010ff4:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40011004:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40011014:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40011024:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40011034:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40011044:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40011054:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40011064:	64612065 73657264 73692073 746f6e20     e address is not
40011074:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40011084:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40011094:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
400110a4:	74655320 6c615620 45206575 726f7272      Set Value Error
400110b4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400110c4:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
400110d4:	0a0d6575 00000000 20656854 6b636974     ue......The tick
400110e4:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
400110f4:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011104:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011114:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011124:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011134:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011144:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011154:	00000a0d                                ....

40011158 <ExTime>:
40011158:	004e009c 00140027 0005000a 00010002     ..N.'...........

40011168 <CyFxGpifConfig>:
40011168:	0000000f 4003066c 4003078c 00000005     ....l..@...@....
40011178:	40030660 0000004c 4003079c              `..@L......@

40011184 <CyFxGpifConfig_usb2_480>:
40011184:	0000009b 400308e0 40030b08 00000009     .......@...@....
40011194:	400308cc 0000004c 40030ba4              ...@L......@

400111a0 <CyFxGpifConfig_usb2_640>:
400111a0:	0000009b 40030ce8 40030f10 00000009     .......@...@....
400111b0:	40030cd4 0000004c 40030fac 20433249     ...@L......@I2C 
400111c0:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
400111d0:	20656854 6d6d6f63 20646e61 75657571     The command queu
400111e0:	73692065 61657220 25207964 64252064     e is ready %d %d
400111f0:	00000a0d 63200a0d 696d6d6f 666f6574     ...... commiteof
40011200:	61747320 3d206574 00642520 6e616843      state = %d.Chan
40011210:	206c656e 20746553 70617257 66207055     nel Set WrapUp f
40011220:	656c6961 45202c64 726f7272 646f6320     ailed, Error cod
40011230:	203d2065 0a0d6425 00000000 6f727245     e = %d......Erro
40011240:	61682072 656c646e 2e2e2e72 25783020     r handler... 0x%
40011250:	000a0d78 6d6d6f43 45207469 6620464f     x...Commit EOF f
40011260:	656c6961 000a2164 6f727245 6e692072     ailed!..Error in
40011270:	6c756d20 68636974 656e6e61 6d6f636c      multichannelcom
40011280:	6274696d 65666675 43203a72 2065646f     mitbuffer: Code 
40011290:	6425203d 6973202c 3d20657a 2c782520     = %d, size = %x,
400112a0:	616d6420 656e6f44 2c782520 6c756620      dmaDone %x, ful
400112b0:	6425206c 00000a0d 45534552 6e652054     l %d....RESET en
400112c0:	6e756f63 65726574 2e2e2e64 78257830     countered...0x%x
400112d0:	25783020 000a0d78 50535553 20444e45      0x%x...SUSPEND 
400112e0:	6f636e65 65746e75 2e646572 78302e2e     encountered...0x
400112f0:	30207825 0d782578 0000000a 20425355     %x 0x%x.....USB 
40011300:	63736964 656e6e6f 64657463 302e2e2e     disconnected...0
40011310:	20782578 78257830 00000a0d 20746553     x%x 0x%x....Set 
40011320:	465f5943 56555f58 49565f43 5f4f4544     CY_FX_UVC_VIDEO_
40011330:	544e4f43 5f4c4f52 55514552 5f545345     CONTROL_REQUEST_
40011340:	4e455645 61462054 64656c69 0a782520     EVENT Failed %x.
40011350:	00000000 20746553 465f5943 56555f58     ....Set CY_FX_UV
40011360:	49565f43 5f4f4544 45525453 525f4d41     C_VIDEO_STREAM_R
40011370:	45555145 455f5453 544e4556 69614620     EQUEST_EVENT Fai
40011380:	2064656c 000a7825 65746c41 74616e72     led %x..Alternat
40011390:	65732065 6e697474 2e302067 000a0d2e     e setting 0.....
400113a0:	65746c41 74616e72 65732065 6e697474     Alternate settin
400113b0:	64252067 0a0d2e2e 00000000 61656c43     g %d........Clea
400113c0:	65662072 72757461 65722065 73657571     r feature reques
400113d0:	65642074 74636574 2e2e6465 00000a0d     t detected......
400113e0:	20656854 20433249 6d6d6f63 20646e61     The I2C command 
400113f0:	30207369 20782578 78257830 25783020     is 0x%x 0x%x 0x%
40011400:	78302078 30207825 20782578 78257830     x 0x%x 0x%x 0x%x
40011410:	25783020 78302078 30207825 20782578      0x%x 0x%x 0x%x 
40011420:	78257830 25783020 000a0d78 6b636162     0x%x 0x%x...back
40011430:	67696c20 63207468 65706d6f 7461736e      light compensat
40011440:	206e6f69 74746573 20676e69 6e207369     ion setting is n
40011450:	6320746f 6572726f 202e7463 25206425     ot correct. %d %
40011460:	000a0d64 20656854 20433249 72727563     d...The I2C curr
40011470:	20746e65 61746164 20736920 20746f6e     ent data is not 
40011480:	69617661 6c62616c 74202e65 61207972     available. try a
40011490:	6e696167 6425202e 0d642520 0000000a     gain. %d %d.....
400114a0:	4d707845 43474126 6e657320 6f742074     ExpM&AGC sent to
400114b0:	736f6820 25202e74 64252064 6425203b      host. %d %d; %d
400114c0:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
400114d0:	746f6720 206e6574 6d6f7266 736f6820      gotten from hos
400114e0:	25202e74 64252064 6425203b 0d642520     t. %d %d; %d %d.
400114f0:	0000000a 20656854 20746567 61746164     ....The get data
40011500:	6f726620 6f68206d 66207473 206c6961      from host fail 
40011510:	6f727265 6f632072 25206564 0a0d2e64     error code %d...
40011520:	00000000 20656854 75716552 20747365     ....The Request 
40011530:	78257830 72617020 74656d61 67207265     0x%x parameter g
40011540:	66207465 206d6f72 74736f68 25783020     et from host 0x%
40011550:	78302078 2f207825 6e657320 6f742064     x 0x%x / send to
40011560:	736f6820 78302074 30207825 0d782578      host 0x%x 0x%x.
40011570:	0000000a 6d6f6f5a 20704f20 65636572     ....Zoom Op rece
40011580:	73657669 54432820 78302029 30207825     ives (CT) 0x%x 0
40011590:	20782578 78257830 00000a0d 61666564     x%x 0x%x....defa
400115a0:	20746c75 656c6573 726f7463 54432820     ult selector (CT
400115b0:	78302029 30207825 0d782578 0000000a     ) 0x%x 0x%x.....
400115c0:	61666564 20746c75 75716572 20747365     default request 
400115d0:	29544328 25783020 78302078 0a0d7825     (CT) 0x%x 0x%x..
400115e0:	00000000 20656854 75716552 20747365     ....The Request 
400115f0:	78257830 72617020 74656d61 67207265     0x%x parameter g
40011600:	66207465 206d6f72 74736f68 54432820     et from host (CT
40011610:	78302029 30207825 20782578 78257830     ) 0x%x 0x%x 0x%x
40011620:	73202f20 20646e65 68206f74 2074736f      / send to host 
40011630:	78257830 25783020 78302078 202c7825     0x%x 0x%x 0x%x, 
40011640:	0a0d6425 00000000 20425355 65657073     %d......USB spee
40011650:	203d2064 65206425 666e6576 2067616c     d = %d evenflag 
40011660:	7830203d 62207825 7165526d 65707954     = 0x%x bmReqType
40011670:	30203d20 0d782578 6552620a 73657571      = 0x%x..bReques
40011680:	203d2074 78257830 61567720 2065756c     t = 0x%x wValue 
40011690:	7830203d 77207825 65646e49 203d2078     = 0x%x wIndex = 
400116a0:	78257830 654c7720 6874676e 30203d20     0x%x wLength = 0
400116b0:	20782578 6c667369 30206761 0d782578     x%x isflag 0x%x.
400116c0:	0000000a 20656854 61666564 20746c75     ....The default 
400116d0:	75746573 65722070 73657571 61762074     setup request va
400116e0:	2065756c 78257830 25783020 000a0d78     lue 0x%x 0x%x...
400116f0:	20656854 74736f68 6d6f6320 646e616d     The host command
40011700:	20736920 20746f6e 72726f63 20746365      is not correct 
40011710:	20726f66 30383031 61632070 6172656d     for 1080p camera
40011720:	25783020 78302078 0a0d7825 00000000      0x%x 0x%x......
40011730:	72506c67 4365626f 206c7274 7e203032     glProbeCtrl 20 ~
40011740:	30203532 2c782578 25783020 30202c78     25 0x%x, 0x%x, 0
40011750:	2c782578 25783020 30202c78 2c782578     x%x, 0x%x, 0x%x,
40011760:	25783020 000d0a78 6f436c67 74696d6d      0x%x...glCommit
40011770:	6c727443 20303220 2035327e 78257830     Ctrl 20 ~25 0x%x
40011780:	7830202c 202c7825 78257830 7830202c     , 0x%x, 0x%x, 0x
40011790:	202c7825 78257830 7830202c 0d0a7825     %x, 0x%x, 0x%x..
400117a0:	00000000 20746553 465f5943 56555f58     ....Set CY_FX_UV
400117b0:	54535f43 4d414552 4556455f 6620544e     C_STREAM_EVENT f
400117c0:	656c6961 78252064 0000000a 20746547     ailed %x....Get 
400117d0:	20435655 6c697473 7274206c 65676769     UVC still trigge
400117e0:	6f632072 6f72746e 6425206c 0d642520     r control %d %d.
400117f0:	0000000a 20435655 6c697473 7274206c     ....UVC still tr
40011800:	65676769 6f632072 6f72746e 6166206c     igger control fa
40011810:	25206c69 64252064 00000a0d 6c696146     il %d %d....Fail
40011820:	74206465 6573206f 6920646e 7265746e     ed to send inter
40011830:	74707572 61747320 2c737574 72724520     rupt status, Err
40011840:	6320726f 2065646f 6425203d 00000a0d     or code = %d....
40011850:	20656854 20746573 20666564 61746164     The set def data
40011860:	25783020 30202c78 2e782578 00000a0d      0x%x, 0x%x.....
40011870:	20656854 20746573 20666564 61746164     The set def data
40011880:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
40011890:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
400118a0:	2e782578 00000a0d 54524155 696e6920     x%x.....UART ini
400118b0:	6c616974 74617a69 206e6f69 6c696166     tialization fail
400118c0:	0a216465 00000000 74736574 52415520     ed!.....test UAR
400118d0:	6f632054 6769666e 00000000 74736574     T config....test
400118e0:	52415520 72742054 66736e61 00007265      UART transfer..
400118f0:	74736574 62656420 00006775 20433249     test debug..I2C 
40011900:	74696e69 696c6169 6974617a 66206e6f     initialization f
40011910:	656c6961 000a2164 20433249 666e6f63     ailed!..I2C conf
40011920:	72756769 6f697461 6166206e 64656c69     iguration failed
40011930:	00000a21 20435655 61657243 45206574     !...UVC Create E
40011940:	746e6576 69616620 2c64656c 72724520     vent failed, Err
40011950:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011960:	4f495047 696e4920 61662074 64656c69     GPIO Init failed
40011970:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011980:	00000a64 4f495047 65764f20 64697272     d...GPIO Overrid
40011990:	61662065 64656c69 7245202c 20726f72     e failed, Error 
400119a0:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
400119b0:	29303228 65764f20 64697272 61662065     (20) Override fa
400119c0:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
400119d0:	25203d20 00000a64 4f495047 29343228      = %d...GPIO(24)
400119e0:	65764f20 64697272 61662065 64656c69      Override failed
400119f0:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011a00:	00000a64 4f495047 74655320 65722820     d...GPIO Set (re
40011a10:	20746573 20293232 666e6f43 45206769     set 22) Config E
40011a20:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
40011a30:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011a40:	6f702820 20726577 20293032 666e6f43      (power 20) Conf
40011a50:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011a60:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011a70:	74655320 6e732820 73207061 20746f68      Set (snap shot 
40011a80:	20293432 666e6f43 45206769 726f7272     24) Config Error
40011a90:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011aa0:	00000a64 20424950 636e7546 6e6f6974     d...PIB Function
40011ab0:	69614620 2064656c 53206f74 74726174      Failed to Start
40011ac0:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011ad0:	00000a64 20425355 636e7546 6e6f6974     d...USB Function
40011ae0:	69614620 2064656c 53206f74 74726174      Failed to Start
40011af0:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011b00:	00000a64 20425355 20746553 70646e45     d...USB Set Endp
40011b10:	746e696f 6e6f6320 20676966 6c696166     oint config fail
40011b20:	69286465 2c29746e 72724520 4320726f     ed(int), Error C
40011b30:	2065646f 6425203d 0000000a 20414d44     ode = %d....DMA 
40011b40:	65746e49 70757272 74532074 73757461     Interrupt Status
40011b50:	61684320 6c656e6e 65724320 6f697461      Channel Creatio
40011b60:	6146206e 64656c69 7245202c 20726f72     n Failed, Error 
40011b70:	65646f43 25203d20 00000a64 6c696146     Code = %d...Fail
40011b80:	74206465 6c61206f 61636f6c 6d206574     ed to allocate m
40011b90:	726f6d65 6f662079 6e692072 72726574     emory for interr
40011ba0:	20747075 74617473 62207375 65666675     upt status buffe
40011bb0:	000a0d72 20414d44 6e616843 206c656e     r...DMA Channel 
40011bc0:	61657243 6e6f6974 6678202e 69737265     Creation. xfersi
40011bd0:	2520657a 73202c64 20657a69 202c6425     ze %d, size %d, 
40011be0:	6e756f63 64252074 6361202c 65766974     count %d, active
40011bf0:	496f7250 2520646e 61202c64 76697463     ProInd %d, activ
40011c00:	6e6f4365 20646e49 000a6425 20414d44     eConInd %d..DMA 
40011c10:	6e616843 206c656e 61657243 6e6f6974     Channel Creation
40011c20:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011c30:	2065646f 6425203d 0000000a 20425355     ode = %d....USB 
40011c40:	6e6e6f43 20746365 6c696166 202c6465     Connect failed, 
40011c50:	6f727245 6f432072 3d206564 0a642520     Error Code = %d.
40011c60:	00000000 20425355 20746553 70646e45     ....USB Set Endp
40011c70:	746e696f 6e6f6320 20676966 6c696166     oint config fail
40011c80:	69286465 2c296f73 72724520 4320726f     ed(iso), Error C
40011c90:	2065646f 6425203d 0000000a 20414d44     ode = %d....DMA 
40011ca0:	6e616843 206c656e 65736552 61462074     Channel Reset Fa
40011cb0:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011cc0:	25203d20 00000a64 20414d44 6e616843      = %d...DMA Chan
40011cd0:	206c656e 20746553 6e617254 72656673     nel Set Transfer
40011ce0:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011cf0:	2065646f 6425203d 0000000a 74736574     ode = %d....test
40011d00:	30203120 0d782578 0000000a 20414d44      1 0x%x.....DMA 
40011d10:	6e616843 206c656e 20746553 6e617254     Channel Set Tran
40011d20:	72656673 69614620 2c64656c 72724520     sfer Failed, Err
40011d30:	4320726f 2065646f 6425203d 00000a0d     or Code = %d....
40011d40:	73200a0d 72657075 69706720 00000066     .. super gpif...
40011d50:	0d206425 6968200a 67206867 00666970     %d .. high gpif.
40011d60:	64616f4c 20676e69 46495047 6e6f4320     Loading GPIF Con
40011d70:	75676966 69746172 66206e6f 656c6961     figuration faile
40011d80:	45202c64 726f7272 646f4320 203d2065     d, Error Code = 
40011d90:	0a0d6425 00000000 72617453 676e6974     %d......Starting
40011da0:	49504720 74732046 20657461 6863616d      GPIF state mach
40011db0:	20656e69 6c696166 202c6465 6f727245     ine failed, Erro
40011dc0:	6f432072 3d206564 0d642520 0000000a     r Code = %d.....
40011dd0:	553a3033 41204356 54207070 61657268     30:UVC App Threa
40011de0:	00000064 553a3133 41204356 45207070     d...31:UVC App E
40011df0:	54203050 61657268 00000064 493a3233     P0 Thread...32:I
40011e00:	41204332 43207070 204c5254 65726854     2C App CTRL Thre
40011e10:	00006461                                ad..

40011e14 <glFx3PartProperties>:
40011e14:	00000000 0000009f 00000010 0000009b     ................
40011e24:	00000020 0000008f 00000030 0000008b      .......0.......
40011e34:	00000004 000000ef 00000104 000000ef     ................
40011e44:	00000184 000000af 00000154 000000e9     ........T.......
40011e54:	000001d4 000000a9 10000004 000000ee     ................
40011e64:	10000104 000000ee 10000184 000000ae     ................
40011e74:	10000154 000000e8 100001d4 000000a8     T...............
40011e84:	00000002 00000077 00000102 00000077     ....w.......w...
40011e94:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011ea4:	10000002 00000076 10000102 00000076     ....v.......v...
40011eb4:	100001c2 00000034 00000258 00000199     ....4...X.......
40011ec4:	00000248 0000019d 00000458 00000299     H.......X.......
40011ed4:	00000448 0000029d 00000848 0000049d     H.......H.......
40011ee4:	10000448 0000029c                       H.......

40011eec <glPmmcCsdValue>:
40011eec:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011efc <glPmmcExtCsdValue>:
40011efc:	40040000 03020200 00000404 32321414     ...@..........22
40011f0c:	00406464 00000000                       dd@.....

40011f14 <glConstGpifDefaults>:
40011f14:	00000220 00000000 00000000 00000000      ...............
40011f24:	000f0000 00000000 00000000 00000082     ................
40011f34:	00000782 00000000 00000000 00000000     ................
	...
40011f88:	00000006 00000000 0000ffff 0000010a     ................
40011f98:	00000000 0000ffff 00000000 0000ffff     ................
40011fa8:	0000010a 00000000 0000ffff 00000000     ................
	...
40012010:	00010400 00010400 00010400 00010400     ................
40012020:	10000000 00000000 00000000 00000000     ................
	...
40012040:	00000001                                ....

40012044 <glGpifConstMaxState>:
40012044:	1f3f7fff                                ..?.

40012048 <CyU3PSSEpTypeMap>:
40012048:	01020003                                ....

4001204c <glUsbMaxPacketSize>:
4001204c:	000003ff 00000040 00000040 00000400     ....@...@.......
4001205c:	00000200 00000400 00000400 00000400     ................
4001206c:	00000400                                ....

40012070 <glUsb3CompliancePatterns>:
40012070:	00000600 0000044a 00000478 000005bc     ....J...x.......
40012080:	00000c00 000005fc 000001fc 00001400     ................
40012090:	00001000                                ....

40012094 <CyU3PFirmwareEntry>:
40012094:	e59f1038 	ldr	r1, [pc, #56]	; 400120d4 <CyU3PFirmwareEntry+0x40>
40012098:	e3e00000 	mvn	r0, #0
4001209c:	e5810000 	str	r0, [r1]
400120a0:	e59f1030 	ldr	r1, [pc, #48]	; 400120d8 <CyU3PFirmwareEntry+0x44>
400120a4:	e2411008 	sub	r1, r1, #8
400120a8:	e3a02a01 	mov	r2, #4096	; 0x1000
400120ac:	e3a000d3 	mov	r0, #211	; 0xd3
400120b0:	e121f000 	msr	CPSR_c, r0
400120b4:	e0811002 	add	r1, r1, r2
400120b8:	e3c11007 	bic	r1, r1, #7
400120bc:	e1a0d001 	mov	sp, r1
400120c0:	eb000271 	bl	40012a8c <CyU3PSysSetupMMU>
400120c4:	eb000620 	bl	4001394c <CyU3PSysCheckBootState>
400120c8:	eb000003 	bl	400120dc <CyU3PSetupStackPtrs>
400120cc:	eb0000d1 	bl	40012418 <__CyU3PEntryKeep>
400120d0:	eaffc546 	b	400035f0 <CyU3PToolChainInit>
400120d4:	fffff014 	.word	0xfffff014
400120d8:	40002000 	.word	0x40002000

400120dc <CyU3PSetupStackPtrs>:
400120dc:	e3a01201 	mov	r1, #268435456	; 0x10000000
400120e0:	e2411008 	sub	r1, r1, #8
400120e4:	e3a02b02 	mov	r2, #2048	; 0x800
400120e8:	e3a030df 	mov	r3, #223	; 0xdf
400120ec:	e12ff003 	msr	CPSR_fsxc, r3
400120f0:	e0811002 	add	r1, r1, r2
400120f4:	e3c11007 	bic	r1, r1, #7
400120f8:	e1a0d001 	mov	sp, r1
400120fc:	e3a0a000 	mov	sl, #0
40012100:	e3a0b000 	mov	fp, #0
40012104:	e3a02c01 	mov	r2, #256	; 0x100
40012108:	e3a030d7 	mov	r3, #215	; 0xd7
4001210c:	e12ff003 	msr	CPSR_fsxc, r3
40012110:	e0811002 	add	r1, r1, r2
40012114:	e3c11007 	bic	r1, r1, #7
40012118:	e1a0d001 	mov	sp, r1
4001211c:	e3a0a000 	mov	sl, #0
40012120:	e3a0b000 	mov	fp, #0
40012124:	e3a02c01 	mov	r2, #256	; 0x100
40012128:	e3a030db 	mov	r3, #219	; 0xdb
4001212c:	e12ff003 	msr	CPSR_fsxc, r3
40012130:	e0811002 	add	r1, r1, r2
40012134:	e3c11007 	bic	r1, r1, #7
40012138:	e1a0d001 	mov	sp, r1
4001213c:	e3a0a000 	mov	sl, #0
40012140:	e3a0b000 	mov	fp, #0
40012144:	e3a02c02 	mov	r2, #512	; 0x200
40012148:	e3a000d1 	mov	r0, #209	; 0xd1
4001214c:	e121f000 	msr	CPSR_c, r0
40012150:	e0811002 	add	r1, r1, r2
40012154:	e3c11007 	bic	r1, r1, #7
40012158:	e1a0d001 	mov	sp, r1
4001215c:	e3a0a000 	mov	sl, #0
40012160:	e3a0b000 	mov	fp, #0
40012164:	e3a02b01 	mov	r2, #1024	; 0x400
40012168:	e3a000d2 	mov	r0, #210	; 0xd2
4001216c:	e121f000 	msr	CPSR_c, r0
40012170:	e0811002 	add	r1, r1, r2
40012174:	e3c11007 	bic	r1, r1, #7
40012178:	e1a0d001 	mov	sp, r1
4001217c:	e3a02a01 	mov	r2, #4096	; 0x1000
40012180:	e3a000d3 	mov	r0, #211	; 0xd3
40012184:	e121f000 	msr	CPSR_c, r0
40012188:	e0811002 	add	r1, r1, r2
4001218c:	e3c11007 	bic	r1, r1, #7
40012190:	e1a0d001 	mov	sp, r1
40012194:	e12fff1e 	bx	lr

40012198 <CyU3PSysCleanDCache>:
40012198:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
4001219c:	1afffffd 	bne	40012198 <CyU3PSysCleanDCache>
400121a0:	e12fff1e 	bx	lr

400121a4 <CyU3PSysClearDCache>:
400121a4:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
400121a8:	1afffffd 	bne	400121a4 <CyU3PSysClearDCache>
400121ac:	e12fff1e 	bx	lr

400121b0 <CyU3PSysFlushIRegion>:
400121b0:	e3510000 	cmp	r1, #0
400121b4:	0a00000a 	beq	400121e4 <CyU3PSysFlushIRegion+0x34>
400121b8:	e0801001 	add	r1, r0, r1
400121bc:	e3c0001f 	bic	r0, r0, #31
400121c0:	e3a0201f 	mov	r2, #31
400121c4:	e1110002 	tst	r1, r2
400121c8:	e0411000 	sub	r1, r1, r0
400121cc:	e1a012a1 	lsr	r1, r1, #5
400121d0:	12811001 	addne	r1, r1, #1
400121d4:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
400121d8:	e2800020 	add	r0, r0, #32
400121dc:	e2511001 	subs	r1, r1, #1
400121e0:	1afffffb 	bne	400121d4 <CyU3PSysFlushIRegion+0x24>
400121e4:	e12fff1e 	bx	lr

400121e8 <CyU3PSysClearDRegion>:
400121e8:	e3510000 	cmp	r1, #0
400121ec:	0a00000a 	beq	4001221c <CyU3PSysClearDRegion+0x34>
400121f0:	e0801001 	add	r1, r0, r1
400121f4:	e3c0001f 	bic	r0, r0, #31
400121f8:	e3a0201f 	mov	r2, #31
400121fc:	e1110002 	tst	r1, r2
40012200:	e0411000 	sub	r1, r1, r0
40012204:	e1a012a1 	lsr	r1, r1, #5
40012208:	12811001 	addne	r1, r1, #1
4001220c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40012210:	e2800020 	add	r0, r0, #32
40012214:	e2511001 	subs	r1, r1, #1
40012218:	1afffffb 	bne	4001220c <CyU3PSysClearDRegion+0x24>
4001221c:	e12fff1e 	bx	lr

40012220 <CyU3PSysCleanDRegion>:
40012220:	e3510000 	cmp	r1, #0
40012224:	0a00000a 	beq	40012254 <CyU3PSysCleanDRegion+0x34>
40012228:	e0801001 	add	r1, r0, r1
4001222c:	e3c0001f 	bic	r0, r0, #31
40012230:	e3a0201f 	mov	r2, #31
40012234:	e1110002 	tst	r1, r2
40012238:	e0411000 	sub	r1, r1, r0
4001223c:	e1a012a1 	lsr	r1, r1, #5
40012240:	12811001 	addne	r1, r1, #1
40012244:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40012248:	e2800020 	add	r0, r0, #32
4001224c:	e2511001 	subs	r1, r1, #1
40012250:	1afffffb 	bne	40012244 <CyU3PSysCleanDRegion+0x24>
40012254:	e12fff1e 	bx	lr

40012258 <CyU3PSysFlushDRegion>:
40012258:	e3510000 	cmp	r1, #0
4001225c:	0a00000a 	beq	4001228c <CyU3PSysFlushDRegion+0x34>
40012260:	e0801001 	add	r1, r0, r1
40012264:	e3c0001f 	bic	r0, r0, #31
40012268:	e3a0201f 	mov	r2, #31
4001226c:	e1110002 	tst	r1, r2
40012270:	e0411000 	sub	r1, r1, r0
40012274:	e1a012a1 	lsr	r1, r1, #5
40012278:	12811001 	addne	r1, r1, #1
4001227c:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40012280:	e2800020 	add	r0, r0, #32
40012284:	e2511001 	subs	r1, r1, #1
40012288:	1afffffb 	bne	4001227c <CyU3PSysFlushDRegion+0x24>
4001228c:	e12fff1e 	bx	lr

40012290 <CyU3PSysCacheIRegion>:
40012290:	e3a03000 	mov	r3, #0
40012294:	e3510000 	cmp	r1, #0
40012298:	0a000023 	beq	4001232c <CyU3PSysCacheIRegion+0x9c>
4001229c:	e0801001 	add	r1, r0, r1
400122a0:	e3c0001f 	bic	r0, r0, #31
400122a4:	e3a0201f 	mov	r2, #31
400122a8:	e1110002 	tst	r1, r2
400122ac:	e0411000 	sub	r1, r1, r0
400122b0:	e1a012a1 	lsr	r1, r1, #5
400122b4:	12811001 	addne	r1, r1, #1
400122b8:	e351003f 	cmp	r1, #63	; 0x3f
400122bc:	8a00001a 	bhi	4001232c <CyU3PSysCacheIRegion+0x9c>
400122c0:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
400122c4:	e20c200f 	and	r2, ip, #15
400122c8:	e3a03001 	mov	r3, #1
400122cc:	e11c0003 	tst	ip, r3
400122d0:	11a03083 	lslne	r3, r3, #1
400122d4:	111c0003 	tstne	ip, r3
400122d8:	11a03083 	lslne	r3, r3, #1
400122dc:	111c0003 	tstne	ip, r3
400122e0:	11a03083 	lslne	r3, r3, #1
400122e4:	1a000010 	bne	4001232c <CyU3PSysCacheIRegion+0x9c>
400122e8:	e3510000 	cmp	r1, #0
400122ec:	0a00000e 	beq	4001232c <CyU3PSysCacheIRegion+0x9c>
400122f0:	e1e03003 	mvn	r3, r3
400122f4:	e203300f 	and	r3, r3, #15
400122f8:	e3ccc00f 	bic	ip, ip, #15
400122fc:	e08cc003 	add	ip, ip, r3
40012300:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012304:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012308:	e2800020 	add	r0, r0, #32
4001230c:	e2511001 	subs	r1, r1, #1
40012310:	1afffffb 	bne	40012304 <CyU3PSysCacheIRegion+0x74>
40012314:	e1e0300c 	mvn	r3, ip
40012318:	e203300f 	and	r3, r3, #15
4001231c:	e1822003 	orr	r2, r2, r3
40012320:	e3ccc00f 	bic	ip, ip, #15
40012324:	e00cc002 	and	ip, ip, r2
40012328:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
4001232c:	e1a00003 	mov	r0, r3
40012330:	e12fff1e 	bx	lr

40012334 <CyU3PSysCacheDRegion>:
40012334:	e3a03000 	mov	r3, #0
40012338:	e3510000 	cmp	r1, #0
4001233c:	0a000022 	beq	400123cc <CyU3PSysCacheDRegion+0x98>
40012340:	e0801001 	add	r1, r0, r1
40012344:	e3c0001f 	bic	r0, r0, #31
40012348:	e3a0201f 	mov	r2, #31
4001234c:	e1110002 	tst	r1, r2
40012350:	e0411000 	sub	r1, r1, r0
40012354:	e1a012a1 	lsr	r1, r1, #5
40012358:	12811001 	addne	r1, r1, #1
4001235c:	e351003f 	cmp	r1, #63	; 0x3f
40012360:	8a000019 	bhi	400123cc <CyU3PSysCacheDRegion+0x98>
40012364:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012368:	e20c200f 	and	r2, ip, #15
4001236c:	e3a03001 	mov	r3, #1
40012370:	e11c0003 	tst	ip, r3
40012374:	11a03083 	lslne	r3, r3, #1
40012378:	111c0003 	tstne	ip, r3
4001237c:	11a03083 	lslne	r3, r3, #1
40012380:	111c0003 	tstne	ip, r3
40012384:	11a03083 	lslne	r3, r3, #1
40012388:	1a00000f 	bne	400123cc <CyU3PSysCacheDRegion+0x98>
4001238c:	e3510000 	cmp	r1, #0
40012390:	0a00000d 	beq	400123cc <CyU3PSysCacheDRegion+0x98>
40012394:	e1e03003 	mvn	r3, r3
40012398:	e203300f 	and	r3, r3, #15
4001239c:	e3ccc00f 	bic	ip, ip, #15
400123a0:	e08cc003 	add	ip, ip, r3
400123a4:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
400123a8:	e4903020 	ldr	r3, [r0], #32
400123ac:	e2511001 	subs	r1, r1, #1
400123b0:	1afffffc 	bne	400123a8 <CyU3PSysCacheDRegion+0x74>
400123b4:	e1e0300c 	mvn	r3, ip
400123b8:	e203300f 	and	r3, r3, #15
400123bc:	e1822003 	orr	r2, r2, r3
400123c0:	e3ccc00f 	bic	ip, ip, #15
400123c4:	e00cc002 	and	ip, ip, r2
400123c8:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
400123cc:	e1a00003 	mov	r0, r3
400123d0:	e12fff1e 	bx	lr

400123d4 <CyU3PSysUnlockICache>:
400123d4:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
400123d8:	e3c0000f 	bic	r0, r0, #15
400123dc:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

400123e0 <CyU3PSysUnlockDCache>:
400123e0:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
400123e4:	e3c0000f 	bic	r0, r0, #15
400123e8:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

400123ec <__cyu3p_exception_vectors>:
400123ec:	e59ff028 	ldr	pc, [pc, #40]	; 4001241c <__CyU3PEntryKeep+0x4>
400123f0:	e59ff028 	ldr	pc, [pc, #40]	; 40012420 <__CyU3PEntryKeep+0x8>
400123f4:	e59ff028 	ldr	pc, [pc, #40]	; 40012424 <__CyU3PEntryKeep+0xc>
400123f8:	e59ff028 	ldr	pc, [pc, #40]	; 40012428 <__CyU3PEntryKeep+0x10>
400123fc:	e59ff028 	ldr	pc, [pc, #40]	; 4001242c <__CyU3PEntryKeep+0x14>
40012400:	e59ff028 	ldr	pc, [pc, #40]	; 40012430 <__CyU3PEntryKeep+0x18>
40012404:	e51ff120 	ldr	pc, [pc, #-288]	; 400122ec <CyU3PSysCacheIRegion+0x5c>
40012408:	e59ff024 	ldr	pc, [pc, #36]	; 40012434 <__CyU3PEntryKeep+0x1c>

4001240c <__CyU3PSWIHandler>:
4001240c:	eafffffe 	b	4001240c <__CyU3PSWIHandler>

40012410 <__CyU3PReservedHandler>:
40012410:	eafffffe 	b	40012410 <__CyU3PReservedHandler>

40012414 <__CyU3PFiqHandler>:
40012414:	eafffffe 	b	40012414 <__CyU3PFiqHandler>

40012418 <__CyU3PEntryKeep>:
40012418:	e12fff1e 	bx	lr
4001241c:	40012094 	.word	0x40012094
40012420:	40003618 	.word	0x40003618
40012424:	4001240c 	.word	0x4001240c
40012428:	4000361c 	.word	0x4000361c
4001242c:	40003620 	.word	0x40003620
40012430:	40012410 	.word	0x40012410
40012434:	40012414 	.word	0x40012414

Disassembly of section i.CyU3PDevCheckDevStateStruct:

40012438 <CyU3PDevCheckDevStateStruct>:
40012438:	e92d4038 	push	{r3, r4, r5, lr}
4001243c:	e59f4118 	ldr	r4, [pc, #280]	; 4001255c <_etext+0x124>
40012440:	e3a00000 	mov	r0, #0
40012444:	e58d0000 	str	r0, [sp]
40012448:	e5940000 	ldr	r0, [r4]
4001244c:	e59f110c 	ldr	r1, [pc, #268]	; 40012560 <_etext+0x128>
40012450:	e1500001 	cmp	r0, r1
40012454:	0a000000 	beq	4001245c <CyU3PDevCheckDevStateStruct+0x24>
40012458:	ea00003b 	b	4001254c <CyU3PDevCheckDevStateStruct+0x114>
4001245c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012460:	e59f10fc 	ldr	r1, [pc, #252]	; 40012564 <_etext+0x12c>
40012464:	e1500001 	cmp	r0, r1
40012468:	1a000005 	bne	40012484 <CyU3PDevCheckDevStateStruct+0x4c>
4001246c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012470:	e59f10f0 	ldr	r1, [pc, #240]	; 40012568 <_etext+0x130>
40012474:	e1500001 	cmp	r0, r1
40012478:	3a000001 	bcc	40012484 <CyU3PDevCheckDevStateStruct+0x4c>
4001247c:	e594500c 	ldr	r5, [r4, #12]
40012480:	ea000001 	b	4001248c <CyU3PDevCheckDevStateStruct+0x54>
40012484:	e594000c 	ldr	r0, [r4, #12]
40012488:	e20050ff 	and	r5, r0, #255	; 0xff
4001248c:	e594000c 	ldr	r0, [r4, #12]
40012490:	e3500000 	cmp	r0, #0
40012494:	0a000003 	beq	400124a8 <CyU3PDevCheckDevStateStruct+0x70>
40012498:	e594000c 	ldr	r0, [r4, #12]
4001249c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001256c <_etext+0x134>
400124a0:	e1500001 	cmp	r0, r1
400124a4:	9a000000 	bls	400124ac <CyU3PDevCheckDevStateStruct+0x74>
400124a8:	ea000027 	b	4001254c <CyU3PDevCheckDevStateStruct+0x114>
400124ac:	e1a0200d 	mov	r2, sp
400124b0:	e1a01005 	mov	r1, r5
400124b4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001255c <_etext+0x124>
400124b8:	eb00049f 	bl	4001373c <CyU3PComputeChecksum>
400124bc:	e594000c 	ldr	r0, [r4, #12]
400124c0:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
400124c4:	e2800a02 	add	r0, r0, #8192	; 0x2000
400124c8:	e5900000 	ldr	r0, [r0]
400124cc:	e59d1000 	ldr	r1, [sp]
400124d0:	e1500001 	cmp	r0, r1
400124d4:	0a000000 	beq	400124dc <CyU3PDevCheckDevStateStruct+0xa4>
400124d8:	ea00001b 	b	4001254c <CyU3PDevCheckDevStateStruct+0x114>
400124dc:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400124e0:	e59f107c 	ldr	r1, [pc, #124]	; 40012564 <_etext+0x12c>
400124e4:	e1500001 	cmp	r0, r1
400124e8:	0a000001 	beq	400124f4 <CyU3PDevCheckDevStateStruct+0xbc>
400124ec:	e59f007c 	ldr	r0, [pc, #124]	; 40012570 <_etext+0x138>
400124f0:	e58400dc 	str	r0, [r4, #220]	; 0xdc
400124f4:	e3a00001 	mov	r0, #1
400124f8:	e59f1074 	ldr	r1, [pc, #116]	; 40012574 <_etext+0x13c>
400124fc:	e5810000 	str	r0, [r1]
40012500:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012504:	e59f106c 	ldr	r1, [pc, #108]	; 40012578 <_etext+0x140>
40012508:	e1500001 	cmp	r0, r1
4001250c:	3a00000d 	bcc	40012548 <CyU3PDevCheckDevStateStruct+0x110>
40012510:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012514:	e3500000 	cmp	r0, #0
40012518:	0a00000a 	beq	40012548 <CyU3PDevCheckDevStateStruct+0x110>
4001251c:	e59f0058 	ldr	r0, [pc, #88]	; 4001257c <_etext+0x144>
40012520:	e5900018 	ldr	r0, [r0, #24]
40012524:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012528:	0a000006 	beq	40012548 <CyU3PDevCheckDevStateStruct+0x110>
4001252c:	e59f004c 	ldr	r0, [pc, #76]	; 40012580 <_etext+0x148>
40012530:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40012534:	e3100001 	tst	r0, #1
40012538:	0a000002 	beq	40012548 <CyU3PDevCheckDevStateStruct+0x110>
4001253c:	e3a00001 	mov	r0, #1
40012540:	e59f103c 	ldr	r1, [pc, #60]	; 40012584 <_etext+0x14c>
40012544:	e5810000 	str	r0, [r1]
40012548:	e8bd8038 	pop	{r3, r4, r5, pc}
4001254c:	e1a00000 	nop			; (mov r0, r0)
40012550:	e3e00000 	mvn	r0, #0
40012554:	e5840000 	str	r0, [r4]
40012558:	eafffffa 	b	40012548 <CyU3PDevCheckDevStateStruct+0x110>
4001255c:	40002000 	.word	0x40002000
40012560:	42575943 	.word	0x42575943
40012564:	42335846 	.word	0x42335846
40012568:	00010300 	.word	0x00010300
4001256c:	00000ff8 	.word	0x00000ff8
40012570:	00010101 	.word	0x00010101
40012574:	400310f4 	.word	0x400310f4
40012578:	00010201 	.word	0x00010201
4001257c:	e0052000 	.word	0xe0052000
40012580:	e0001000 	.word	0xe0001000
40012584:	400310f8 	.word	0x400310f8

Disassembly of section i.CyU3PDeviceCacheControl:

40012588 <CyU3PDeviceCacheControl>:
40012588:	e92d4070 	push	{r4, r5, r6, lr}
4001258c:	e1a04000 	mov	r4, r0
40012590:	e1a06001 	mov	r6, r1
40012594:	e1a05002 	mov	r5, r2
40012598:	e3550000 	cmp	r5, #0
4001259c:	0a000003 	beq	400125b0 <CyU3PDeviceCacheControl+0x28>
400125a0:	e3560000 	cmp	r6, #0
400125a4:	1a000001 	bne	400125b0 <CyU3PDeviceCacheControl+0x28>
400125a8:	e3a00040 	mov	r0, #64	; 0x40
400125ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400125b0:	eb000181 	bl	40012bbc <CyU3PSysBarrierSync>
400125b4:	ebfffefa 	bl	400121a4 <CyU3PSysClearDCache>
400125b8:	eb0001a1 	bl	40012c44 <CyU3PSysFlushICache>
400125bc:	eb00018f 	bl	40012c00 <CyU3PSysDisableICache>
400125c0:	eb00018a 	bl	40012bf0 <CyU3PSysDisableDCache>
400125c4:	e3540000 	cmp	r4, #0
400125c8:	0a000003 	beq	400125dc <CyU3PDeviceCacheControl+0x54>
400125cc:	eb000193 	bl	40012c20 <CyU3PSysEnableICache>
400125d0:	eb000179 	bl	40012bbc <CyU3PSysBarrierSync>
400125d4:	e59f0038 	ldr	r0, [pc, #56]	; 40012614 <CyU3PDeviceCacheControl+0x8c>
400125d8:	e5804000 	str	r4, [r0]
400125dc:	e3a00000 	mov	r0, #0
400125e0:	e59f1030 	ldr	r1, [pc, #48]	; 40012618 <CyU3PDeviceCacheControl+0x90>
400125e4:	e5810000 	str	r0, [r1]
400125e8:	e3560000 	cmp	r6, #0
400125ec:	0a000005 	beq	40012608 <CyU3PDeviceCacheControl+0x80>
400125f0:	eb000186 	bl	40012c10 <CyU3PSysEnableDCache>
400125f4:	eb000170 	bl	40012bbc <CyU3PSysBarrierSync>
400125f8:	e59f0018 	ldr	r0, [pc, #24]	; 40012618 <CyU3PDeviceCacheControl+0x90>
400125fc:	e5805000 	str	r5, [r0]
40012600:	e59f0014 	ldr	r0, [pc, #20]	; 4001261c <CyU3PDeviceCacheControl+0x94>
40012604:	e5806000 	str	r6, [r0]
40012608:	eb00016b 	bl	40012bbc <CyU3PSysBarrierSync>
4001260c:	e3a00000 	mov	r0, #0
40012610:	eaffffe5 	b	400125ac <CyU3PDeviceCacheControl+0x24>
40012614:	400310e8 	.word	0x400310e8
40012618:	400310f0 	.word	0x400310f0
4001261c:	400310ec 	.word	0x400310ec

Disassembly of section i.CyU3PDeviceInit:

40012620 <CyU3PDeviceInit>:
40012620:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40012624:	e1a04000 	mov	r4, r0
40012628:	e3a06000 	mov	r6, #0
4001262c:	e3a07000 	mov	r7, #0
40012630:	e3a09000 	mov	r9, #0
40012634:	e3a0a000 	mov	sl, #0
40012638:	e3540000 	cmp	r4, #0
4001263c:	0a000033 	beq	40012710 <CyU3PDeviceInit+0xf0>
40012640:	e5d40004 	ldrb	r0, [r4, #4]
40012644:	e3500002 	cmp	r0, #2
40012648:	ba000002 	blt	40012658 <CyU3PDeviceInit+0x38>
4001264c:	e5d40004 	ldrb	r0, [r4, #4]
40012650:	e3500010 	cmp	r0, #16
40012654:	da000001 	ble	40012660 <CyU3PDeviceInit+0x40>
40012658:	e3a00040 	mov	r0, #64	; 0x40
4001265c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40012660:	e5d40005 	ldrb	r0, [r4, #5]
40012664:	e3500002 	cmp	r0, #2
40012668:	ba000002 	blt	40012678 <CyU3PDeviceInit+0x58>
4001266c:	e5d40005 	ldrb	r0, [r4, #5]
40012670:	e3500010 	cmp	r0, #16
40012674:	da000001 	ble	40012680 <CyU3PDeviceInit+0x60>
40012678:	e3a00040 	mov	r0, #64	; 0x40
4001267c:	eafffff6 	b	4001265c <CyU3PDeviceInit+0x3c>
40012680:	e5d40006 	ldrb	r0, [r4, #6]
40012684:	e3500002 	cmp	r0, #2
40012688:	ba000002 	blt	40012698 <CyU3PDeviceInit+0x78>
4001268c:	e5d40006 	ldrb	r0, [r4, #6]
40012690:	e3500010 	cmp	r0, #16
40012694:	da000001 	ble	400126a0 <CyU3PDeviceInit+0x80>
40012698:	e3a00040 	mov	r0, #64	; 0x40
4001269c:	eaffffee 	b	4001265c <CyU3PDeviceInit+0x3c>
400126a0:	e5d40006 	ldrb	r0, [r4, #6]
400126a4:	e5d41005 	ldrb	r1, [r4, #5]
400126a8:	e1500001 	cmp	r0, r1
400126ac:	ba000004 	blt	400126c4 <CyU3PDeviceInit+0xa4>
400126b0:	e5d41005 	ldrb	r1, [r4, #5]
400126b4:	e5d40006 	ldrb	r0, [r4, #6]
400126b8:	ebfff91f 	bl	40010b3c <__aeabi_idivmod>
400126bc:	e3510000 	cmp	r1, #0
400126c0:	0a000001 	beq	400126cc <CyU3PDeviceInit+0xac>
400126c4:	e3a00040 	mov	r0, #64	; 0x40
400126c8:	eaffffe3 	b	4001265c <CyU3PDeviceInit+0x3c>
400126cc:	e5d4000c 	ldrb	r0, [r4, #12]
400126d0:	e3500004 	cmp	r0, #4
400126d4:	ba000001 	blt	400126e0 <CyU3PDeviceInit+0xc0>
400126d8:	e3a00040 	mov	r0, #64	; 0x40
400126dc:	eaffffde 	b	4001265c <CyU3PDeviceInit+0x3c>
400126e0:	e5d40004 	ldrb	r0, [r4, #4]
400126e4:	e2400001 	sub	r0, r0, #1
400126e8:	e5d41005 	ldrb	r1, [r4, #5]
400126ec:	e2411001 	sub	r1, r1, #1
400126f0:	e1800401 	orr	r0, r0, r1, lsl #8
400126f4:	e5d41006 	ldrb	r1, [r4, #6]
400126f8:	e2411001 	sub	r1, r1, #1
400126fc:	e1800601 	orr	r0, r0, r1, lsl #12
40012700:	e5d4100c 	ldrb	r1, [r4, #12]
40012704:	e1805201 	orr	r5, r0, r1, lsl #4
40012708:	e594a000 	ldr	sl, [r4]
4001270c:	ea000000 	b	40012714 <CyU3PDeviceInit+0xf4>
40012710:	e59f5334 	ldr	r5, [pc, #820]	; 40012a4c <CyU3PDeviceInit+0x42c>
40012714:	e59f0334 	ldr	r0, [pc, #820]	; 40012a50 <CyU3PDeviceInit+0x430>
40012718:	e5805004 	str	r5, [r0, #4]
4001271c:	e5905004 	ldr	r5, [r0, #4]
40012720:	e3a0000a 	mov	r0, #10
40012724:	eb0003f6 	bl	40013704 <CyU3PBusyWait>
40012728:	e59f0320 	ldr	r0, [pc, #800]	; 40012a50 <CyU3PDeviceInit+0x430>
4001272c:	e5900000 	ldr	r0, [r0]
40012730:	e2000807 	and	r0, r0, #458752	; 0x70000
40012734:	e1a05820 	lsr	r5, r0, #16
40012738:	e2150003 	ands	r0, r5, #3
4001273c:	0a000004 	beq	40012754 <CyU3PDeviceInit+0x134>
40012740:	e3500001 	cmp	r0, #1
40012744:	0a00000e 	beq	40012784 <CyU3PDeviceInit+0x164>
40012748:	e3500002 	cmp	r0, #2
4001274c:	1a000024 	bne	400127e4 <CyU3PDeviceInit+0x1c4>
40012750:	ea000014 	b	400127a8 <CyU3PDeviceInit+0x188>
40012754:	e1a00000 	nop			; (mov r0, r0)
40012758:	e59f92f4 	ldr	r9, [pc, #756]	; 40012a54 <CyU3PDeviceInit+0x434>
4001275c:	e35a0000 	cmp	sl, #0
40012760:	0a000003 	beq	40012774 <CyU3PDeviceInit+0x154>
40012764:	e59f02ec 	ldr	r0, [pc, #748]	; 40012a58 <CyU3PDeviceInit+0x438>
40012768:	e59f12ec 	ldr	r1, [pc, #748]	; 40012a5c <CyU3PDeviceInit+0x43c>
4001276c:	e5810000 	str	r0, [r1]
40012770:	ea000002 	b	40012780 <CyU3PDeviceInit+0x160>
40012774:	e59f02e4 	ldr	r0, [pc, #740]	; 40012a60 <CyU3PDeviceInit+0x440>
40012778:	e59f12dc 	ldr	r1, [pc, #732]	; 40012a5c <CyU3PDeviceInit+0x43c>
4001277c:	e5810000 	str	r0, [r1]
40012780:	ea000020 	b	40012808 <CyU3PDeviceInit+0x1e8>
40012784:	e1a00000 	nop			; (mov r0, r0)
40012788:	e59f92d4 	ldr	r9, [pc, #724]	; 40012a64 <CyU3PDeviceInit+0x444>
4001278c:	e1a00209 	lsl	r0, r9, #4
40012790:	e59f12c4 	ldr	r1, [pc, #708]	; 40012a5c <CyU3PDeviceInit+0x43c>
40012794:	e5810000 	str	r0, [r1]
40012798:	e59f02c8 	ldr	r0, [pc, #712]	; 40012a68 <CyU3PDeviceInit+0x448>
4001279c:	e59f12c8 	ldr	r1, [pc, #712]	; 40012a6c <CyU3PDeviceInit+0x44c>
400127a0:	e5810000 	str	r0, [r1]
400127a4:	ea000017 	b	40012808 <CyU3PDeviceInit+0x1e8>
400127a8:	e1a00000 	nop			; (mov r0, r0)
400127ac:	e59f92bc 	ldr	r9, [pc, #700]	; 40012a70 <CyU3PDeviceInit+0x450>
400127b0:	e59f02bc 	ldr	r0, [pc, #700]	; 40012a74 <CyU3PDeviceInit+0x454>
400127b4:	e59f12b0 	ldr	r1, [pc, #688]	; 40012a6c <CyU3PDeviceInit+0x44c>
400127b8:	e5810000 	str	r0, [r1]
400127bc:	e35a0000 	cmp	sl, #0
400127c0:	0a000003 	beq	400127d4 <CyU3PDeviceInit+0x1b4>
400127c4:	e59f028c 	ldr	r0, [pc, #652]	; 40012a58 <CyU3PDeviceInit+0x438>
400127c8:	e59f128c 	ldr	r1, [pc, #652]	; 40012a5c <CyU3PDeviceInit+0x43c>
400127cc:	e5810000 	str	r0, [r1]
400127d0:	ea000002 	b	400127e0 <CyU3PDeviceInit+0x1c0>
400127d4:	e59f0284 	ldr	r0, [pc, #644]	; 40012a60 <CyU3PDeviceInit+0x440>
400127d8:	e59f127c 	ldr	r1, [pc, #636]	; 40012a5c <CyU3PDeviceInit+0x43c>
400127dc:	e5810000 	str	r0, [r1]
400127e0:	ea000008 	b	40012808 <CyU3PDeviceInit+0x1e8>
400127e4:	e1a00000 	nop			; (mov r0, r0)
400127e8:	e59f9288 	ldr	r9, [pc, #648]	; 40012a78 <CyU3PDeviceInit+0x458>
400127ec:	e1a00189 	lsl	r0, r9, #3
400127f0:	e59f1264 	ldr	r1, [pc, #612]	; 40012a5c <CyU3PDeviceInit+0x43c>
400127f4:	e5810000 	str	r0, [r1]
400127f8:	e59f027c 	ldr	r0, [pc, #636]	; 40012a7c <CyU3PDeviceInit+0x45c>
400127fc:	e59f1268 	ldr	r1, [pc, #616]	; 40012a6c <CyU3PDeviceInit+0x44c>
40012800:	e5810000 	str	r0, [r1]
40012804:	e1a00000 	nop			; (mov r0, r0)
40012808:	e1a00000 	nop			; (mov r0, r0)
4001280c:	e59f023c 	ldr	r0, [pc, #572]	; 40012a50 <CyU3PDeviceInit+0x430>
40012810:	e5900000 	ldr	r0, [r0]
40012814:	e200003f 	and	r0, r0, #63	; 0x3f
40012818:	e3500015 	cmp	r0, #21
4001281c:	1a000002 	bne	4001282c <CyU3PDeviceInit+0x20c>
40012820:	e59f0230 	ldr	r0, [pc, #560]	; 40012a58 <CyU3PDeviceInit+0x438>
40012824:	e59f1230 	ldr	r1, [pc, #560]	; 40012a5c <CyU3PDeviceInit+0x43c>
40012828:	e5810000 	str	r0, [r1]
4001282c:	e59f0228 	ldr	r0, [pc, #552]	; 40012a5c <CyU3PDeviceInit+0x43c>
40012830:	e5900000 	ldr	r0, [r0]
40012834:	e59f121c 	ldr	r1, [pc, #540]	; 40012a58 <CyU3PDeviceInit+0x438>
40012838:	e1500001 	cmp	r0, r1
4001283c:	1a000013 	bne	40012890 <CyU3PDeviceInit+0x270>
40012840:	e59f0208 	ldr	r0, [pc, #520]	; 40012a50 <CyU3PDeviceInit+0x430>
40012844:	e5900000 	ldr	r0, [r0]
40012848:	e200003f 	and	r0, r0, #63	; 0x3f
4001284c:	e3500015 	cmp	r0, #21
40012850:	0a00000e 	beq	40012890 <CyU3PDeviceInit+0x270>
40012854:	e59f01f4 	ldr	r0, [pc, #500]	; 40012a50 <CyU3PDeviceInit+0x430>
40012858:	e5900000 	ldr	r0, [r0]
4001285c:	e3c0003f 	bic	r0, r0, #63	; 0x3f
40012860:	e3800015 	orr	r0, r0, #21
40012864:	e59f11e4 	ldr	r1, [pc, #484]	; 40012a50 <CyU3PDeviceInit+0x430>
40012868:	e5810000 	str	r0, [r1]
4001286c:	e3a00064 	mov	r0, #100	; 0x64
40012870:	eb0003a3 	bl	40013704 <CyU3PBusyWait>
40012874:	e1a00000 	nop			; (mov r0, r0)
40012878:	e59f01d0 	ldr	r0, [pc, #464]	; 40012a50 <CyU3PDeviceInit+0x430>
4001287c:	e5900000 	ldr	r0, [r0]
40012880:	e3100702 	tst	r0, #524288	; 0x80000
40012884:	0afffffb 	beq	40012878 <CyU3PDeviceInit+0x258>
40012888:	e3a00064 	mov	r0, #100	; 0x64
4001288c:	eb00039c 	bl	40013704 <CyU3PBusyWait>
40012890:	e59f01e8 	ldr	r0, [pc, #488]	; 40012a80 <CyU3PDeviceInit+0x460>
40012894:	e5908014 	ldr	r8, [r0, #20]
40012898:	e3a0000a 	mov	r0, #10
4001289c:	eb000398 	bl	40013704 <CyU3PBusyWait>
400128a0:	e2080003 	and	r0, r8, #3
400128a4:	e3500002 	cmp	r0, #2
400128a8:	1a000005 	bne	400128c4 <CyU3PDeviceInit+0x2a4>
400128ac:	e3a07001 	mov	r7, #1
400128b0:	e3880003 	orr	r0, r8, #3
400128b4:	e59f11c4 	ldr	r1, [pc, #452]	; 40012a80 <CyU3PDeviceInit+0x460>
400128b8:	e5810014 	str	r0, [r1, #20]
400128bc:	e3a0000a 	mov	r0, #10
400128c0:	eb00038f 	bl	40013704 <CyU3PBusyWait>
400128c4:	e3180102 	tst	r8, #-2147483648	; 0x80000000
400128c8:	1a000004 	bne	400128e0 <CyU3PDeviceInit+0x2c0>
400128cc:	e3540000 	cmp	r4, #0
400128d0:	0a000003 	beq	400128e4 <CyU3PDeviceInit+0x2c4>
400128d4:	e5940008 	ldr	r0, [r4, #8]
400128d8:	e3500000 	cmp	r0, #0
400128dc:	1a000000 	bne	400128e4 <CyU3PDeviceInit+0x2c4>
400128e0:	e3a06001 	mov	r6, #1
400128e4:	e3560000 	cmp	r6, #0
400128e8:	1a000014 	bne	40012940 <CyU3PDeviceInit+0x320>
400128ec:	e3c80003 	bic	r0, r8, #3
400128f0:	e3800001 	orr	r0, r0, #1
400128f4:	e59f1184 	ldr	r1, [pc, #388]	; 40012a80 <CyU3PDeviceInit+0x460>
400128f8:	e5810014 	str	r0, [r1, #20]
400128fc:	e3a00064 	mov	r0, #100	; 0x64
40012900:	eb00037f 	bl	40013704 <CyU3PBusyWait>
40012904:	e59f0174 	ldr	r0, [pc, #372]	; 40012a80 <CyU3PDeviceInit+0x460>
40012908:	e5905018 	ldr	r5, [r0, #24]
4001290c:	e3a000c8 	mov	r0, #200	; 0xc8
40012910:	eb00037b 	bl	40013704 <CyU3PBusyWait>
40012914:	e59f0164 	ldr	r0, [pc, #356]	; 40012a80 <CyU3PDeviceInit+0x460>
40012918:	e5900018 	ldr	r0, [r0, #24]
4001291c:	e1500005 	cmp	r0, r5
40012920:	1a000000 	bne	40012928 <CyU3PDeviceInit+0x308>
40012924:	e3a06001 	mov	r6, #1
40012928:	e3a00064 	mov	r0, #100	; 0x64
4001292c:	eb000374 	bl	40013704 <CyU3PBusyWait>
40012930:	e59f0148 	ldr	r0, [pc, #328]	; 40012a80 <CyU3PDeviceInit+0x460>
40012934:	e5808014 	str	r8, [r0, #20]
40012938:	e3a00064 	mov	r0, #100	; 0x64
4001293c:	eb000370 	bl	40013704 <CyU3PBusyWait>
40012940:	e3560000 	cmp	r6, #0
40012944:	0a000026 	beq	400129e4 <CyU3PDeviceInit+0x3c4>
40012948:	e59f0130 	ldr	r0, [pc, #304]	; 40012a80 <CyU3PDeviceInit+0x460>
4001294c:	e5900014 	ldr	r0, [r0, #20]
40012950:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012954:	1a000022 	bne	400129e4 <CyU3PDeviceInit+0x3c4>
40012958:	e1a09109 	lsl	r9, r9, #2
4001295c:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012960:	e1a00009 	mov	r0, r9
40012964:	ebfff822 	bl	400109f4 <__aeabi_uidivmod>
40012968:	e1a09000 	mov	r9, r0
4001296c:	e2095003 	and	r5, r9, #3
40012970:	e1a09129 	lsr	r9, r9, #2
40012974:	e3550010 	cmp	r5, #16
40012978:	2a000000 	bcs	40012980 <CyU3PDeviceInit+0x360>
4001297c:	e2499001 	sub	r9, r9, #1
40012980:	e1a09809 	lsl	r9, r9, #16
40012984:	e59f00f8 	ldr	r0, [pc, #248]	; 40012a84 <CyU3PDeviceInit+0x464>
40012988:	e1590000 	cmp	r9, r0
4001298c:	9a000000 	bls	40012994 <CyU3PDeviceInit+0x374>
40012990:	e1a09000 	mov	r9, r0
40012994:	e3a00064 	mov	r0, #100	; 0x64
40012998:	eb000359 	bl	40013704 <CyU3PBusyWait>
4001299c:	e59f00dc 	ldr	r0, [pc, #220]	; 40012a80 <CyU3PDeviceInit+0x460>
400129a0:	e5905014 	ldr	r5, [r0, #20]
400129a4:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
400129a8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400129ac:	e1805009 	orr	r5, r0, r9
400129b0:	e3a00064 	mov	r0, #100	; 0x64
400129b4:	eb000352 	bl	40013704 <CyU3PBusyWait>
400129b8:	e59f00c0 	ldr	r0, [pc, #192]	; 40012a80 <CyU3PDeviceInit+0x460>
400129bc:	e5805014 	str	r5, [r0, #20]
400129c0:	e3a00064 	mov	r0, #100	; 0x64
400129c4:	eb00034e 	bl	40013704 <CyU3PBusyWait>
400129c8:	e59f00b0 	ldr	r0, [pc, #176]	; 40012a80 <CyU3PDeviceInit+0x460>
400129cc:	e5900014 	ldr	r0, [r0, #20]
400129d0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400129d4:	e59f10a4 	ldr	r1, [pc, #164]	; 40012a80 <CyU3PDeviceInit+0x460>
400129d8:	e5810014 	str	r0, [r1, #20]
400129dc:	e3a00064 	mov	r0, #100	; 0x64
400129e0:	eb000347 	bl	40013704 <CyU3PBusyWait>
400129e4:	e59f0094 	ldr	r0, [pc, #148]	; 40012a80 <CyU3PDeviceInit+0x460>
400129e8:	e5900000 	ldr	r0, [r0]
400129ec:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400129f0:	e59f1088 	ldr	r1, [pc, #136]	; 40012a80 <CyU3PDeviceInit+0x460>
400129f4:	e5810000 	str	r0, [r1]
400129f8:	e3a00064 	mov	r0, #100	; 0x64
400129fc:	eb000340 	bl	40013704 <CyU3PBusyWait>
40012a00:	eb003dca 	bl	40022130 <CyU3PVicInit>
40012a04:	e10f0000 	mrs	r0, CPSR
40012a08:	e3c00080 	bic	r0, r0, #128	; 0x80
40012a0c:	e121f000 	msr	CPSR_c, r0
40012a10:	e3570000 	cmp	r7, #0
40012a14:	0a000002 	beq	40012a24 <CyU3PDeviceInit+0x404>
40012a18:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012a1c:	e3a00001 	mov	r0, #1
40012a20:	eb000024 	bl	40012ab8 <CyU3PSysWatchDogConfigure>
40012a24:	e59f005c 	ldr	r0, [pc, #92]	; 40012a88 <CyU3PDeviceInit+0x468>
40012a28:	e5900000 	ldr	r0, [r0]
40012a2c:	e3500000 	cmp	r0, #0
40012a30:	0a000002 	beq	40012a40 <CyU3PDeviceInit+0x420>
40012a34:	e59f004c 	ldr	r0, [pc, #76]	; 40012a88 <CyU3PDeviceInit+0x468>
40012a38:	e5900000 	ldr	r0, [r0]
40012a3c:	eb000594 	bl	40014094 <CyU3PLppRestoreState>
40012a40:	ebfffe7c 	bl	40012438 <_etext>
40012a44:	e3a00000 	mov	r0, #0
40012a48:	eaffff03 	b	4001265c <CyU3PDeviceInit+0x3c>
40012a4c:	00001131 	.word	0x00001131
40012a50:	e0052000 	.word	0xe0052000
40012a54:	0124f800 	.word	0x0124f800
40012a58:	18085800 	.word	0x18085800
40012a5c:	400310dc 	.word	0x400310dc
40012a60:	16e36000 	.word	0x16e36000
40012a64:	018cba80 	.word	0x018cba80
40012a68:	00910700 	.word	0x00910700
40012a6c:	400310e4 	.word	0x400310e4
40012a70:	0249f000 	.word	0x0249f000
40012a74:	00910608 	.word	0x00910608
40012a78:	03197500 	.word	0x03197500
40012a7c:	00910580 	.word	0x00910580
40012a80:	e0050000 	.word	0xe0050000
40012a84:	7fff0000 	.word	0x7fff0000
40012a88:	40031118 	.word	0x40031118

Disassembly of section i.CyU3PSysSetupMMU:

40012a8c <CyU3PSysSetupMMU>:
40012a8c:	e92d4010 	push	{r4, lr}
40012a90:	eb000049 	bl	40012bbc <CyU3PSysBarrierSync>
40012a94:	ebfffdc2 	bl	400121a4 <CyU3PSysClearDCache>
40012a98:	eb000069 	bl	40012c44 <CyU3PSysFlushICache>
40012a9c:	eb000049 	bl	40012bc8 <CyU3PSysDisableCacheMMU>
40012aa0:	eb00006a 	bl	40012c50 <CyU3PSysInitTCMs>
40012aa4:	eb000041 	bl	40012bb0 <CyU3PInitPageTable>
40012aa8:	eb000061 	bl	40012c34 <CyU3PSysEnableMMU>
40012aac:	eb00006c 	bl	40012c64 <CyU3PSysLoadTLB>
40012ab0:	eb000041 	bl	40012bbc <CyU3PSysBarrierSync>
40012ab4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012ab8 <CyU3PSysWatchDogConfigure>:
40012ab8:	e92d4070 	push	{r4, r5, r6, lr}
40012abc:	e1a04000 	mov	r4, r0
40012ac0:	e1a05001 	mov	r5, r1
40012ac4:	e59f00d8 	ldr	r0, [pc, #216]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012ac8:	e5906014 	ldr	r6, [r0, #20]
40012acc:	e3a00064 	mov	r0, #100	; 0x64
40012ad0:	eb00030b 	bl	40013704 <CyU3PBusyWait>
40012ad4:	e3540000 	cmp	r4, #0
40012ad8:	0a000023 	beq	40012b6c <CyU3PSysWatchDogConfigure+0xb4>
40012adc:	e2060003 	and	r0, r6, #3
40012ae0:	e3500003 	cmp	r0, #3
40012ae4:	0a000004 	beq	40012afc <CyU3PSysWatchDogConfigure+0x44>
40012ae8:	e3860003 	orr	r0, r6, #3
40012aec:	e59f10b0 	ldr	r1, [pc, #176]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012af0:	e5810014 	str	r0, [r1, #20]
40012af4:	e3a00064 	mov	r0, #100	; 0x64
40012af8:	eb000301 	bl	40013704 <CyU3PBusyWait>
40012afc:	e0850285 	add	r0, r5, r5, lsl #5
40012b00:	e59f10a0 	ldr	r1, [pc, #160]	; 40012ba8 <CyU3PSysWatchDogConfigure+0xf0>
40012b04:	e5810000 	str	r0, [r1]
40012b08:	e2810000 	add	r0, r1, #0
40012b0c:	e5900000 	ldr	r0, [r0]
40012b10:	e1500005 	cmp	r0, r5
40012b14:	2a000001 	bcs	40012b20 <CyU3PSysWatchDogConfigure+0x68>
40012b18:	e3e00000 	mvn	r0, #0
40012b1c:	e5810000 	str	r0, [r1]
40012b20:	e59f0080 	ldr	r0, [pc, #128]	; 40012ba8 <CyU3PSysWatchDogConfigure+0xf0>
40012b24:	e5900000 	ldr	r0, [r0]
40012b28:	e59f1074 	ldr	r1, [pc, #116]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012b2c:	e5810018 	str	r0, [r1, #24]
40012b30:	e3a00064 	mov	r0, #100	; 0x64
40012b34:	eb0002f2 	bl	40013704 <CyU3PBusyWait>
40012b38:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012b3c:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012b40:	e59f005c 	ldr	r0, [pc, #92]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012b44:	e5806014 	str	r6, [r0, #20]
40012b48:	e3a00064 	mov	r0, #100	; 0x64
40012b4c:	eb0002ec 	bl	40013704 <CyU3PBusyWait>
40012b50:	e2060c03 	and	r0, r6, #768	; 0x300
40012b54:	e3500c03 	cmp	r0, #768	; 0x300
40012b58:	1a000010 	bne	40012ba0 <CyU3PSysWatchDogConfigure+0xe8>
40012b5c:	e59f0048 	ldr	r0, [pc, #72]	; 40012bac <CyU3PSysWatchDogConfigure+0xf4>
40012b60:	e1d000b0 	ldrh	r0, [r0]
40012b64:	eb003d18 	bl	40021fcc <CyU3POsTimerInit>
40012b68:	ea00000c 	b	40012ba0 <CyU3PSysWatchDogConfigure+0xe8>
40012b6c:	e2060003 	and	r0, r6, #3
40012b70:	e3500003 	cmp	r0, #3
40012b74:	0a000006 	beq	40012b94 <CyU3PSysWatchDogConfigure+0xdc>
40012b78:	e59f0024 	ldr	r0, [pc, #36]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012b7c:	e5900014 	ldr	r0, [r0, #20]
40012b80:	e3800003 	orr	r0, r0, #3
40012b84:	e59f1018 	ldr	r1, [pc, #24]	; 40012ba4 <CyU3PSysWatchDogConfigure+0xec>
40012b88:	e5810014 	str	r0, [r1, #20]
40012b8c:	e3a00064 	mov	r0, #100	; 0x64
40012b90:	eb0002db 	bl	40013704 <CyU3PBusyWait>
40012b94:	e3a00000 	mov	r0, #0
40012b98:	e59f1008 	ldr	r1, [pc, #8]	; 40012ba8 <CyU3PSysWatchDogConfigure+0xf0>
40012b9c:	e5810000 	str	r0, [r1]
40012ba0:	e8bd8070 	pop	{r4, r5, r6, pc}
40012ba4:	e0050000 	.word	0xe0050000
40012ba8:	400310e0 	.word	0x400310e0
40012bac:	40031244 	.word	0x40031244

Disassembly of section i.CyU3PInitPageTable:

40012bb0 <CyU3PInitPageTable>:
40012bb0:	e92d4010 	push	{r4, lr}
40012bb4:	eb0007ad 	bl	40014a70 <CyFx3DevInitPageTables>
40012bb8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012bbc <CyU3PSysBarrierSync>:
40012bbc:	e3a00000 	mov	r0, #0
40012bc0:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012bc4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012bc8 <CyU3PSysDisableCacheMMU>:
40012bc8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012bcc:	e59f2018 	ldr	r2, [pc, #24]	; 40012bec <CyU3PSysDisableCacheMMU+0x24>
40012bd0:	e1c00002 	bic	r0, r0, r2
40012bd4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012bd8:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012bdc:	e3e01801 	mvn	r1, #65536	; 0x10000
40012be0:	e0000001 	and	r0, r0, r1
40012be4:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012be8:	e12fff1e 	bx	lr
40012bec:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012bf0 <CyU3PSysDisableDCache>:
40012bf0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012bf4:	e3c00004 	bic	r0, r0, #4
40012bf8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012bfc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012c00 <CyU3PSysDisableICache>:
40012c00:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012c04:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012c08:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012c0c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012c10 <CyU3PSysEnableDCache>:
40012c10:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012c14:	e3800004 	orr	r0, r0, #4
40012c18:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012c1c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012c20 <CyU3PSysEnableICache>:
40012c20:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012c24:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012c28:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012c2c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012c30:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012c34 <CyU3PSysEnableMMU>:
40012c34:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012c38:	e3800001 	orr	r0, r0, #1
40012c3c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012c40:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012c44 <CyU3PSysFlushICache>:
40012c44:	e3a00000 	mov	r0, #0
40012c48:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012c4c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012c50 <CyU3PSysInitTCMs>:
40012c50:	e3a00015 	mov	r0, #21
40012c54:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012c58:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012c5c:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012c60:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012c64 <CyU3PSysLoadTLB>:
40012c64:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012c68:	e3a00000 	mov	r0, #0
40012c6c:	eb00000b 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c70:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012c74:	eb000009 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c78:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012c7c:	eb000007 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c80:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012c84:	eb000005 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c88:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012c8c:	eb000003 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c90:	e59f0004 	ldr	r0, [pc, #4]	; 40012c9c <CyU3PSysLoadTLB+0x38>
40012c94:	eb000001 	bl	40012ca0 <CyU3PSysLockTLBEntry>
40012c98:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012c9c:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012ca0 <CyU3PSysLockTLBEntry>:
40012ca0:	e3a01000 	mov	r1, #0
40012ca4:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012ca8:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012cac:	e3811001 	orr	r1, r1, #1
40012cb0:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012cb4:	e5900000 	ldr	r0, [r0]
40012cb8:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012cbc:	e3c11001 	bic	r1, r1, #1
40012cc0:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012cc4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012cc8 <CyU3PDeviceConfigureIOMatrix>:
40012cc8:	e92d4010 	push	{r4, lr}
40012ccc:	e1a04000 	mov	r4, r0
40012cd0:	e3540000 	cmp	r4, #0
40012cd4:	1a000001 	bne	40012ce0 <CyU3PDeviceConfigureIOMatrix+0x18>
40012cd8:	e3a00041 	mov	r0, #65	; 0x41
40012cdc:	e8bd8010 	pop	{r4, pc}
40012ce0:	e1a00004 	mov	r0, r4
40012ce4:	eb0005fd 	bl	400144e0 <CyFx3DevIOConfigure>
40012ce8:	e3500000 	cmp	r0, #0
40012cec:	1a000001 	bne	40012cf8 <CyU3PDeviceConfigureIOMatrix+0x30>
40012cf0:	e3a00040 	mov	r0, #64	; 0x40
40012cf4:	eafffff8 	b	40012cdc <CyU3PDeviceConfigureIOMatrix+0x14>
40012cf8:	e3a00000 	mov	r0, #0
40012cfc:	eafffff6 	b	40012cdc <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012d00 <CyU3PDeviceGpioOverride>:
40012d00:	e92d4070 	push	{r4, r5, r6, lr}
40012d04:	e1a04000 	mov	r4, r0
40012d08:	e1a05001 	mov	r5, r1
40012d0c:	e354003d 	cmp	r4, #61	; 0x3d
40012d10:	ba000001 	blt	40012d1c <CyU3PDeviceGpioOverride+0x1c>
40012d14:	e3a00040 	mov	r0, #64	; 0x40
40012d18:	e8bd8070 	pop	{r4, r5, r6, pc}
40012d1c:	e1a02005 	mov	r2, r5
40012d20:	e3a01001 	mov	r1, #1
40012d24:	e1a00004 	mov	r0, r4
40012d28:	eb00066c 	bl	400146e0 <CyFx3DevIOSelectGpio>
40012d2c:	e3a00000 	mov	r0, #0
40012d30:	eafffff8 	b	40012d18 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012d34 <CyU3PIsGpioComplexIOConfigured>:
40012d34:	e92d4010 	push	{r4, lr}
40012d38:	e1a04000 	mov	r4, r0
40012d3c:	e3a01000 	mov	r1, #0
40012d40:	e1a00004 	mov	r0, r4
40012d44:	eb000645 	bl	40014660 <CyFx3DevIOIsGpio>
40012d48:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012d4c <CyU3PIsGpioSimpleIOConfigured>:
40012d4c:	e92d4010 	push	{r4, lr}
40012d50:	e1a04000 	mov	r4, r0
40012d54:	e3a01001 	mov	r1, #1
40012d58:	e1a00004 	mov	r0, r4
40012d5c:	eb00063f 	bl	40014660 <CyFx3DevIOIsGpio>
40012d60:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012d64 <CyU3PIsGpioValid>:
40012d64:	e1a01000 	mov	r1, r0
40012d68:	e351003d 	cmp	r1, #61	; 0x3d
40012d6c:	aa000001 	bge	40012d78 <CyU3PIsGpioValid+0x14>
40012d70:	e3a00001 	mov	r0, #1
40012d74:	e12fff1e 	bx	lr
40012d78:	e3a00000 	mov	r0, #0
40012d7c:	eafffffc 	b	40012d74 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012d80 <CyU3PIsLppIOConfigured>:
40012d80:	e92d4070 	push	{r4, r5, r6, lr}
40012d84:	e1a04000 	mov	r4, r0
40012d88:	e3a05000 	mov	r5, #0
40012d8c:	e3540000 	cmp	r4, #0
40012d90:	0a00000a 	beq	40012dc0 <CyU3PIsLppIOConfigured+0x40>
40012d94:	e3540001 	cmp	r4, #1
40012d98:	0a000004 	beq	40012db0 <CyU3PIsLppIOConfigured+0x30>
40012d9c:	e3540002 	cmp	r4, #2
40012da0:	0a00000e 	beq	40012de0 <CyU3PIsLppIOConfigured+0x60>
40012da4:	e3540003 	cmp	r4, #3
40012da8:	1a000010 	bne	40012df0 <CyU3PIsLppIOConfigured+0x70>
40012dac:	ea000007 	b	40012dd0 <CyU3PIsLppIOConfigured+0x50>
40012db0:	e1a00000 	nop			; (mov r0, r0)
40012db4:	eb00063d 	bl	400146b0 <CyFx3DevIOIsI2sConfigured>
40012db8:	e1a05000 	mov	r5, r0
40012dbc:	ea00000d 	b	40012df8 <CyU3PIsLppIOConfigured+0x78>
40012dc0:	e1a00000 	nop			; (mov r0, r0)
40012dc4:	eb000635 	bl	400146a0 <CyFx3DevIOIsI2cConfigured>
40012dc8:	e1a05000 	mov	r5, r0
40012dcc:	ea000009 	b	40012df8 <CyU3PIsLppIOConfigured+0x78>
40012dd0:	e1a00000 	nop			; (mov r0, r0)
40012dd4:	eb00063d 	bl	400146d0 <CyFx3DevIOIsUartConfigured>
40012dd8:	e1a05000 	mov	r5, r0
40012ddc:	ea000005 	b	40012df8 <CyU3PIsLppIOConfigured+0x78>
40012de0:	e1a00000 	nop			; (mov r0, r0)
40012de4:	eb000635 	bl	400146c0 <CyFx3DevIOIsSpiConfigured>
40012de8:	e1a05000 	mov	r5, r0
40012dec:	ea000001 	b	40012df8 <CyU3PIsLppIOConfigured+0x78>
40012df0:	e1a00000 	nop			; (mov r0, r0)
40012df4:	e1a00000 	nop			; (mov r0, r0)
40012df8:	e1a00000 	nop			; (mov r0, r0)
40012dfc:	e1a00005 	mov	r0, r5
40012e00:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012e04 <CyU3PDebugApplicationDefine>:
40012e04:	e92d4010 	push	{r4, lr}
40012e08:	e24dd020 	sub	sp, sp, #32
40012e0c:	e3a00000 	mov	r0, #0
40012e10:	e59f109c 	ldr	r1, [pc, #156]	; 40012eb4 <CyU3PDebugApplicationDefine+0xb0>
40012e14:	e5810000 	str	r0, [r1]
40012e18:	e3a00001 	mov	r0, #1
40012e1c:	e2811008 	add	r1, r1, #8
40012e20:	e5810000 	str	r0, [r1]
40012e24:	e3a00c02 	mov	r0, #512	; 0x200
40012e28:	ebffc211 	bl	40003674 <CyU3PMemAlloc>
40012e2c:	e1a04000 	mov	r4, r0
40012e30:	e3a030a8 	mov	r3, #168	; 0xa8
40012e34:	e3a02001 	mov	r2, #1
40012e38:	e3a01000 	mov	r1, #0
40012e3c:	e3a00006 	mov	r0, #6
40012e40:	e28dc00c 	add	ip, sp, #12
40012e44:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012e48:	e3a02c02 	mov	r2, #512	; 0x200
40012e4c:	e1a03001 	mov	r3, r1
40012e50:	e58d2004 	str	r2, [sp, #4]
40012e54:	e59f205c 	ldr	r2, [pc, #92]	; 40012eb8 <CyU3PDebugApplicationDefine+0xb4>
40012e58:	e28f105c 	add	r1, pc, #92	; 0x5c
40012e5c:	e58d0008 	str	r0, [sp, #8]
40012e60:	e59f0064 	ldr	r0, [pc, #100]	; 40012ecc <CyU3PDebugApplicationDefine+0xc8>
40012e64:	e58d4000 	str	r4, [sp]
40012e68:	ebffddc8 	bl	4000a590 <_txe_thread_create>
40012e6c:	e3a00084 	mov	r0, #132	; 0x84
40012e70:	ebffc1ff 	bl	40003674 <CyU3PMemAlloc>
40012e74:	e1a04000 	mov	r4, r0
40012e78:	e3a0303c 	mov	r3, #60	; 0x3c
40012e7c:	e3a02084 	mov	r2, #132	; 0x84
40012e80:	e1cd20f0 	strd	r2, [sp]
40012e84:	e1a03004 	mov	r3, r4
40012e88:	e3a02003 	mov	r2, #3
40012e8c:	e3a01000 	mov	r1, #0
40012e90:	e59f0038 	ldr	r0, [pc, #56]	; 40012ed0 <CyU3PDebugApplicationDefine+0xcc>
40012e94:	ebffdcd7 	bl	4000a1f8 <_txe_queue_create>
40012e98:	e3a03038 	mov	r3, #56	; 0x38
40012e9c:	e3a02000 	mov	r2, #0
40012ea0:	e1a01002 	mov	r1, r2
40012ea4:	e59f0028 	ldr	r0, [pc, #40]	; 40012ed4 <CyU3PDebugApplicationDefine+0xd0>
40012ea8:	ebffdbf7 	bl	40009e8c <_txe_mutex_create>
40012eac:	e28dd020 	add	sp, sp, #32
40012eb0:	e8bd8010 	pop	{r4, pc}
40012eb4:	400310fc 	.word	0x400310fc
40012eb8:	40013374 	.word	0x40013374
40012ebc:	75626544 	.word	0x75626544
40012ec0:	68542067 	.word	0x68542067
40012ec4:	64616572 	.word	0x64616572
40012ec8:	00000000 	.word	0x00000000
40012ecc:	400316b4 	.word	0x400316b4
40012ed0:	4003175c 	.word	0x4003175c
40012ed4:	40031798 	.word	0x40031798

Disassembly of section i.CyU3PDebugChannelReset:

40012ed8 <CyU3PDebugChannelReset>:
40012ed8:	e92d4010 	push	{r4, lr}
40012edc:	e59f0034 	ldr	r0, [pc, #52]	; 40012f18 <CyU3PDebugChannelReset+0x40>
40012ee0:	eb000d41 	bl	400163ec <CyU3PDmaChannelReset>
40012ee4:	e3a01000 	mov	r1, #0
40012ee8:	e59f0028 	ldr	r0, [pc, #40]	; 40012f18 <CyU3PDebugChannelReset+0x40>
40012eec:	eb000ddf 	bl	40016670 <CyU3PDmaChannelSetXfer>
40012ef0:	e1a04000 	mov	r4, r0
40012ef4:	e3540000 	cmp	r4, #0
40012ef8:	1a000004 	bne	40012f10 <CyU3PDebugChannelReset+0x38>
40012efc:	e3e02000 	mvn	r2, #0
40012f00:	e59f1014 	ldr	r1, [pc, #20]	; 40012f1c <CyU3PDebugChannelReset+0x44>
40012f04:	e281000c 	add	r0, r1, #12
40012f08:	eb000c6a 	bl	400160b8 <CyU3PDmaChannelGetBuffer>
40012f0c:	e1a04000 	mov	r4, r0
40012f10:	e1a00004 	mov	r0, r4
40012f14:	e8bd8010 	pop	{r4, pc}
40012f18:	400317dc 	.word	0x400317dc
40012f1c:	400317d0 	.word	0x400317d0

Disassembly of section i.CyU3PDebugInit:

40012f20 <CyU3PDebugInit>:
40012f20:	e92d4070 	push	{r4, r5, r6, lr}
40012f24:	e24dd020 	sub	sp, sp, #32
40012f28:	e1a04000 	mov	r4, r0
40012f2c:	e1a06001 	mov	r6, r1
40012f30:	e59f0150 	ldr	r0, [pc, #336]	; 40013088 <CyU3PDebugInit+0x168>
40012f34:	e5900000 	ldr	r0, [r0]
40012f38:	e3500000 	cmp	r0, #0
40012f3c:	1a000003 	bne	40012f50 <CyU3PDebugInit+0x30>
40012f40:	e59f0144 	ldr	r0, [pc, #324]	; 4001308c <CyU3PDebugInit+0x16c>
40012f44:	e5900000 	ldr	r0, [r0]
40012f48:	e3500000 	cmp	r0, #0
40012f4c:	0a000002 	beq	40012f5c <CyU3PDebugInit+0x3c>
40012f50:	e3a00043 	mov	r0, #67	; 0x43
40012f54:	e28dd020 	add	sp, sp, #32
40012f58:	e8bd8070 	pop	{r4, r5, r6, pc}
40012f5c:	e1a00004 	mov	r0, r4
40012f60:	eb0007b3 	bl	40014e34 <CyU3PDmaSocketIsValidConsumer>
40012f64:	e1a05000 	mov	r5, r0
40012f68:	e3550000 	cmp	r5, #0
40012f6c:	1a000001 	bne	40012f78 <CyU3PDebugInit+0x58>
40012f70:	e3a00040 	mov	r0, #64	; 0x40
40012f74:	eafffff6 	b	40012f54 <CyU3PDebugInit+0x34>
40012f78:	e3e01000 	mvn	r1, #0
40012f7c:	e59f010c 	ldr	r0, [pc, #268]	; 40013090 <CyU3PDebugInit+0x170>
40012f80:	ebffdc3f 	bl	4000a084 <_txe_mutex_get>
40012f84:	e3a00c01 	mov	r0, #256	; 0x100
40012f88:	e1cd00b4 	strh	r0, [sp, #4]
40012f8c:	e3a00008 	mov	r0, #8
40012f90:	e1cd00b6 	strh	r0, [sp, #6]
40012f94:	e3a00000 	mov	r0, #0
40012f98:	e1cd00bc 	strh	r0, [sp, #12]
40012f9c:	e59f00f0 	ldr	r0, [pc, #240]	; 40013094 <CyU3PDebugInit+0x174>
40012fa0:	e1cd00b8 	strh	r0, [sp, #8]
40012fa4:	e1cd40ba 	strh	r4, [sp, #10]
40012fa8:	e3a00000 	mov	r0, #0
40012fac:	e5cd0014 	strb	r0, [sp, #20]
40012fb0:	e1cd00be 	strh	r0, [sp, #14]
40012fb4:	e1cd01b0 	strh	r0, [sp, #16]
40012fb8:	e1cd01b2 	strh	r0, [sp, #18]
40012fbc:	e58d001c 	str	r0, [sp, #28]
40012fc0:	e28d2004 	add	r2, sp, #4
40012fc4:	e3a01004 	mov	r1, #4
40012fc8:	e59f00c8 	ldr	r0, [pc, #200]	; 40013098 <CyU3PDebugInit+0x178>
40012fcc:	eb000a71 	bl	40015998 <CyU3PDmaChannelCreate>
40012fd0:	e1a05000 	mov	r5, r0
40012fd4:	e3550000 	cmp	r5, #0
40012fd8:	1a000007 	bne	40012ffc <CyU3PDebugInit+0xdc>
40012fdc:	e59f00b8 	ldr	r0, [pc, #184]	; 4001309c <CyU3PDebugInit+0x17c>
40012fe0:	e5900000 	ldr	r0, [r0]
40012fe4:	e3500000 	cmp	r0, #0
40012fe8:	0a000003 	beq	40012ffc <CyU3PDebugInit+0xdc>
40012fec:	e3a01001 	mov	r1, #1
40012ff0:	e59f00a0 	ldr	r0, [pc, #160]	; 40013098 <CyU3PDebugInit+0x178>
40012ff4:	eb0008d7 	bl	40015358 <CyU3PDmaChannelCacheControl>
40012ff8:	e1a05000 	mov	r5, r0
40012ffc:	e3550000 	cmp	r5, #0
40013000:	1a000003 	bne	40013014 <CyU3PDebugInit+0xf4>
40013004:	e3a01000 	mov	r1, #0
40013008:	e59f0088 	ldr	r0, [pc, #136]	; 40013098 <CyU3PDebugInit+0x178>
4001300c:	eb000d97 	bl	40016670 <CyU3PDmaChannelSetXfer>
40013010:	e1a05000 	mov	r5, r0
40013014:	e3550000 	cmp	r5, #0
40013018:	1a000004 	bne	40013030 <CyU3PDebugInit+0x110>
4001301c:	e3e02000 	mvn	r2, #0
40013020:	e59f1078 	ldr	r1, [pc, #120]	; 400130a0 <CyU3PDebugInit+0x180>
40013024:	e281000c 	add	r0, r1, #12
40013028:	eb000c22 	bl	400160b8 <CyU3PDmaChannelGetBuffer>
4001302c:	e1a05000 	mov	r5, r0
40013030:	e3550000 	cmp	r5, #0
40013034:	0a000005 	beq	40013050 <CyU3PDebugInit+0x130>
40013038:	e59f0058 	ldr	r0, [pc, #88]	; 40013098 <CyU3PDebugInit+0x178>
4001303c:	eb000b4f 	bl	40015d80 <CyU3PDmaChannelDestroy>
40013040:	e59f0048 	ldr	r0, [pc, #72]	; 40013090 <CyU3PDebugInit+0x170>
40013044:	ebffdc43 	bl	4000a158 <_txe_mutex_put>
40013048:	e1a00005 	mov	r0, r5
4001304c:	eaffffc0 	b	40012f54 <CyU3PDebugInit+0x34>
40013050:	e3a00000 	mov	r0, #0
40013054:	e59f1048 	ldr	r1, [pc, #72]	; 400130a4 <CyU3PDebugInit+0x184>
40013058:	e1c100b0 	strh	r0, [r1]
4001305c:	e59f1044 	ldr	r1, [pc, #68]	; 400130a8 <CyU3PDebugInit+0x188>
40013060:	e1c100b0 	strh	r0, [r1]
40013064:	e59f0040 	ldr	r0, [pc, #64]	; 400130ac <CyU3PDebugInit+0x18c>
40013068:	e5c06000 	strb	r6, [r0]
4001306c:	e3a00001 	mov	r0, #1
40013070:	e2411010 	sub	r1, r1, #16
40013074:	e5810000 	str	r0, [r1]
40013078:	e59f0010 	ldr	r0, [pc, #16]	; 40013090 <CyU3PDebugInit+0x170>
4001307c:	ebffdc35 	bl	4000a158 <_txe_mutex_put>
40013080:	e1a00005 	mov	r0, r5
40013084:	eaffffb2 	b	40012f54 <CyU3PDebugInit+0x34>
40013088:	400310fc 	.word	0x400310fc
4001308c:	40031100 	.word	0x40031100
40013090:	40031798 	.word	0x40031798
40013094:	00003f01 	.word	0x00003f01
40013098:	400317dc 	.word	0x400317dc
4001309c:	400310ec 	.word	0x400310ec
400130a0:	400317d0 	.word	0x400317d0
400130a4:	4003110a 	.word	0x4003110a
400130a8:	4003110c 	.word	0x4003110c
400130ac:	40031108 	.word	0x40031108

Disassembly of section i.CyU3PDebugIntToStr:

400130b0 <CyU3PDebugIntToStr>:
400130b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400130b4:	e1a04000 	mov	r4, r0
400130b8:	e1a05001 	mov	r5, r1
400130bc:	e1a08002 	mov	r8, r2
400130c0:	e3a0600a 	mov	r6, #10
400130c4:	e1a07004 	mov	r7, r4
400130c8:	e3a00000 	mov	r0, #0
400130cc:	e1a04007 	mov	r4, r7
400130d0:	e7c70006 	strb	r0, [r7, r6]
400130d4:	e1a00000 	nop			; (mov r0, r0)
400130d8:	e1a01008 	mov	r1, r8
400130dc:	e1a00005 	mov	r0, r5
400130e0:	ebfff643 	bl	400109f4 <__aeabi_uidivmod>
400130e4:	e28f0030 	add	r0, pc, #48	; 0x30
400130e8:	e7d00001 	ldrb	r0, [r0, r1]
400130ec:	e2461001 	sub	r1, r6, #1
400130f0:	e20110ff 	and	r1, r1, #255	; 0xff
400130f4:	e1a06001 	mov	r6, r1
400130f8:	e7c70001 	strb	r0, [r7, r1]
400130fc:	e1a01008 	mov	r1, r8
40013100:	e1a00005 	mov	r0, r5
40013104:	ebfff63a 	bl	400109f4 <__aeabi_uidivmod>
40013108:	e1a05000 	mov	r5, r0
4001310c:	e3550000 	cmp	r5, #0
40013110:	1afffff0 	bne	400130d8 <CyU3PDebugIntToStr+0x28>
40013114:	e0870006 	add	r0, r7, r6
40013118:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001311c:	33323130 	.word	0x33323130
40013120:	37363534 	.word	0x37363534
40013124:	42413938 	.word	0x42413938
40013128:	46454443 	.word	0x46454443
4001312c:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40013130 <CyU3PDebugPreamble>:
40013130:	e59f1004 	ldr	r1, [pc, #4]	; 4001313c <CyU3PDebugPreamble+0xc>
40013134:	e5810000 	str	r0, [r1]
40013138:	e12fff1e 	bx	lr
4001313c:	40031104 	.word	0x40031104

Disassembly of section i.CyU3PDebugPrint:

40013140 <CyU3PDebugPrint>:
40013140:	e92d000f 	push	{r0, r1, r2, r3}
40013144:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013148:	e24dd028 	sub	sp, sp, #40	; 0x28
4001314c:	e1a04000 	mov	r4, r0
40013150:	e59f0200 	ldr	r0, [pc, #512]	; 40013358 <CyU3PDebugPrint+0x218>
40013154:	e5900000 	ldr	r0, [r0]
40013158:	e3500000 	cmp	r0, #0
4001315c:	1a000003 	bne	40013170 <CyU3PDebugPrint+0x30>
40013160:	e3a00042 	mov	r0, #66	; 0x42
40013164:	e28dd028 	add	sp, sp, #40	; 0x28
40013168:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
4001316c:	e49df014 	ldr	pc, [sp], #20
40013170:	e59f01e4 	ldr	r0, [pc, #484]	; 4001335c <CyU3PDebugPrint+0x21c>
40013174:	e5d00000 	ldrb	r0, [r0]
40013178:	e1540000 	cmp	r4, r0
4001317c:	da000001 	ble	40013188 <CyU3PDebugPrint+0x48>
40013180:	e3a00000 	mov	r0, #0
40013184:	eafffff6 	b	40013164 <CyU3PDebugPrint+0x24>
40013188:	ebffd5a8 	bl	40008830 <_tx_thread_identify>
4001318c:	e1a05000 	mov	r5, r0
40013190:	e3550000 	cmp	r5, #0
40013194:	1a000001 	bne	400131a0 <CyU3PDebugPrint+0x60>
40013198:	e3a00013 	mov	r0, #19
4001319c:	eafffff0 	b	40013164 <CyU3PDebugPrint+0x24>
400131a0:	e3a03000 	mov	r3, #0
400131a4:	e58d3004 	str	r3, [sp, #4]
400131a8:	e58d3008 	str	r3, [sp, #8]
400131ac:	e58d300c 	str	r3, [sp, #12]
400131b0:	e58d3010 	str	r3, [sp, #16]
400131b4:	e58d3000 	str	r3, [sp]
400131b8:	e1a02003 	mov	r2, r3
400131bc:	e28d1018 	add	r1, sp, #24
400131c0:	e1a00005 	mov	r0, r5
400131c4:	ebffdd8a 	bl	4000a7f4 <_txe_thread_info_get>
400131c8:	e59d0018 	ldr	r0, [sp, #24]
400131cc:	e5d00001 	ldrb	r0, [r0, #1]
400131d0:	e2400030 	sub	r0, r0, #48	; 0x30
400131d4:	e59d1018 	ldr	r1, [sp, #24]
400131d8:	e5d11000 	ldrb	r1, [r1]
400131dc:	e2411030 	sub	r1, r1, #48	; 0x30
400131e0:	e3a0200a 	mov	r2, #10
400131e4:	e1000182 	smlabb	r0, r2, r1, r0
400131e8:	e20080ff 	and	r8, r0, #255	; 0xff
400131ec:	e3e01000 	mvn	r1, #0
400131f0:	e59f0168 	ldr	r0, [pc, #360]	; 40013360 <CyU3PDebugPrint+0x220>
400131f4:	ebffdba2 	bl	4000a084 <_txe_mutex_get>
400131f8:	e59f0164 	ldr	r0, [pc, #356]	; 40013364 <CyU3PDebugPrint+0x224>
400131fc:	e1d000b0 	ldrh	r0, [r0]
40013200:	e3500000 	cmp	r0, #0
40013204:	0a000011 	beq	40013250 <CyU3PDebugPrint+0x110>
40013208:	e3a02000 	mov	r2, #0
4001320c:	e3a01c01 	mov	r1, #256	; 0x100
40013210:	e59f0150 	ldr	r0, [pc, #336]	; 40013368 <CyU3PDebugPrint+0x228>
40013214:	eb000864 	bl	400153ac <CyU3PDmaChannelCommitBuffer>
40013218:	e1a06000 	mov	r6, r0
4001321c:	e3560000 	cmp	r6, #0
40013220:	1a000004 	bne	40013238 <CyU3PDebugPrint+0xf8>
40013224:	e3e02000 	mvn	r2, #0
40013228:	e59f113c 	ldr	r1, [pc, #316]	; 4001336c <CyU3PDebugPrint+0x22c>
4001322c:	e281000c 	add	r0, r1, #12
40013230:	eb000ba0 	bl	400160b8 <CyU3PDmaChannelGetBuffer>
40013234:	e1a06000 	mov	r6, r0
40013238:	e3560000 	cmp	r6, #0
4001323c:	0a000000 	beq	40013244 <CyU3PDebugPrint+0x104>
40013240:	ebffff24 	bl	40012ed8 <CyU3PDebugChannelReset>
40013244:	e3a00000 	mov	r0, #0
40013248:	e59f1114 	ldr	r1, [pc, #276]	; 40013364 <CyU3PDebugPrint+0x224>
4001324c:	e1c100b0 	strh	r0, [r1]
40013250:	e59f0114 	ldr	r0, [pc, #276]	; 4001336c <CyU3PDebugPrint+0x22c>
40013254:	e5907000 	ldr	r7, [r0]
40013258:	e3a00c01 	mov	r0, #256	; 0x100
4001325c:	e58d0014 	str	r0, [sp, #20]
40013260:	e59f0108 	ldr	r0, [pc, #264]	; 40013370 <CyU3PDebugPrint+0x230>
40013264:	e5900000 	ldr	r0, [r0]
40013268:	e3500000 	cmp	r0, #0
4001326c:	0a000005 	beq	40013288 <CyU3PDebugPrint+0x148>
40013270:	e2877008 	add	r7, r7, #8
40013274:	e1dd01b4 	ldrh	r0, [sp, #20]
40013278:	e2400008 	sub	r0, r0, #8
4001327c:	e1a00800 	lsl	r0, r0, #16
40013280:	e1a00820 	lsr	r0, r0, #16
40013284:	e58d0014 	str	r0, [sp, #20]
40013288:	e28d0048 	add	r0, sp, #72	; 0x48
4001328c:	e58d001c 	str	r0, [sp, #28]
40013290:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40013294:	e59d301c 	ldr	r3, [sp, #28]
40013298:	e28d1014 	add	r1, sp, #20
4001329c:	e1a00007 	mov	r0, r7
400132a0:	eb000071 	bl	4001346c <MyDebugSNPrint>
400132a4:	e1a06000 	mov	r6, r0
400132a8:	e59f00c0 	ldr	r0, [pc, #192]	; 40013370 <CyU3PDebugPrint+0x230>
400132ac:	e5900000 	ldr	r0, [r0]
400132b0:	e3500000 	cmp	r0, #0
400132b4:	0a00000f 	beq	400132f8 <CyU3PDebugPrint+0x1b8>
400132b8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001336c <CyU3PDebugPrint+0x22c>
400132bc:	e5907000 	ldr	r7, [r0]
400132c0:	e5cd4020 	strb	r4, [sp, #32]
400132c4:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
400132c8:	e3e00000 	mvn	r0, #0
400132cc:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
400132d0:	e1dd01b4 	ldrh	r0, [sp, #20]
400132d4:	e58d0024 	str	r0, [sp, #36]	; 0x24
400132d8:	e3a02008 	mov	r2, #8
400132dc:	e28d1020 	add	r1, sp, #32
400132e0:	e1a00007 	mov	r0, r7
400132e4:	ebffc17a 	bl	400038d4 <CyU3PMemCopy>
400132e8:	e1dd01b4 	ldrh	r0, [sp, #20]
400132ec:	e2800008 	add	r0, r0, #8
400132f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400132f4:	e58d0014 	str	r0, [sp, #20]
400132f8:	e3a02000 	mov	r2, #0
400132fc:	e1dd11b4 	ldrh	r1, [sp, #20]
40013300:	e59f0060 	ldr	r0, [pc, #96]	; 40013368 <CyU3PDebugPrint+0x228>
40013304:	eb000828 	bl	400153ac <CyU3PDmaChannelCommitBuffer>
40013308:	e1a06000 	mov	r6, r0
4001330c:	e3560000 	cmp	r6, #0
40013310:	1a000004 	bne	40013328 <CyU3PDebugPrint+0x1e8>
40013314:	e3e02000 	mvn	r2, #0
40013318:	e59f104c 	ldr	r1, [pc, #76]	; 4001336c <CyU3PDebugPrint+0x22c>
4001331c:	e281000c 	add	r0, r1, #12
40013320:	eb000b64 	bl	400160b8 <CyU3PDmaChannelGetBuffer>
40013324:	e1a06000 	mov	r6, r0
40013328:	e3560000 	cmp	r6, #0
4001332c:	0a000002 	beq	4001333c <CyU3PDebugPrint+0x1fc>
40013330:	ebfffee8 	bl	40012ed8 <CyU3PDebugChannelReset>
40013334:	e1a00006 	mov	r0, r6
40013338:	eaffff89 	b	40013164 <CyU3PDebugPrint+0x24>
4001333c:	e3a00000 	mov	r0, #0
40013340:	e59f101c 	ldr	r1, [pc, #28]	; 40013364 <CyU3PDebugPrint+0x224>
40013344:	e1c100b0 	strh	r0, [r1]
40013348:	e59f0010 	ldr	r0, [pc, #16]	; 40013360 <CyU3PDebugPrint+0x220>
4001334c:	ebffdb81 	bl	4000a158 <_txe_mutex_put>
40013350:	e3a00000 	mov	r0, #0
40013354:	eaffff82 	b	40013164 <CyU3PDebugPrint+0x24>
40013358:	400310fc 	.word	0x400310fc
4001335c:	40031108 	.word	0x40031108
40013360:	40031798 	.word	0x40031798
40013364:	4003110c 	.word	0x4003110c
40013368:	400317dc 	.word	0x400317dc
4001336c:	400317d0 	.word	0x400317d0
40013370:	40031104 	.word	0x40031104

Disassembly of section i.CyU3PDebugThreadEntry:

40013374 <CyU3PDebugThreadEntry>:
40013374:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013378:	e1a06000 	mov	r6, r0
4001337c:	e3a05000 	mov	r5, #0
40013380:	e1a00000 	nop			; (mov r0, r0)
40013384:	e3e02000 	mvn	r2, #0
40013388:	e1a0100d 	mov	r1, sp
4001338c:	e59f00c4 	ldr	r0, [pc, #196]	; 40013458 <CyU3PDebugThreadEntry+0xe4>
40013390:	ebffdc2e 	bl	4000a450 <_txe_queue_receive>
40013394:	e1a04000 	mov	r4, r0
40013398:	e3540000 	cmp	r4, #0
4001339c:	1afffff8 	bne	40013384 <CyU3PDebugThreadEntry+0x10>
400133a0:	e3e01000 	mvn	r1, #0
400133a4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001345c <CyU3PDebugThreadEntry+0xe8>
400133a8:	ebffdb35 	bl	4000a084 <_txe_mutex_get>
400133ac:	e59f00ac 	ldr	r0, [pc, #172]	; 40013460 <CyU3PDebugThreadEntry+0xec>
400133b0:	e1d000b0 	ldrh	r0, [r0]
400133b4:	e3500c01 	cmp	r0, #256	; 0x100
400133b8:	0a000007 	beq	400133dc <CyU3PDebugThreadEntry+0x68>
400133bc:	e59f10a0 	ldr	r1, [pc, #160]	; 40013464 <CyU3PDebugThreadEntry+0xf0>
400133c0:	e5911000 	ldr	r1, [r1]
400133c4:	e59f2094 	ldr	r2, [pc, #148]	; 40013460 <CyU3PDebugThreadEntry+0xec>
400133c8:	e1d220b0 	ldrh	r2, [r2]
400133cc:	e0810002 	add	r0, r1, r2
400133d0:	e3a02008 	mov	r2, #8
400133d4:	e1a0100d 	mov	r1, sp
400133d8:	ebffc13d 	bl	400038d4 <CyU3PMemCopy>
400133dc:	e59f007c 	ldr	r0, [pc, #124]	; 40013460 <CyU3PDebugThreadEntry+0xec>
400133e0:	e1d000b0 	ldrh	r0, [r0]
400133e4:	e35000f8 	cmp	r0, #248	; 0xf8
400133e8:	1a000015 	bne	40013444 <CyU3PDebugThreadEntry+0xd0>
400133ec:	e3a02000 	mov	r2, #0
400133f0:	e3a01c01 	mov	r1, #256	; 0x100
400133f4:	e59f006c 	ldr	r0, [pc, #108]	; 40013468 <CyU3PDebugThreadEntry+0xf4>
400133f8:	eb0007eb 	bl	400153ac <CyU3PDmaChannelCommitBuffer>
400133fc:	e1a05000 	mov	r5, r0
40013400:	e3550000 	cmp	r5, #0
40013404:	1a000004 	bne	4001341c <CyU3PDebugThreadEntry+0xa8>
40013408:	e3e02000 	mvn	r2, #0
4001340c:	e59f1050 	ldr	r1, [pc, #80]	; 40013464 <CyU3PDebugThreadEntry+0xf0>
40013410:	e281000c 	add	r0, r1, #12
40013414:	eb000b27 	bl	400160b8 <CyU3PDmaChannelGetBuffer>
40013418:	e1a05000 	mov	r5, r0
4001341c:	e3550000 	cmp	r5, #0
40013420:	0a000004 	beq	40013438 <CyU3PDebugThreadEntry+0xc4>
40013424:	ebfffeab 	bl	40012ed8 <CyU3PDebugChannelReset>
40013428:	e1a05000 	mov	r5, r0
4001342c:	e3550000 	cmp	r5, #0
40013430:	0a000000 	beq	40013438 <CyU3PDebugThreadEntry+0xc4>
40013434:	ea000005 	b	40013450 <CyU3PDebugThreadEntry+0xdc>
40013438:	e3a00000 	mov	r0, #0
4001343c:	e59f101c 	ldr	r1, [pc, #28]	; 40013460 <CyU3PDebugThreadEntry+0xec>
40013440:	e1c100b0 	strh	r0, [r1]
40013444:	e59f0010 	ldr	r0, [pc, #16]	; 4001345c <CyU3PDebugThreadEntry+0xe8>
40013448:	ebffdb42 	bl	4000a158 <_txe_mutex_put>
4001344c:	eaffffcc 	b	40013384 <CyU3PDebugThreadEntry+0x10>
40013450:	e1a00000 	nop			; (mov r0, r0)
40013454:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013458:	4003175c 	.word	0x4003175c
4001345c:	40031798 	.word	0x40031798
40013460:	4003110c 	.word	0x4003110c
40013464:	400317d0 	.word	0x400317d0
40013468:	400317dc 	.word	0x400317dc

Disassembly of section i.MyDebugSNPrint:

4001346c <MyDebugSNPrint>:
4001346c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40013470:	e24dd01c 	sub	sp, sp, #28
40013474:	e1a04000 	mov	r4, r0
40013478:	e1a05001 	mov	r5, r1
4001347c:	e1a06002 	mov	r6, r2
40013480:	e3a08000 	mov	r8, #0
40013484:	e3a00000 	mov	r0, #0
40013488:	e58d0018 	str	r0, [sp, #24]
4001348c:	e3a09000 	mov	r9, #0
40013490:	e1d5b0b0 	ldrh	fp, [r5]
40013494:	e3540000 	cmp	r4, #0
40013498:	1a000002 	bne	400134a8 <MyDebugSNPrint+0x3c>
4001349c:	e3a00040 	mov	r0, #64	; 0x40
400134a0:	e28dd02c 	add	sp, sp, #44	; 0x2c
400134a4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400134a8:	e1a07006 	mov	r7, r6
400134ac:	ea00008d 	b	400136e8 <MyDebugSNPrint+0x27c>
400134b0:	e24b0002 	sub	r0, fp, #2
400134b4:	e1500009 	cmp	r0, r9
400134b8:	ca000001 	bgt	400134c4 <MyDebugSNPrint+0x58>
400134bc:	e3a00040 	mov	r0, #64	; 0x40
400134c0:	eafffff6 	b	400134a0 <MyDebugSNPrint+0x34>
400134c4:	e5d70000 	ldrb	r0, [r7]
400134c8:	e3500025 	cmp	r0, #37	; 0x25
400134cc:	0a000005 	beq	400134e8 <MyDebugSNPrint+0x7c>
400134d0:	e5d71000 	ldrb	r1, [r7]
400134d4:	e1a00009 	mov	r0, r9
400134d8:	e2892001 	add	r2, r9, #1
400134dc:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400134e0:	e7c41000 	strb	r1, [r4, r0]
400134e4:	ea00007e 	b	400136e4 <MyDebugSNPrint+0x278>
400134e8:	e2877001 	add	r7, r7, #1
400134ec:	e5d70000 	ldrb	r0, [r7]
400134f0:	e3500064 	cmp	r0, #100	; 0x64
400134f4:	0a000021 	beq	40013580 <MyDebugSNPrint+0x114>
400134f8:	ca000006 	bgt	40013518 <MyDebugSNPrint+0xac>
400134fc:	e3500025 	cmp	r0, #37	; 0x25
40013500:	0a00000b 	beq	40013534 <MyDebugSNPrint+0xc8>
40013504:	e3500058 	cmp	r0, #88	; 0x58
40013508:	0a00004c 	beq	40013640 <MyDebugSNPrint+0x1d4>
4001350c:	e3500063 	cmp	r0, #99	; 0x63
40013510:	1a00005a 	bne	40013680 <MyDebugSNPrint+0x214>
40013514:	ea00000d 	b	40013550 <MyDebugSNPrint+0xe4>
40013518:	e3500073 	cmp	r0, #115	; 0x73
4001351c:	0a000031 	beq	400135e8 <MyDebugSNPrint+0x17c>
40013520:	e3500075 	cmp	r0, #117	; 0x75
40013524:	0a000036 	beq	40013604 <MyDebugSNPrint+0x198>
40013528:	e3500078 	cmp	r0, #120	; 0x78
4001352c:	1a000053 	bne	40013680 <MyDebugSNPrint+0x214>
40013530:	ea000044 	b	40013648 <MyDebugSNPrint+0x1dc>
40013534:	e1a00000 	nop			; (mov r0, r0)
40013538:	e3a01025 	mov	r1, #37	; 0x25
4001353c:	e1a00009 	mov	r0, r9
40013540:	e2892001 	add	r2, r9, #1
40013544:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013548:	e7c41000 	strb	r1, [r4, r0]
4001354c:	ea00004e 	b	4001368c <MyDebugSNPrint+0x220>
40013550:	e1a00000 	nop			; (mov r0, r0)
40013554:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013558:	e5900000 	ldr	r0, [r0]
4001355c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
40013560:	e2811004 	add	r1, r1, #4
40013564:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013568:	e20010ff 	and	r1, r0, #255	; 0xff
4001356c:	e1a00009 	mov	r0, r9
40013570:	e2892001 	add	r2, r9, #1
40013574:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013578:	e7c41000 	strb	r1, [r4, r0]
4001357c:	ea000042 	b	4001368c <MyDebugSNPrint+0x220>
40013580:	e1a00000 	nop			; (mov r0, r0)
40013584:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013588:	e5900000 	ldr	r0, [r0]
4001358c:	e58d0014 	str	r0, [sp, #20]
40013590:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013594:	e2800004 	add	r0, r0, #4
40013598:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001359c:	e59d0014 	ldr	r0, [sp, #20]
400135a0:	e3500000 	cmp	r0, #0
400135a4:	aa000007 	bge	400135c8 <MyDebugSNPrint+0x15c>
400135a8:	e3a0102d 	mov	r1, #45	; 0x2d
400135ac:	e1a00009 	mov	r0, r9
400135b0:	e2892001 	add	r2, r9, #1
400135b4:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400135b8:	e7c41000 	strb	r1, [r4, r0]
400135bc:	e59d0014 	ldr	r0, [sp, #20]
400135c0:	e2600000 	rsb	r0, r0, #0
400135c4:	e58d0014 	str	r0, [sp, #20]
400135c8:	e3a0200a 	mov	r2, #10
400135cc:	e59d1014 	ldr	r1, [sp, #20]
400135d0:	e28d0004 	add	r0, sp, #4
400135d4:	ebfffeb5 	bl	400130b0 <CyU3PDebugIntToStr>
400135d8:	e1a08000 	mov	r8, r0
400135dc:	e3a00001 	mov	r0, #1
400135e0:	e58d0018 	str	r0, [sp, #24]
400135e4:	ea000028 	b	4001368c <MyDebugSNPrint+0x220>
400135e8:	e1a00000 	nop			; (mov r0, r0)
400135ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400135f0:	e4908004 	ldr	r8, [r0], #4
400135f4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400135f8:	e3a00001 	mov	r0, #1
400135fc:	e58d0018 	str	r0, [sp, #24]
40013600:	ea000021 	b	4001368c <MyDebugSNPrint+0x220>
40013604:	e1a00000 	nop			; (mov r0, r0)
40013608:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001360c:	e5900000 	ldr	r0, [r0]
40013610:	e58d0010 	str	r0, [sp, #16]
40013614:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013618:	e2800004 	add	r0, r0, #4
4001361c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013620:	e3a0200a 	mov	r2, #10
40013624:	e59d1010 	ldr	r1, [sp, #16]
40013628:	e28d0004 	add	r0, sp, #4
4001362c:	ebfffe9f 	bl	400130b0 <CyU3PDebugIntToStr>
40013630:	e1a08000 	mov	r8, r0
40013634:	e3a00001 	mov	r0, #1
40013638:	e58d0018 	str	r0, [sp, #24]
4001363c:	ea000012 	b	4001368c <MyDebugSNPrint+0x220>
40013640:	e1a00000 	nop			; (mov r0, r0)
40013644:	e1a00000 	nop			; (mov r0, r0)
40013648:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001364c:	e5900000 	ldr	r0, [r0]
40013650:	e58d0010 	str	r0, [sp, #16]
40013654:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013658:	e2800004 	add	r0, r0, #4
4001365c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013660:	e3a02010 	mov	r2, #16
40013664:	e59d1010 	ldr	r1, [sp, #16]
40013668:	e28d0004 	add	r0, sp, #4
4001366c:	ebfffe8f 	bl	400130b0 <CyU3PDebugIntToStr>
40013670:	e1a08000 	mov	r8, r0
40013674:	e3a00001 	mov	r0, #1
40013678:	e58d0018 	str	r0, [sp, #24]
4001367c:	ea000002 	b	4001368c <MyDebugSNPrint+0x220>
40013680:	e1a00000 	nop			; (mov r0, r0)
40013684:	e3a00040 	mov	r0, #64	; 0x40
40013688:	eaffff84 	b	400134a0 <MyDebugSNPrint+0x34>
4001368c:	e1a00000 	nop			; (mov r0, r0)
40013690:	e59d0018 	ldr	r0, [sp, #24]
40013694:	e3500000 	cmp	r0, #0
40013698:	0a000010 	beq	400136e0 <MyDebugSNPrint+0x274>
4001369c:	e1a00008 	mov	r0, r8
400136a0:	ebfff47e 	bl	400108a0 <strlen>
400136a4:	e1a0a800 	lsl	sl, r0, #16
400136a8:	e1a0a82a 	lsr	sl, sl, #16
400136ac:	e04b000a 	sub	r0, fp, sl
400136b0:	e2400001 	sub	r0, r0, #1
400136b4:	e1500009 	cmp	r0, r9
400136b8:	ca000001 	bgt	400136c4 <MyDebugSNPrint+0x258>
400136bc:	e3a00040 	mov	r0, #64	; 0x40
400136c0:	eaffff76 	b	400134a0 <MyDebugSNPrint+0x34>
400136c4:	e0840009 	add	r0, r4, r9
400136c8:	e1a01008 	mov	r1, r8
400136cc:	ebfff437 	bl	400107b0 <strcpy>
400136d0:	e089000a 	add	r0, r9, sl
400136d4:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400136d8:	e3a00000 	mov	r0, #0
400136dc:	e58d0018 	str	r0, [sp, #24]
400136e0:	e1a00000 	nop			; (mov r0, r0)
400136e4:	e2877001 	add	r7, r7, #1
400136e8:	e5d70000 	ldrb	r0, [r7]
400136ec:	e3500000 	cmp	r0, #0
400136f0:	1affff6e 	bne	400134b0 <MyDebugSNPrint+0x44>
400136f4:	e3a00000 	mov	r0, #0
400136f8:	e7c40009 	strb	r0, [r4, r9]
400136fc:	e1c590b0 	strh	r9, [r5]
40013700:	eaffff66 	b	400134a0 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013704 <CyU3PBusyWait>:
40013704:	ea000006 	b	40013724 <CyU3PBusyWait+0x20>
40013708:	e3a01000 	mov	r1, #0
4001370c:	ea000002 	b	4001371c <CyU3PBusyWait+0x18>
40013710:	e281100a 	add	r1, r1, #10
40013714:	e241100a 	sub	r1, r1, #10
40013718:	e2811001 	add	r1, r1, #1
4001371c:	e351001f 	cmp	r1, #31
40013720:	3afffffa 	bcc	40013710 <CyU3PBusyWait+0xc>
40013724:	e1b02000 	movs	r2, r0
40013728:	e2403001 	sub	r3, r0, #1
4001372c:	e1a00803 	lsl	r0, r3, #16
40013730:	e1a00820 	lsr	r0, r0, #16
40013734:	1afffff3 	bne	40013708 <CyU3PBusyWait+0x4>
40013738:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

4001373c <CyU3PComputeChecksum>:
4001373c:	e92d4010 	push	{r4, lr}
40013740:	e1a03000 	mov	r3, r0
40013744:	e3a00000 	mov	r0, #0
40013748:	e3530000 	cmp	r3, #0
4001374c:	0a000003 	beq	40013760 <CyU3PComputeChecksum+0x24>
40013750:	e3510000 	cmp	r1, #0
40013754:	0a000001 	beq	40013760 <CyU3PComputeChecksum+0x24>
40013758:	e3520000 	cmp	r2, #0
4001375c:	1a000001 	bne	40013768 <CyU3PComputeChecksum+0x2c>
40013760:	e3a00040 	mov	r0, #64	; 0x40
40013764:	ea00000a 	b	40013794 <CyU3PComputeChecksum+0x58>
40013768:	e3a0e000 	mov	lr, #0
4001376c:	e582e000 	str	lr, [r2]
40013770:	e3a0c000 	mov	ip, #0
40013774:	ea000004 	b	4001378c <CyU3PComputeChecksum+0x50>
40013778:	e592e000 	ldr	lr, [r2]
4001377c:	e793410c 	ldr	r4, [r3, ip, lsl #2]
40013780:	e08ee004 	add	lr, lr, r4
40013784:	e582e000 	str	lr, [r2]
40013788:	e28cc001 	add	ip, ip, #1
4001378c:	e15c0121 	cmp	ip, r1, lsr #2
40013790:	3afffff8 	bcc	40013778 <CyU3PComputeChecksum+0x3c>
40013794:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013798 <__aeabi_memclr4>:
40013798:	e92d4030 	push	{r4, r5, lr}
4001379c:	e1a04000 	mov	r4, r0
400137a0:	e1a05001 	mov	r5, r1
400137a4:	e3a02000 	mov	r2, #0
400137a8:	e1a01005 	mov	r1, r5
400137ac:	e1a00004 	mov	r0, r4
400137b0:	eb000020 	bl	40013838 <__aeabi_memset>
400137b4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

400137b8 <__aeabi_memcpy>:
400137b8:	e92d4010 	push	{r4, lr}
400137bc:	e1a03000 	mov	r3, r0
400137c0:	e1a0c001 	mov	ip, r1
400137c4:	e1500001 	cmp	r0, r1
400137c8:	2a000006 	bcs	400137e8 <__aeabi_memcpy+0x30>
400137cc:	ea000001 	b	400137d8 <__aeabi_memcpy+0x20>
400137d0:	e4dce001 	ldrb	lr, [ip], #1
400137d4:	e4c3e001 	strb	lr, [r3], #1
400137d8:	e1b0e002 	movs	lr, r2
400137dc:	e2422001 	sub	r2, r2, #1
400137e0:	1afffffa 	bne	400137d0 <__aeabi_memcpy+0x18>
400137e4:	ea000009 	b	40013810 <__aeabi_memcpy+0x58>
400137e8:	e080e002 	add	lr, r0, r2
400137ec:	e24e3001 	sub	r3, lr, #1
400137f0:	e081e002 	add	lr, r1, r2
400137f4:	e24ec001 	sub	ip, lr, #1
400137f8:	ea000001 	b	40013804 <__aeabi_memcpy+0x4c>
400137fc:	e45ce001 	ldrb	lr, [ip], #-1
40013800:	e443e001 	strb	lr, [r3], #-1
40013804:	e1b0e002 	movs	lr, r2
40013808:	e2422001 	sub	r2, r2, #1
4001380c:	1afffffa 	bne	400137fc <__aeabi_memcpy+0x44>
40013810:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013814 <__aeabi_memcpy4>:
40013814:	e92d4070 	push	{r4, r5, r6, lr}
40013818:	e1a04000 	mov	r4, r0
4001381c:	e1a05001 	mov	r5, r1
40013820:	e1a06002 	mov	r6, r2
40013824:	e1a02006 	mov	r2, r6
40013828:	e1a01005 	mov	r1, r5
4001382c:	e1a00004 	mov	r0, r4
40013830:	ebffffe0 	bl	400137b8 <__aeabi_memcpy>
40013834:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013838 <__aeabi_memset>:
40013838:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001383c:	e1a03000 	mov	r3, r0
40013840:	ea000000 	b	40013848 <__aeabi_memset+0x10>
40013844:	e4c32001 	strb	r2, [r3], #1
40013848:	e1b0c001 	movs	ip, r1
4001384c:	e2411001 	sub	r1, r1, #1
40013850:	1afffffb 	bne	40013844 <__aeabi_memset+0xc>
40013854:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013858 <CyU3PApplicationDefine>:
40013858:	e92d4010 	push	{r4, lr}
4001385c:	e24dd020 	sub	sp, sp, #32
40013860:	e3e00000 	mvn	r0, #0
40013864:	e59f10b4 	ldr	r1, [pc, #180]	; 40013920 <CyU3PApplicationDefine+0xc8>
40013868:	e5810000 	str	r0, [r1]
4001386c:	e3a00000 	mov	r0, #0
40013870:	e59f10ac 	ldr	r1, [pc, #172]	; 40013924 <CyU3PApplicationDefine+0xcc>
40013874:	e5810000 	str	r0, [r1]
40013878:	ebffbf6a 	bl	40003628 <CyU3PMemInit>
4001387c:	eb001694 	bl	400192d4 <CyU3PDmaApplicationDefine>
40013880:	e3a02028 	mov	r2, #40	; 0x28
40013884:	e3a01000 	mov	r1, #0
40013888:	e59f0098 	ldr	r0, [pc, #152]	; 40013928 <CyU3PApplicationDefine+0xd0>
4001388c:	ebffd8c4 	bl	40009ba4 <_txe_event_flags_create>
40013890:	e3a00080 	mov	r0, #128	; 0x80
40013894:	ebffbf76 	bl	40003674 <CyU3PMemAlloc>
40013898:	e1a04000 	mov	r4, r0
4001389c:	e3a0303c 	mov	r3, #60	; 0x3c
400138a0:	e3a02080 	mov	r2, #128	; 0x80
400138a4:	e1cd20f0 	strd	r2, [sp]
400138a8:	e1a03004 	mov	r3, r4
400138ac:	e3a02006 	mov	r2, #6
400138b0:	e3a01000 	mov	r1, #0
400138b4:	e59f0070 	ldr	r0, [pc, #112]	; 4001392c <CyU3PApplicationDefine+0xd4>
400138b8:	ebffda4e 	bl	4000a1f8 <_txe_queue_create>
400138bc:	e3a00b01 	mov	r0, #1024	; 0x400
400138c0:	ebffbf6b 	bl	40003674 <CyU3PMemAlloc>
400138c4:	e1a04000 	mov	r4, r0
400138c8:	e3a030a8 	mov	r3, #168	; 0xa8
400138cc:	e3a02001 	mov	r2, #1
400138d0:	e3a01000 	mov	r1, #0
400138d4:	e3a00004 	mov	r0, #4
400138d8:	e28dc00c 	add	ip, sp, #12
400138dc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400138e0:	e3a02b01 	mov	r2, #1024	; 0x400
400138e4:	e1a03001 	mov	r3, r1
400138e8:	e58d2004 	str	r2, [sp, #4]
400138ec:	e59f203c 	ldr	r2, [pc, #60]	; 40013930 <CyU3PApplicationDefine+0xd8>
400138f0:	e28f103c 	add	r1, pc, #60	; 0x3c
400138f4:	e58d0008 	str	r0, [sp, #8]
400138f8:	e59f0048 	ldr	r0, [pc, #72]	; 40013948 <CyU3PApplicationDefine+0xf0>
400138fc:	e58d4000 	str	r4, [sp]
40013900:	ebffdb22 	bl	4000a590 <_txe_thread_create>
40013904:	eb000082 	bl	40013b14 <CyU3PSibApplicationDefine>
40013908:	ebfffd3d 	bl	40012e04 <CyU3PDebugApplicationDefine>
4001390c:	eb001d16 	bl	4001ad6c <CyU3PPibApplicationDefine>
40013910:	eb00013c 	bl	40013e08 <CyU3PLppApplicationDefine>
40013914:	eb002b6f 	bl	4001e6d8 <CyU3PUibApplicationDefine>
40013918:	e28dd020 	add	sp, sp, #32
4001391c:	e8bd8010 	pop	{r4, pc}
40013920:	40031110 	.word	0x40031110
40013924:	40031114 	.word	0x40031114
40013928:	40031924 	.word	0x40031924
4001392c:	4003194c 	.word	0x4003194c
40013930:	40013a00 	.word	0x40013a00
40013934:	535f3230 	.word	0x535f3230
40013938:	45545359 	.word	0x45545359
4001393c:	48545f4d 	.word	0x48545f4d
40013940:	44414552 	.word	0x44414552
40013944:	00000000 	.word	0x00000000
40013948:	4003187c 	.word	0x4003187c

Disassembly of section i.CyU3PSysCheckBootState:

4001394c <CyU3PSysCheckBootState>:
4001394c:	e92d4070 	push	{r4, r5, r6, lr}
40013950:	e3a00000 	mov	r0, #0
40013954:	e59f106c 	ldr	r1, [pc, #108]	; 400139c8 <CyU3PSysCheckBootState+0x7c>
40013958:	e5810000 	str	r0, [r1]
4001395c:	e59f0068 	ldr	r0, [pc, #104]	; 400139cc <CyU3PSysCheckBootState+0x80>
40013960:	e5900000 	ldr	r0, [r0]
40013964:	e3100401 	tst	r0, #16777216	; 0x1000000
40013968:	0a000015 	beq	400139c4 <CyU3PSysCheckBootState+0x78>
4001396c:	e59f005c 	ldr	r0, [pc, #92]	; 400139d0 <CyU3PSysCheckBootState+0x84>
40013970:	e5900000 	ldr	r0, [r0]
40013974:	e3500001 	cmp	r0, #1
40013978:	1a000011 	bne	400139c4 <CyU3PSysCheckBootState+0x78>
4001397c:	e3a00000 	mov	r0, #0
40013980:	e59f1048 	ldr	r1, [pc, #72]	; 400139d0 <CyU3PSysCheckBootState+0x84>
40013984:	e5810000 	str	r0, [r1]
40013988:	e3a00101 	mov	r0, #1073741824	; 0x40000000
4001398c:	e5904004 	ldr	r4, [r0, #4]
40013990:	e1a05004 	mov	r5, r4
40013994:	e3a02901 	mov	r2, #16384	; 0x4000
40013998:	e1a01005 	mov	r1, r5
4001399c:	e3a00000 	mov	r0, #0
400139a0:	ebffbfcb 	bl	400038d4 <CyU3PMemCopy>
400139a4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400139a8:	e5900008 	ldr	r0, [r0, #8]
400139ac:	e59f1020 	ldr	r1, [pc, #32]	; 400139d4 <CyU3PSysCheckBootState+0x88>
400139b0:	e1500001 	cmp	r0, r1
400139b4:	1a000002 	bne	400139c4 <CyU3PSysCheckBootState+0x78>
400139b8:	e2840901 	add	r0, r4, #16384	; 0x4000
400139bc:	e59f1004 	ldr	r1, [pc, #4]	; 400139c8 <CyU3PSysCheckBootState+0x7c>
400139c0:	e5810000 	str	r0, [r1]
400139c4:	e8bd8070 	pop	{r4, r5, r6, pc}
400139c8:	40031118 	.word	0x40031118
400139cc:	e0050000 	.word	0xe0050000
400139d0:	40031114 	.word	0x40031114
400139d4:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

400139d8 <CyU3PSysFwMsgHandler>:
400139d8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

400139dc <CyU3PSysModuleInitCompleteEvt>:
400139dc:	e92d4010 	push	{r4, lr}
400139e0:	e1a04000 	mov	r4, r0
400139e4:	e3a00010 	mov	r0, #16
400139e8:	e1a01410 	lsl	r1, r0, r4
400139ec:	e3a02000 	mov	r2, #0
400139f0:	e59f0004 	ldr	r0, [pc, #4]	; 400139fc <CyU3PSysModuleInitCompleteEvt+0x20>
400139f4:	ebffd90a 	bl	40009e24 <_txe_event_flags_set>
400139f8:	e8bd8010 	pop	{r4, pc}
400139fc:	40031924 	.word	0x40031924

Disassembly of section i.CyU3PSysThreadEntry:

40013a00 <CyU3PSysThreadEntry>:
40013a00:	e92d4010 	push	{r4, lr}
40013a04:	e24dd028 	sub	sp, sp, #40	; 0x28
40013a08:	e3a04c02 	mov	r4, #512	; 0x200
40013a0c:	e3844080 	orr	r4, r4, #128	; 0x80
40013a10:	e3e03000 	mvn	r3, #0
40013a14:	e58d3000 	str	r3, [sp]
40013a18:	e28d3024 	add	r3, sp, #36	; 0x24
40013a1c:	e3a02003 	mov	r2, #3
40013a20:	e1a01004 	mov	r1, r4
40013a24:	e59f00d8 	ldr	r0, [pc, #216]	; 40013b04 <CyU3PSysThreadEntry+0x104>
40013a28:	ebffd8cd 	bl	40009d64 <_txe_event_flags_get>
40013a2c:	e28d2020 	add	r2, sp, #32
40013a30:	e3a01000 	mov	r1, #0
40013a34:	e59f00cc 	ldr	r0, [pc, #204]	; 40013b08 <CyU3PSysThreadEntry+0x108>
40013a38:	ebffdb8a 	bl	4000a868 <_txe_thread_priority_change>
40013a3c:	ebffd2cf 	bl	40008580 <CyFxApplicationDefine>
40013a40:	e28d2020 	add	r2, sp, #32
40013a44:	e3a01004 	mov	r1, #4
40013a48:	e59f00b8 	ldr	r0, [pc, #184]	; 40013b08 <CyU3PSysThreadEntry+0x108>
40013a4c:	ebffdb85 	bl	4000a868 <_txe_thread_priority_change>
40013a50:	ea00002a 	b	40013b00 <CyU3PSysThreadEntry+0x100>
40013a54:	e59f00b0 	ldr	r0, [pc, #176]	; 40013b0c <CyU3PSysThreadEntry+0x10c>
40013a58:	e5903000 	ldr	r3, [r0]
40013a5c:	e58d3000 	str	r3, [sp]
40013a60:	e28d3024 	add	r3, sp, #36	; 0x24
40013a64:	e3a02001 	mov	r2, #1
40013a68:	e3e01000 	mvn	r1, #0
40013a6c:	e59f0090 	ldr	r0, [pc, #144]	; 40013b04 <CyU3PSysThreadEntry+0x104>
40013a70:	ebffd8bb 	bl	40009d64 <_txe_event_flags_get>
40013a74:	e58d0020 	str	r0, [sp, #32]
40013a78:	e59d0020 	ldr	r0, [sp, #32]
40013a7c:	e3500000 	cmp	r0, #0
40013a80:	0a000000 	beq	40013a88 <CyU3PSysThreadEntry+0x88>
40013a84:	ea00001d 	b	40013b00 <CyU3PSysThreadEntry+0x100>
40013a88:	e3a04001 	mov	r4, #1
40013a8c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013a90:	e0000004 	and	r0, r0, r4
40013a94:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013a98:	ea000014 	b	40013af0 <CyU3PSysThreadEntry+0xf0>
40013a9c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013aa0:	e3100001 	tst	r0, #1
40013aa4:	0a000011 	beq	40013af0 <CyU3PSysThreadEntry+0xf0>
40013aa8:	e3a02000 	mov	r2, #0
40013aac:	e28d1008 	add	r1, sp, #8
40013ab0:	e59f0058 	ldr	r0, [pc, #88]	; 40013b10 <CyU3PSysThreadEntry+0x110>
40013ab4:	ebffda65 	bl	4000a450 <_txe_queue_receive>
40013ab8:	e58d0020 	str	r0, [sp, #32]
40013abc:	e59d0020 	ldr	r0, [sp, #32]
40013ac0:	e3500000 	cmp	r0, #0
40013ac4:	1a000006 	bne	40013ae4 <CyU3PSysThreadEntry+0xe4>
40013ac8:	e1dd00b8 	ldrh	r0, [sp, #8]
40013acc:	e2000902 	and	r0, r0, #32768	; 0x8000
40013ad0:	e1b007a0 	lsrs	r0, r0, #15
40013ad4:	1a000005 	bne	40013af0 <CyU3PSysThreadEntry+0xf0>
40013ad8:	e28d0008 	add	r0, sp, #8
40013adc:	ebffffbd 	bl	400139d8 <CyU3PSysFwMsgHandler>
40013ae0:	ea000002 	b	40013af0 <CyU3PSysThreadEntry+0xf0>
40013ae4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013ae8:	e3c00001 	bic	r0, r0, #1
40013aec:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013af0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013af4:	e3500000 	cmp	r0, #0
40013af8:	1affffe7 	bne	40013a9c <CyU3PSysThreadEntry+0x9c>
40013afc:	e1a00000 	nop			; (mov r0, r0)
40013b00:	eaffffd3 	b	40013a54 <CyU3PSysThreadEntry+0x54>
40013b04:	40031924 	.word	0x40031924
40013b08:	4003187c 	.word	0x4003187c
40013b0c:	40031110 	.word	0x40031110
40013b10:	4003194c 	.word	0x4003194c

Disassembly of section i.CyU3PSibApplicationDefine:

40013b14 <CyU3PSibApplicationDefine>:
40013b14:	e92d4010 	push	{r4, lr}
40013b18:	e24dd020 	sub	sp, sp, #32
40013b1c:	e3a04000 	mov	r4, #0
40013b20:	e3a02028 	mov	r2, #40	; 0x28
40013b24:	e3a01000 	mov	r1, #0
40013b28:	e59f0064 	ldr	r0, [pc, #100]	; 40013b94 <CyU3PSibApplicationDefine+0x80>
40013b2c:	ebffd81c 	bl	40009ba4 <_txe_event_flags_create>
40013b30:	e3a00000 	mov	r0, #0
40013b34:	e59f105c 	ldr	r1, [pc, #92]	; 40013b98 <CyU3PSibApplicationDefine+0x84>
40013b38:	e5810000 	str	r0, [r1]
40013b3c:	e3a00b02 	mov	r0, #2048	; 0x800
40013b40:	ebffbecb 	bl	40003674 <CyU3PMemAlloc>
40013b44:	e1a04000 	mov	r4, r0
40013b48:	e3540000 	cmp	r4, #0
40013b4c:	0a00000e 	beq	40013b8c <CyU3PSibApplicationDefine+0x78>
40013b50:	e3a030a8 	mov	r3, #168	; 0xa8
40013b54:	e3a02001 	mov	r2, #1
40013b58:	e3a01000 	mov	r1, #0
40013b5c:	e3a00004 	mov	r0, #4
40013b60:	e28dc00c 	add	ip, sp, #12
40013b64:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013b68:	e3a02b02 	mov	r2, #2048	; 0x800
40013b6c:	e1a03001 	mov	r3, r1
40013b70:	e58d2004 	str	r2, [sp, #4]
40013b74:	e59f2020 	ldr	r2, [pc, #32]	; 40013b9c <CyU3PSibApplicationDefine+0x88>
40013b78:	e28f1020 	add	r1, pc, #32
40013b7c:	e58d0008 	str	r0, [sp, #8]
40013b80:	e59f0028 	ldr	r0, [pc, #40]	; 40013bb0 <CyU3PSibApplicationDefine+0x9c>
40013b84:	e58d4000 	str	r4, [sp]
40013b88:	ebffda80 	bl	4000a590 <_txe_thread_create>
40013b8c:	e28dd020 	add	sp, sp, #32
40013b90:	e8bd8010 	pop	{r4, pc}
40013b94:	40031a30 	.word	0x40031a30
40013b98:	4003111c 	.word	0x4003111c
40013b9c:	40013c0c 	.word	0x40013c0c
40013ba0:	535f3630 	.word	0x535f3630
40013ba4:	545f4249 	.word	0x545f4249
40013ba8:	41455248 	.word	0x41455248
40013bac:	00000044 	.word	0x00000044
40013bb0:	40031988 	.word	0x40031988

Disassembly of section i.CyU3PSibInitIntfParams:

40013bb4 <CyU3PSibInitIntfParams>:
40013bb4:	e0802100 	add	r2, r0, r0, lsl #2
40013bb8:	e59f3048 	ldr	r3, [pc, #72]	; 40013c08 <CyU3PSibInitIntfParams+0x54>
40013bbc:	e0831102 	add	r1, r3, r2, lsl #2
40013bc0:	e3a020ff 	mov	r2, #255	; 0xff
40013bc4:	e5c12000 	strb	r2, [r1]
40013bc8:	e3a02002 	mov	r2, #2
40013bcc:	e5c12008 	strb	r2, [r1, #8]
40013bd0:	e3a02001 	mov	r2, #1
40013bd4:	e5c12009 	strb	r2, [r1, #9]
40013bd8:	e3a02000 	mov	r2, #0
40013bdc:	e5c12010 	strb	r2, [r1, #16]
40013be0:	e5c1200a 	strb	r2, [r1, #10]
40013be4:	e3a020ff 	mov	r2, #255	; 0xff
40013be8:	e5c1200b 	strb	r2, [r1, #11]
40013bec:	e3a02000 	mov	r2, #0
40013bf0:	e581200c 	str	r2, [r1, #12]
40013bf4:	e3a02004 	mov	r2, #4
40013bf8:	e5c12011 	strb	r2, [r1, #17]
40013bfc:	e3a02000 	mov	r2, #0
40013c00:	e5c12012 	strb	r2, [r1, #18]
40013c04:	e12fff1e 	bx	lr
40013c08:	40031a58 	.word	0x40031a58

Disassembly of section i.CyU3PSibThreadEntry:

40013c0c <CyU3PSibThreadEntry>:
40013c0c:	e92d4010 	push	{r4, lr}
40013c10:	e3a00000 	mov	r0, #0
40013c14:	ebffffe6 	bl	40013bb4 <CyU3PSibInitIntfParams>
40013c18:	e3a00001 	mov	r0, #1
40013c1c:	ebffffe4 	bl	40013bb4 <CyU3PSibInitIntfParams>
40013c20:	e3a00003 	mov	r0, #3
40013c24:	ebffff6c 	bl	400139dc <CyU3PSysModuleInitCompleteEvt>
40013c28:	ea000009 	b	40013c54 <CyU3PSibThreadEntry+0x48>
40013c2c:	e59f0024 	ldr	r0, [pc, #36]	; 40013c58 <CyU3PSibThreadEntry+0x4c>
40013c30:	e5900000 	ldr	r0, [r0]
40013c34:	e3500000 	cmp	r0, #0
40013c38:	0a000003 	beq	40013c4c <CyU3PSibThreadEntry+0x40>
40013c3c:	e59f0014 	ldr	r0, [pc, #20]	; 40013c58 <CyU3PSibThreadEntry+0x4c>
40013c40:	e5900000 	ldr	r0, [r0]
40013c44:	e12fff30 	blx	r0
40013c48:	ea000001 	b	40013c54 <CyU3PSibThreadEntry+0x48>
40013c4c:	e3a0000a 	mov	r0, #10
40013c50:	ebffd37b 	bl	40008a44 <_tx_thread_sleep>
40013c54:	eafffff4 	b	40013c2c <CyU3PSibThreadEntry+0x20>
40013c58:	4003111c 	.word	0x4003111c

Disassembly of section i.CyU3PGpioSetClock:

40013c5c <CyU3PGpioSetClock>:
40013c5c:	e92d4070 	push	{r4, r5, r6, lr}
40013c60:	e1a04000 	mov	r4, r0
40013c64:	e3a05000 	mov	r5, #0
40013c68:	e5d40000 	ldrb	r0, [r4]
40013c6c:	e3500002 	cmp	r0, #2
40013c70:	ba000002 	blt	40013c80 <CyU3PGpioSetClock+0x24>
40013c74:	e5d40000 	ldrb	r0, [r4]
40013c78:	e3500010 	cmp	r0, #16
40013c7c:	da000001 	ble	40013c88 <CyU3PGpioSetClock+0x2c>
40013c80:	e3a00040 	mov	r0, #64	; 0x40
40013c84:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c88:	e5d40001 	ldrb	r0, [r4, #1]
40013c8c:	e3500000 	cmp	r0, #0
40013c90:	1a000004 	bne	40013ca8 <CyU3PGpioSetClock+0x4c>
40013c94:	e5940004 	ldr	r0, [r4, #4]
40013c98:	e3500000 	cmp	r0, #0
40013c9c:	0a000009 	beq	40013cc8 <CyU3PGpioSetClock+0x6c>
40013ca0:	e3a00040 	mov	r0, #64	; 0x40
40013ca4:	eafffff6 	b	40013c84 <CyU3PGpioSetClock+0x28>
40013ca8:	e5d40001 	ldrb	r0, [r4, #1]
40013cac:	e3500002 	cmp	r0, #2
40013cb0:	ba000002 	blt	40013cc0 <CyU3PGpioSetClock+0x64>
40013cb4:	e5d40001 	ldrb	r0, [r4, #1]
40013cb8:	e3500040 	cmp	r0, #64	; 0x40
40013cbc:	da000001 	ble	40013cc8 <CyU3PGpioSetClock+0x6c>
40013cc0:	e3a00040 	mov	r0, #64	; 0x40
40013cc4:	eaffffee 	b	40013c84 <CyU3PGpioSetClock+0x28>
40013cc8:	e5d40009 	ldrb	r0, [r4, #9]
40013ccc:	e3500004 	cmp	r0, #4
40013cd0:	ba000001 	blt	40013cdc <CyU3PGpioSetClock+0x80>
40013cd4:	e3a00040 	mov	r0, #64	; 0x40
40013cd8:	eaffffe9 	b	40013c84 <CyU3PGpioSetClock+0x28>
40013cdc:	e5d40008 	ldrb	r0, [r4, #8]
40013ce0:	e3500004 	cmp	r0, #4
40013ce4:	ba000001 	blt	40013cf0 <CyU3PGpioSetClock+0x94>
40013ce8:	e3a00040 	mov	r0, #64	; 0x40
40013cec:	eaffffe4 	b	40013c84 <CyU3PGpioSetClock+0x28>
40013cf0:	e5d40000 	ldrb	r0, [r4]
40013cf4:	e2400001 	sub	r0, r0, #1
40013cf8:	e5d41009 	ldrb	r1, [r4, #9]
40013cfc:	e1800281 	orr	r0, r0, r1, lsl #5
40013d00:	e5d41008 	ldrb	r1, [r4, #8]
40013d04:	e1800381 	orr	r0, r0, r1, lsl #7
40013d08:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013d0c:	e5940004 	ldr	r0, [r4, #4]
40013d10:	e3500000 	cmp	r0, #0
40013d14:	0a000000 	beq	40013d1c <CyU3PGpioSetClock+0xc0>
40013d18:	e3855010 	orr	r5, r5, #16
40013d1c:	e59f0030 	ldr	r0, [pc, #48]	; 40013d54 <CyU3PGpioSetClock+0xf8>
40013d20:	e5805018 	str	r5, [r0, #24]
40013d24:	e5d40001 	ldrb	r0, [r4, #1]
40013d28:	e3500000 	cmp	r0, #0
40013d2c:	0a000006 	beq	40013d4c <CyU3PGpioSetClock+0xf0>
40013d30:	e3a00001 	mov	r0, #1
40013d34:	ebfffe72 	bl	40013704 <CyU3PBusyWait>
40013d38:	e5d40001 	ldrb	r0, [r4, #1]
40013d3c:	e2400001 	sub	r0, r0, #1
40013d40:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013d44:	e59f1008 	ldr	r1, [pc, #8]	; 40013d54 <CyU3PGpioSetClock+0xf8>
40013d48:	e581001c 	str	r0, [r1, #28]
40013d4c:	e3a00000 	mov	r0, #0
40013d50:	eaffffcb 	b	40013c84 <CyU3PGpioSetClock+0x28>
40013d54:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013d58 <CyU3PI2cSetClock>:
40013d58:	e92d4070 	push	{r4, r5, r6, lr}
40013d5c:	e1a05000 	mov	r5, r0
40013d60:	e3a06000 	mov	r6, #0
40013d64:	e3550000 	cmp	r5, #0
40013d68:	1a000001 	bne	40013d74 <CyU3PI2cSetClock+0x1c>
40013d6c:	e3a00040 	mov	r0, #64	; 0x40
40013d70:	e8bd8070 	pop	{r4, r5, r6, pc}
40013d74:	e0852105 	add	r2, r5, r5, lsl #2
40013d78:	e1a01082 	lsl	r1, r2, #1
40013d7c:	e59f207c 	ldr	r2, [pc, #124]	; 40013e00 <CyU3PI2cSetClock+0xa8>
40013d80:	e5922000 	ldr	r2, [r2]
40013d84:	e1a00122 	lsr	r0, r2, #2
40013d88:	ebfff319 	bl	400109f4 <__aeabi_uidivmod>
40013d8c:	e1a04000 	mov	r4, r0
40013d90:	e3140003 	tst	r4, #3
40013d94:	1a000001 	bne	40013da0 <CyU3PI2cSetClock+0x48>
40013d98:	e1a04144 	asr	r4, r4, #2
40013d9c:	ea00000a 	b	40013dcc <CyU3PI2cSetClock+0x74>
40013da0:	e2040003 	and	r0, r4, #3
40013da4:	e3500001 	cmp	r0, #1
40013da8:	0a000002 	beq	40013db8 <CyU3PI2cSetClock+0x60>
40013dac:	e2040003 	and	r0, r4, #3
40013db0:	e3500002 	cmp	r0, #2
40013db4:	1a000002 	bne	40013dc4 <CyU3PI2cSetClock+0x6c>
40013db8:	e1a04144 	asr	r4, r4, #2
40013dbc:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013dc0:	ea000001 	b	40013dcc <CyU3PI2cSetClock+0x74>
40013dc4:	e3a00001 	mov	r0, #1
40013dc8:	e0804144 	add	r4, r0, r4, asr #2
40013dcc:	e2444001 	sub	r4, r4, #1
40013dd0:	e3540001 	cmp	r4, #1
40013dd4:	ba000001 	blt	40013de0 <CyU3PI2cSetClock+0x88>
40013dd8:	e3540a01 	cmp	r4, #4096	; 0x1000
40013ddc:	ba000001 	blt	40013de8 <CyU3PI2cSetClock+0x90>
40013de0:	e3a00040 	mov	r0, #64	; 0x40
40013de4:	eaffffe1 	b	40013d70 <CyU3PI2cSetClock+0x18>
40013de8:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013dec:	e1866000 	orr	r6, r6, r0
40013df0:	e59f000c 	ldr	r0, [pc, #12]	; 40013e04 <CyU3PI2cSetClock+0xac>
40013df4:	e5806020 	str	r6, [r0, #32]
40013df8:	e3a00000 	mov	r0, #0
40013dfc:	eaffffdb 	b	40013d70 <CyU3PI2cSetClock+0x18>
40013e00:	400310dc 	.word	0x400310dc
40013e04:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013e08 <CyU3PLppApplicationDefine>:
40013e08:	e92d4010 	push	{r4, lr}
40013e0c:	e24dd020 	sub	sp, sp, #32
40013e10:	e3a00b01 	mov	r0, #1024	; 0x400
40013e14:	ebffbe16 	bl	40003674 <CyU3PMemAlloc>
40013e18:	e1a04000 	mov	r4, r0
40013e1c:	e3a030a8 	mov	r3, #168	; 0xa8
40013e20:	e3a02001 	mov	r2, #1
40013e24:	e3a01000 	mov	r1, #0
40013e28:	e3a00004 	mov	r0, #4
40013e2c:	e28dc00c 	add	ip, sp, #12
40013e30:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013e34:	e3a02b01 	mov	r2, #1024	; 0x400
40013e38:	e1a03001 	mov	r3, r1
40013e3c:	e58d2004 	str	r2, [sp, #4]
40013e40:	e59f2054 	ldr	r2, [pc, #84]	; 40013e9c <CyU3PLppApplicationDefine+0x94>
40013e44:	e28f1054 	add	r1, pc, #84	; 0x54
40013e48:	e58d0008 	str	r0, [sp, #8]
40013e4c:	e59f005c 	ldr	r0, [pc, #92]	; 40013eb0 <CyU3PLppApplicationDefine+0xa8>
40013e50:	e58d4000 	str	r4, [sp]
40013e54:	ebffd9cd 	bl	4000a590 <_txe_thread_create>
40013e58:	e3a02028 	mov	r2, #40	; 0x28
40013e5c:	e3a01000 	mov	r1, #0
40013e60:	e59f004c 	ldr	r0, [pc, #76]	; 40013eb4 <CyU3PLppApplicationDefine+0xac>
40013e64:	ebffd74e 	bl	40009ba4 <_txe_event_flags_create>
40013e68:	e3a00040 	mov	r0, #64	; 0x40
40013e6c:	ebffbe00 	bl	40003674 <CyU3PMemAlloc>
40013e70:	e1a04000 	mov	r4, r0
40013e74:	e3a0303c 	mov	r3, #60	; 0x3c
40013e78:	e3a02040 	mov	r2, #64	; 0x40
40013e7c:	e1cd20f0 	strd	r2, [sp]
40013e80:	e1a03004 	mov	r3, r4
40013e84:	e3a02005 	mov	r2, #5
40013e88:	e3a01000 	mov	r1, #0
40013e8c:	e59f0024 	ldr	r0, [pc, #36]	; 40013eb8 <CyU3PLppApplicationDefine+0xb0>
40013e90:	ebffd8d8 	bl	4000a1f8 <_txe_queue_create>
40013e94:	e28dd020 	add	sp, sp, #32
40013e98:	e8bd8010 	pop	{r4, pc}
40013e9c:	400141fc 	.word	0x400141fc
40013ea0:	4c5f3530 	.word	0x4c5f3530
40013ea4:	545f5050 	.word	0x545f5050
40013ea8:	41455248 	.word	0x41455248
40013eac:	00000044 	.word	0x00000044
40013eb0:	40031abc 	.word	0x40031abc
40013eb4:	40031a94 	.word	0x40031a94
40013eb8:	40031b64 	.word	0x40031b64

Disassembly of section i.CyU3PLppEventSend:

40013ebc <CyU3PLppEventSend>:
40013ebc:	e92d4070 	push	{r4, r5, r6, lr}
40013ec0:	e1a04000 	mov	r4, r0
40013ec4:	e3a02000 	mov	r2, #0
40013ec8:	e1a01004 	mov	r1, r4
40013ecc:	e59f000c 	ldr	r0, [pc, #12]	; 40013ee0 <CyU3PLppEventSend+0x24>
40013ed0:	ebffd7d3 	bl	40009e24 <_txe_event_flags_set>
40013ed4:	e1a05000 	mov	r5, r0
40013ed8:	e1a00005 	mov	r0, r5
40013edc:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ee0:	40031a94 	.word	0x40031a94

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013ee4 <CyU3PLppGpioBlockIsOn>:
40013ee4:	e59f0004 	ldr	r0, [pc, #4]	; 40013ef0 <CyU3PLppGpioBlockIsOn+0xc>
40013ee8:	e5900000 	ldr	r0, [r0]
40013eec:	e12fff1e 	bx	lr
40013ef0:	400310f8 	.word	0x400310f8

Disassembly of section i.CyU3PLppInit:

40013ef4 <CyU3PLppInit>:
40013ef4:	e92d4070 	push	{r4, r5, r6, lr}
40013ef8:	e1a04000 	mov	r4, r0
40013efc:	e1a05001 	mov	r5, r1
40013f00:	e3a06000 	mov	r6, #0
40013f04:	e3a00001 	mov	r0, #1
40013f08:	e59f1174 	ldr	r1, [pc, #372]	; 40014084 <CyU3PLppInit+0x190>
40013f0c:	e5d11000 	ldrb	r1, [r1]
40013f10:	e1110410 	tst	r1, r0, lsl r4
40013f14:	0a000001 	beq	40013f20 <CyU3PLppInit+0x2c>
40013f18:	e3a00043 	mov	r0, #67	; 0x43
40013f1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013f20:	e3540001 	cmp	r4, #1
40013f24:	1a000004 	bne	40013f3c <CyU3PLppInit+0x48>
40013f28:	eb000310 	bl	40014b70 <CyFx3DevIsI2sSupported>
40013f2c:	e3500000 	cmp	r0, #0
40013f30:	1a000001 	bne	40013f3c <CyU3PLppInit+0x48>
40013f34:	e3a00046 	mov	r0, #70	; 0x46
40013f38:	eafffff7 	b	40013f1c <CyU3PLppInit+0x28>
40013f3c:	e3540005 	cmp	r4, #5
40013f40:	308ff104 	addcc	pc, pc, r4, lsl #2
40013f44:	ea000027 	b	40013fe8 <CyU3PLppInit+0xf4>
40013f48:	ea000003 	b	40013f5c <CyU3PLppInit+0x68>
40013f4c:	ea000009 	b	40013f78 <CyU3PLppInit+0x84>
40013f50:	ea00000f 	b	40013f94 <CyU3PLppInit+0xa0>
40013f54:	ea000015 	b	40013fb0 <CyU3PLppInit+0xbc>
40013f58:	ea00001b 	b	40013fcc <CyU3PLppInit+0xd8>
40013f5c:	e1a00000 	nop			; (mov r0, r0)
40013f60:	e59f0120 	ldr	r0, [pc, #288]	; 40014088 <CyU3PLppInit+0x194>
40013f64:	e5900020 	ldr	r0, [r0, #32]
40013f68:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013f6c:	0a000000 	beq	40013f74 <CyU3PLppInit+0x80>
40013f70:	e3a06001 	mov	r6, #1
40013f74:	ea00001b 	b	40013fe8 <CyU3PLppInit+0xf4>
40013f78:	e1a00000 	nop			; (mov r0, r0)
40013f7c:	e59f0104 	ldr	r0, [pc, #260]	; 40014088 <CyU3PLppInit+0x194>
40013f80:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013f84:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013f88:	0a000000 	beq	40013f90 <CyU3PLppInit+0x9c>
40013f8c:	e3a06001 	mov	r6, #1
40013f90:	ea000014 	b	40013fe8 <CyU3PLppInit+0xf4>
40013f94:	e1a00000 	nop			; (mov r0, r0)
40013f98:	e59f00e8 	ldr	r0, [pc, #232]	; 40014088 <CyU3PLppInit+0x194>
40013f9c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013fa0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013fa4:	0a000000 	beq	40013fac <CyU3PLppInit+0xb8>
40013fa8:	e3a06001 	mov	r6, #1
40013fac:	ea00000d 	b	40013fe8 <CyU3PLppInit+0xf4>
40013fb0:	e1a00000 	nop			; (mov r0, r0)
40013fb4:	e59f00cc 	ldr	r0, [pc, #204]	; 40014088 <CyU3PLppInit+0x194>
40013fb8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013fbc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013fc0:	0a000000 	beq	40013fc8 <CyU3PLppInit+0xd4>
40013fc4:	e3a06001 	mov	r6, #1
40013fc8:	ea000006 	b	40013fe8 <CyU3PLppInit+0xf4>
40013fcc:	e1a00000 	nop			; (mov r0, r0)
40013fd0:	e59f00b0 	ldr	r0, [pc, #176]	; 40014088 <CyU3PLppInit+0x194>
40013fd4:	e5900018 	ldr	r0, [r0, #24]
40013fd8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013fdc:	0a000000 	beq	40013fe4 <CyU3PLppInit+0xf0>
40013fe0:	e3a06001 	mov	r6, #1
40013fe4:	e1a00000 	nop			; (mov r0, r0)
40013fe8:	e1a00000 	nop			; (mov r0, r0)
40013fec:	e3560000 	cmp	r6, #0
40013ff0:	1a000001 	bne	40013ffc <CyU3PLppInit+0x108>
40013ff4:	e3a00047 	mov	r0, #71	; 0x47
40013ff8:	eaffffc7 	b	40013f1c <CyU3PLppInit+0x28>
40013ffc:	e59f0080 	ldr	r0, [pc, #128]	; 40014084 <CyU3PLppInit+0x190>
40014000:	e5d00000 	ldrb	r0, [r0]
40014004:	e3500000 	cmp	r0, #0
40014008:	1a000017 	bne	4001406c <CyU3PLppInit+0x178>
4001400c:	e59f0078 	ldr	r0, [pc, #120]	; 4001408c <CyU3PLppInit+0x198>
40014010:	e5900000 	ldr	r0, [r0]
40014014:	e3500000 	cmp	r0, #0
40014018:	1a000010 	bne	40014060 <CyU3PLppInit+0x16c>
4001401c:	e59f006c 	ldr	r0, [pc, #108]	; 40014090 <CyU3PLppInit+0x19c>
40014020:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40014024:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40014028:	e59f1060 	ldr	r1, [pc, #96]	; 40014090 <CyU3PLppInit+0x19c>
4001402c:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40014030:	e3a0000a 	mov	r0, #10
40014034:	ebfffdb2 	bl	40013704 <CyU3PBusyWait>
40014038:	e59f0050 	ldr	r0, [pc, #80]	; 40014090 <CyU3PLppInit+0x19c>
4001403c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40014040:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014044:	e59f1044 	ldr	r1, [pc, #68]	; 40014090 <CyU3PLppInit+0x19c>
40014048:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
4001404c:	e1a00000 	nop			; (mov r0, r0)
40014050:	e59f0038 	ldr	r0, [pc, #56]	; 40014090 <CyU3PLppInit+0x19c>
40014054:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40014058:	e3100001 	tst	r0, #1
4001405c:	0afffffb 	beq	40014050 <CyU3PLppInit+0x15c>
40014060:	eb000051 	bl	400141ac <CyU3PLppSocketInit>
40014064:	e3a00014 	mov	r0, #20
40014068:	eb003828 	bl	40022110 <CyU3PVicEnableInt>
4001406c:	e1a02005 	mov	r2, r5
40014070:	e3a01001 	mov	r1, #1
40014074:	e1a00004 	mov	r0, r4
40014078:	eb0000f1 	bl	40014444 <CyU3UpdateLppActiveInfo>
4001407c:	e3a00000 	mov	r0, #0
40014080:	eaffffa5 	b	40013f1c <CyU3PLppInit+0x28>
40014084:	40031120 	.word	0x40031120
40014088:	e0052000 	.word	0xe0052000
4001408c:	400310f8 	.word	0x400310f8
40014090:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40014094 <CyU3PLppRestoreState>:
40014094:	e92d4070 	push	{r4, r5, r6, lr}
40014098:	e1a04000 	mov	r4, r0
4001409c:	e3a00000 	mov	r0, #0
400140a0:	e59f10ec 	ldr	r1, [pc, #236]	; 40014194 <CyU3PLppRestoreState+0x100>
400140a4:	e5c10000 	strb	r0, [r1]
400140a8:	e5940000 	ldr	r0, [r4]
400140ac:	e59f10e4 	ldr	r1, [pc, #228]	; 40014198 <CyU3PLppRestoreState+0x104>
400140b0:	e5810018 	str	r0, [r1, #24]
400140b4:	e3a00001 	mov	r0, #1
400140b8:	ebfffd91 	bl	40013704 <CyU3PBusyWait>
400140bc:	e5940004 	ldr	r0, [r4, #4]
400140c0:	e59f10d0 	ldr	r1, [pc, #208]	; 40014198 <CyU3PLppRestoreState+0x104>
400140c4:	e581001c 	str	r0, [r1, #28]
400140c8:	e3a00001 	mov	r0, #1
400140cc:	ebfffd8c 	bl	40013704 <CyU3PBusyWait>
400140d0:	e5940008 	ldr	r0, [r4, #8]
400140d4:	e59f10c0 	ldr	r1, [pc, #192]	; 4001419c <CyU3PLppRestoreState+0x108>
400140d8:	e581000c 	str	r0, [r1, #12]
400140dc:	e3a00001 	mov	r0, #1
400140e0:	ebfffd87 	bl	40013704 <CyU3PBusyWait>
400140e4:	e594000c 	ldr	r0, [r4, #12]
400140e8:	e59f10ac 	ldr	r1, [pc, #172]	; 4001419c <CyU3PLppRestoreState+0x108>
400140ec:	e5810010 	str	r0, [r1, #16]
400140f0:	e3a00001 	mov	r0, #1
400140f4:	ebfffd82 	bl	40013704 <CyU3PBusyWait>
400140f8:	e5940010 	ldr	r0, [r4, #16]
400140fc:	e59f1098 	ldr	r1, [pc, #152]	; 4001419c <CyU3PLppRestoreState+0x108>
40014100:	e5810008 	str	r0, [r1, #8]
40014104:	e3a00001 	mov	r0, #1
40014108:	ebfffd7d 	bl	40013704 <CyU3PBusyWait>
4001410c:	e3a00004 	mov	r0, #4
40014110:	e5941014 	ldr	r1, [r4, #20]
40014114:	ebffff76 	bl	40013ef4 <CyU3PLppInit>
40014118:	e3a00001 	mov	r0, #1
4001411c:	ebfffd78 	bl	40013704 <CyU3PBusyWait>
40014120:	e59f0078 	ldr	r0, [pc, #120]	; 400141a0 <CyU3PLppRestoreState+0x10c>
40014124:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40014128:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001412c:	e59f106c 	ldr	r1, [pc, #108]	; 400141a0 <CyU3PLppRestoreState+0x10c>
40014130:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40014134:	e3a0000a 	mov	r0, #10
40014138:	ebfffd71 	bl	40013704 <CyU3PBusyWait>
4001413c:	e1a00000 	nop			; (mov r0, r0)
40014140:	e59f0058 	ldr	r0, [pc, #88]	; 400141a0 <CyU3PLppRestoreState+0x10c>
40014144:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40014148:	e3100001 	tst	r0, #1
4001414c:	0afffffb 	beq	40014140 <CyU3PLppRestoreState+0xac>
40014150:	e3a05000 	mov	r5, #0
40014154:	ea000006 	b	40014174 <CyU3PLppRestoreState+0xe0>
40014158:	e2850006 	add	r0, r5, #6
4001415c:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40014160:	e59f103c 	ldr	r1, [pc, #60]	; 400141a4 <CyU3PLppRestoreState+0x110>
40014164:	e7810105 	str	r0, [r1, r5, lsl #2]
40014168:	e3a00001 	mov	r0, #1
4001416c:	ebfffd64 	bl	40013704 <CyU3PBusyWait>
40014170:	e2855001 	add	r5, r5, #1
40014174:	e355003d 	cmp	r5, #61	; 0x3d
40014178:	3afffff6 	bcc	40014158 <CyU3PLppRestoreState+0xc4>
4001417c:	e59f0024 	ldr	r0, [pc, #36]	; 400141a8 <CyU3PLppRestoreState+0x114>
40014180:	e5900000 	ldr	r0, [r0]
40014184:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40014188:	e59f1018 	ldr	r1, [pc, #24]	; 400141a8 <CyU3PLppRestoreState+0x114>
4001418c:	e5810000 	str	r0, [r1]
40014190:	e8bd8070 	pop	{r4, r5, r6, pc}
40014194:	40031120 	.word	0x40031120
40014198:	e0052000 	.word	0xe0052000
4001419c:	e0051000 	.word	0xe0051000
400141a0:	e0001000 	.word	0xe0001000
400141a4:	e0001100 	.word	0xe0001100
400141a8:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

400141ac <CyU3PLppSocketInit>:
400141ac:	e3a00000 	mov	r0, #0
400141b0:	ea00000d 	b	400141ec <CyU3PLppSocketInit+0x40>
400141b4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
400141b8:	e59f2038 	ldr	r2, [pc, #56]	; 400141f8 <CyU3PLppSocketInit+0x4c>
400141bc:	e0822380 	add	r2, r2, r0, lsl #7
400141c0:	e582100c 	str	r1, [r2, #12]
400141c4:	e3e01000 	mvn	r1, #0
400141c8:	e59f2028 	ldr	r2, [pc, #40]	; 400141f8 <CyU3PLppSocketInit+0x4c>
400141cc:	e0822380 	add	r2, r2, r0, lsl #7
400141d0:	e5821010 	str	r1, [r2, #16]
400141d4:	e3a01000 	mov	r1, #0
400141d8:	e59f2018 	ldr	r2, [pc, #24]	; 400141f8 <CyU3PLppSocketInit+0x4c>
400141dc:	e0822380 	add	r2, r2, r0, lsl #7
400141e0:	e5821014 	str	r1, [r2, #20]
400141e4:	e2801001 	add	r1, r0, #1
400141e8:	e20100ff 	and	r0, r1, #255	; 0xff
400141ec:	e3500008 	cmp	r0, #8
400141f0:	baffffef 	blt	400141b4 <CyU3PLppSocketInit+0x8>
400141f4:	e12fff1e 	bx	lr
400141f8:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

400141fc <CyU3PLppThreadEntry>:
400141fc:	e92d4010 	push	{r4, lr}
40014200:	e24dd020 	sub	sp, sp, #32
40014204:	e3a00006 	mov	r0, #6
40014208:	ebfffdf3 	bl	400139dc <CyU3PSysModuleInitCompleteEvt>
4001420c:	e3a000f1 	mov	r0, #241	; 0xf1
40014210:	e59f1144 	ldr	r1, [pc, #324]	; 4001435c <CyU3PLppThreadEntry+0x160>
40014214:	e5810000 	str	r0, [r1]
40014218:	e1a00000 	nop			; (mov r0, r0)
4001421c:	e3e03000 	mvn	r3, #0
40014220:	e58d3000 	str	r3, [sp]
40014224:	e28d301c 	add	r3, sp, #28
40014228:	e3a02001 	mov	r2, #1
4001422c:	e59f0128 	ldr	r0, [pc, #296]	; 4001435c <CyU3PLppThreadEntry+0x160>
40014230:	e5901000 	ldr	r1, [r0]
40014234:	e59f0124 	ldr	r0, [pc, #292]	; 40014360 <CyU3PLppThreadEntry+0x164>
40014238:	ebffd6c9 	bl	40009d64 <_txe_event_flags_get>
4001423c:	e1a04000 	mov	r4, r0
40014240:	e59f1114 	ldr	r1, [pc, #276]	; 4001435c <CyU3PLppThreadEntry+0x160>
40014244:	e59d001c 	ldr	r0, [sp, #28]
40014248:	e5911000 	ldr	r1, [r1]
4001424c:	e0000001 	and	r0, r0, r1
40014250:	e58d001c 	str	r0, [sp, #28]
40014254:	e3540000 	cmp	r4, #0
40014258:	0a000000 	beq	40014260 <CyU3PLppThreadEntry+0x64>
4001425c:	eaffffee 	b	4001421c <CyU3PLppThreadEntry+0x20>
40014260:	ea000009 	b	4001428c <CyU3PLppThreadEntry+0x90>
40014264:	e3a02000 	mov	r2, #0
40014268:	e28d1008 	add	r1, sp, #8
4001426c:	e59f00f0 	ldr	r0, [pc, #240]	; 40014364 <CyU3PLppThreadEntry+0x168>
40014270:	ebffd876 	bl	4000a450 <_txe_queue_receive>
40014274:	e1a04000 	mov	r4, r0
40014278:	e3540000 	cmp	r4, #0
4001427c:	0a000002 	beq	4001428c <CyU3PLppThreadEntry+0x90>
40014280:	e59d001c 	ldr	r0, [sp, #28]
40014284:	e3c00001 	bic	r0, r0, #1
40014288:	e58d001c 	str	r0, [sp, #28]
4001428c:	e59d001c 	ldr	r0, [sp, #28]
40014290:	e3100001 	tst	r0, #1
40014294:	1afffff2 	bne	40014264 <CyU3PLppThreadEntry+0x68>
40014298:	e59d001c 	ldr	r0, [sp, #28]
4001429c:	e3100020 	tst	r0, #32
400142a0:	0a000008 	beq	400142c8 <CyU3PLppThreadEntry+0xcc>
400142a4:	e59f00bc 	ldr	r0, [pc, #188]	; 40014368 <CyU3PLppThreadEntry+0x16c>
400142a8:	e5900000 	ldr	r0, [r0]
400142ac:	e3500000 	cmp	r0, #0
400142b0:	0a000002 	beq	400142c0 <CyU3PLppThreadEntry+0xc4>
400142b4:	e59f10ac 	ldr	r1, [pc, #172]	; 40014368 <CyU3PLppThreadEntry+0x16c>
400142b8:	e5910000 	ldr	r0, [r1]
400142bc:	e12fff30 	blx	r0
400142c0:	e3a0000f 	mov	r0, #15
400142c4:	eb003791 	bl	40022110 <CyU3PVicEnableInt>
400142c8:	e59d001c 	ldr	r0, [sp, #28]
400142cc:	e3100010 	tst	r0, #16
400142d0:	0a000008 	beq	400142f8 <CyU3PLppThreadEntry+0xfc>
400142d4:	e59f008c 	ldr	r0, [pc, #140]	; 40014368 <CyU3PLppThreadEntry+0x16c>
400142d8:	e5900004 	ldr	r0, [r0, #4]
400142dc:	e3500000 	cmp	r0, #0
400142e0:	0a000002 	beq	400142f0 <CyU3PLppThreadEntry+0xf4>
400142e4:	e59f107c 	ldr	r1, [pc, #124]	; 40014368 <CyU3PLppThreadEntry+0x16c>
400142e8:	e5910004 	ldr	r0, [r1, #4]
400142ec:	e12fff30 	blx	r0
400142f0:	e3a00010 	mov	r0, #16
400142f4:	eb003785 	bl	40022110 <CyU3PVicEnableInt>
400142f8:	e59d001c 	ldr	r0, [sp, #28]
400142fc:	e3100080 	tst	r0, #128	; 0x80
40014300:	0a000008 	beq	40014328 <CyU3PLppThreadEntry+0x12c>
40014304:	e59f005c 	ldr	r0, [pc, #92]	; 40014368 <CyU3PLppThreadEntry+0x16c>
40014308:	e5900008 	ldr	r0, [r0, #8]
4001430c:	e3500000 	cmp	r0, #0
40014310:	0a000002 	beq	40014320 <CyU3PLppThreadEntry+0x124>
40014314:	e59f104c 	ldr	r1, [pc, #76]	; 40014368 <CyU3PLppThreadEntry+0x16c>
40014318:	e5910008 	ldr	r0, [r1, #8]
4001431c:	e12fff30 	blx	r0
40014320:	e3a00011 	mov	r0, #17
40014324:	eb003779 	bl	40022110 <CyU3PVicEnableInt>
40014328:	e59d001c 	ldr	r0, [sp, #28]
4001432c:	e3100040 	tst	r0, #64	; 0x40
40014330:	0a000008 	beq	40014358 <CyU3PLppThreadEntry+0x15c>
40014334:	e59f002c 	ldr	r0, [pc, #44]	; 40014368 <CyU3PLppThreadEntry+0x16c>
40014338:	e590000c 	ldr	r0, [r0, #12]
4001433c:	e3500000 	cmp	r0, #0
40014340:	0a000002 	beq	40014350 <CyU3PLppThreadEntry+0x154>
40014344:	e59f101c 	ldr	r1, [pc, #28]	; 40014368 <CyU3PLppThreadEntry+0x16c>
40014348:	e591000c 	ldr	r0, [r1, #12]
4001434c:	e12fff30 	blx	r0
40014350:	e3a00012 	mov	r0, #18
40014354:	eb00376d 	bl	40022110 <CyU3PVicEnableInt>
40014358:	eaffffaf 	b	4001421c <CyU3PLppThreadEntry+0x20>
4001435c:	40031124 	.word	0x40031124
40014360:	40031a94 	.word	0x40031a94
40014364:	40031b64 	.word	0x40031b64
40014368:	40031a80 	.word	0x40031a80

Disassembly of section i.CyU3PUartSetClock:

4001436c <CyU3PUartSetClock>:
4001436c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014370:	e1a04000 	mov	r4, r0
40014374:	e3a06000 	mov	r6, #0
40014378:	e59f00bc 	ldr	r0, [pc, #188]	; 4001443c <CyU3PUartSetClock+0xd0>
4001437c:	e5907000 	ldr	r7, [r0]
40014380:	e3540000 	cmp	r4, #0
40014384:	1a000001 	bne	40014390 <CyU3PUartSetClock+0x24>
40014388:	e3a00040 	mov	r0, #64	; 0x40
4001438c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014390:	e3540f96 	cmp	r4, #600	; 0x258
40014394:	2a000002 	bcs	400143a4 <CyU3PUartSetClock+0x38>
40014398:	e59f009c 	ldr	r0, [pc, #156]	; 4001443c <CyU3PUartSetClock+0xd0>
4001439c:	e5900000 	ldr	r0, [r0]
400143a0:	e1a07220 	lsr	r7, r0, #4
400143a4:	e1a01204 	lsl	r1, r4, #4
400143a8:	e1a00107 	lsl	r0, r7, #2
400143ac:	ebfff190 	bl	400109f4 <__aeabi_uidivmod>
400143b0:	e1a05000 	mov	r5, r0
400143b4:	e3150003 	tst	r5, #3
400143b8:	1a000001 	bne	400143c4 <CyU3PUartSetClock+0x58>
400143bc:	e1a05145 	asr	r5, r5, #2
400143c0:	ea00000a 	b	400143f0 <CyU3PUartSetClock+0x84>
400143c4:	e2050003 	and	r0, r5, #3
400143c8:	e3500001 	cmp	r0, #1
400143cc:	0a000002 	beq	400143dc <CyU3PUartSetClock+0x70>
400143d0:	e2050003 	and	r0, r5, #3
400143d4:	e3500002 	cmp	r0, #2
400143d8:	1a000002 	bne	400143e8 <CyU3PUartSetClock+0x7c>
400143dc:	e1a05145 	asr	r5, r5, #2
400143e0:	e3866801 	orr	r6, r6, #65536	; 0x10000
400143e4:	ea000001 	b	400143f0 <CyU3PUartSetClock+0x84>
400143e8:	e3a00001 	mov	r0, #1
400143ec:	e0805145 	add	r5, r0, r5, asr #2
400143f0:	e2455001 	sub	r5, r5, #1
400143f4:	e3550001 	cmp	r5, #1
400143f8:	ba000001 	blt	40014404 <CyU3PUartSetClock+0x98>
400143fc:	e3550801 	cmp	r5, #65536	; 0x10000
40014400:	ba000001 	blt	4001440c <CyU3PUartSetClock+0xa0>
40014404:	e3a00040 	mov	r0, #64	; 0x40
40014408:	eaffffdf 	b	4001438c <CyU3PUartSetClock+0x20>
4001440c:	e3540f96 	cmp	r4, #600	; 0x258
40014410:	2a000002 	bcs	40014420 <CyU3PUartSetClock+0xb4>
40014414:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014418:	e1866000 	orr	r6, r6, r0
4001441c:	ea000002 	b	4001442c <CyU3PUartSetClock+0xc0>
40014420:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014424:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014428:	e1866000 	orr	r6, r6, r0
4001442c:	e59f000c 	ldr	r0, [pc, #12]	; 40014440 <CyU3PUartSetClock+0xd4>
40014430:	e5806024 	str	r6, [r0, #36]	; 0x24
40014434:	e3a00000 	mov	r0, #0
40014438:	eaffffd3 	b	4001438c <CyU3PUartSetClock+0x20>
4001443c:	400310dc 	.word	0x400310dc
40014440:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014444 <CyU3UpdateLppActiveInfo>:
40014444:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014448:	e1a04000 	mov	r4, r0
4001444c:	e1a05001 	mov	r5, r1
40014450:	e1a06002 	mov	r6, r2
40014454:	e3a00001 	mov	r0, #1
40014458:	e1a00410 	lsl	r0, r0, r4
4001445c:	e20070ff 	and	r7, r0, #255	; 0xff
40014460:	e284000f 	add	r0, r4, #15
40014464:	e20080ff 	and	r8, r0, #255	; 0xff
40014468:	e59f0050 	ldr	r0, [pc, #80]	; 400144c0 <CyU3UpdateLppActiveInfo+0x7c>
4001446c:	e7806104 	str	r6, [r0, r4, lsl #2]
40014470:	e3550000 	cmp	r5, #0
40014474:	0a000009 	beq	400144a0 <CyU3UpdateLppActiveInfo+0x5c>
40014478:	e3560000 	cmp	r6, #0
4001447c:	0a000001 	beq	40014488 <CyU3UpdateLppActiveInfo+0x44>
40014480:	e1a00008 	mov	r0, r8
40014484:	eb003721 	bl	40022110 <CyU3PVicEnableInt>
40014488:	e59f0034 	ldr	r0, [pc, #52]	; 400144c4 <CyU3UpdateLppActiveInfo+0x80>
4001448c:	e5d00000 	ldrb	r0, [r0]
40014490:	e1800007 	orr	r0, r0, r7
40014494:	e59f1028 	ldr	r1, [pc, #40]	; 400144c4 <CyU3UpdateLppActiveInfo+0x80>
40014498:	e5c10000 	strb	r0, [r1]
4001449c:	ea000006 	b	400144bc <CyU3UpdateLppActiveInfo+0x78>
400144a0:	e59f001c 	ldr	r0, [pc, #28]	; 400144c4 <CyU3UpdateLppActiveInfo+0x80>
400144a4:	e5d00000 	ldrb	r0, [r0]
400144a8:	e1c00007 	bic	r0, r0, r7
400144ac:	e59f1010 	ldr	r1, [pc, #16]	; 400144c4 <CyU3UpdateLppActiveInfo+0x80>
400144b0:	e5c10000 	strb	r0, [r1]
400144b4:	e1a00008 	mov	r0, r8
400144b8:	eb00370f 	bl	400220fc <CyU3PVicDisableInt>
400144bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400144c0:	40031a80 	.word	0x40031a80
400144c4:	40031120 	.word	0x40031120

Disassembly of section i.CyFx3DevClearSwInterrupt:

400144c8 <CyFx3DevClearSwInterrupt>:
400144c8:	e59f000c 	ldr	r0, [pc, #12]	; 400144dc <CyFx3DevClearSwInterrupt+0x14>
400144cc:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
400144d0:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
400144d4:	e580104c 	str	r1, [r0, #76]	; 0x4c
400144d8:	e12fff1e 	bx	lr
400144dc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

400144e0 <CyFx3DevIOConfigure>:
400144e0:	e92d4030 	push	{r4, r5, lr}
400144e4:	e1b04000 	movs	r4, r0
400144e8:	e24dd024 	sub	sp, sp, #36	; 0x24
400144ec:	0a000045 	beq	40014608 <CyFx3DevIOConfigure+0x128>
400144f0:	eb00017b 	bl	40014ae4 <CyFx3DevIsGpif32Supported>
400144f4:	e3500000 	cmp	r0, #0
400144f8:	e3a05000 	mov	r5, #0
400144fc:	05845000 	streq	r5, [r4]
40014500:	eb0001ae 	bl	40014bc0 <CyFx3DevIsSib0Supported>
40014504:	e3500000 	cmp	r0, #0
40014508:	05c45014 	strbeq	r5, [r4, #20]
4001450c:	eb0001b5 	bl	40014be8 <CyFx3DevIsSib1Supported>
40014510:	e3500000 	cmp	r0, #0
40014514:	05c45015 	strbeq	r5, [r4, #21]
40014518:	eb000194 	bl	40014b70 <CyFx3DevIsI2sSupported>
4001451c:	e3500000 	cmp	r0, #0
40014520:	1a000002 	bne	40014530 <CyFx3DevIOConfigure+0x50>
40014524:	e594000c 	ldr	r0, [r4, #12]
40014528:	e3500000 	cmp	r0, #0
4001452c:	1a000035 	bne	40014608 <CyFx3DevIOConfigure+0x128>
40014530:	e5940000 	ldr	r0, [r4]
40014534:	e3500000 	cmp	r0, #0
40014538:	0a000009 	beq	40014564 <CyFx3DevIOConfigure+0x84>
4001453c:	e5d40016 	ldrb	r0, [r4, #22]
40014540:	e3500000 	cmp	r0, #0
40014544:	05d40014 	ldrbeq	r0, [r4, #20]
40014548:	03500000 	cmpeq	r0, #0
4001454c:	05d40015 	ldrbeq	r0, [r4, #21]
40014550:	03500000 	cmpeq	r0, #0
40014554:	1a00002b 	bne	40014608 <CyFx3DevIOConfigure+0x128>
40014558:	e3a00002 	mov	r0, #2
4001455c:	e5cd0000 	strb	r0, [sp]
40014560:	ea000022 	b	400145f0 <CyFx3DevIOConfigure+0x110>
40014564:	e5d40014 	ldrb	r0, [r4, #20]
40014568:	e3a02003 	mov	r2, #3
4001456c:	e3a03001 	mov	r3, #1
40014570:	e3500000 	cmp	r0, #0
40014574:	05cd2000 	strbeq	r2, [sp]
40014578:	0a000004 	beq	40014590 <CyFx3DevIOConfigure+0xb0>
4001457c:	e3500001 	cmp	r0, #1
40014580:	05cd3000 	strbeq	r3, [sp]
40014584:	0a000001 	beq	40014590 <CyFx3DevIOConfigure+0xb0>
40014588:	e3500002 	cmp	r0, #2
4001458c:	05cd5000 	strbeq	r5, [sp]
40014590:	e5d41015 	ldrb	r1, [r4, #21]
40014594:	e5d40016 	ldrb	r0, [r4, #22]
40014598:	e3510002 	cmp	r1, #2
4001459c:	1a000009 	bne	400145c8 <CyFx3DevIOConfigure+0xe8>
400145a0:	e3500004 	cmp	r0, #4
400145a4:	05940004 	ldreq	r0, [r4, #4]
400145a8:	03500000 	cmpeq	r0, #0
400145ac:	05940010 	ldreq	r0, [r4, #16]
400145b0:	03500000 	cmpeq	r0, #0
400145b4:	0594000c 	ldreq	r0, [r4, #12]
400145b8:	03500000 	cmpeq	r0, #0
400145bc:	05cd5001 	strbeq	r5, [sp, #1]
400145c0:	0a000013 	beq	40014614 <CyFx3DevIOConfigure+0x134>
400145c4:	ea00000f 	b	40014608 <CyFx3DevIOConfigure+0x128>
400145c8:	e3500000 	cmp	r0, #0
400145cc:	0a000009 	beq	400145f8 <CyFx3DevIOConfigure+0x118>
400145d0:	e3500001 	cmp	r0, #1
400145d4:	13500002 	cmpne	r0, #2
400145d8:	13500003 	cmpne	r0, #3
400145dc:	1a000009 	bne	40014608 <CyFx3DevIOConfigure+0x128>
400145e0:	e3510001 	cmp	r1, #1
400145e4:	05cd3001 	strbeq	r3, [sp, #1]
400145e8:	0a000009 	beq	40014614 <CyFx3DevIOConfigure+0x134>
400145ec:	e3a00004 	mov	r0, #4
400145f0:	e5cd0001 	strb	r0, [sp, #1]
400145f4:	ea000006 	b	40014614 <CyFx3DevIOConfigure+0x134>
400145f8:	e5cd2001 	strb	r2, [sp, #1]
400145fc:	e5d40015 	ldrb	r0, [r4, #21]
40014600:	e3500000 	cmp	r0, #0
40014604:	0a000002 	beq	40014614 <CyFx3DevIOConfigure+0x134>
40014608:	e3a00000 	mov	r0, #0
4001460c:	e28dd024 	add	sp, sp, #36	; 0x24
40014610:	e8bd8030 	pop	{r4, r5, pc}
40014614:	e5940004 	ldr	r0, [r4, #4]
40014618:	e58d0004 	str	r0, [sp, #4]
4001461c:	e594000c 	ldr	r0, [r4, #12]
40014620:	e58d000c 	str	r0, [sp, #12]
40014624:	e5940010 	ldr	r0, [r4, #16]
40014628:	e58d0010 	str	r0, [sp, #16]
4001462c:	e5940008 	ldr	r0, [r4, #8]
40014630:	e58d0008 	str	r0, [sp, #8]
40014634:	e5940018 	ldr	r0, [r4, #24]
40014638:	e58d0014 	str	r0, [sp, #20]
4001463c:	e594001c 	ldr	r0, [r4, #28]
40014640:	e58d0018 	str	r0, [sp, #24]
40014644:	e5940020 	ldr	r0, [r4, #32]
40014648:	e58d001c 	str	r0, [sp, #28]
4001464c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40014650:	e58d0020 	str	r0, [sp, #32]
40014654:	e1a0000d 	mov	r0, sp
40014658:	eb000054 	bl	400147b0 <CyFx3DevIOSetConfig>
4001465c:	eaffffea 	b	4001460c <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

40014660 <CyFx3DevIOIsGpio>:
40014660:	e350003d 	cmp	r0, #61	; 0x3d
40014664:	e3a02000 	mov	r2, #0
40014668:	23a00000 	movcs	r0, #0
4001466c:	212fff1e 	bxcs	lr
40014670:	e3500020 	cmp	r0, #32
40014674:	83a02001 	movhi	r2, #1
40014678:	82400020 	subhi	r0, r0, #32
4001467c:	e59fc018 	ldr	ip, [pc, #24]	; 4001469c <CyFx3DevIOIsGpio+0x3c>
40014680:	e3510000 	cmp	r1, #0
40014684:	e08c1102 	add	r1, ip, r2, lsl #2
40014688:	0591101c 	ldreq	r1, [r1, #28]
4001468c:	15911014 	ldrne	r1, [r1, #20]
40014690:	e3a03001 	mov	r3, #1
40014694:	e0010013 	and	r0, r1, r3, lsl r0
40014698:	e12fff1e 	bx	lr
4001469c:	4003113c 	.word	0x4003113c

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

400146a0 <CyFx3DevIOIsI2cConfigured>:
400146a0:	e59f0004 	ldr	r0, [pc, #4]	; 400146ac <CyFx3DevIOIsI2cConfigured+0xc>
400146a4:	e5900008 	ldr	r0, [r0, #8]
400146a8:	e12fff1e 	bx	lr
400146ac:	4003113c 	.word	0x4003113c

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

400146b0 <CyFx3DevIOIsI2sConfigured>:
400146b0:	e59f0004 	ldr	r0, [pc, #4]	; 400146bc <CyFx3DevIOIsI2sConfigured+0xc>
400146b4:	e590000c 	ldr	r0, [r0, #12]
400146b8:	e12fff1e 	bx	lr
400146bc:	4003113c 	.word	0x4003113c

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

400146c0 <CyFx3DevIOIsSpiConfigured>:
400146c0:	e59f0004 	ldr	r0, [pc, #4]	; 400146cc <CyFx3DevIOIsSpiConfigured+0xc>
400146c4:	e5900010 	ldr	r0, [r0, #16]
400146c8:	e12fff1e 	bx	lr
400146cc:	4003113c 	.word	0x4003113c

Disassembly of section i.CyFx3DevIOIsUartConfigured:

400146d0 <CyFx3DevIOIsUartConfigured>:
400146d0:	e59f0004 	ldr	r0, [pc, #4]	; 400146dc <CyFx3DevIOIsUartConfigured+0xc>
400146d4:	e5900004 	ldr	r0, [r0, #4]
400146d8:	e12fff1e 	bx	lr
400146dc:	4003113c 	.word	0x4003113c

Disassembly of section i.CyFx3DevIOSelectGpio:

400146e0 <CyFx3DevIOSelectGpio>:
400146e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400146e4:	e350003d 	cmp	r0, #61	; 0x3d
400146e8:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
400146ec:	e3a08001 	mov	r8, #1
400146f0:	e59f30b0 	ldr	r3, [pc, #176]	; 400147a8 <CyFx3DevIOSelectGpio+0xc8>
400146f4:	e1a0c018 	lsl	ip, r8, r0
400146f8:	e2837014 	add	r7, r3, #20
400146fc:	e89700d0 	ldm	r7, {r4, r6, r7}
40014700:	e5935020 	ldr	r5, [r3, #32]
40014704:	e3510000 	cmp	r1, #0
40014708:	e240e020 	sub	lr, r0, #32
4001470c:	0a00000f 	beq	40014750 <CyFx3DevIOSelectGpio+0x70>
40014710:	e3500020 	cmp	r0, #32
40014714:	2a000005 	bcs	40014730 <CyFx3DevIOSelectGpio+0x50>
40014718:	e3520000 	cmp	r2, #0
4001471c:	0187000c 	orreq	r0, r7, ip
40014720:	0a00000f 	beq	40014764 <CyFx3DevIOSelectGpio+0x84>
40014724:	e184000c 	orr	r0, r4, ip
40014728:	e5830014 	str	r0, [r3, #20]
4001472c:	ea000013 	b	40014780 <CyFx3DevIOSelectGpio+0xa0>
40014730:	e3520000 	cmp	r2, #0
40014734:	e20e00ff 	and	r0, lr, #255	; 0xff
40014738:	e1a00018 	lsl	r0, r8, r0
4001473c:	01800005 	orreq	r0, r0, r5
40014740:	0a00000d 	beq	4001477c <CyFx3DevIOSelectGpio+0x9c>
40014744:	e1800006 	orr	r0, r0, r6
40014748:	e5830018 	str	r0, [r3, #24]
4001474c:	ea00000b 	b	40014780 <CyFx3DevIOSelectGpio+0xa0>
40014750:	e3500020 	cmp	r0, #32
40014754:	2a000004 	bcs	4001476c <CyFx3DevIOSelectGpio+0x8c>
40014758:	e1c4000c 	bic	r0, r4, ip
4001475c:	e5830014 	str	r0, [r3, #20]
40014760:	e1c7000c 	bic	r0, r7, ip
40014764:	e583001c 	str	r0, [r3, #28]
40014768:	ea000004 	b	40014780 <CyFx3DevIOSelectGpio+0xa0>
4001476c:	e1a00e18 	lsl	r0, r8, lr
40014770:	e1c61000 	bic	r1, r6, r0
40014774:	e1c50000 	bic	r0, r5, r0
40014778:	e5831018 	str	r1, [r3, #24]
4001477c:	e5830020 	str	r0, [r3, #32]
40014780:	e5931014 	ldr	r1, [r3, #20]
40014784:	e59f0020 	ldr	r0, [pc, #32]	; 400147ac <CyFx3DevIOSelectGpio+0xcc>
40014788:	e580100c 	str	r1, [r0, #12]
4001478c:	e5931018 	ldr	r1, [r3, #24]
40014790:	e5801010 	str	r1, [r0, #16]
40014794:	e593101c 	ldr	r1, [r3, #28]
40014798:	e5801014 	str	r1, [r0, #20]
4001479c:	e5931020 	ldr	r1, [r3, #32]
400147a0:	e5801018 	str	r1, [r0, #24]
400147a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400147a8:	4003113c 	.word	0x4003113c
400147ac:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

400147b0 <CyFx3DevIOSetConfig>:
400147b0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400147b4:	e59f8208 	ldr	r8, [pc, #520]	; 400149c4 <CyFx3DevIOSetConfig+0x214>
400147b8:	e1a05000 	mov	r5, r0
400147bc:	e5980008 	ldr	r0, [r8, #8]
400147c0:	e59f7200 	ldr	r7, [pc, #512]	; 400149c8 <CyFx3DevIOSetConfig+0x218>
400147c4:	e2006002 	and	r6, r0, #2
400147c8:	e5d50000 	ldrb	r0, [r5]
400147cc:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
400147d0:	e3500000 	cmp	r0, #0
400147d4:	01c44944 	biceq	r4, r4, r4, asr #18
400147d8:	0a000008 	beq	40014800 <CyFx3DevIOSetConfig+0x50>
400147dc:	e3500001 	cmp	r0, #1
400147e0:	059f41e4 	ldreq	r4, [pc, #484]	; 400149cc <CyFx3DevIOSetConfig+0x21c>
400147e4:	0a000005 	beq	40014800 <CyFx3DevIOSetConfig+0x50>
400147e8:	e3500002 	cmp	r0, #2
400147ec:	059f41dc 	ldreq	r4, [pc, #476]	; 400149d0 <CyFx3DevIOSetConfig+0x220>
400147f0:	0a000001 	beq	400147fc <CyFx3DevIOSetConfig+0x4c>
400147f4:	e3500003 	cmp	r0, #3
400147f8:	1a000058 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
400147fc:	e3866010 	orr	r6, r6, #16
40014800:	e5d50001 	ldrb	r0, [r5, #1]
40014804:	e3500005 	cmp	r0, #5
40014808:	308ff100 	addcc	pc, pc, r0, lsl #2
4001480c:	ea000053 	b	40014960 <CyFx3DevIOSetConfig+0x1b0>
40014810:	ea000003 	b	40014824 <CyFx3DevIOSetConfig+0x74>
40014814:	ea000005 	b	40014830 <CyFx3DevIOSetConfig+0x80>
40014818:	ea000021 	b	400148a4 <CyFx3DevIOSetConfig+0xf4>
4001481c:	ea00002c 	b	400148d4 <CyFx3DevIOSetConfig+0x124>
40014820:	ea000002 	b	40014830 <CyFx3DevIOSetConfig+0x80>
40014824:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014828:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
4001482c:	ea000032 	b	400148fc <CyFx3DevIOSetConfig+0x14c>
40014830:	e3500001 	cmp	r0, #1
40014834:	e5950004 	ldr	r0, [r5, #4]
40014838:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
4001483c:	e3500000 	cmp	r0, #0
40014840:	1a000006 	bne	40014860 <CyFx3DevIOSetConfig+0xb0>
40014844:	e5950010 	ldr	r0, [r5, #16]
40014848:	e3500000 	cmp	r0, #0
4001484c:	1a00000b 	bne	40014880 <CyFx3DevIOSetConfig+0xd0>
40014850:	e595000c 	ldr	r0, [r5, #12]
40014854:	e3500000 	cmp	r0, #0
40014858:	1a00000e 	bne	40014898 <CyFx3DevIOSetConfig+0xe8>
4001485c:	ea000005 	b	40014878 <CyFx3DevIOSetConfig+0xc8>
40014860:	e595000c 	ldr	r0, [r5, #12]
40014864:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014868:	e3500000 	cmp	r0, #0
4001486c:	05950010 	ldreq	r0, [r5, #16]
40014870:	03500000 	cmpeq	r0, #0
40014874:	1a000039 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
40014878:	e3866c01 	orr	r6, r6, #256	; 0x100
4001487c:	ea00001e 	b	400148fc <CyFx3DevIOSetConfig+0x14c>
40014880:	e595000c 	ldr	r0, [r5, #12]
40014884:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014888:	e3500000 	cmp	r0, #0
4001488c:	1a000033 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
40014890:	e3866c02 	orr	r6, r6, #512	; 0x200
40014894:	ea000018 	b	400148fc <CyFx3DevIOSetConfig+0x14c>
40014898:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
4001489c:	e3866c03 	orr	r6, r6, #768	; 0x300
400148a0:	ea000015 	b	400148fc <CyFx3DevIOSetConfig+0x14c>
400148a4:	e5950010 	ldr	r0, [r5, #16]
400148a8:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
400148ac:	e3500000 	cmp	r0, #0
400148b0:	1a00002a 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
400148b4:	e5950004 	ldr	r0, [r5, #4]
400148b8:	e3866c05 	orr	r6, r6, #1280	; 0x500
400148bc:	e3500000 	cmp	r0, #0
400148c0:	e595000c 	ldr	r0, [r5, #12]
400148c4:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
400148c8:	e3500000 	cmp	r0, #0
400148cc:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
400148d0:	ea000009 	b	400148fc <CyFx3DevIOSetConfig+0x14c>
400148d4:	e5950004 	ldr	r0, [r5, #4]
400148d8:	e3866b01 	orr	r6, r6, #1024	; 0x400
400148dc:	e3500000 	cmp	r0, #0
400148e0:	e5950010 	ldr	r0, [r5, #16]
400148e4:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
400148e8:	e3500000 	cmp	r0, #0
400148ec:	e595000c 	ldr	r0, [r5, #12]
400148f0:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
400148f4:	e3500000 	cmp	r0, #0
400148f8:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
400148fc:	e5950008 	ldr	r0, [r5, #8]
40014900:	e5959014 	ldr	r9, [r5, #20]
40014904:	e3500000 	cmp	r0, #0
40014908:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
4001490c:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014910:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014914:	05950018 	ldreq	r0, [r5, #24]
40014918:	01d00004 	bicseq	r0, r0, r4
4001491c:	0595e01c 	ldreq	lr, [r5, #28]
40014920:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014924:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014928:	0595c020 	ldreq	ip, [r5, #32]
4001492c:	01dc0004 	bicseq	r0, ip, r4
40014930:	1a00000a 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
40014934:	e59f0098 	ldr	r0, [pc, #152]	; 400149d4 <CyFx3DevIOSetConfig+0x224>
40014938:	e3a01000 	mov	r1, #0
4001493c:	e01e2000 	ands	r2, lr, r0
40014940:	000c2000 	andeq	r2, ip, r0
40014944:	0a000001 	beq	40014950 <CyFx3DevIOSetConfig+0x1a0>
40014948:	e11c0000 	tst	ip, r0
4001494c:	1a000003 	bne	40014960 <CyFx3DevIOSetConfig+0x1b0>
40014950:	e2523001 	subs	r3, r2, #1
40014954:	13a03001 	movne	r3, #1
40014958:	e1120003 	tst	r2, r3
4001495c:	0a000001 	beq	40014968 <CyFx3DevIOSetConfig+0x1b8>
40014960:	e3a00000 	mov	r0, #0
40014964:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014968:	e2811001 	add	r1, r1, #1
4001496c:	e3510008 	cmp	r1, #8
40014970:	e1a00080 	lsl	r0, r0, #1
40014974:	3afffff0 	bcc	4001493c <CyFx3DevIOSetConfig+0x18c>
40014978:	e588900c 	str	r9, [r8, #12]
4001497c:	e5950018 	ldr	r0, [r5, #24]
40014980:	e5880010 	str	r0, [r8, #16]
40014984:	e595001c 	ldr	r0, [r5, #28]
40014988:	e5880014 	str	r0, [r8, #20]
4001498c:	e5950020 	ldr	r0, [r5, #32]
40014990:	e5880018 	str	r0, [r8, #24]
40014994:	e3a00001 	mov	r0, #1
40014998:	eb0000a6 	bl	40014c38 <CyFx3BusyWait>
4001499c:	e5886008 	str	r6, [r8, #8]
400149a0:	e59f0030 	ldr	r0, [pc, #48]	; 400149d8 <CyFx3DevIOSetConfig+0x228>
400149a4:	e3a02024 	mov	r2, #36	; 0x24
400149a8:	e1a01005 	mov	r1, r5
400149ac:	ebfffb98 	bl	40013814 <__aeabi_memcpy4>
400149b0:	e59f0024 	ldr	r0, [pc, #36]	; 400149dc <CyFx3DevIOSetConfig+0x22c>
400149b4:	e5804004 	str	r4, [r0, #4]
400149b8:	e5807000 	str	r7, [r0]
400149bc:	e3a00001 	mov	r0, #1
400149c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400149c4:	e0051000 	.word	0xe0051000
400149c8:	3fe00000 	.word	0x3fe00000
400149cc:	1ffff9e0 	.word	0x1ffff9e0
400149d0:	1fffe000 	.word	0x1fffe000
400149d4:	01010101 	.word	0x01010101
400149d8:	4003113c 	.word	0x4003113c
400149dc:	40031134 	.word	0x40031134

Disassembly of section i.CyFx3DevIdentifyPart:

400149e0 <CyFx3DevIdentifyPart>:
400149e0:	e59f0078 	ldr	r0, [pc, #120]	; 40014a60 <CyFx3DevIdentifyPart+0x80>
400149e4:	e5901008 	ldr	r1, [r0, #8]
400149e8:	e59f2074 	ldr	r2, [pc, #116]	; 40014a64 <CyFx3DevIdentifyPart+0x84>
400149ec:	e1a01221 	lsr	r1, r1, #4
400149f0:	e5923004 	ldr	r3, [r2, #4]
400149f4:	e3530000 	cmp	r3, #0
400149f8:	15d20000 	ldrbne	r0, [r2]
400149fc:	112fff1e 	bxne	lr
40014a00:	e5900004 	ldr	r0, [r0, #4]
40014a04:	e3100040 	tst	r0, #64	; 0x40
40014a08:	e59f2058 	ldr	r2, [pc, #88]	; 40014a68 <CyFx3DevIdentifyPart+0x88>
40014a0c:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014a10:	e3a00000 	mov	r0, #0
40014a14:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014a18:	e1530001 	cmp	r3, r1
40014a1c:	12800001 	addne	r0, r0, #1
40014a20:	120000ff 	andne	r0, r0, #255	; 0xff
40014a24:	1350001b 	cmpne	r0, #27
40014a28:	3afffff9 	bcc	40014a14 <CyFx3DevIdentifyPart+0x34>
40014a2c:	e350001b 	cmp	r0, #27
40014a30:	03a00003 	moveq	r0, #3
40014a34:	0a000000 	beq	40014a3c <CyFx3DevIdentifyPart+0x5c>
40014a38:	2a000003 	bcs	40014a4c <CyFx3DevIdentifyPart+0x6c>
40014a3c:	e0821180 	add	r1, r2, r0, lsl #3
40014a40:	e5911004 	ldr	r1, [r1, #4]
40014a44:	e3110004 	tst	r1, #4
40014a48:	112fff1e 	bxne	lr
40014a4c:	e59f1018 	ldr	r1, [pc, #24]	; 40014a6c <CyFx3DevIdentifyPart+0x8c>
40014a50:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014a54:	e3822004 	orr	r2, r2, #4
40014a58:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014a5c:	e12fff1e 	bx	lr
40014a60:	e0055000 	.word	0xe0055000
40014a64:	40031128 	.word	0x40031128
40014a68:	40011e14 	.word	0x40011e14
40014a6c:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014a70 <CyFx3DevInitPageTables>:
40014a70:	e92d4030 	push	{r4, r5, lr}
40014a74:	e59f0058 	ldr	r0, [pc, #88]	; 40014ad4 <CyFx3DevInitPageTables+0x64>
40014a78:	e3a04000 	mov	r4, #0
40014a7c:	e59f504c 	ldr	r5, [pc, #76]	; 40014ad0 <CyFx3DevInitPageTables+0x60>
40014a80:	e5804004 	str	r4, [r0, #4]
40014a84:	ebffffd5 	bl	400149e0 <CyFx3DevIdentifyPart>
40014a88:	e59f1048 	ldr	r1, [pc, #72]	; 40014ad8 <CyFx3DevInitPageTables+0x68>
40014a8c:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014a90:	e5801000 	str	r1, [r0]
40014a94:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014a98:	e5801008 	str	r1, [r0, #8]
40014a9c:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014aa0:	e5801010 	str	r1, [r0, #16]
40014aa4:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014aa8:	e5801018 	str	r1, [r0, #24]
40014aac:	e59f1028 	ldr	r1, [pc, #40]	; 40014adc <CyFx3DevInitPageTables+0x6c>
40014ab0:	e5801020 	str	r1, [r0, #32]
40014ab4:	e59f1024 	ldr	r1, [pc, #36]	; 40014ae0 <CyFx3DevInitPageTables+0x70>
40014ab8:	e580101c 	str	r1, [r0, #28]
40014abc:	e5804024 	str	r4, [r0, #36]	; 0x24
40014ac0:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014ac4:	e3a00003 	mov	r0, #3
40014ac8:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014acc:	e8bd8030 	pop	{r4, r5, pc}
40014ad0:	e0058000 	.word	0xe0058000
40014ad4:	40031128 	.word	0x40031128
40014ad8:	00000c12 	.word	0x00000c12
40014adc:	fff00c12 	.word	0xfff00c12
40014ae0:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014ae4 <CyFx3DevIsGpif32Supported>:
40014ae4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014ae8:	ebffffbc 	bl	400149e0 <CyFx3DevIdentifyPart>
40014aec:	e350001b 	cmp	r0, #27
40014af0:	359f1010 	ldrcc	r1, [pc, #16]	; 40014b08 <CyFx3DevIsGpif32Supported+0x24>
40014af4:	30810180 	addcc	r0, r1, r0, lsl #3
40014af8:	35900004 	ldrcc	r0, [r0, #4]
40014afc:	32000010 	andcc	r0, r0, #16
40014b00:	23a00000 	movcs	r0, #0
40014b04:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014b08:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014b0c <CyFx3DevIsGpifConfigurable>:
40014b0c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b10:	ebffffb2 	bl	400149e0 <CyFx3DevIdentifyPart>
40014b14:	e350001b 	cmp	r0, #27
40014b18:	2a000006 	bcs	40014b38 <CyFx3DevIsGpifConfigurable+0x2c>
40014b1c:	e59f101c 	ldr	r1, [pc, #28]	; 40014b40 <CyFx3DevIsGpifConfigurable+0x34>
40014b20:	e0810180 	add	r0, r1, r0, lsl #3
40014b24:	e5900004 	ldr	r0, [r0, #4]
40014b28:	e3100c0f 	tst	r0, #3840	; 0xf00
40014b2c:	159f0010 	ldrne	r0, [pc, #16]	; 40014b44 <CyFx3DevIsGpifConfigurable+0x38>
40014b30:	15900008 	ldrne	r0, [r0, #8]
40014b34:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014b38:	e3a00001 	mov	r0, #1
40014b3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014b40:	40011e14 	.word	0x40011e14
40014b44:	40031128 	.word	0x40031128

Disassembly of section i.CyFx3DevIsGpifSupported:

40014b48 <CyFx3DevIsGpifSupported>:
40014b48:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b4c:	ebffffa3 	bl	400149e0 <CyFx3DevIdentifyPart>
40014b50:	e350001b 	cmp	r0, #27
40014b54:	359f1010 	ldrcc	r1, [pc, #16]	; 40014b6c <CyFx3DevIsGpifSupported+0x24>
40014b58:	30810180 	addcc	r0, r1, r0, lsl #3
40014b5c:	35900004 	ldrcc	r0, [r0, #4]
40014b60:	32000008 	andcc	r0, r0, #8
40014b64:	23a00000 	movcs	r0, #0
40014b68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014b6c:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsI2sSupported:

40014b70 <CyFx3DevIsI2sSupported>:
40014b70:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b74:	ebffff99 	bl	400149e0 <CyFx3DevIdentifyPart>
40014b78:	e350001b 	cmp	r0, #27
40014b7c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014b94 <CyFx3DevIsI2sSupported+0x24>
40014b80:	30810180 	addcc	r0, r1, r0, lsl #3
40014b84:	35900004 	ldrcc	r0, [r0, #4]
40014b88:	32000080 	andcc	r0, r0, #128	; 0x80
40014b8c:	23a00000 	movcs	r0, #0
40014b90:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014b94:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsOtgSupported:

40014b98 <CyFx3DevIsOtgSupported>:
40014b98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b9c:	ebffff8f 	bl	400149e0 <CyFx3DevIdentifyPart>
40014ba0:	e350001b 	cmp	r0, #27
40014ba4:	359f1010 	ldrcc	r1, [pc, #16]	; 40014bbc <CyFx3DevIsOtgSupported+0x24>
40014ba8:	30810180 	addcc	r0, r1, r0, lsl #3
40014bac:	35900004 	ldrcc	r0, [r0, #4]
40014bb0:	32000002 	andcc	r0, r0, #2
40014bb4:	23a00000 	movcs	r0, #0
40014bb8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014bbc:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsSib0Supported:

40014bc0 <CyFx3DevIsSib0Supported>:
40014bc0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014bc4:	ebffff85 	bl	400149e0 <CyFx3DevIdentifyPart>
40014bc8:	e350001b 	cmp	r0, #27
40014bcc:	359f1010 	ldrcc	r1, [pc, #16]	; 40014be4 <CyFx3DevIsSib0Supported+0x24>
40014bd0:	30810180 	addcc	r0, r1, r0, lsl #3
40014bd4:	35900004 	ldrcc	r0, [r0, #4]
40014bd8:	32000020 	andcc	r0, r0, #32
40014bdc:	23a00000 	movcs	r0, #0
40014be0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014be4:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsSib1Supported:

40014be8 <CyFx3DevIsSib1Supported>:
40014be8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014bec:	ebffff7b 	bl	400149e0 <CyFx3DevIdentifyPart>
40014bf0:	e350001b 	cmp	r0, #27
40014bf4:	359f1010 	ldrcc	r1, [pc, #16]	; 40014c0c <CyFx3DevIsSib1Supported+0x24>
40014bf8:	30810180 	addcc	r0, r1, r0, lsl #3
40014bfc:	35900004 	ldrcc	r0, [r0, #4]
40014c00:	32000040 	andcc	r0, r0, #64	; 0x40
40014c04:	23a00000 	movcs	r0, #0
40014c08:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014c0c:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014c10 <CyFx3DevIsUsb3Supported>:
40014c10:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014c14:	ebffff71 	bl	400149e0 <CyFx3DevIdentifyPart>
40014c18:	e350001b 	cmp	r0, #27
40014c1c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014c34 <CyFx3DevIsUsb3Supported+0x24>
40014c20:	30810180 	addcc	r0, r1, r0, lsl #3
40014c24:	35900004 	ldrcc	r0, [r0, #4]
40014c28:	32000001 	andcc	r0, r0, #1
40014c2c:	23a00000 	movcs	r0, #0
40014c30:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014c34:	40011e14 	.word	0x40011e14

Disassembly of section i.CyFx3BusyWait:

40014c38 <CyFx3BusyWait>:
40014c38:	ea000003 	b	40014c4c <CyFx3BusyWait+0x14>
40014c3c:	e3a01000 	mov	r1, #0
40014c40:	e2811001 	add	r1, r1, #1
40014c44:	e351002f 	cmp	r1, #47	; 0x2f
40014c48:	3afffffc 	bcc	40014c40 <CyFx3BusyWait+0x8>
40014c4c:	e1b01000 	movs	r1, r0
40014c50:	e2400001 	sub	r0, r0, #1
40014c54:	e1a00800 	lsl	r0, r0, #16
40014c58:	e1a00820 	lsr	r0, r0, #16
40014c5c:	1afffff6 	bne	40014c3c <CyFx3BusyWait+0x4>
40014c60:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014c64 <CyFx3PibDllEnable>:
40014c64:	e59f205c 	ldr	r2, [pc, #92]	; 40014cc8 <CyFx3PibDllEnable+0x64>
40014c68:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014c6c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014c70:	e3c00001 	bic	r0, r0, #1
40014c74:	e5820028 	str	r0, [r2, #40]	; 0x28
40014c78:	e3a00001 	mov	r0, #1
40014c7c:	ebffffed 	bl	40014c38 <CyFx3BusyWait>
40014c80:	e3a00003 	mov	r0, #3
40014c84:	e5820028 	str	r0, [r2, #40]	; 0x28
40014c88:	e3a00001 	mov	r0, #1
40014c8c:	ebffffe9 	bl	40014c38 <CyFx3BusyWait>
40014c90:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014c94:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014c98:	e5820028 	str	r0, [r2, #40]	; 0x28
40014c9c:	e3a00001 	mov	r0, #1
40014ca0:	ebffffe4 	bl	40014c38 <CyFx3BusyWait>
40014ca4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014ca8:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014cac:	e5820028 	str	r0, [r2, #40]	; 0x28
40014cb0:	e3a00001 	mov	r0, #1
40014cb4:	ebffffdf 	bl	40014c38 <CyFx3BusyWait>
40014cb8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014cbc:	e3100004 	tst	r0, #4
40014cc0:	0afffffc 	beq	40014cb8 <CyFx3PibDllEnable+0x54>
40014cc4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cc8:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014ccc <CyFx3PibGetDllStatus>:
40014ccc:	e59f0008 	ldr	r0, [pc, #8]	; 40014cdc <CyFx3PibGetDllStatus+0x10>
40014cd0:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014cd4:	e2000004 	and	r0, r0, #4
40014cd8:	e12fff1e 	bx	lr
40014cdc:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014ce0 <CyFx3PibPowerOn>:
40014ce0:	e92d4010 	push	{r4, lr}
40014ce4:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014ce8:	ebffff96 	bl	40014b48 <CyFx3DevIsGpifSupported>
40014cec:	e3500000 	cmp	r0, #0
40014cf0:	1a000002 	bne	40014d00 <CyFx3PibPowerOn+0x20>
40014cf4:	e4940004 	ldr	r0, [r4], #4
40014cf8:	e3500000 	cmp	r0, #0
40014cfc:	1afffffc 	bne	40014cf4 <CyFx3PibPowerOn+0x14>
40014d00:	e59f2028 	ldr	r2, [pc, #40]	; 40014d30 <CyFx3PibPowerOn+0x50>
40014d04:	e3a00000 	mov	r0, #0
40014d08:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014d0c:	e3a0000a 	mov	r0, #10
40014d10:	ebffffc8 	bl	40014c38 <CyFx3BusyWait>
40014d14:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014d18:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014d1c:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014d20:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014d24:	e3100001 	tst	r0, #1
40014d28:	0afffffc 	beq	40014d20 <CyFx3PibPowerOn+0x40>
40014d2c:	e8bd8010 	pop	{r4, pc}
40014d30:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014d34 <CyU3PDmaSocketDisable>:
40014d34:	e3a0c03f 	mov	ip, #63	; 0x3f
40014d38:	e00c1440 	and	r1, ip, r0, asr #8
40014d3c:	e20030ff 	and	r3, r0, #255	; 0xff
40014d40:	e59fc048 	ldr	ip, [pc, #72]	; 40014d90 <CyU3PDmaSocketDisable+0x5c>
40014d44:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014d48:	e08cc383 	add	ip, ip, r3, lsl #7
40014d4c:	e59c200c 	ldr	r2, [ip, #12]
40014d50:	e3120601 	tst	r2, #1048576	; 0x100000
40014d54:	1a000000 	bne	40014d5c <CyU3PDmaSocketDisable+0x28>
40014d58:	e12fff1e 	bx	lr
40014d5c:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014d60:	e59fc028 	ldr	ip, [pc, #40]	; 40014d90 <CyU3PDmaSocketDisable+0x5c>
40014d64:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014d68:	e08cc383 	add	ip, ip, r3, lsl #7
40014d6c:	e58c200c 	str	r2, [ip, #12]
40014d70:	e1a00000 	nop			; (mov r0, r0)
40014d74:	e59fc014 	ldr	ip, [pc, #20]	; 40014d90 <CyU3PDmaSocketDisable+0x5c>
40014d78:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014d7c:	e08cc383 	add	ip, ip, r3, lsl #7
40014d80:	e59cc00c 	ldr	ip, [ip, #12]
40014d84:	e31c0601 	tst	ip, #1048576	; 0x100000
40014d88:	1afffff9 	bne	40014d74 <CyU3PDmaSocketDisable+0x40>
40014d8c:	eafffff1 	b	40014d58 <CyU3PDmaSocketDisable+0x24>
40014d90:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014d94 <CyU3PDmaSocketGetConfig>:
40014d94:	e1a02000 	mov	r2, r0
40014d98:	e3a0003f 	mov	r0, #63	; 0x3f
40014d9c:	e0003442 	and	r3, r0, r2, asr #8
40014da0:	e202c0ff 	and	ip, r2, #255	; 0xff
40014da4:	e3510000 	cmp	r1, #0
40014da8:	1a000001 	bne	40014db4 <CyU3PDmaSocketGetConfig+0x20>
40014dac:	e3a00040 	mov	r0, #64	; 0x40
40014db0:	e12fff1e 	bx	lr
40014db4:	e59f0074 	ldr	r0, [pc, #116]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014db8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014dbc:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014dc0:	e5810000 	str	r0, [r1]
40014dc4:	e59f0064 	ldr	r0, [pc, #100]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014dc8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014dcc:	e080038c 	add	r0, r0, ip, lsl #7
40014dd0:	e5900004 	ldr	r0, [r0, #4]
40014dd4:	e5810004 	str	r0, [r1, #4]
40014dd8:	e59f0050 	ldr	r0, [pc, #80]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014ddc:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014de0:	e080038c 	add	r0, r0, ip, lsl #7
40014de4:	e5900008 	ldr	r0, [r0, #8]
40014de8:	e5810008 	str	r0, [r1, #8]
40014dec:	e59f003c 	ldr	r0, [pc, #60]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014df0:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014df4:	e080038c 	add	r0, r0, ip, lsl #7
40014df8:	e590000c 	ldr	r0, [r0, #12]
40014dfc:	e581000c 	str	r0, [r1, #12]
40014e00:	e59f0028 	ldr	r0, [pc, #40]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014e04:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014e08:	e080038c 	add	r0, r0, ip, lsl #7
40014e0c:	e5900010 	ldr	r0, [r0, #16]
40014e10:	e5810010 	str	r0, [r1, #16]
40014e14:	e59f0014 	ldr	r0, [pc, #20]	; 40014e30 <CyU3PDmaSocketGetConfig+0x9c>
40014e18:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014e1c:	e080038c 	add	r0, r0, ip, lsl #7
40014e20:	e5900014 	ldr	r0, [r0, #20]
40014e24:	e5810014 	str	r0, [r1, #20]
40014e28:	e3a00000 	mov	r0, #0
40014e2c:	eaffffdf 	b	40014db0 <CyU3PDmaSocketGetConfig+0x1c>
40014e30:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014e34 <CyU3PDmaSocketIsValidConsumer>:
40014e34:	e92d4010 	push	{r4, lr}
40014e38:	e1a01000 	mov	r1, r0
40014e3c:	e3a0003f 	mov	r0, #63	; 0x3f
40014e40:	e0002441 	and	r2, r0, r1, asr #8
40014e44:	e20130ff 	and	r3, r1, #255	; 0xff
40014e48:	e3a04000 	mov	r4, #0
40014e4c:	e3520000 	cmp	r2, #0
40014e50:	0a000006 	beq	40014e70 <CyU3PDmaSocketIsValidConsumer+0x3c>
40014e54:	e3520001 	cmp	r2, #1
40014e58:	0a000009 	beq	40014e84 <CyU3PDmaSocketIsValidConsumer+0x50>
40014e5c:	e3520002 	cmp	r2, #2
40014e60:	0a00000c 	beq	40014e98 <CyU3PDmaSocketIsValidConsumer+0x64>
40014e64:	e3520003 	cmp	r2, #3
40014e68:	1a000014 	bne	40014ec0 <CyU3PDmaSocketIsValidConsumer+0x8c>
40014e6c:	ea00000e 	b	40014eac <CyU3PDmaSocketIsValidConsumer+0x78>
40014e70:	e1a00000 	nop			; (mov r0, r0)
40014e74:	e3a0c000 	mov	ip, #0
40014e78:	e3a0e004 	mov	lr, #4
40014e7c:	e59f4080 	ldr	r4, [pc, #128]	; 40014f04 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014e80:	ea000011 	b	40014ecc <CyU3PDmaSocketIsValidConsumer+0x98>
40014e84:	e1a00000 	nop			; (mov r0, r0)
40014e88:	e3a0c000 	mov	ip, #0
40014e8c:	e3a0e00f 	mov	lr, #15
40014e90:	e59f4070 	ldr	r4, [pc, #112]	; 40014f08 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014e94:	ea00000c 	b	40014ecc <CyU3PDmaSocketIsValidConsumer+0x98>
40014e98:	e1a00000 	nop			; (mov r0, r0)
40014e9c:	e3a0c000 	mov	ip, #0
40014ea0:	e3a0e007 	mov	lr, #7
40014ea4:	e59f4060 	ldr	r4, [pc, #96]	; 40014f0c <CyU3PDmaSocketIsValidConsumer+0xd8>
40014ea8:	ea000007 	b	40014ecc <CyU3PDmaSocketIsValidConsumer+0x98>
40014eac:	e1a00000 	nop			; (mov r0, r0)
40014eb0:	e3a0c000 	mov	ip, #0
40014eb4:	e3a0e00f 	mov	lr, #15
40014eb8:	e59f4050 	ldr	r4, [pc, #80]	; 40014f10 <CyU3PDmaSocketIsValidConsumer+0xdc>
40014ebc:	ea000002 	b	40014ecc <CyU3PDmaSocketIsValidConsumer+0x98>
40014ec0:	e1a00000 	nop			; (mov r0, r0)
40014ec4:	e3a00000 	mov	r0, #0
40014ec8:	e8bd8010 	pop	{r4, pc}
40014ecc:	e1a00000 	nop			; (mov r0, r0)
40014ed0:	e5940000 	ldr	r0, [r4]
40014ed4:	e3100001 	tst	r0, #1
40014ed8:	1a000001 	bne	40014ee4 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014edc:	e3a00000 	mov	r0, #0
40014ee0:	eafffff8 	b	40014ec8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014ee4:	e153000c 	cmp	r3, ip
40014ee8:	ba000003 	blt	40014efc <CyU3PDmaSocketIsValidConsumer+0xc8>
40014eec:	e153000e 	cmp	r3, lr
40014ef0:	ca000001 	bgt	40014efc <CyU3PDmaSocketIsValidConsumer+0xc8>
40014ef4:	e3a00001 	mov	r0, #1
40014ef8:	eafffff2 	b	40014ec8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014efc:	e3a00000 	mov	r0, #0
40014f00:	eafffff0 	b	40014ec8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014f04:	e0007f04 	.word	0xe0007f04
40014f08:	e0017f04 	.word	0xe0017f04
40014f0c:	e0027f04 	.word	0xe0027f04
40014f10:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014f14 <CyU3PDmaSocketIsValidProducer>:
40014f14:	e92d4010 	push	{r4, lr}
40014f18:	e1a01000 	mov	r1, r0
40014f1c:	e3a0003f 	mov	r0, #63	; 0x3f
40014f20:	e0002441 	and	r2, r0, r1, asr #8
40014f24:	e20130ff 	and	r3, r1, #255	; 0xff
40014f28:	e3a04000 	mov	r4, #0
40014f2c:	e3520000 	cmp	r2, #0
40014f30:	0a000006 	beq	40014f50 <CyU3PDmaSocketIsValidProducer+0x3c>
40014f34:	e3520001 	cmp	r2, #1
40014f38:	0a000009 	beq	40014f64 <CyU3PDmaSocketIsValidProducer+0x50>
40014f3c:	e3520002 	cmp	r2, #2
40014f40:	0a00000c 	beq	40014f78 <CyU3PDmaSocketIsValidProducer+0x64>
40014f44:	e3520004 	cmp	r2, #4
40014f48:	1a000014 	bne	40014fa0 <CyU3PDmaSocketIsValidProducer+0x8c>
40014f4c:	ea00000e 	b	40014f8c <CyU3PDmaSocketIsValidProducer+0x78>
40014f50:	e1a00000 	nop			; (mov r0, r0)
40014f54:	e3a0c005 	mov	ip, #5
40014f58:	e3a0e007 	mov	lr, #7
40014f5c:	e59f4080 	ldr	r4, [pc, #128]	; 40014fe4 <CyU3PDmaSocketIsValidProducer+0xd0>
40014f60:	ea000011 	b	40014fac <CyU3PDmaSocketIsValidProducer+0x98>
40014f64:	e1a00000 	nop			; (mov r0, r0)
40014f68:	e3a0c000 	mov	ip, #0
40014f6c:	e3a0e01f 	mov	lr, #31
40014f70:	e59f4070 	ldr	r4, [pc, #112]	; 40014fe8 <CyU3PDmaSocketIsValidProducer+0xd4>
40014f74:	ea00000c 	b	40014fac <CyU3PDmaSocketIsValidProducer+0x98>
40014f78:	e1a00000 	nop			; (mov r0, r0)
40014f7c:	e3a0c000 	mov	ip, #0
40014f80:	e3a0e007 	mov	lr, #7
40014f84:	e59f4060 	ldr	r4, [pc, #96]	; 40014fec <CyU3PDmaSocketIsValidProducer+0xd8>
40014f88:	ea000007 	b	40014fac <CyU3PDmaSocketIsValidProducer+0x98>
40014f8c:	e1a00000 	nop			; (mov r0, r0)
40014f90:	e3a0c000 	mov	ip, #0
40014f94:	e3a0e00f 	mov	lr, #15
40014f98:	e59f4050 	ldr	r4, [pc, #80]	; 40014ff0 <CyU3PDmaSocketIsValidProducer+0xdc>
40014f9c:	ea000002 	b	40014fac <CyU3PDmaSocketIsValidProducer+0x98>
40014fa0:	e1a00000 	nop			; (mov r0, r0)
40014fa4:	e3a00000 	mov	r0, #0
40014fa8:	e8bd8010 	pop	{r4, pc}
40014fac:	e1a00000 	nop			; (mov r0, r0)
40014fb0:	e5940000 	ldr	r0, [r4]
40014fb4:	e3100001 	tst	r0, #1
40014fb8:	1a000001 	bne	40014fc4 <CyU3PDmaSocketIsValidProducer+0xb0>
40014fbc:	e3a00000 	mov	r0, #0
40014fc0:	eafffff8 	b	40014fa8 <CyU3PDmaSocketIsValidProducer+0x94>
40014fc4:	e153000c 	cmp	r3, ip
40014fc8:	ba000003 	blt	40014fdc <CyU3PDmaSocketIsValidProducer+0xc8>
40014fcc:	e153000e 	cmp	r3, lr
40014fd0:	ca000001 	bgt	40014fdc <CyU3PDmaSocketIsValidProducer+0xc8>
40014fd4:	e3a00001 	mov	r0, #1
40014fd8:	eafffff2 	b	40014fa8 <CyU3PDmaSocketIsValidProducer+0x94>
40014fdc:	e3a00000 	mov	r0, #0
40014fe0:	eafffff0 	b	40014fa8 <CyU3PDmaSocketIsValidProducer+0x94>
40014fe4:	e0007f04 	.word	0xe0007f04
40014fe8:	e0017f04 	.word	0xe0017f04
40014fec:	e0027f04 	.word	0xe0027f04
40014ff0:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014ff4 <CyU3PDmaSocketSendEvent>:
40014ff4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014ff8:	e1a04000 	mov	r4, r0
40014ffc:	e1a05001 	mov	r5, r1
40015000:	e1a06002 	mov	r6, r2
40015004:	e3a0003f 	mov	r0, #63	; 0x3f
40015008:	e0007444 	and	r7, r0, r4, asr #8
4001500c:	e20480ff 	and	r8, r4, #255	; 0xff
40015010:	e1a09005 	mov	r9, r5
40015014:	e3560001 	cmp	r6, #1
40015018:	1a000000 	bne	40015020 <CyU3PDmaSocketSendEvent+0x2c>
4001501c:	e3899801 	orr	r9, r9, #65536	; 0x10000
40015020:	e59f0010 	ldr	r0, [pc, #16]	; 40015038 <CyU3PDmaSocketSendEvent+0x44>
40015024:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40015028:	e0800388 	add	r0, r0, r8, lsl #7
4001502c:	e580907c 	str	r9, [r0, #124]	; 0x7c
40015030:	ebfff6e1 	bl	40012bbc <CyU3PSysBarrierSync>
40015034:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015038:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaSocketSetConfig:

4001503c <CyU3PDmaSocketSetConfig>:
4001503c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015040:	e1a04000 	mov	r4, r0
40015044:	e1a05001 	mov	r5, r1
40015048:	e3a0003f 	mov	r0, #63	; 0x3f
4001504c:	e0006444 	and	r6, r0, r4, asr #8
40015050:	e20470ff 	and	r7, r4, #255	; 0xff
40015054:	e3550000 	cmp	r5, #0
40015058:	1a000001 	bne	40015064 <CyU3PDmaSocketSetConfig+0x28>
4001505c:	e3a00040 	mov	r0, #64	; 0x40
40015060:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015064:	e59f1078 	ldr	r1, [pc, #120]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
40015068:	e5950000 	ldr	r0, [r5]
4001506c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015070:	e7810387 	str	r0, [r1, r7, lsl #7]
40015074:	e59f1068 	ldr	r1, [pc, #104]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
40015078:	e5950004 	ldr	r0, [r5, #4]
4001507c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015080:	e0811387 	add	r1, r1, r7, lsl #7
40015084:	e5810004 	str	r0, [r1, #4]
40015088:	e59f1054 	ldr	r1, [pc, #84]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
4001508c:	e5950008 	ldr	r0, [r5, #8]
40015090:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015094:	e0811387 	add	r1, r1, r7, lsl #7
40015098:	e5810008 	str	r0, [r1, #8]
4001509c:	e59f1040 	ldr	r1, [pc, #64]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
400150a0:	e5950010 	ldr	r0, [r5, #16]
400150a4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400150a8:	e0811387 	add	r1, r1, r7, lsl #7
400150ac:	e5810010 	str	r0, [r1, #16]
400150b0:	e59f102c 	ldr	r1, [pc, #44]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
400150b4:	e5950014 	ldr	r0, [r5, #20]
400150b8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400150bc:	e0811387 	add	r1, r1, r7, lsl #7
400150c0:	e5810014 	str	r0, [r1, #20]
400150c4:	e59f1018 	ldr	r1, [pc, #24]	; 400150e4 <CyU3PDmaSocketSetConfig+0xa8>
400150c8:	e595000c 	ldr	r0, [r5, #12]
400150cc:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400150d0:	e0811387 	add	r1, r1, r7, lsl #7
400150d4:	e581000c 	str	r0, [r1, #12]
400150d8:	ebfff6b7 	bl	40012bbc <CyU3PSysBarrierSync>
400150dc:	e3a00000 	mov	r0, #0
400150e0:	eaffffde 	b	40015060 <CyU3PDmaSocketSetConfig+0x24>
400150e4:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

400150e8 <CyU3PDmaSocketSetWrapUp>:
400150e8:	e3a0c03f 	mov	ip, #63	; 0x3f
400150ec:	e00c1440 	and	r1, ip, r0, asr #8
400150f0:	e20030ff 	and	r3, r0, #255	; 0xff
400150f4:	e59fc02c 	ldr	ip, [pc, #44]	; 40015128 <CyU3PDmaSocketSetWrapUp+0x40>
400150f8:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
400150fc:	e08cc383 	add	ip, ip, r3, lsl #7
40015100:	e59c200c 	ldr	r2, [ip, #12]
40015104:	e3120601 	tst	r2, #1048576	; 0x100000
40015108:	1a000000 	bne	40015110 <CyU3PDmaSocketSetWrapUp+0x28>
4001510c:	e12fff1e 	bx	lr
40015110:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40015114:	e59fc00c 	ldr	ip, [pc, #12]	; 40015128 <CyU3PDmaSocketSetWrapUp+0x40>
40015118:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
4001511c:	e08cc383 	add	ip, ip, r3, lsl #7
40015120:	e58c200c 	str	r2, [ip, #12]
40015124:	eafffff8 	b	4001510c <CyU3PDmaSocketSetWrapUp+0x24>
40015128:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

4001512c <CyU3PDmaSocketUpdateStatus>:
4001512c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015130:	e1a04000 	mov	r4, r0
40015134:	e1a05001 	mov	r5, r1
40015138:	e3a0003f 	mov	r0, #63	; 0x3f
4001513c:	e0006444 	and	r6, r0, r4, asr #8
40015140:	e20470ff 	and	r7, r4, #255	; 0xff
40015144:	e3550000 	cmp	r5, #0
40015148:	1a000001 	bne	40015154 <CyU3PDmaSocketUpdateStatus+0x28>
4001514c:	e3a00040 	mov	r0, #64	; 0x40
40015150:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015154:	e59f1040 	ldr	r1, [pc, #64]	; 4001519c <CyU3PDmaSocketUpdateStatus+0x70>
40015158:	e5950010 	ldr	r0, [r5, #16]
4001515c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015160:	e0811387 	add	r1, r1, r7, lsl #7
40015164:	e5810010 	str	r0, [r1, #16]
40015168:	e59f102c 	ldr	r1, [pc, #44]	; 4001519c <CyU3PDmaSocketUpdateStatus+0x70>
4001516c:	e5950014 	ldr	r0, [r5, #20]
40015170:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015174:	e0811387 	add	r1, r1, r7, lsl #7
40015178:	e5810014 	str	r0, [r1, #20]
4001517c:	e59f1018 	ldr	r1, [pc, #24]	; 4001519c <CyU3PDmaSocketUpdateStatus+0x70>
40015180:	e595000c 	ldr	r0, [r5, #12]
40015184:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015188:	e0811387 	add	r1, r1, r7, lsl #7
4001518c:	e581000c 	str	r0, [r1, #12]
40015190:	ebfff689 	bl	40012bbc <CyU3PSysBarrierSync>
40015194:	e3a00000 	mov	r0, #0
40015198:	eaffffec 	b	40015150 <CyU3PDmaSocketUpdateStatus+0x24>
4001519c:	40031164 	.word	0x40031164

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

400151a0 <CyU3PDmaUpdateSocketSuspendOption>:
400151a0:	e92d4070 	push	{r4, r5, r6, lr}
400151a4:	e24dd018 	sub	sp, sp, #24
400151a8:	e1a04000 	mov	r4, r0
400151ac:	e1a06001 	mov	r6, r1
400151b0:	e1a0100d 	mov	r1, sp
400151b4:	e1a00004 	mov	r0, r4
400151b8:	ebfffef5 	bl	40014d94 <CyU3PDmaSocketGetConfig>
400151bc:	e59d000c 	ldr	r0, [sp, #12]
400151c0:	e2000702 	and	r0, r0, #524288	; 0x80000
400151c4:	e1a059a0 	lsr	r5, r0, #19
400151c8:	e3550001 	cmp	r5, #1
400151cc:	1a000010 	bne	40015214 <CyU3PDmaUpdateSocketSuspendOption+0x74>
400151d0:	e59d000c 	ldr	r0, [sp, #12]
400151d4:	e3100101 	tst	r0, #1073741824	; 0x40000000
400151d8:	1a00000a 	bne	40015208 <CyU3PDmaUpdateSocketSuspendOption+0x68>
400151dc:	e59d000c 	ldr	r0, [sp, #12]
400151e0:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400151e4:	e58d000c 	str	r0, [sp, #12]
400151e8:	e3a00000 	mov	r0, #0
400151ec:	e58d0010 	str	r0, [sp, #16]
400151f0:	e1a0100d 	mov	r1, sp
400151f4:	e1a00004 	mov	r0, r4
400151f8:	ebffffcb 	bl	4001512c <CyU3PDmaSocketUpdateStatus>
400151fc:	e1a0100d 	mov	r1, sp
40015200:	e1a00004 	mov	r0, r4
40015204:	ebfffee2 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40015208:	e3a00000 	mov	r0, #0
4001520c:	e58d0010 	str	r0, [sp, #16]
40015210:	ea000004 	b	40015228 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40015214:	e59d000c 	ldr	r0, [sp, #12]
40015218:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
4001521c:	e58d000c 	str	r0, [sp, #12]
40015220:	e3a00e12 	mov	r0, #288	; 0x120
40015224:	e58d0010 	str	r0, [sp, #16]
40015228:	e59d000c 	ldr	r0, [sp, #12]
4001522c:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40015230:	e58d000c 	str	r0, [sp, #12]
40015234:	e59d0014 	ldr	r0, [sp, #20]
40015238:	e3c00e12 	bic	r0, r0, #288	; 0x120
4001523c:	e58d0014 	str	r0, [sp, #20]
40015240:	e3560000 	cmp	r6, #0
40015244:	0a000006 	beq	40015264 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40015248:	e3560001 	cmp	r6, #1
4001524c:	0a000006 	beq	4001526c <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40015250:	e3560002 	cmp	r6, #2
40015254:	0a00000e 	beq	40015294 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40015258:	e3560003 	cmp	r6, #3
4001525c:	1a000020 	bne	400152e4 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40015260:	ea000015 	b	400152bc <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40015264:	e1a00000 	nop			; (mov r0, r0)
40015268:	ea00001f 	b	400152ec <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001526c:	e1a00000 	nop			; (mov r0, r0)
40015270:	e59d000c 	ldr	r0, [sp, #12]
40015274:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40015278:	e58d000c 	str	r0, [sp, #12]
4001527c:	e3550000 	cmp	r5, #0
40015280:	1a000002 	bne	40015290 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40015284:	e59d0014 	ldr	r0, [sp, #20]
40015288:	e3800020 	orr	r0, r0, #32
4001528c:	e58d0014 	str	r0, [sp, #20]
40015290:	ea000015 	b	400152ec <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015294:	e1a00000 	nop			; (mov r0, r0)
40015298:	e3550000 	cmp	r5, #0
4001529c:	1a000005 	bne	400152b8 <CyU3PDmaUpdateSocketSuspendOption+0x118>
400152a0:	e59d000c 	ldr	r0, [sp, #12]
400152a4:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400152a8:	e58d000c 	str	r0, [sp, #12]
400152ac:	e59d0014 	ldr	r0, [sp, #20]
400152b0:	e3800020 	orr	r0, r0, #32
400152b4:	e58d0014 	str	r0, [sp, #20]
400152b8:	ea00000b 	b	400152ec <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400152bc:	e1a00000 	nop			; (mov r0, r0)
400152c0:	e59d000c 	ldr	r0, [sp, #12]
400152c4:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
400152c8:	e58d000c 	str	r0, [sp, #12]
400152cc:	e3550000 	cmp	r5, #0
400152d0:	1a000002 	bne	400152e0 <CyU3PDmaUpdateSocketSuspendOption+0x140>
400152d4:	e59d0014 	ldr	r0, [sp, #20]
400152d8:	e3800c01 	orr	r0, r0, #256	; 0x100
400152dc:	e58d0014 	str	r0, [sp, #20]
400152e0:	ea000001 	b	400152ec <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400152e4:	e1a00000 	nop			; (mov r0, r0)
400152e8:	e1a00000 	nop			; (mov r0, r0)
400152ec:	e1a00000 	nop			; (mov r0, r0)
400152f0:	e1a0100d 	mov	r1, sp
400152f4:	e1a00004 	mov	r0, r4
400152f8:	ebffff8b 	bl	4001512c <CyU3PDmaSocketUpdateStatus>
400152fc:	e28dd018 	add	sp, sp, #24
40015300:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015304 <CyU3PDmaChannelAcquireLock>:
40015304:	e92d4070 	push	{r4, r5, r6, lr}
40015308:	e1a04000 	mov	r4, r0
4001530c:	e1a05001 	mov	r5, r1
40015310:	e3540000 	cmp	r4, #0
40015314:	1a000001 	bne	40015320 <CyU3PDmaChannelAcquireLock+0x1c>
40015318:	e3a00041 	mov	r0, #65	; 0x41
4001531c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015320:	e5940000 	ldr	r0, [r4]
40015324:	e3500000 	cmp	r0, #0
40015328:	1a000001 	bne	40015334 <CyU3PDmaChannelAcquireLock+0x30>
4001532c:	e3a00044 	mov	r0, #68	; 0x44
40015330:	eafffff9 	b	4001531c <CyU3PDmaChannelAcquireLock+0x18>
40015334:	e1a01005 	mov	r1, r5
40015338:	e284003c 	add	r0, r4, #60	; 0x3c
4001533c:	ebffd350 	bl	4000a084 <_txe_mutex_get>
40015340:	e3500000 	cmp	r0, #0
40015344:	0a000001 	beq	40015350 <CyU3PDmaChannelAcquireLock+0x4c>
40015348:	e3a0001d 	mov	r0, #29
4001534c:	eafffff2 	b	4001531c <CyU3PDmaChannelAcquireLock+0x18>
40015350:	e3a00000 	mov	r0, #0
40015354:	eafffff0 	b	4001531c <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015358 <CyU3PDmaChannelCacheControl>:
40015358:	e92d4070 	push	{r4, r5, r6, lr}
4001535c:	e1a04000 	mov	r4, r0
40015360:	e1a05001 	mov	r5, r1
40015364:	e3e01000 	mvn	r1, #0
40015368:	e1a00004 	mov	r0, r4
4001536c:	ebffffe4 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40015370:	e1a06000 	mov	r6, r0
40015374:	e3560000 	cmp	r6, #0
40015378:	0a000001 	beq	40015384 <CyU3PDmaChannelCacheControl+0x2c>
4001537c:	e1a00006 	mov	r0, r6
40015380:	e8bd8070 	pop	{r4, r5, r6, pc}
40015384:	e5940000 	ldr	r0, [r4]
40015388:	e3500001 	cmp	r0, #1
4001538c:	1a000001 	bne	40015398 <CyU3PDmaChannelCacheControl+0x40>
40015390:	e5845038 	str	r5, [r4, #56]	; 0x38
40015394:	ea000000 	b	4001539c <CyU3PDmaChannelCacheControl+0x44>
40015398:	e3a06047 	mov	r6, #71	; 0x47
4001539c:	e284003c 	add	r0, r4, #60	; 0x3c
400153a0:	ebffd36c 	bl	4000a158 <_txe_mutex_put>
400153a4:	e1a00006 	mov	r0, r6
400153a8:	eafffff4 	b	40015380 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

400153ac <CyU3PDmaChannelCommitBuffer>:
400153ac:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400153b0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400153b4:	e1a04000 	mov	r4, r0
400153b8:	e1a05001 	mov	r5, r1
400153bc:	e1a06002 	mov	r6, r2
400153c0:	e3e01000 	mvn	r1, #0
400153c4:	e1a00004 	mov	r0, r4
400153c8:	ebffffcd 	bl	40015304 <CyU3PDmaChannelAcquireLock>
400153cc:	e1a09000 	mov	r9, r0
400153d0:	e3590000 	cmp	r9, #0
400153d4:	0a000002 	beq	400153e4 <CyU3PDmaChannelCommitBuffer+0x38>
400153d8:	e1a00009 	mov	r0, r9
400153dc:	e28dd03c 	add	sp, sp, #60	; 0x3c
400153e0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400153e4:	e1d400b6 	ldrh	r0, [r4, #6]
400153e8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400153ec:	e0400001 	sub	r0, r0, r1
400153f0:	e1500005 	cmp	r0, r5
400153f4:	aa000000 	bge	400153fc <CyU3PDmaChannelCommitBuffer+0x50>
400153f8:	e3a09040 	mov	r9, #64	; 0x40
400153fc:	e5940000 	ldr	r0, [r4]
40015400:	e3500002 	cmp	r0, #2
40015404:	0a000000 	beq	4001540c <CyU3PDmaChannelCommitBuffer+0x60>
40015408:	e3a09042 	mov	r9, #66	; 0x42
4001540c:	e1d400b4 	ldrh	r0, [r4, #4]
40015410:	e3500003 	cmp	r0, #3
40015414:	1a000000 	bne	4001541c <CyU3PDmaChannelCommitBuffer+0x70>
40015418:	e3a09046 	mov	r9, #70	; 0x46
4001541c:	e3590000 	cmp	r9, #0
40015420:	0a000003 	beq	40015434 <CyU3PDmaChannelCommitBuffer+0x88>
40015424:	e284003c 	add	r0, r4, #60	; 0x3c
40015428:	ebffd34a 	bl	4000a158 <_txe_mutex_put>
4001542c:	e1a00009 	mov	r0, r9
40015430:	eaffffe9 	b	400153dc <CyU3PDmaChannelCommitBuffer+0x30>
40015434:	e1d400b4 	ldrh	r0, [r4, #4]
40015438:	e20070ff 	and	r7, r0, #255	; 0xff
4001543c:	e3570002 	cmp	r7, #2
40015440:	1a000037 	bne	40015524 <CyU3PDmaChannelCommitBuffer+0x178>
40015444:	e1d401b6 	ldrh	r0, [r4, #22]
40015448:	e28d1014 	add	r1, sp, #20
4001544c:	eb0034ad 	bl	40022708 <CyU3PDmaDscrGetConfig>
40015450:	e1d401b8 	ldrh	r0, [r4, #24]
40015454:	e28d1004 	add	r1, sp, #4
40015458:	eb0034aa 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001545c:	e59d0020 	ldr	r0, [sp, #32]
40015460:	e3100008 	tst	r0, #8
40015464:	1a000000 	bne	4001546c <CyU3PDmaChannelCommitBuffer+0xc0>
40015468:	e3a09047 	mov	r9, #71	; 0x47
4001546c:	e59d0010 	ldr	r0, [sp, #16]
40015470:	e3100008 	tst	r0, #8
40015474:	0a000000 	beq	4001547c <CyU3PDmaChannelCommitBuffer+0xd0>
40015478:	e3a09047 	mov	r9, #71	; 0x47
4001547c:	e3590000 	cmp	r9, #0
40015480:	1a000080 	bne	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015484:	e59d0010 	ldr	r0, [sp, #16]
40015488:	e59f1208 	ldr	r1, [pc, #520]	; 40015698 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001548c:	e0000001 	and	r0, r0, r1
40015490:	e58d0010 	str	r0, [sp, #16]
40015494:	e59d0010 	ldr	r0, [sp, #16]
40015498:	e1800805 	orr	r0, r0, r5, lsl #16
4001549c:	e58d0010 	str	r0, [sp, #16]
400154a0:	e3560000 	cmp	r6, #0
400154a4:	1a000005 	bne	400154c0 <CyU3PDmaChannelCommitBuffer+0x114>
400154a8:	e59d1020 	ldr	r1, [sp, #32]
400154ac:	e201100f 	and	r1, r1, #15
400154b0:	e59d0010 	ldr	r0, [sp, #16]
400154b4:	e1800001 	orr	r0, r0, r1
400154b8:	e58d0010 	str	r0, [sp, #16]
400154bc:	ea000004 	b	400154d4 <CyU3PDmaChannelCommitBuffer+0x128>
400154c0:	e206100e 	and	r1, r6, #14
400154c4:	e3811008 	orr	r1, r1, #8
400154c8:	e59d0010 	ldr	r0, [sp, #16]
400154cc:	e1800001 	orr	r0, r0, r1
400154d0:	e58d0010 	str	r0, [sp, #16]
400154d4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400154d8:	e3500000 	cmp	r0, #0
400154dc:	0a000004 	beq	400154f4 <CyU3PDmaChannelCommitBuffer+0x148>
400154e0:	e59d2010 	ldr	r2, [sp, #16]
400154e4:	e59f31ac 	ldr	r3, [pc, #428]	; 40015698 <CyU3PDmaChannelCommitBuffer+0x2ec>
400154e8:	e0021003 	and	r1, r2, r3
400154ec:	e59d0004 	ldr	r0, [sp, #4]
400154f0:	ebfff34a 	bl	40012220 <CyU3PSysCleanDRegion>
400154f4:	e1d401b8 	ldrh	r0, [r4, #24]
400154f8:	e28d1004 	add	r1, sp, #4
400154fc:	eb00349c 	bl	40022774 <CyU3PDmaDscrSetConfig>
40015500:	e1d411b8 	ldrh	r1, [r4, #24]
40015504:	e1d401b2 	ldrh	r0, [r4, #18]
40015508:	e3a02001 	mov	r2, #1
4001550c:	ebfffeb8 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
40015510:	e59d001c 	ldr	r0, [sp, #28]
40015514:	e1c401b6 	strh	r0, [r4, #22]
40015518:	e59d000c 	ldr	r0, [sp, #12]
4001551c:	e1c401b8 	strh	r0, [r4, #24]
40015520:	ea000058 	b	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015524:	e3570004 	cmp	r7, #4
40015528:	1a000027 	bne	400155cc <CyU3PDmaChannelCommitBuffer+0x220>
4001552c:	e1d401b8 	ldrh	r0, [r4, #24]
40015530:	e28d1004 	add	r1, sp, #4
40015534:	eb003473 	bl	40022708 <CyU3PDmaDscrGetConfig>
40015538:	e59d0010 	ldr	r0, [sp, #16]
4001553c:	e3100008 	tst	r0, #8
40015540:	0a000000 	beq	40015548 <CyU3PDmaChannelCommitBuffer+0x19c>
40015544:	e3a09047 	mov	r9, #71	; 0x47
40015548:	e3590000 	cmp	r9, #0
4001554c:	1a00004d 	bne	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015550:	e59d0010 	ldr	r0, [sp, #16]
40015554:	e1a00800 	lsl	r0, r0, #16
40015558:	e1a00820 	lsr	r0, r0, #16
4001555c:	e58d0010 	str	r0, [sp, #16]
40015560:	e3a01008 	mov	r1, #8
40015564:	e1811805 	orr	r1, r1, r5, lsl #16
40015568:	e59d0010 	ldr	r0, [sp, #16]
4001556c:	e1800001 	orr	r0, r0, r1
40015570:	e58d0010 	str	r0, [sp, #16]
40015574:	e206100e 	and	r1, r6, #14
40015578:	e59d0010 	ldr	r0, [sp, #16]
4001557c:	e1800001 	orr	r0, r0, r1
40015580:	e58d0010 	str	r0, [sp, #16]
40015584:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015588:	e3500000 	cmp	r0, #0
4001558c:	0a000004 	beq	400155a4 <CyU3PDmaChannelCommitBuffer+0x1f8>
40015590:	e59d2010 	ldr	r2, [sp, #16]
40015594:	e59f30fc 	ldr	r3, [pc, #252]	; 40015698 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015598:	e0021003 	and	r1, r2, r3
4001559c:	e59d0004 	ldr	r0, [sp, #4]
400155a0:	ebfff31e 	bl	40012220 <CyU3PSysCleanDRegion>
400155a4:	e1d401b8 	ldrh	r0, [r4, #24]
400155a8:	e28d1004 	add	r1, sp, #4
400155ac:	eb003470 	bl	40022774 <CyU3PDmaDscrSetConfig>
400155b0:	e1d411b8 	ldrh	r1, [r4, #24]
400155b4:	e1d401b2 	ldrh	r0, [r4, #18]
400155b8:	e3a02001 	mov	r2, #1
400155bc:	ebfffe8c 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
400155c0:	e59d000c 	ldr	r0, [sp, #12]
400155c4:	e1c401b8 	strh	r0, [r4, #24]
400155c8:	ea00002e 	b	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
400155cc:	e1d401b2 	ldrh	r0, [r4, #18]
400155d0:	e28d1024 	add	r1, sp, #36	; 0x24
400155d4:	ebfffdee 	bl	40014d94 <CyU3PDmaSocketGetConfig>
400155d8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400155dc:	e3100702 	tst	r0, #524288	; 0x80000
400155e0:	0a000027 	beq	40015684 <CyU3PDmaChannelCommitBuffer+0x2d8>
400155e4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400155e8:	e1a08800 	lsl	r8, r0, #16
400155ec:	e1a08828 	lsr	r8, r8, #16
400155f0:	e28d1004 	add	r1, sp, #4
400155f4:	e1a00008 	mov	r0, r8
400155f8:	eb003442 	bl	40022708 <CyU3PDmaDscrGetConfig>
400155fc:	e59d0010 	ldr	r0, [sp, #16]
40015600:	e3100008 	tst	r0, #8
40015604:	0a00001c 	beq	4001567c <CyU3PDmaChannelCommitBuffer+0x2d0>
40015608:	e59d0010 	ldr	r0, [sp, #16]
4001560c:	e1a00800 	lsl	r0, r0, #16
40015610:	e1a00820 	lsr	r0, r0, #16
40015614:	e58d0010 	str	r0, [sp, #16]
40015618:	e59d0010 	ldr	r0, [sp, #16]
4001561c:	e1800805 	orr	r0, r0, r5, lsl #16
40015620:	e58d0010 	str	r0, [sp, #16]
40015624:	e3560000 	cmp	r6, #0
40015628:	0a000007 	beq	4001564c <CyU3PDmaChannelCommitBuffer+0x2a0>
4001562c:	e59d0010 	ldr	r0, [sp, #16]
40015630:	e3c0000f 	bic	r0, r0, #15
40015634:	e58d0010 	str	r0, [sp, #16]
40015638:	e206100e 	and	r1, r6, #14
4001563c:	e3811008 	orr	r1, r1, #8
40015640:	e59d0010 	ldr	r0, [sp, #16]
40015644:	e1800001 	orr	r0, r0, r1
40015648:	e58d0010 	str	r0, [sp, #16]
4001564c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015650:	e3500000 	cmp	r0, #0
40015654:	0a000004 	beq	4001566c <CyU3PDmaChannelCommitBuffer+0x2c0>
40015658:	e59d2010 	ldr	r2, [sp, #16]
4001565c:	e59f3034 	ldr	r3, [pc, #52]	; 40015698 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015660:	e0021003 	and	r1, r2, r3
40015664:	e59d0004 	ldr	r0, [sp, #4]
40015668:	ebfff2ec 	bl	40012220 <CyU3PSysCleanDRegion>
4001566c:	e28d1004 	add	r1, sp, #4
40015670:	e1a00008 	mov	r0, r8
40015674:	eb00343e 	bl	40022774 <CyU3PDmaDscrSetConfig>
40015678:	ea000002 	b	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001567c:	e3a09047 	mov	r9, #71	; 0x47
40015680:	ea000000 	b	40015688 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015684:	e3a09047 	mov	r9, #71	; 0x47
40015688:	e284003c 	add	r0, r4, #60	; 0x3c
4001568c:	ebffd2b1 	bl	4000a158 <_txe_mutex_put>
40015690:	e1a00009 	mov	r0, r9
40015694:	eaffff50 	b	400153dc <CyU3PDmaChannelCommitBuffer+0x30>
40015698:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

4001569c <CyU3PDmaChannelConfigure_TypeAuto>:
4001569c:	e92d4070 	push	{r4, r5, r6, lr}
400156a0:	e1a05000 	mov	r5, r0
400156a4:	e1d501b2 	ldrh	r0, [r5, #18]
400156a8:	e3806901 	orr	r6, r0, #16384	; 0x4000
400156ac:	e1d501b0 	ldrh	r0, [r5, #16]
400156b0:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400156b4:	e1810800 	orr	r0, r1, r0, lsl #16
400156b8:	e1866000 	orr	r6, r6, r0
400156bc:	e1d500b4 	ldrh	r0, [r5, #4]
400156c0:	e3500001 	cmp	r0, #1
400156c4:	1a000000 	bne	400156cc <CyU3PDmaChannelConfigure_TypeAuto+0x30>
400156c8:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
400156cc:	e1d520b6 	ldrh	r2, [r5, #6]
400156d0:	e1d510b8 	ldrh	r1, [r5, #8]
400156d4:	e1a03006 	mov	r3, r6
400156d8:	e285000c 	add	r0, r5, #12
400156dc:	eb00331a 	bl	4002234c <CyU3PDmaDscrChainCreate>
400156e0:	e1a04000 	mov	r4, r0
400156e4:	e3540000 	cmp	r4, #0
400156e8:	0a000001 	beq	400156f4 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
400156ec:	e1a00004 	mov	r0, r4
400156f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400156f4:	e1d500bc 	ldrh	r0, [r5, #12]
400156f8:	e1c501b6 	strh	r0, [r5, #22]
400156fc:	e1c501ba 	strh	r0, [r5, #26]
40015700:	e1c501be 	strh	r0, [r5, #30]
40015704:	e1d500be 	ldrh	r0, [r5, #14]
40015708:	e1c501b8 	strh	r0, [r5, #24]
4001570c:	e1c501bc 	strh	r0, [r5, #28]
40015710:	e1c502b0 	strh	r0, [r5, #32]
40015714:	e2850014 	add	r0, r5, #20
40015718:	eb003382 	bl	40022528 <CyU3PDmaDscrGet>
4001571c:	e1a00005 	mov	r0, r5
40015720:	eb0006b7 	bl	40017204 <CyU3PDmaConfigureSockets_TypeAuto>
40015724:	e3a00000 	mov	r0, #0
40015728:	eafffff0 	b	400156f0 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

4001572c <CyU3PDmaChannelConfigure_TypeManual>:
4001572c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015730:	e24dd024 	sub	sp, sp, #36	; 0x24
40015734:	e1a04000 	mov	r4, r0
40015738:	e284700c 	add	r7, r4, #12
4001573c:	e3a06cff 	mov	r6, #65280	; 0xff00
40015740:	e1d401b0 	ldrh	r0, [r4, #16]
40015744:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015748:	e1810800 	orr	r0, r1, r0, lsl #16
4001574c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40015750:	e1866000 	orr	r6, r6, r0
40015754:	e1d400b4 	ldrh	r0, [r4, #4]
40015758:	e3500003 	cmp	r0, #3
4001575c:	1a000002 	bne	4001576c <CyU3PDmaChannelConfigure_TypeManual+0x40>
40015760:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015764:	e1c401b2 	strh	r0, [r4, #18]
40015768:	ea000009 	b	40015794 <CyU3PDmaChannelConfigure_TypeManual+0x68>
4001576c:	e1d400b4 	ldrh	r0, [r4, #4]
40015770:	e3500004 	cmp	r0, #4
40015774:	1a000006 	bne	40015794 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015778:	e59f020c 	ldr	r0, [pc, #524]	; 4001598c <CyU3PDmaChannelConfigure_TypeManual+0x260>
4001577c:	e1c401b0 	strh	r0, [r4, #16]
40015780:	e284700e 	add	r7, r4, #14
40015784:	e1d401b2 	ldrh	r0, [r4, #18]
40015788:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001578c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015790:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015794:	e1d400b8 	ldrh	r0, [r4, #8]
40015798:	e3500000 	cmp	r0, #0
4001579c:	0a00006b 	beq	40015950 <CyU3PDmaChannelConfigure_TypeManual+0x224>
400157a0:	e1d420b6 	ldrh	r2, [r4, #6]
400157a4:	e1d410b8 	ldrh	r1, [r4, #8]
400157a8:	e1a03006 	mov	r3, r6
400157ac:	e1a00007 	mov	r0, r7
400157b0:	eb0032e5 	bl	4002234c <CyU3PDmaDscrChainCreate>
400157b4:	e1a05000 	mov	r5, r0
400157b8:	e3550000 	cmp	r5, #0
400157bc:	0a000002 	beq	400157cc <CyU3PDmaChannelConfigure_TypeManual+0xa0>
400157c0:	e1a00005 	mov	r0, r5
400157c4:	e28dd024 	add	sp, sp, #36	; 0x24
400157c8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400157cc:	e1d400b4 	ldrh	r0, [r4, #4]
400157d0:	e3500002 	cmp	r0, #2
400157d4:	1a000012 	bne	40015824 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400157d8:	e1d401b2 	ldrh	r0, [r4, #18]
400157dc:	e3806903 	orr	r6, r0, #49152	; 0xc000
400157e0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400157e4:	e3866801 	orr	r6, r6, #65536	; 0x10000
400157e8:	e1d410b8 	ldrh	r1, [r4, #8]
400157ec:	e1a03006 	mov	r3, r6
400157f0:	e3a02000 	mov	r2, #0
400157f4:	e284000e 	add	r0, r4, #14
400157f8:	eb0032d3 	bl	4002234c <CyU3PDmaDscrChainCreate>
400157fc:	e1a05000 	mov	r5, r0
40015800:	e3550000 	cmp	r5, #0
40015804:	0a000006 	beq	40015824 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015808:	e1d410b8 	ldrh	r1, [r4, #8]
4001580c:	e1d700b0 	ldrh	r0, [r7]
40015810:	e3a03001 	mov	r3, #1
40015814:	e1a02003 	mov	r2, r3
40015818:	eb00331f 	bl	4002249c <CyU3PDmaDscrChainDestroy>
4001581c:	e1a00005 	mov	r0, r5
40015820:	eaffffe7 	b	400157c4 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015824:	e1d400bc 	ldrh	r0, [r4, #12]
40015828:	e1c401b6 	strh	r0, [r4, #22]
4001582c:	e1c401ba 	strh	r0, [r4, #26]
40015830:	e1c401be 	strh	r0, [r4, #30]
40015834:	e1d400be 	ldrh	r0, [r4, #14]
40015838:	e1c401b8 	strh	r0, [r4, #24]
4001583c:	e1c401bc 	strh	r0, [r4, #28]
40015840:	e1c402b0 	strh	r0, [r4, #32]
40015844:	e3a08000 	mov	r8, #0
40015848:	e1d790b0 	ldrh	r9, [r7]
4001584c:	ea00003b 	b	40015940 <CyU3PDmaChannelConfigure_TypeManual+0x214>
40015850:	e28d1014 	add	r1, sp, #20
40015854:	e1a00009 	mov	r0, r9
40015858:	eb0033aa 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001585c:	e1d400b4 	ldrh	r0, [r4, #4]
40015860:	e3500004 	cmp	r0, #4
40015864:	1a00000b 	bne	40015898 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015868:	e59d0014 	ldr	r0, [sp, #20]
4001586c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015870:	e0800001 	add	r0, r0, r1
40015874:	e58d0014 	str	r0, [sp, #20]
40015878:	e1d400b6 	ldrh	r0, [r4, #6]
4001587c:	e280000f 	add	r0, r0, #15
40015880:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015884:	e0400001 	sub	r0, r0, r1
40015888:	e59f1100 	ldr	r1, [pc, #256]	; 40015990 <CyU3PDmaChannelConfigure_TypeManual+0x264>
4001588c:	e0000001 	and	r0, r0, r1
40015890:	e58d0020 	str	r0, [sp, #32]
40015894:	ea000021 	b	40015920 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015898:	e1d400b4 	ldrh	r0, [r4, #4]
4001589c:	e3500002 	cmp	r0, #2
400158a0:	1a000012 	bne	400158f0 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
400158a4:	e1d401b8 	ldrh	r0, [r4, #24]
400158a8:	e28d1004 	add	r1, sp, #4
400158ac:	eb003395 	bl	40022708 <CyU3PDmaDscrGetConfig>
400158b0:	e59d0014 	ldr	r0, [sp, #20]
400158b4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400158b8:	e0800001 	add	r0, r0, r1
400158bc:	e58d0004 	str	r0, [sp, #4]
400158c0:	e1d400b6 	ldrh	r0, [r4, #6]
400158c4:	e280000f 	add	r0, r0, #15
400158c8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400158cc:	e0400001 	sub	r0, r0, r1
400158d0:	e59f10b8 	ldr	r1, [pc, #184]	; 40015990 <CyU3PDmaChannelConfigure_TypeManual+0x264>
400158d4:	e0000001 	and	r0, r0, r1
400158d8:	e58d0010 	str	r0, [sp, #16]
400158dc:	e1d401b8 	ldrh	r0, [r4, #24]
400158e0:	e28d1004 	add	r1, sp, #4
400158e4:	eb0033a2 	bl	40022774 <CyU3PDmaDscrSetConfig>
400158e8:	e59d000c 	ldr	r0, [sp, #12]
400158ec:	e1c401b8 	strh	r0, [r4, #24]
400158f0:	e59d0014 	ldr	r0, [sp, #20]
400158f4:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
400158f8:	e0800001 	add	r0, r0, r1
400158fc:	e58d0014 	str	r0, [sp, #20]
40015900:	e1d400b6 	ldrh	r0, [r4, #6]
40015904:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015908:	e0400001 	sub	r0, r0, r1
4001590c:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015910:	e0400001 	sub	r0, r0, r1
40015914:	e59f1074 	ldr	r1, [pc, #116]	; 40015990 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015918:	e0000001 	and	r0, r0, r1
4001591c:	e58d0020 	str	r0, [sp, #32]
40015920:	e28d1014 	add	r1, sp, #20
40015924:	e1a00009 	mov	r0, r9
40015928:	eb003391 	bl	40022774 <CyU3PDmaDscrSetConfig>
4001592c:	e59d001c 	ldr	r0, [sp, #28]
40015930:	e1a09800 	lsl	r9, r0, #16
40015934:	e1a09829 	lsr	r9, r9, #16
40015938:	e2880001 	add	r0, r8, #1
4001593c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015940:	e1d400b8 	ldrh	r0, [r4, #8]
40015944:	e1500008 	cmp	r0, r8
40015948:	caffffc0 	bgt	40015850 <CyU3PDmaChannelConfigure_TypeManual+0x124>
4001594c:	ea000008 	b	40015974 <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015950:	e59f003c 	ldr	r0, [pc, #60]	; 40015994 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015954:	e1c400bc 	strh	r0, [r4, #12]
40015958:	e1c401b6 	strh	r0, [r4, #22]
4001595c:	e1c401ba 	strh	r0, [r4, #26]
40015960:	e1c401be 	strh	r0, [r4, #30]
40015964:	e1c400be 	strh	r0, [r4, #14]
40015968:	e1c401b8 	strh	r0, [r4, #24]
4001596c:	e1c401bc 	strh	r0, [r4, #28]
40015970:	e1c402b0 	strh	r0, [r4, #32]
40015974:	e2840014 	add	r0, r4, #20
40015978:	eb0032ea 	bl	40022528 <CyU3PDmaDscrGet>
4001597c:	e1a00004 	mov	r0, r4
40015980:	eb00065f 	bl	40017304 <CyU3PDmaConfigureSockets_TypeManual>
40015984:	e3a00000 	mov	r0, #0
40015988:	eaffff8d 	b	400157c4 <CyU3PDmaChannelConfigure_TypeManual+0x98>
4001598c:	00003f01 	.word	0x00003f01
40015990:	0000fff0 	.word	0x0000fff0
40015994:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015998 <CyU3PDmaChannelCreate>:
40015998:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001599c:	e1a04000 	mov	r4, r0
400159a0:	e1a05001 	mov	r5, r1
400159a4:	e1a06002 	mov	r6, r2
400159a8:	e3560000 	cmp	r6, #0
400159ac:	1a000001 	bne	400159b8 <CyU3PDmaChannelCreate+0x20>
400159b0:	e3a00041 	mov	r0, #65	; 0x41
400159b4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400159b8:	e3540000 	cmp	r4, #0
400159bc:	1a000001 	bne	400159c8 <CyU3PDmaChannelCreate+0x30>
400159c0:	e3a00041 	mov	r0, #65	; 0x41
400159c4:	eafffffa 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
400159c8:	eb00330e 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
400159cc:	e1d610b2 	ldrh	r1, [r6, #2]
400159d0:	e2811001 	add	r1, r1, #1
400159d4:	e1500001 	cmp	r0, r1
400159d8:	da000007 	ble	400159fc <CyU3PDmaChannelCreate+0x64>
400159dc:	e3550002 	cmp	r5, #2
400159e0:	1a000007 	bne	40015a04 <CyU3PDmaChannelCreate+0x6c>
400159e4:	eb003307 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
400159e8:	e1d610b2 	ldrh	r1, [r6, #2]
400159ec:	e3a02001 	mov	r2, #1
400159f0:	e0821101 	add	r1, r2, r1, lsl #2
400159f4:	e1500001 	cmp	r0, r1
400159f8:	ca000001 	bgt	40015a04 <CyU3PDmaChannelCreate+0x6c>
400159fc:	e3a00010 	mov	r0, #16
40015a00:	eaffffeb 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a04:	e1d600b0 	ldrh	r0, [r6]
40015a08:	e3500000 	cmp	r0, #0
40015a0c:	0a000003 	beq	40015a20 <CyU3PDmaChannelCreate+0x88>
40015a10:	e1d600b0 	ldrh	r0, [r6]
40015a14:	e59f1354 	ldr	r1, [pc, #852]	; 40015d70 <CyU3PDmaChannelCreate+0x3d8>
40015a18:	e1500001 	cmp	r0, r1
40015a1c:	da000001 	ble	40015a28 <CyU3PDmaChannelCreate+0x90>
40015a20:	e3a00040 	mov	r0, #64	; 0x40
40015a24:	eaffffe2 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a28:	e3550000 	cmp	r5, #0
40015a2c:	0a000001 	beq	40015a38 <CyU3PDmaChannelCreate+0xa0>
40015a30:	e3550001 	cmp	r5, #1
40015a34:	1a000009 	bne	40015a60 <CyU3PDmaChannelCreate+0xc8>
40015a38:	e1d600b0 	ldrh	r0, [r6]
40015a3c:	e310000f 	tst	r0, #15
40015a40:	0a000001 	beq	40015a4c <CyU3PDmaChannelCreate+0xb4>
40015a44:	e3a00040 	mov	r0, #64	; 0x40
40015a48:	eaffffd9 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a4c:	e1d600b2 	ldrh	r0, [r6, #2]
40015a50:	e3500000 	cmp	r0, #0
40015a54:	1a00000b 	bne	40015a88 <CyU3PDmaChannelCreate+0xf0>
40015a58:	e3a00040 	mov	r0, #64	; 0x40
40015a5c:	eaffffd4 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a60:	e1d600b0 	ldrh	r0, [r6]
40015a64:	e1d610ba 	ldrh	r1, [r6, #10]
40015a68:	e0400001 	sub	r0, r0, r1
40015a6c:	e1d610bc 	ldrh	r1, [r6, #12]
40015a70:	e0400001 	sub	r0, r0, r1
40015a74:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015a78:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015a7c:	0a000001 	beq	40015a88 <CyU3PDmaChannelCreate+0xf0>
40015a80:	e3a00040 	mov	r0, #64	; 0x40
40015a84:	eaffffca 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a88:	e5d60010 	ldrb	r0, [r6, #16]
40015a8c:	e3500002 	cmp	r0, #2
40015a90:	ba000001 	blt	40015a9c <CyU3PDmaChannelCreate+0x104>
40015a94:	e3a00040 	mov	r0, #64	; 0x40
40015a98:	eaffffc5 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015a9c:	e3550004 	cmp	r5, #4
40015aa0:	0a000011 	beq	40015aec <CyU3PDmaChannelCreate+0x154>
40015aa4:	e1d600b4 	ldrh	r0, [r6, #4]
40015aa8:	e3a0103f 	mov	r1, #63	; 0x3f
40015aac:	e0018440 	and	r8, r1, r0, asr #8
40015ab0:	e1d600b4 	ldrh	r0, [r6, #4]
40015ab4:	e20090ff 	and	r9, r0, #255	; 0xff
40015ab8:	e1d600b4 	ldrh	r0, [r6, #4]
40015abc:	ebfffd14 	bl	40014f14 <CyU3PDmaSocketIsValidProducer>
40015ac0:	e3500000 	cmp	r0, #0
40015ac4:	1a000001 	bne	40015ad0 <CyU3PDmaChannelCreate+0x138>
40015ac8:	e3a00040 	mov	r0, #64	; 0x40
40015acc:	eaffffb8 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015ad0:	e59f029c 	ldr	r0, [pc, #668]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015ad4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015ad8:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015adc:	e3500000 	cmp	r0, #0
40015ae0:	0a000007 	beq	40015b04 <CyU3PDmaChannelCreate+0x16c>
40015ae4:	e3a00040 	mov	r0, #64	; 0x40
40015ae8:	eaffffb1 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015aec:	e1d600b4 	ldrh	r0, [r6, #4]
40015af0:	e59f1280 	ldr	r1, [pc, #640]	; 40015d78 <CyU3PDmaChannelCreate+0x3e0>
40015af4:	e1500001 	cmp	r0, r1
40015af8:	0a000001 	beq	40015b04 <CyU3PDmaChannelCreate+0x16c>
40015afc:	e3a00040 	mov	r0, #64	; 0x40
40015b00:	eaffffab 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015b04:	e3550003 	cmp	r5, #3
40015b08:	0a000011 	beq	40015b54 <CyU3PDmaChannelCreate+0x1bc>
40015b0c:	e1d600b6 	ldrh	r0, [r6, #6]
40015b10:	e3a0103f 	mov	r1, #63	; 0x3f
40015b14:	e0018440 	and	r8, r1, r0, asr #8
40015b18:	e1d600b6 	ldrh	r0, [r6, #6]
40015b1c:	e20090ff 	and	r9, r0, #255	; 0xff
40015b20:	e1d600b6 	ldrh	r0, [r6, #6]
40015b24:	ebfffcc2 	bl	40014e34 <CyU3PDmaSocketIsValidConsumer>
40015b28:	e3500000 	cmp	r0, #0
40015b2c:	1a000001 	bne	40015b38 <CyU3PDmaChannelCreate+0x1a0>
40015b30:	e3a00040 	mov	r0, #64	; 0x40
40015b34:	eaffff9e 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015b38:	e59f0234 	ldr	r0, [pc, #564]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015b3c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015b40:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015b44:	e3500000 	cmp	r0, #0
40015b48:	0a000006 	beq	40015b68 <CyU3PDmaChannelCreate+0x1d0>
40015b4c:	e3a00040 	mov	r0, #64	; 0x40
40015b50:	eaffff97 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015b54:	e1d600b6 	ldrh	r0, [r6, #6]
40015b58:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015b5c:	0a000001 	beq	40015b68 <CyU3PDmaChannelCreate+0x1d0>
40015b60:	e3a00040 	mov	r0, #64	; 0x40
40015b64:	eaffff92 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015b68:	e1d600b8 	ldrh	r0, [r6, #8]
40015b6c:	e3500000 	cmp	r0, #0
40015b70:	0a000008 	beq	40015b98 <CyU3PDmaChannelCreate+0x200>
40015b74:	e1d600b8 	ldrh	r0, [r6, #8]
40015b78:	e1d610b2 	ldrh	r1, [r6, #2]
40015b7c:	e1500001 	cmp	r0, r1
40015b80:	aa000002 	bge	40015b90 <CyU3PDmaChannelCreate+0x1f8>
40015b84:	e1d600b2 	ldrh	r0, [r6, #2]
40015b88:	e350001f 	cmp	r0, #31
40015b8c:	da000001 	ble	40015b98 <CyU3PDmaChannelCreate+0x200>
40015b90:	e3a00040 	mov	r0, #64	; 0x40
40015b94:	eaffff86 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015b98:	e3550004 	cmp	r5, #4
40015b9c:	0a000007 	beq	40015bc0 <CyU3PDmaChannelCreate+0x228>
40015ba0:	e1d600b4 	ldrh	r0, [r6, #4]
40015ba4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ba8:	e0018440 	and	r8, r1, r0, asr #8
40015bac:	e1d600b4 	ldrh	r0, [r6, #4]
40015bb0:	e20090ff 	and	r9, r0, #255	; 0xff
40015bb4:	e59f01b8 	ldr	r0, [pc, #440]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015bb8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015bbc:	e7804109 	str	r4, [r0, r9, lsl #2]
40015bc0:	e3550003 	cmp	r5, #3
40015bc4:	0a000007 	beq	40015be8 <CyU3PDmaChannelCreate+0x250>
40015bc8:	e1d600b6 	ldrh	r0, [r6, #6]
40015bcc:	e3a0103f 	mov	r1, #63	; 0x3f
40015bd0:	e0018440 	and	r8, r1, r0, asr #8
40015bd4:	e1d600b6 	ldrh	r0, [r6, #6]
40015bd8:	e20090ff 	and	r9, r0, #255	; 0xff
40015bdc:	e59f0190 	ldr	r0, [pc, #400]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015be0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015be4:	e7804109 	str	r4, [r0, r9, lsl #2]
40015be8:	e1c450b4 	strh	r5, [r4, #4]
40015bec:	e1d600b0 	ldrh	r0, [r6]
40015bf0:	e1c400b6 	strh	r0, [r4, #6]
40015bf4:	e1d600b2 	ldrh	r0, [r6, #2]
40015bf8:	e1c400b8 	strh	r0, [r4, #8]
40015bfc:	e1d600b8 	ldrh	r0, [r6, #8]
40015c00:	e1c400ba 	strh	r0, [r4, #10]
40015c04:	e1d600b4 	ldrh	r0, [r6, #4]
40015c08:	e1c401b0 	strh	r0, [r4, #16]
40015c0c:	e1d600b6 	ldrh	r0, [r6, #6]
40015c10:	e1c401b2 	strh	r0, [r4, #18]
40015c14:	e1d600ba 	ldrh	r0, [r6, #10]
40015c18:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015c1c:	e1d600bc 	ldrh	r0, [r6, #12]
40015c20:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015c24:	e1d600be 	ldrh	r0, [r6, #14]
40015c28:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015c2c:	e5d60010 	ldrb	r0, [r6, #16]
40015c30:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015c34:	e5960014 	ldr	r0, [r6, #20]
40015c38:	e5840030 	str	r0, [r4, #48]	; 0x30
40015c3c:	e3a00000 	mov	r0, #0
40015c40:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015c44:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015c48:	e3a03038 	mov	r3, #56	; 0x38
40015c4c:	e3a02000 	mov	r2, #0
40015c50:	e1a01002 	mov	r1, r2
40015c54:	e284003c 	add	r0, r4, #60	; 0x3c
40015c58:	ebffd08b 	bl	40009e8c <_txe_mutex_create>
40015c5c:	e3a02028 	mov	r2, #40	; 0x28
40015c60:	e3a01000 	mov	r1, #0
40015c64:	e2840074 	add	r0, r4, #116	; 0x74
40015c68:	ebffcfcd 	bl	40009ba4 <_txe_event_flags_create>
40015c6c:	e5960018 	ldr	r0, [r6, #24]
40015c70:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015c74:	e59f0100 	ldr	r0, [pc, #256]	; 40015d7c <CyU3PDmaChannelCreate+0x3e4>
40015c78:	e5900000 	ldr	r0, [r0]
40015c7c:	e5840038 	str	r0, [r4, #56]	; 0x38
40015c80:	e3550005 	cmp	r5, #5
40015c84:	308ff105 	addcc	pc, pc, r5, lsl #2
40015c88:	ea000011 	b	40015cd4 <CyU3PDmaChannelCreate+0x33c>
40015c8c:	ea000003 	b	40015ca0 <CyU3PDmaChannelCreate+0x308>
40015c90:	ea000004 	b	40015ca8 <CyU3PDmaChannelCreate+0x310>
40015c94:	ea00000a 	b	40015cc4 <CyU3PDmaChannelCreate+0x32c>
40015c98:	ea000006 	b	40015cb8 <CyU3PDmaChannelCreate+0x320>
40015c9c:	ea000007 	b	40015cc0 <CyU3PDmaChannelCreate+0x328>
40015ca0:	e1a00000 	nop			; (mov r0, r0)
40015ca4:	e1a00000 	nop			; (mov r0, r0)
40015ca8:	e1a00004 	mov	r0, r4
40015cac:	ebfffe7a 	bl	4001569c <CyU3PDmaChannelConfigure_TypeAuto>
40015cb0:	e1a07000 	mov	r7, r0
40015cb4:	ea000009 	b	40015ce0 <CyU3PDmaChannelCreate+0x348>
40015cb8:	e1a00000 	nop			; (mov r0, r0)
40015cbc:	e1a00000 	nop			; (mov r0, r0)
40015cc0:	e1a00000 	nop			; (mov r0, r0)
40015cc4:	e1a00004 	mov	r0, r4
40015cc8:	ebfffe97 	bl	4001572c <CyU3PDmaChannelConfigure_TypeManual>
40015ccc:	e1a07000 	mov	r7, r0
40015cd0:	ea000002 	b	40015ce0 <CyU3PDmaChannelCreate+0x348>
40015cd4:	e1a00000 	nop			; (mov r0, r0)
40015cd8:	e3a07040 	mov	r7, #64	; 0x40
40015cdc:	e1a00000 	nop			; (mov r0, r0)
40015ce0:	e1a00000 	nop			; (mov r0, r0)
40015ce4:	e3570000 	cmp	r7, #0
40015ce8:	1a000002 	bne	40015cf8 <CyU3PDmaChannelCreate+0x360>
40015cec:	e3a00001 	mov	r0, #1
40015cf0:	e5840000 	str	r0, [r4]
40015cf4:	ea00001b 	b	40015d68 <CyU3PDmaChannelCreate+0x3d0>
40015cf8:	e284003c 	add	r0, r4, #60	; 0x3c
40015cfc:	ebffd0c0 	bl	4000a004 <_txe_mutex_delete>
40015d00:	e2840074 	add	r0, r4, #116	; 0x74
40015d04:	ebffcff6 	bl	40009ce4 <_txe_event_flags_delete>
40015d08:	e3550004 	cmp	r5, #4
40015d0c:	0a000008 	beq	40015d34 <CyU3PDmaChannelCreate+0x39c>
40015d10:	e1d600b4 	ldrh	r0, [r6, #4]
40015d14:	e3a0103f 	mov	r1, #63	; 0x3f
40015d18:	e0018440 	and	r8, r1, r0, asr #8
40015d1c:	e1d600b4 	ldrh	r0, [r6, #4]
40015d20:	e20090ff 	and	r9, r0, #255	; 0xff
40015d24:	e3a00000 	mov	r0, #0
40015d28:	e59f1044 	ldr	r1, [pc, #68]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015d2c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015d30:	e7810109 	str	r0, [r1, r9, lsl #2]
40015d34:	e3550003 	cmp	r5, #3
40015d38:	0a000008 	beq	40015d60 <CyU3PDmaChannelCreate+0x3c8>
40015d3c:	e1d600b6 	ldrh	r0, [r6, #6]
40015d40:	e3a0103f 	mov	r1, #63	; 0x3f
40015d44:	e0018440 	and	r8, r1, r0, asr #8
40015d48:	e1d600b6 	ldrh	r0, [r6, #6]
40015d4c:	e20090ff 	and	r9, r0, #255	; 0xff
40015d50:	e3a00000 	mov	r0, #0
40015d54:	e59f1018 	ldr	r1, [pc, #24]	; 40015d74 <CyU3PDmaChannelCreate+0x3dc>
40015d58:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015d5c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015d60:	e3a00000 	mov	r0, #0
40015d64:	e5840000 	str	r0, [r4]
40015d68:	e1a00007 	mov	r0, r7
40015d6c:	eaffff10 	b	400159b4 <CyU3PDmaChannelCreate+0x1c>
40015d70:	0000fff0 	.word	0x0000fff0
40015d74:	4003118c 	.word	0x4003118c
40015d78:	00003f01 	.word	0x00003f01
40015d7c:	400310f0 	.word	0x400310f0

Disassembly of section i.CyU3PDmaChannelDestroy:

40015d80 <CyU3PDmaChannelDestroy>:
40015d80:	e92d4070 	push	{r4, r5, r6, lr}
40015d84:	e1a04000 	mov	r4, r0
40015d88:	e3e01000 	mvn	r1, #0
40015d8c:	e1a00004 	mov	r0, r4
40015d90:	ebfffd5b 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40015d94:	e1a05000 	mov	r5, r0
40015d98:	e3550000 	cmp	r5, #0
40015d9c:	0a000001 	beq	40015da8 <CyU3PDmaChannelDestroy+0x28>
40015da0:	e1a00005 	mov	r0, r5
40015da4:	e8bd8070 	pop	{r4, r5, r6, pc}
40015da8:	e1d400b4 	ldrh	r0, [r4, #4]
40015dac:	e3500005 	cmp	r0, #5
40015db0:	308ff100 	addcc	pc, pc, r0, lsl #2
40015db4:	ea00000f 	b	40015df8 <CyU3PDmaChannelDestroy+0x78>
40015db8:	ea000003 	b	40015dcc <CyU3PDmaChannelDestroy+0x4c>
40015dbc:	ea000004 	b	40015dd4 <CyU3PDmaChannelDestroy+0x54>
40015dc0:	ea000009 	b	40015dec <CyU3PDmaChannelDestroy+0x6c>
40015dc4:	ea000005 	b	40015de0 <CyU3PDmaChannelDestroy+0x60>
40015dc8:	ea000006 	b	40015de8 <CyU3PDmaChannelDestroy+0x68>
40015dcc:	e1a00000 	nop			; (mov r0, r0)
40015dd0:	e1a00000 	nop			; (mov r0, r0)
40015dd4:	e1a00004 	mov	r0, r4
40015dd8:	eb000014 	bl	40015e30 <CyU3PDmaChannelDestroy_TypeAuto>
40015ddc:	ea00000a 	b	40015e0c <CyU3PDmaChannelDestroy+0x8c>
40015de0:	e1a00000 	nop			; (mov r0, r0)
40015de4:	e1a00000 	nop			; (mov r0, r0)
40015de8:	e1a00000 	nop			; (mov r0, r0)
40015dec:	e1a00004 	mov	r0, r4
40015df0:	eb000043 	bl	40015f04 <CyU3PDmaChannelDestroy_TypeManual>
40015df4:	ea000004 	b	40015e0c <CyU3PDmaChannelDestroy+0x8c>
40015df8:	e1a00000 	nop			; (mov r0, r0)
40015dfc:	e284003c 	add	r0, r4, #60	; 0x3c
40015e00:	ebffd0d4 	bl	4000a158 <_txe_mutex_put>
40015e04:	e3a00040 	mov	r0, #64	; 0x40
40015e08:	eaffffe5 	b	40015da4 <CyU3PDmaChannelDestroy+0x24>
40015e0c:	e1a00000 	nop			; (mov r0, r0)
40015e10:	e3a00000 	mov	r0, #0
40015e14:	e5840000 	str	r0, [r4]
40015e18:	e284003c 	add	r0, r4, #60	; 0x3c
40015e1c:	ebffd078 	bl	4000a004 <_txe_mutex_delete>
40015e20:	e2840074 	add	r0, r4, #116	; 0x74
40015e24:	ebffcfae 	bl	40009ce4 <_txe_event_flags_delete>
40015e28:	e3a00000 	mov	r0, #0
40015e2c:	eaffffdc 	b	40015da4 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015e30 <CyU3PDmaChannelDestroy_TypeAuto>:
40015e30:	e92d4070 	push	{r4, r5, r6, lr}
40015e34:	e24dd018 	sub	sp, sp, #24
40015e38:	e1a04000 	mov	r4, r0
40015e3c:	e1d401b0 	ldrh	r0, [r4, #16]
40015e40:	ebfffbbb 	bl	40014d34 <CyU3PDmaSocketDisable>
40015e44:	e1d401b2 	ldrh	r0, [r4, #18]
40015e48:	ebfffbb9 	bl	40014d34 <CyU3PDmaSocketDisable>
40015e4c:	e1d401b0 	ldrh	r0, [r4, #16]
40015e50:	e1a0100d 	mov	r1, sp
40015e54:	ebfffbce 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40015e58:	e59f009c 	ldr	r0, [pc, #156]	; 40015efc <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015e5c:	e58d0000 	str	r0, [sp]
40015e60:	e1d401b0 	ldrh	r0, [r4, #16]
40015e64:	e1a0100d 	mov	r1, sp
40015e68:	ebfffc73 	bl	4001503c <CyU3PDmaSocketSetConfig>
40015e6c:	e1d401b0 	ldrh	r0, [r4, #16]
40015e70:	e20050ff 	and	r5, r0, #255	; 0xff
40015e74:	e1d401b0 	ldrh	r0, [r4, #16]
40015e78:	e3a0103f 	mov	r1, #63	; 0x3f
40015e7c:	e0016440 	and	r6, r1, r0, asr #8
40015e80:	e3a00000 	mov	r0, #0
40015e84:	e59f1074 	ldr	r1, [pc, #116]	; 40015f00 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015e88:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015e8c:	e7810105 	str	r0, [r1, r5, lsl #2]
40015e90:	e1d401b2 	ldrh	r0, [r4, #18]
40015e94:	e1a0100d 	mov	r1, sp
40015e98:	ebfffbbd 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40015e9c:	e59f0058 	ldr	r0, [pc, #88]	; 40015efc <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015ea0:	e58d0000 	str	r0, [sp]
40015ea4:	e1d401b2 	ldrh	r0, [r4, #18]
40015ea8:	e1a0100d 	mov	r1, sp
40015eac:	ebfffc62 	bl	4001503c <CyU3PDmaSocketSetConfig>
40015eb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015eb4:	e20050ff 	and	r5, r0, #255	; 0xff
40015eb8:	e1d401b2 	ldrh	r0, [r4, #18]
40015ebc:	e3a0103f 	mov	r1, #63	; 0x3f
40015ec0:	e0016440 	and	r6, r1, r0, asr #8
40015ec4:	e3a00000 	mov	r0, #0
40015ec8:	e59f1030 	ldr	r1, [pc, #48]	; 40015f00 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015ecc:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015ed0:	e7810105 	str	r0, [r1, r5, lsl #2]
40015ed4:	e1d410b8 	ldrh	r1, [r4, #8]
40015ed8:	e1d400bc 	ldrh	r0, [r4, #12]
40015edc:	e3a03001 	mov	r3, #1
40015ee0:	e1a02003 	mov	r2, r3
40015ee4:	eb00316c 	bl	4002249c <CyU3PDmaDscrChainDestroy>
40015ee8:	e1d401b4 	ldrh	r0, [r4, #20]
40015eec:	eb0031de 	bl	4002266c <CyU3PDmaDscrPut>
40015ef0:	e3a00000 	mov	r0, #0
40015ef4:	e28dd018 	add	sp, sp, #24
40015ef8:	e8bd8070 	pop	{r4, r5, r6, pc}
40015efc:	0000ffff 	.word	0x0000ffff
40015f00:	4003118c 	.word	0x4003118c

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015f04 <CyU3PDmaChannelDestroy_TypeManual>:
40015f04:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015f08:	e24dd028 	sub	sp, sp, #40	; 0x28
40015f0c:	e1a04000 	mov	r4, r0
40015f10:	e1d400b4 	ldrh	r0, [r4, #4]
40015f14:	e3500004 	cmp	r0, #4
40015f18:	0a000012 	beq	40015f68 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015f1c:	e1d401b0 	ldrh	r0, [r4, #16]
40015f20:	ebfffb83 	bl	40014d34 <CyU3PDmaSocketDisable>
40015f24:	e1d401b0 	ldrh	r0, [r4, #16]
40015f28:	e1a0100d 	mov	r1, sp
40015f2c:	ebfffb98 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40015f30:	e59f0178 	ldr	r0, [pc, #376]	; 400160b0 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015f34:	e58d0000 	str	r0, [sp]
40015f38:	e1d401b0 	ldrh	r0, [r4, #16]
40015f3c:	e1a0100d 	mov	r1, sp
40015f40:	ebfffc3d 	bl	4001503c <CyU3PDmaSocketSetConfig>
40015f44:	e1d401b0 	ldrh	r0, [r4, #16]
40015f48:	e20070ff 	and	r7, r0, #255	; 0xff
40015f4c:	e1d401b0 	ldrh	r0, [r4, #16]
40015f50:	e3a0103f 	mov	r1, #63	; 0x3f
40015f54:	e0018440 	and	r8, r1, r0, asr #8
40015f58:	e3a00000 	mov	r0, #0
40015f5c:	e59f1150 	ldr	r1, [pc, #336]	; 400160b4 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015f60:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015f64:	e7810107 	str	r0, [r1, r7, lsl #2]
40015f68:	e1d400b4 	ldrh	r0, [r4, #4]
40015f6c:	e3500003 	cmp	r0, #3
40015f70:	0a000012 	beq	40015fc0 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015f74:	e1d401b2 	ldrh	r0, [r4, #18]
40015f78:	ebfffb6d 	bl	40014d34 <CyU3PDmaSocketDisable>
40015f7c:	e1d401b2 	ldrh	r0, [r4, #18]
40015f80:	e1a0100d 	mov	r1, sp
40015f84:	ebfffb82 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40015f88:	e59f0120 	ldr	r0, [pc, #288]	; 400160b0 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015f8c:	e58d0000 	str	r0, [sp]
40015f90:	e1d401b2 	ldrh	r0, [r4, #18]
40015f94:	e1a0100d 	mov	r1, sp
40015f98:	ebfffc27 	bl	4001503c <CyU3PDmaSocketSetConfig>
40015f9c:	e1d401b2 	ldrh	r0, [r4, #18]
40015fa0:	e20070ff 	and	r7, r0, #255	; 0xff
40015fa4:	e1d401b2 	ldrh	r0, [r4, #18]
40015fa8:	e3a0103f 	mov	r1, #63	; 0x3f
40015fac:	e0018440 	and	r8, r1, r0, asr #8
40015fb0:	e3a00000 	mov	r0, #0
40015fb4:	e59f10f8 	ldr	r1, [pc, #248]	; 400160b4 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015fb8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015fbc:	e7810107 	str	r0, [r1, r7, lsl #2]
40015fc0:	e1d400b8 	ldrh	r0, [r4, #8]
40015fc4:	e3500000 	cmp	r0, #0
40015fc8:	0a000033 	beq	4001609c <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015fcc:	e1d400b4 	ldrh	r0, [r4, #4]
40015fd0:	e3500004 	cmp	r0, #4
40015fd4:	1a000014 	bne	4001602c <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015fd8:	e1d450be 	ldrh	r5, [r4, #14]
40015fdc:	e3a06000 	mov	r6, #0
40015fe0:	ea00000d 	b	4001601c <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015fe4:	e28d1018 	add	r1, sp, #24
40015fe8:	e1a00005 	mov	r0, r5
40015fec:	eb0031c5 	bl	40022708 <CyU3PDmaDscrGetConfig>
40015ff0:	e59d1018 	ldr	r1, [sp, #24]
40015ff4:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015ff8:	e0410002 	sub	r0, r1, r2
40015ffc:	ebffb7bc 	bl	40003ef4 <CyU3PDmaBufferFree>
40016000:	e1a00005 	mov	r0, r5
40016004:	eb003198 	bl	4002266c <CyU3PDmaDscrPut>
40016008:	e59d0020 	ldr	r0, [sp, #32]
4001600c:	e1a05800 	lsl	r5, r0, #16
40016010:	e1a05825 	lsr	r5, r5, #16
40016014:	e2860001 	add	r0, r6, #1
40016018:	e3c06801 	bic	r6, r0, #65536	; 0x10000
4001601c:	e1d400b8 	ldrh	r0, [r4, #8]
40016020:	e1500006 	cmp	r0, r6
40016024:	caffffee 	bgt	40015fe4 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40016028:	ea000013 	b	4001607c <CyU3PDmaChannelDestroy_TypeManual+0x178>
4001602c:	e1d450bc 	ldrh	r5, [r4, #12]
40016030:	e3a06000 	mov	r6, #0
40016034:	ea00000d 	b	40016070 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40016038:	e28d1018 	add	r1, sp, #24
4001603c:	e1a00005 	mov	r0, r5
40016040:	eb0031b0 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016044:	e59d1018 	ldr	r1, [sp, #24]
40016048:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
4001604c:	e0410002 	sub	r0, r1, r2
40016050:	ebffb7a7 	bl	40003ef4 <CyU3PDmaBufferFree>
40016054:	e1a00005 	mov	r0, r5
40016058:	eb003183 	bl	4002266c <CyU3PDmaDscrPut>
4001605c:	e59d0020 	ldr	r0, [sp, #32]
40016060:	e1a05800 	lsl	r5, r0, #16
40016064:	e1a05825 	lsr	r5, r5, #16
40016068:	e2860001 	add	r0, r6, #1
4001606c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40016070:	e1d400b8 	ldrh	r0, [r4, #8]
40016074:	e1500006 	cmp	r0, r6
40016078:	caffffee 	bgt	40016038 <CyU3PDmaChannelDestroy_TypeManual+0x134>
4001607c:	e1d400b4 	ldrh	r0, [r4, #4]
40016080:	e3500002 	cmp	r0, #2
40016084:	1a000004 	bne	4001609c <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016088:	e1d410b8 	ldrh	r1, [r4, #8]
4001608c:	e1d400be 	ldrh	r0, [r4, #14]
40016090:	e3a03000 	mov	r3, #0
40016094:	e1a02003 	mov	r2, r3
40016098:	eb0030ff 	bl	4002249c <CyU3PDmaDscrChainDestroy>
4001609c:	e1d401b4 	ldrh	r0, [r4, #20]
400160a0:	eb003171 	bl	4002266c <CyU3PDmaDscrPut>
400160a4:	e3a00000 	mov	r0, #0
400160a8:	e28dd028 	add	sp, sp, #40	; 0x28
400160ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400160b0:	0000ffff 	.word	0x0000ffff
400160b4:	4003118c 	.word	0x4003118c

Disassembly of section i.CyU3PDmaChannelGetBuffer:

400160b8 <CyU3PDmaChannelGetBuffer>:
400160b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400160bc:	e24dd030 	sub	sp, sp, #48	; 0x30
400160c0:	e1a04000 	mov	r4, r0
400160c4:	e1a05001 	mov	r5, r1
400160c8:	e1a06002 	mov	r6, r2
400160cc:	e3550000 	cmp	r5, #0
400160d0:	1a000002 	bne	400160e0 <CyU3PDmaChannelGetBuffer+0x28>
400160d4:	e3a00041 	mov	r0, #65	; 0x41
400160d8:	e28dd030 	add	sp, sp, #48	; 0x30
400160dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400160e0:	e1a01006 	mov	r1, r6
400160e4:	e1a00004 	mov	r0, r4
400160e8:	ebfffc85 	bl	40015304 <CyU3PDmaChannelAcquireLock>
400160ec:	e1a08000 	mov	r8, r0
400160f0:	e3580000 	cmp	r8, #0
400160f4:	0a000001 	beq	40016100 <CyU3PDmaChannelGetBuffer+0x48>
400160f8:	e1a00008 	mov	r0, r8
400160fc:	eafffff5 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
40016100:	e5940000 	ldr	r0, [r4]
40016104:	e3500002 	cmp	r0, #2
40016108:	0a000003 	beq	4001611c <CyU3PDmaChannelGetBuffer+0x64>
4001610c:	e5940000 	ldr	r0, [r4]
40016110:	e3500006 	cmp	r0, #6
40016114:	0a000000 	beq	4001611c <CyU3PDmaChannelGetBuffer+0x64>
40016118:	e3a08042 	mov	r8, #66	; 0x42
4001611c:	e5940000 	ldr	r0, [r4]
40016120:	e3500005 	cmp	r0, #5
40016124:	1a000000 	bne	4001612c <CyU3PDmaChannelGetBuffer+0x74>
40016128:	e3a08049 	mov	r8, #73	; 0x49
4001612c:	e5940000 	ldr	r0, [r4]
40016130:	e3500007 	cmp	r0, #7
40016134:	1a000000 	bne	4001613c <CyU3PDmaChannelGetBuffer+0x84>
40016138:	e3a08048 	mov	r8, #72	; 0x48
4001613c:	e3580000 	cmp	r8, #0
40016140:	0a000003 	beq	40016154 <CyU3PDmaChannelGetBuffer+0x9c>
40016144:	e284003c 	add	r0, r4, #60	; 0x3c
40016148:	ebffd002 	bl	4000a158 <_txe_mutex_put>
4001614c:	e1a00008 	mov	r0, r8
40016150:	eaffffe0 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
40016154:	e1d400b4 	ldrh	r0, [r4, #4]
40016158:	e20070ff 	and	r7, r0, #255	; 0xff
4001615c:	e3570002 	cmp	r7, #2
40016160:	0a000001 	beq	4001616c <CyU3PDmaChannelGetBuffer+0xb4>
40016164:	e3570003 	cmp	r7, #3
40016168:	1a00003e 	bne	40016268 <CyU3PDmaChannelGetBuffer+0x1b0>
4001616c:	e3a02002 	mov	r2, #2
40016170:	e3e01008 	mvn	r1, #8
40016174:	e2840074 	add	r0, r4, #116	; 0x74
40016178:	ebffcf29 	bl	40009e24 <_txe_event_flags_set>
4001617c:	e1d401b6 	ldrh	r0, [r4, #22]
40016180:	e28d101c 	add	r1, sp, #28
40016184:	eb00315f 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016188:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001618c:	e3100008 	tst	r0, #8
40016190:	1a000022 	bne	40016220 <CyU3PDmaChannelGetBuffer+0x168>
40016194:	e284003c 	add	r0, r4, #60	; 0x3c
40016198:	ebffcfee 	bl	4000a158 <_txe_mutex_put>
4001619c:	e58d6000 	str	r6, [sp]
400161a0:	e28d302c 	add	r3, sp, #44	; 0x2c
400161a4:	e3a02000 	mov	r2, #0
400161a8:	e3a01068 	mov	r1, #104	; 0x68
400161ac:	e2840074 	add	r0, r4, #116	; 0x74
400161b0:	ebffceeb 	bl	40009d64 <_txe_event_flags_get>
400161b4:	e1a08000 	mov	r8, r0
400161b8:	e3580000 	cmp	r8, #0
400161bc:	0a000001 	beq	400161c8 <CyU3PDmaChannelGetBuffer+0x110>
400161c0:	e3a00045 	mov	r0, #69	; 0x45
400161c4:	eaffffc3 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400161c8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400161cc:	e3100040 	tst	r0, #64	; 0x40
400161d0:	0a000001 	beq	400161dc <CyU3PDmaChannelGetBuffer+0x124>
400161d4:	e3a00049 	mov	r0, #73	; 0x49
400161d8:	eaffffbe 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400161dc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400161e0:	e3100020 	tst	r0, #32
400161e4:	0a000001 	beq	400161f0 <CyU3PDmaChannelGetBuffer+0x138>
400161e8:	e3a00048 	mov	r0, #72	; 0x48
400161ec:	eaffffb9 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400161f0:	e1a01006 	mov	r1, r6
400161f4:	e1a00004 	mov	r0, r4
400161f8:	ebfffc41 	bl	40015304 <CyU3PDmaChannelAcquireLock>
400161fc:	e1a08000 	mov	r8, r0
40016200:	e3580000 	cmp	r8, #0
40016204:	0a000001 	beq	40016210 <CyU3PDmaChannelGetBuffer+0x158>
40016208:	e1a00008 	mov	r0, r8
4001620c:	eaffffb1 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
40016210:	e1d401b6 	ldrh	r0, [r4, #22]
40016214:	e28d101c 	add	r1, sp, #28
40016218:	eb00313a 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001621c:	ea000003 	b	40016230 <CyU3PDmaChannelGetBuffer+0x178>
40016220:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016224:	e3500000 	cmp	r0, #0
40016228:	0a000000 	beq	40016230 <CyU3PDmaChannelGetBuffer+0x178>
4001622c:	ebffd1b5 	bl	4000a908 <_txe_thread_relinquish>
40016230:	e59d001c 	ldr	r0, [sp, #28]
40016234:	e5850000 	str	r0, [r5]
40016238:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001623c:	e59f11a4 	ldr	r1, [pc, #420]	; 400163e8 <CyU3PDmaChannelGetBuffer+0x330>
40016240:	e0010820 	and	r0, r1, r0, lsr #16
40016244:	e1c500b4 	strh	r0, [r5, #4]
40016248:	e241100f 	sub	r1, r1, #15
4001624c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016250:	e0000001 	and	r0, r0, r1
40016254:	e1c500b6 	strh	r0, [r5, #6]
40016258:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001625c:	e200000f 	and	r0, r0, #15
40016260:	e1c500b8 	strh	r0, [r5, #8]
40016264:	ea00005b 	b	400163d8 <CyU3PDmaChannelGetBuffer+0x320>
40016268:	e3570004 	cmp	r7, #4
4001626c:	1a000036 	bne	4001634c <CyU3PDmaChannelGetBuffer+0x294>
40016270:	e3a02002 	mov	r2, #2
40016274:	e3e01010 	mvn	r1, #16
40016278:	e2840074 	add	r0, r4, #116	; 0x74
4001627c:	ebffcee8 	bl	40009e24 <_txe_event_flags_set>
40016280:	e1d401b8 	ldrh	r0, [r4, #24]
40016284:	e28d101c 	add	r1, sp, #28
40016288:	eb00311e 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001628c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016290:	e3100008 	tst	r0, #8
40016294:	0a000021 	beq	40016320 <CyU3PDmaChannelGetBuffer+0x268>
40016298:	e284003c 	add	r0, r4, #60	; 0x3c
4001629c:	ebffcfad 	bl	4000a158 <_txe_mutex_put>
400162a0:	e58d6000 	str	r6, [sp]
400162a4:	e28d302c 	add	r3, sp, #44	; 0x2c
400162a8:	e3a02000 	mov	r2, #0
400162ac:	e3a01070 	mov	r1, #112	; 0x70
400162b0:	e2840074 	add	r0, r4, #116	; 0x74
400162b4:	ebffceaa 	bl	40009d64 <_txe_event_flags_get>
400162b8:	e1a08000 	mov	r8, r0
400162bc:	e3580000 	cmp	r8, #0
400162c0:	0a000001 	beq	400162cc <CyU3PDmaChannelGetBuffer+0x214>
400162c4:	e3a00045 	mov	r0, #69	; 0x45
400162c8:	eaffff82 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400162cc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400162d0:	e3100040 	tst	r0, #64	; 0x40
400162d4:	0a000001 	beq	400162e0 <CyU3PDmaChannelGetBuffer+0x228>
400162d8:	e3a00049 	mov	r0, #73	; 0x49
400162dc:	eaffff7d 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400162e0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400162e4:	e3100020 	tst	r0, #32
400162e8:	0a000001 	beq	400162f4 <CyU3PDmaChannelGetBuffer+0x23c>
400162ec:	e3a00048 	mov	r0, #72	; 0x48
400162f0:	eaffff78 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400162f4:	e1a01006 	mov	r1, r6
400162f8:	e1a00004 	mov	r0, r4
400162fc:	ebfffc00 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016300:	e1a08000 	mov	r8, r0
40016304:	e3580000 	cmp	r8, #0
40016308:	0a000001 	beq	40016314 <CyU3PDmaChannelGetBuffer+0x25c>
4001630c:	e1a00008 	mov	r0, r8
40016310:	eaffff70 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
40016314:	e1d401b8 	ldrh	r0, [r4, #24]
40016318:	e28d101c 	add	r1, sp, #28
4001631c:	eb0030f9 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016320:	e59d001c 	ldr	r0, [sp, #28]
40016324:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016328:	e0400001 	sub	r0, r0, r1
4001632c:	e5850000 	str	r0, [r5]
40016330:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
40016334:	e1c500b4 	strh	r0, [r5, #4]
40016338:	e1d400b6 	ldrh	r0, [r4, #6]
4001633c:	e1c500b6 	strh	r0, [r5, #6]
40016340:	e3a00000 	mov	r0, #0
40016344:	e1c500b8 	strh	r0, [r5, #8]
40016348:	ea000022 	b	400163d8 <CyU3PDmaChannelGetBuffer+0x320>
4001634c:	e1d401b2 	ldrh	r0, [r4, #18]
40016350:	e28d1004 	add	r1, sp, #4
40016354:	ebfffa8e 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016358:	e59d1004 	ldr	r1, [sp, #4]
4001635c:	e1a00801 	lsl	r0, r1, #16
40016360:	e1a00820 	lsr	r0, r0, #16
40016364:	e28d101c 	add	r1, sp, #28
40016368:	eb0030e6 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001636c:	e59d0010 	ldr	r0, [sp, #16]
40016370:	e3100702 	tst	r0, #524288	; 0x80000
40016374:	0a000016 	beq	400163d4 <CyU3PDmaChannelGetBuffer+0x31c>
40016378:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001637c:	e3100008 	tst	r0, #8
40016380:	0a000013 	beq	400163d4 <CyU3PDmaChannelGetBuffer+0x31c>
40016384:	e59d001c 	ldr	r0, [sp, #28]
40016388:	e5850000 	str	r0, [r5]
4001638c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016390:	e59f1050 	ldr	r1, [pc, #80]	; 400163e8 <CyU3PDmaChannelGetBuffer+0x330>
40016394:	e0010820 	and	r0, r1, r0, lsr #16
40016398:	e1c500b4 	strh	r0, [r5, #4]
4001639c:	e241100f 	sub	r1, r1, #15
400163a0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163a4:	e0000001 	and	r0, r0, r1
400163a8:	e1c500b6 	strh	r0, [r5, #6]
400163ac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163b0:	e200000f 	and	r0, r0, #15
400163b4:	e1c500b8 	strh	r0, [r5, #8]
400163b8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400163bc:	e3500000 	cmp	r0, #0
400163c0:	0a000004 	beq	400163d8 <CyU3PDmaChannelGetBuffer+0x320>
400163c4:	e1d510b6 	ldrh	r1, [r5, #6]
400163c8:	e5950000 	ldr	r0, [r5]
400163cc:	ebffefa1 	bl	40012258 <CyU3PSysFlushDRegion>
400163d0:	ea000000 	b	400163d8 <CyU3PDmaChannelGetBuffer+0x320>
400163d4:	e3a08047 	mov	r8, #71	; 0x47
400163d8:	e284003c 	add	r0, r4, #60	; 0x3c
400163dc:	ebffcf5d 	bl	4000a158 <_txe_mutex_put>
400163e0:	e1a00008 	mov	r0, r8
400163e4:	eaffff3b 	b	400160d8 <CyU3PDmaChannelGetBuffer+0x20>
400163e8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

400163ec <CyU3PDmaChannelReset>:
400163ec:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400163f0:	e1a04000 	mov	r4, r0
400163f4:	e3e01000 	mvn	r1, #0
400163f8:	e1a00004 	mov	r0, r4
400163fc:	ebfffbc0 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016400:	e1a06000 	mov	r6, r0
40016404:	e3560000 	cmp	r6, #0
40016408:	0a000001 	beq	40016414 <CyU3PDmaChannelReset+0x28>
4001640c:	e1a00006 	mov	r0, r6
40016410:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016414:	e1d400b4 	ldrh	r0, [r4, #4]
40016418:	e3500005 	cmp	r0, #5
4001641c:	308ff100 	addcc	pc, pc, r0, lsl #2
40016420:	ea00000f 	b	40016464 <CyU3PDmaChannelReset+0x78>
40016424:	ea000003 	b	40016438 <CyU3PDmaChannelReset+0x4c>
40016428:	ea000004 	b	40016440 <CyU3PDmaChannelReset+0x54>
4001642c:	ea000009 	b	40016458 <CyU3PDmaChannelReset+0x6c>
40016430:	ea000005 	b	4001644c <CyU3PDmaChannelReset+0x60>
40016434:	ea000006 	b	40016454 <CyU3PDmaChannelReset+0x68>
40016438:	e1a00000 	nop			; (mov r0, r0)
4001643c:	e1a00000 	nop			; (mov r0, r0)
40016440:	e1a00004 	mov	r0, r4
40016444:	eb000030 	bl	4001650c <CyU3PDmaChannelReset_TypeAuto>
40016448:	ea000007 	b	4001646c <CyU3PDmaChannelReset+0x80>
4001644c:	e1a00000 	nop			; (mov r0, r0)
40016450:	e1a00000 	nop			; (mov r0, r0)
40016454:	e1a00000 	nop			; (mov r0, r0)
40016458:	e1a00004 	mov	r0, r4
4001645c:	eb000045 	bl	40016578 <CyU3PDmaChannelReset_TypeManual>
40016460:	ea000001 	b	4001646c <CyU3PDmaChannelReset+0x80>
40016464:	e1a00000 	nop			; (mov r0, r0)
40016468:	e1a00000 	nop			; (mov r0, r0)
4001646c:	e1a00000 	nop			; (mov r0, r0)
40016470:	ebffc8ee 	bl	40008830 <_tx_thread_identify>
40016474:	e1a05000 	mov	r5, r0
40016478:	e3550000 	cmp	r5, #0
4001647c:	0a000003 	beq	40016490 <CyU3PDmaChannelReset+0xa4>
40016480:	e1a0200d 	mov	r2, sp
40016484:	e3a01002 	mov	r1, #2
40016488:	e1a00005 	mov	r0, r5
4001648c:	ebffd0f5 	bl	4000a868 <_txe_thread_priority_change>
40016490:	e3a02002 	mov	r2, #2
40016494:	e3e01007 	mvn	r1, #7
40016498:	e2840074 	add	r0, r4, #116	; 0x74
4001649c:	ebffce60 	bl	40009e24 <_txe_event_flags_set>
400164a0:	e3a02000 	mov	r2, #0
400164a4:	e3a01020 	mov	r1, #32
400164a8:	e2840074 	add	r0, r4, #116	; 0x74
400164ac:	ebffce5c 	bl	40009e24 <_txe_event_flags_set>
400164b0:	e3a00001 	mov	r0, #1
400164b4:	e5840000 	str	r0, [r4]
400164b8:	e284003c 	add	r0, r4, #60	; 0x3c
400164bc:	ebffcf25 	bl	4000a158 <_txe_mutex_put>
400164c0:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400164c4:	e3500000 	cmp	r0, #0
400164c8:	0a000007 	beq	400164ec <CyU3PDmaChannelReset+0x100>
400164cc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400164d0:	e3100020 	tst	r0, #32
400164d4:	0a000004 	beq	400164ec <CyU3PDmaChannelReset+0x100>
400164d8:	e3a02000 	mov	r2, #0
400164dc:	e3a01020 	mov	r1, #32
400164e0:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400164e4:	e1a00004 	mov	r0, r4
400164e8:	e12fff33 	blx	r3
400164ec:	e3550000 	cmp	r5, #0
400164f0:	0a000003 	beq	40016504 <CyU3PDmaChannelReset+0x118>
400164f4:	e1a0200d 	mov	r2, sp
400164f8:	e1a00005 	mov	r0, r5
400164fc:	e59d1000 	ldr	r1, [sp]
40016500:	ebffd0d8 	bl	4000a868 <_txe_thread_priority_change>
40016504:	e3a00000 	mov	r0, #0
40016508:	eaffffc0 	b	40016410 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

4001650c <CyU3PDmaChannelReset_TypeAuto>:
4001650c:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016510:	e1a04000 	mov	r4, r0
40016514:	e1d450b8 	ldrh	r5, [r4, #8]
40016518:	e1d460bc 	ldrh	r6, [r4, #12]
4001651c:	e1a00004 	mov	r0, r4
40016520:	eb000337 	bl	40017204 <CyU3PDmaConfigureSockets_TypeAuto>
40016524:	ea00000c 	b	4001655c <CyU3PDmaChannelReset_TypeAuto+0x50>
40016528:	e1a0100d 	mov	r1, sp
4001652c:	e1a00006 	mov	r0, r6
40016530:	eb003074 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016534:	e59d000c 	ldr	r0, [sp, #12]
40016538:	e59f1034 	ldr	r1, [pc, #52]	; 40016574 <CyU3PDmaChannelReset_TypeAuto+0x68>
4001653c:	e0000001 	and	r0, r0, r1
40016540:	e58d000c 	str	r0, [sp, #12]
40016544:	e1a0100d 	mov	r1, sp
40016548:	e1a00006 	mov	r0, r6
4001654c:	eb003088 	bl	40022774 <CyU3PDmaDscrSetConfig>
40016550:	e59d0008 	ldr	r0, [sp, #8]
40016554:	e1a06800 	lsl	r6, r0, #16
40016558:	e1a06826 	lsr	r6, r6, #16
4001655c:	e1b00005 	movs	r0, r5
40016560:	e2451001 	sub	r1, r5, #1
40016564:	e1a05801 	lsl	r5, r1, #16
40016568:	e1a05825 	lsr	r5, r5, #16
4001656c:	1affffed 	bne	40016528 <CyU3PDmaChannelReset_TypeAuto+0x1c>
40016570:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016574:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016578 <CyU3PDmaChannelReset_TypeManual>:
40016578:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001657c:	e1a04000 	mov	r4, r0
40016580:	e1d450b8 	ldrh	r5, [r4, #8]
40016584:	e1a00004 	mov	r0, r4
40016588:	eb00035d 	bl	40017304 <CyU3PDmaConfigureSockets_TypeManual>
4001658c:	e1d400b4 	ldrh	r0, [r4, #4]
40016590:	e3500004 	cmp	r0, #4
40016594:	0a000017 	beq	400165f8 <CyU3PDmaChannelReset_TypeManual+0x80>
40016598:	e1d460bc 	ldrh	r6, [r4, #12]
4001659c:	ea00000c 	b	400165d4 <CyU3PDmaChannelReset_TypeManual+0x5c>
400165a0:	e1a0100d 	mov	r1, sp
400165a4:	e1a00006 	mov	r0, r6
400165a8:	eb003056 	bl	40022708 <CyU3PDmaDscrGetConfig>
400165ac:	e59d000c 	ldr	r0, [sp, #12]
400165b0:	e59f10b4 	ldr	r1, [pc, #180]	; 4001666c <CyU3PDmaChannelReset_TypeManual+0xf4>
400165b4:	e0000001 	and	r0, r0, r1
400165b8:	e58d000c 	str	r0, [sp, #12]
400165bc:	e1a0100d 	mov	r1, sp
400165c0:	e1a00006 	mov	r0, r6
400165c4:	eb00306a 	bl	40022774 <CyU3PDmaDscrSetConfig>
400165c8:	e59d0008 	ldr	r0, [sp, #8]
400165cc:	e1a06800 	lsl	r6, r0, #16
400165d0:	e1a06826 	lsr	r6, r6, #16
400165d4:	e1b00005 	movs	r0, r5
400165d8:	e2451001 	sub	r1, r5, #1
400165dc:	e1a05801 	lsl	r5, r1, #16
400165e0:	e1a05825 	lsr	r5, r5, #16
400165e4:	1affffed 	bne	400165a0 <CyU3PDmaChannelReset_TypeManual+0x28>
400165e8:	e1d400bc 	ldrh	r0, [r4, #12]
400165ec:	e1c401b6 	strh	r0, [r4, #22]
400165f0:	e1c401ba 	strh	r0, [r4, #26]
400165f4:	e1c401be 	strh	r0, [r4, #30]
400165f8:	e1d400b4 	ldrh	r0, [r4, #4]
400165fc:	e3500003 	cmp	r0, #3
40016600:	0a000018 	beq	40016668 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016604:	e1d460be 	ldrh	r6, [r4, #14]
40016608:	e1d450b8 	ldrh	r5, [r4, #8]
4001660c:	ea00000c 	b	40016644 <CyU3PDmaChannelReset_TypeManual+0xcc>
40016610:	e1a0100d 	mov	r1, sp
40016614:	e1a00006 	mov	r0, r6
40016618:	eb00303a 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001661c:	e59d000c 	ldr	r0, [sp, #12]
40016620:	e59f1044 	ldr	r1, [pc, #68]	; 4001666c <CyU3PDmaChannelReset_TypeManual+0xf4>
40016624:	e0000001 	and	r0, r0, r1
40016628:	e58d000c 	str	r0, [sp, #12]
4001662c:	e1a0100d 	mov	r1, sp
40016630:	e1a00006 	mov	r0, r6
40016634:	eb00304e 	bl	40022774 <CyU3PDmaDscrSetConfig>
40016638:	e59d0008 	ldr	r0, [sp, #8]
4001663c:	e1a06800 	lsl	r6, r0, #16
40016640:	e1a06826 	lsr	r6, r6, #16
40016644:	e1b00005 	movs	r0, r5
40016648:	e2451001 	sub	r1, r5, #1
4001664c:	e1a05801 	lsl	r5, r1, #16
40016650:	e1a05825 	lsr	r5, r5, #16
40016654:	1affffed 	bne	40016610 <CyU3PDmaChannelReset_TypeManual+0x98>
40016658:	e1d400be 	ldrh	r0, [r4, #14]
4001665c:	e1c401b8 	strh	r0, [r4, #24]
40016660:	e1c401bc 	strh	r0, [r4, #28]
40016664:	e1c402b0 	strh	r0, [r4, #32]
40016668:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
4001666c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

40016670 <CyU3PDmaChannelSetXfer>:
40016670:	e92d4070 	push	{r4, r5, r6, lr}
40016674:	e1a04000 	mov	r4, r0
40016678:	e1a05001 	mov	r5, r1
4001667c:	e3e01000 	mvn	r1, #0
40016680:	e1a00004 	mov	r0, r4
40016684:	ebfffb1e 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016688:	e1a06000 	mov	r6, r0
4001668c:	e3560000 	cmp	r6, #0
40016690:	0a000001 	beq	4001669c <CyU3PDmaChannelSetXfer+0x2c>
40016694:	e1a00006 	mov	r0, r6
40016698:	e8bd8070 	pop	{r4, r5, r6, pc}
4001669c:	e5940000 	ldr	r0, [r4]
400166a0:	e3500001 	cmp	r0, #1
400166a4:	0a000000 	beq	400166ac <CyU3PDmaChannelSetXfer+0x3c>
400166a8:	e3a06043 	mov	r6, #67	; 0x43
400166ac:	e1d400b8 	ldrh	r0, [r4, #8]
400166b0:	e3500000 	cmp	r0, #0
400166b4:	1a000000 	bne	400166bc <CyU3PDmaChannelSetXfer+0x4c>
400166b8:	e3a06046 	mov	r6, #70	; 0x46
400166bc:	e3560000 	cmp	r6, #0
400166c0:	1a00001d 	bne	4001673c <CyU3PDmaChannelSetXfer+0xcc>
400166c4:	e3a02002 	mov	r2, #2
400166c8:	e3e01027 	mvn	r1, #39	; 0x27
400166cc:	e2840074 	add	r0, r4, #116	; 0x74
400166d0:	ebffcdd3 	bl	40009e24 <_txe_event_flags_set>
400166d4:	e5845034 	str	r5, [r4, #52]	; 0x34
400166d8:	e1d400b4 	ldrh	r0, [r4, #4]
400166dc:	e3500005 	cmp	r0, #5
400166e0:	308ff100 	addcc	pc, pc, r0, lsl #2
400166e4:	ea000011 	b	40016730 <CyU3PDmaChannelSetXfer+0xc0>
400166e8:	ea000003 	b	400166fc <CyU3PDmaChannelSetXfer+0x8c>
400166ec:	ea000004 	b	40016704 <CyU3PDmaChannelSetXfer+0x94>
400166f0:	ea00000a 	b	40016720 <CyU3PDmaChannelSetXfer+0xb0>
400166f4:	ea000006 	b	40016714 <CyU3PDmaChannelSetXfer+0xa4>
400166f8:	ea000007 	b	4001671c <CyU3PDmaChannelSetXfer+0xac>
400166fc:	e1a00000 	nop			; (mov r0, r0)
40016700:	e1a00000 	nop			; (mov r0, r0)
40016704:	e1a01005 	mov	r1, r5
40016708:	e1a00004 	mov	r0, r4
4001670c:	eb00000e 	bl	4001674c <CyU3PDmaChannelSetXfer_TypeAuto>
40016710:	ea000008 	b	40016738 <CyU3PDmaChannelSetXfer+0xc8>
40016714:	e1a00000 	nop			; (mov r0, r0)
40016718:	e1a00000 	nop			; (mov r0, r0)
4001671c:	e1a00000 	nop			; (mov r0, r0)
40016720:	e1a01005 	mov	r1, r5
40016724:	e1a00004 	mov	r0, r4
40016728:	eb00006f 	bl	400168ec <CyU3PDmaChannelSetXfer_TypeManual>
4001672c:	ea000001 	b	40016738 <CyU3PDmaChannelSetXfer+0xc8>
40016730:	e1a00000 	nop			; (mov r0, r0)
40016734:	e1a00000 	nop			; (mov r0, r0)
40016738:	e1a00000 	nop			; (mov r0, r0)
4001673c:	e284003c 	add	r0, r4, #60	; 0x3c
40016740:	ebffce84 	bl	4000a158 <_txe_mutex_put>
40016744:	e1a00006 	mov	r0, r6
40016748:	eaffffd2 	b	40016698 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

4001674c <CyU3PDmaChannelSetXfer_TypeAuto>:
4001674c:	e92d4030 	push	{r4, r5, lr}
40016750:	e24dd01c 	sub	sp, sp, #28
40016754:	e1a04000 	mov	r4, r0
40016758:	e1a05001 	mov	r5, r1
4001675c:	e1d401b0 	ldrh	r0, [r4, #16]
40016760:	ebfff973 	bl	40014d34 <CyU3PDmaSocketDisable>
40016764:	e1d401b2 	ldrh	r0, [r4, #18]
40016768:	ebfff971 	bl	40014d34 <CyU3PDmaSocketDisable>
4001676c:	e3a00002 	mov	r0, #2
40016770:	e5840000 	str	r0, [r4]
40016774:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016778:	e1d401b0 	ldrh	r0, [r4, #16]
4001677c:	ebfffa87 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40016780:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016784:	e1d401b2 	ldrh	r0, [r4, #18]
40016788:	ebfffa84 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
4001678c:	e1d401b0 	ldrh	r0, [r4, #16]
40016790:	e28d1004 	add	r1, sp, #4
40016794:	ebfff97e 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016798:	e58d5008 	str	r5, [sp, #8]
4001679c:	e3a00000 	mov	r0, #0
400167a0:	e58d000c 	str	r0, [sp, #12]
400167a4:	e3550000 	cmp	r5, #0
400167a8:	1a000003 	bne	400167bc <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
400167ac:	e59d0010 	ldr	r0, [sp, #16]
400167b0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400167b4:	e58d0010 	str	r0, [sp, #16]
400167b8:	ea000002 	b	400167c8 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
400167bc:	e59d0010 	ldr	r0, [sp, #16]
400167c0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400167c4:	e58d0010 	str	r0, [sp, #16]
400167c8:	e59d0010 	ldr	r0, [sp, #16]
400167cc:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400167d0:	e58d0010 	str	r0, [sp, #16]
400167d4:	e59d0010 	ldr	r0, [sp, #16]
400167d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400167dc:	e58d0010 	str	r0, [sp, #16]
400167e0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400167e4:	e3500001 	cmp	r0, #1
400167e8:	1a000003 	bne	400167fc <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
400167ec:	e59d0010 	ldr	r0, [sp, #16]
400167f0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400167f4:	e58d0010 	str	r0, [sp, #16]
400167f8:	ea000002 	b	40016808 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
400167fc:	e59d0010 	ldr	r0, [sp, #16]
40016800:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016804:	e58d0010 	str	r0, [sp, #16]
40016808:	e1d400ba 	ldrh	r0, [r4, #10]
4001680c:	e3500000 	cmp	r0, #0
40016810:	0a000006 	beq	40016830 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016814:	e1d400b8 	ldrh	r0, [r4, #8]
40016818:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001681c:	e1d410ba 	ldrh	r1, [r4, #10]
40016820:	e1800281 	orr	r0, r0, r1, lsl #5
40016824:	e59d1010 	ldr	r1, [sp, #16]
40016828:	e1800001 	orr	r0, r0, r1
4001682c:	e58d0010 	str	r0, [sp, #16]
40016830:	e3e00000 	mvn	r0, #0
40016834:	e58d0014 	str	r0, [sp, #20]
40016838:	e1d401b0 	ldrh	r0, [r4, #16]
4001683c:	e28d1004 	add	r1, sp, #4
40016840:	ebfff9fd 	bl	4001503c <CyU3PDmaSocketSetConfig>
40016844:	e1d401b2 	ldrh	r0, [r4, #18]
40016848:	e28d1004 	add	r1, sp, #4
4001684c:	ebfff950 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016850:	e58d5008 	str	r5, [sp, #8]
40016854:	e3a00000 	mov	r0, #0
40016858:	e58d000c 	str	r0, [sp, #12]
4001685c:	e3550000 	cmp	r5, #0
40016860:	1a000006 	bne	40016880 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016864:	e59d0018 	ldr	r0, [sp, #24]
40016868:	e3c00080 	bic	r0, r0, #128	; 0x80
4001686c:	e58d0018 	str	r0, [sp, #24]
40016870:	e59d0010 	ldr	r0, [sp, #16]
40016874:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016878:	e58d0010 	str	r0, [sp, #16]
4001687c:	ea000005 	b	40016898 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016880:	e59d0018 	ldr	r0, [sp, #24]
40016884:	e3800080 	orr	r0, r0, #128	; 0x80
40016888:	e58d0018 	str	r0, [sp, #24]
4001688c:	e59d0010 	ldr	r0, [sp, #16]
40016890:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016894:	e58d0010 	str	r0, [sp, #16]
40016898:	e59d0010 	ldr	r0, [sp, #16]
4001689c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400168a0:	e58d0010 	str	r0, [sp, #16]
400168a4:	e59d0010 	ldr	r0, [sp, #16]
400168a8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400168ac:	e58d0010 	str	r0, [sp, #16]
400168b0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400168b4:	e3500001 	cmp	r0, #1
400168b8:	1a000003 	bne	400168cc <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
400168bc:	e59d0010 	ldr	r0, [sp, #16]
400168c0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400168c4:	e58d0010 	str	r0, [sp, #16]
400168c8:	ea000002 	b	400168d8 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
400168cc:	e59d0010 	ldr	r0, [sp, #16]
400168d0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400168d4:	e58d0010 	str	r0, [sp, #16]
400168d8:	e1d401b2 	ldrh	r0, [r4, #18]
400168dc:	e28d1004 	add	r1, sp, #4
400168e0:	ebfff9d5 	bl	4001503c <CyU3PDmaSocketSetConfig>
400168e4:	e28dd01c 	add	sp, sp, #28
400168e8:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

400168ec <CyU3PDmaChannelSetXfer_TypeManual>:
400168ec:	e92d4030 	push	{r4, r5, lr}
400168f0:	e24dd01c 	sub	sp, sp, #28
400168f4:	e1a04000 	mov	r4, r0
400168f8:	e1a05001 	mov	r5, r1
400168fc:	e3a00002 	mov	r0, #2
40016900:	e5840000 	str	r0, [r4]
40016904:	e1d400b4 	ldrh	r0, [r4, #4]
40016908:	e3500004 	cmp	r0, #4
4001690c:	0a00003d 	beq	40016a08 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016910:	e1d401b0 	ldrh	r0, [r4, #16]
40016914:	ebfff906 	bl	40014d34 <CyU3PDmaSocketDisable>
40016918:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
4001691c:	e1d401b0 	ldrh	r0, [r4, #16]
40016920:	ebfffa1e 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40016924:	e1d401b0 	ldrh	r0, [r4, #16]
40016928:	e28d1004 	add	r1, sp, #4
4001692c:	ebfff918 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016930:	e58d5008 	str	r5, [sp, #8]
40016934:	e3a00000 	mov	r0, #0
40016938:	e58d000c 	str	r0, [sp, #12]
4001693c:	e59d0010 	ldr	r0, [sp, #16]
40016940:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016944:	e58d0010 	str	r0, [sp, #16]
40016948:	e59d0010 	ldr	r0, [sp, #16]
4001694c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016950:	e58d0010 	str	r0, [sp, #16]
40016954:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016958:	e3500001 	cmp	r0, #1
4001695c:	1a000003 	bne	40016970 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016960:	e59d0010 	ldr	r0, [sp, #16]
40016964:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016968:	e58d0010 	str	r0, [sp, #16]
4001696c:	ea000002 	b	4001697c <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016970:	e59d0010 	ldr	r0, [sp, #16]
40016974:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016978:	e58d0010 	str	r0, [sp, #16]
4001697c:	e1d400ba 	ldrh	r0, [r4, #10]
40016980:	e3500000 	cmp	r0, #0
40016984:	0a000006 	beq	400169a4 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016988:	e1d400b8 	ldrh	r0, [r4, #8]
4001698c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016990:	e1d410ba 	ldrh	r1, [r4, #10]
40016994:	e1800281 	orr	r0, r0, r1, lsl #5
40016998:	e59d1010 	ldr	r1, [sp, #16]
4001699c:	e1800001 	orr	r0, r0, r1
400169a0:	e58d0010 	str	r0, [sp, #16]
400169a4:	e3e00000 	mvn	r0, #0
400169a8:	e58d0014 	str	r0, [sp, #20]
400169ac:	e3550000 	cmp	r5, #0
400169b0:	0a000002 	beq	400169c0 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
400169b4:	e1d400b4 	ldrh	r0, [r4, #4]
400169b8:	e3500002 	cmp	r0, #2
400169bc:	1a000008 	bne	400169e4 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
400169c0:	e3a00000 	mov	r0, #0
400169c4:	e58d0008 	str	r0, [sp, #8]
400169c8:	e59d0010 	ldr	r0, [sp, #16]
400169cc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400169d0:	e58d0010 	str	r0, [sp, #16]
400169d4:	e59d0018 	ldr	r0, [sp, #24]
400169d8:	e3c00080 	bic	r0, r0, #128	; 0x80
400169dc:	e58d0018 	str	r0, [sp, #24]
400169e0:	ea000005 	b	400169fc <CyU3PDmaChannelSetXfer_TypeManual+0x110>
400169e4:	e59d0010 	ldr	r0, [sp, #16]
400169e8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400169ec:	e58d0010 	str	r0, [sp, #16]
400169f0:	e59d0018 	ldr	r0, [sp, #24]
400169f4:	e3800080 	orr	r0, r0, #128	; 0x80
400169f8:	e58d0018 	str	r0, [sp, #24]
400169fc:	e1d401b0 	ldrh	r0, [r4, #16]
40016a00:	e28d1004 	add	r1, sp, #4
40016a04:	ebfff98c 	bl	4001503c <CyU3PDmaSocketSetConfig>
40016a08:	e1d400b4 	ldrh	r0, [r4, #4]
40016a0c:	e3500003 	cmp	r0, #3
40016a10:	0a00002e 	beq	40016ad0 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016a14:	e1d401b2 	ldrh	r0, [r4, #18]
40016a18:	ebfff8c5 	bl	40014d34 <CyU3PDmaSocketDisable>
40016a1c:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016a20:	e1d401b2 	ldrh	r0, [r4, #18]
40016a24:	ebfff9dd 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40016a28:	e1d401b2 	ldrh	r0, [r4, #18]
40016a2c:	e28d1004 	add	r1, sp, #4
40016a30:	ebfff8d7 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016a34:	e58d5008 	str	r5, [sp, #8]
40016a38:	e3a00000 	mov	r0, #0
40016a3c:	e58d000c 	str	r0, [sp, #12]
40016a40:	e59d0010 	ldr	r0, [sp, #16]
40016a44:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016a48:	e58d0010 	str	r0, [sp, #16]
40016a4c:	e59d0010 	ldr	r0, [sp, #16]
40016a50:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a54:	e58d0010 	str	r0, [sp, #16]
40016a58:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016a5c:	e3500001 	cmp	r0, #1
40016a60:	1a000003 	bne	40016a74 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016a64:	e59d0010 	ldr	r0, [sp, #16]
40016a68:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a6c:	e58d0010 	str	r0, [sp, #16]
40016a70:	ea000002 	b	40016a80 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016a74:	e59d0010 	ldr	r0, [sp, #16]
40016a78:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016a7c:	e58d0010 	str	r0, [sp, #16]
40016a80:	e3e00000 	mvn	r0, #0
40016a84:	e58d0014 	str	r0, [sp, #20]
40016a88:	e3550000 	cmp	r5, #0
40016a8c:	1a000006 	bne	40016aac <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016a90:	e59d0010 	ldr	r0, [sp, #16]
40016a94:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016a98:	e58d0010 	str	r0, [sp, #16]
40016a9c:	e59d0018 	ldr	r0, [sp, #24]
40016aa0:	e3c00080 	bic	r0, r0, #128	; 0x80
40016aa4:	e58d0018 	str	r0, [sp, #24]
40016aa8:	ea000005 	b	40016ac4 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016aac:	e59d0010 	ldr	r0, [sp, #16]
40016ab0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016ab4:	e58d0010 	str	r0, [sp, #16]
40016ab8:	e59d0018 	ldr	r0, [sp, #24]
40016abc:	e3800080 	orr	r0, r0, #128	; 0x80
40016ac0:	e58d0018 	str	r0, [sp, #24]
40016ac4:	e1d401b2 	ldrh	r0, [r4, #18]
40016ac8:	e28d1004 	add	r1, sp, #4
40016acc:	ebfff95a 	bl	4001503c <CyU3PDmaSocketSetConfig>
40016ad0:	e28dd01c 	add	sp, sp, #28
40016ad4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016ad8 <CyU3PDmaChannelSetupRecvBuffer>:
40016ad8:	e92d4070 	push	{r4, r5, r6, lr}
40016adc:	e24dd028 	sub	sp, sp, #40	; 0x28
40016ae0:	e1a04000 	mov	r4, r0
40016ae4:	e1a05001 	mov	r5, r1
40016ae8:	e3550000 	cmp	r5, #0
40016aec:	1a000002 	bne	40016afc <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016af0:	e3a00041 	mov	r0, #65	; 0x41
40016af4:	e28dd028 	add	sp, sp, #40	; 0x28
40016af8:	e8bd8070 	pop	{r4, r5, r6, pc}
40016afc:	e5950000 	ldr	r0, [r5]
40016b00:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016b04:	3a000005 	bcc	40016b20 <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016b08:	e5950000 	ldr	r0, [r5]
40016b0c:	e1d510b6 	ldrh	r1, [r5, #6]
40016b10:	e0800001 	add	r0, r0, r1
40016b14:	e59f11d4 	ldr	r1, [pc, #468]	; 40016cf0 <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016b18:	e1500001 	cmp	r0, r1
40016b1c:	3a000001 	bcc	40016b28 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016b20:	e3a00040 	mov	r0, #64	; 0x40
40016b24:	eafffff2 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b28:	e1d500b6 	ldrh	r0, [r5, #6]
40016b2c:	e59f11c0 	ldr	r1, [pc, #448]	; 40016cf4 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016b30:	e1500001 	cmp	r0, r1
40016b34:	da000001 	ble	40016b40 <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016b38:	e3a00040 	mov	r0, #64	; 0x40
40016b3c:	eaffffec 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b40:	e1d500b6 	ldrh	r0, [r5, #6]
40016b44:	e3500000 	cmp	r0, #0
40016b48:	0a000002 	beq	40016b58 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016b4c:	e1d500b6 	ldrh	r0, [r5, #6]
40016b50:	e310000f 	tst	r0, #15
40016b54:	0a000001 	beq	40016b60 <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016b58:	e3a00040 	mov	r0, #64	; 0x40
40016b5c:	eaffffe4 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b60:	e3e01000 	mvn	r1, #0
40016b64:	e1a00004 	mov	r0, r4
40016b68:	ebfff9e5 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016b6c:	e1a06000 	mov	r6, r0
40016b70:	e3560000 	cmp	r6, #0
40016b74:	0a000001 	beq	40016b80 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016b78:	e1a00006 	mov	r0, r6
40016b7c:	eaffffdc 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b80:	e1d400b4 	ldrh	r0, [r4, #4]
40016b84:	e3500004 	cmp	r0, #4
40016b88:	1a000000 	bne	40016b90 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016b8c:	e3a06046 	mov	r6, #70	; 0x46
40016b90:	e5940000 	ldr	r0, [r4]
40016b94:	e3500001 	cmp	r0, #1
40016b98:	0a000000 	beq	40016ba0 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016b9c:	e3a06043 	mov	r6, #67	; 0x43
40016ba0:	e3560000 	cmp	r6, #0
40016ba4:	0a000003 	beq	40016bb8 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016ba8:	e284003c 	add	r0, r4, #60	; 0x3c
40016bac:	ebffcd69 	bl	4000a158 <_txe_mutex_put>
40016bb0:	e1a00006 	mov	r0, r6
40016bb4:	eaffffce 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016bb8:	e1d401b0 	ldrh	r0, [r4, #16]
40016bbc:	ebfff85c 	bl	40014d34 <CyU3PDmaSocketDisable>
40016bc0:	e1d401b0 	ldrh	r0, [r4, #16]
40016bc4:	e3a01000 	mov	r1, #0
40016bc8:	ebfff974 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40016bcc:	e3a02002 	mov	r2, #2
40016bd0:	e3e01027 	mvn	r1, #39	; 0x27
40016bd4:	e2840074 	add	r0, r4, #116	; 0x74
40016bd8:	ebffcc91 	bl	40009e24 <_txe_event_flags_set>
40016bdc:	e3a00004 	mov	r0, #4
40016be0:	e5840000 	str	r0, [r4]
40016be4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016be8:	e3500000 	cmp	r0, #0
40016bec:	0a000002 	beq	40016bfc <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016bf0:	e1d510b6 	ldrh	r1, [r5, #6]
40016bf4:	e5950000 	ldr	r0, [r5]
40016bf8:	ebffed96 	bl	40012258 <CyU3PSysFlushDRegion>
40016bfc:	e1d401b0 	ldrh	r0, [r4, #16]
40016c00:	e1a0100d 	mov	r1, sp
40016c04:	ebfff862 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016c08:	e59d0000 	ldr	r0, [sp]
40016c0c:	e1c401b6 	strh	r0, [r4, #22]
40016c10:	e1d401b4 	ldrh	r0, [r4, #20]
40016c14:	e28d1018 	add	r1, sp, #24
40016c18:	eb002eba 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016c1c:	e5950000 	ldr	r0, [r5]
40016c20:	e58d0018 	str	r0, [sp, #24]
40016c24:	e1d401b0 	ldrh	r0, [r4, #16]
40016c28:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016c2c:	e1810800 	orr	r0, r1, r0, lsl #16
40016c30:	e58d001c 	str	r0, [sp, #28]
40016c34:	e59d001c 	ldr	r0, [sp, #28]
40016c38:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016c3c:	e58d001c 	str	r0, [sp, #28]
40016c40:	e1d401b6 	ldrh	r0, [r4, #22]
40016c44:	e1e01741 	mvn	r1, r1, asr #14
40016c48:	e1810800 	orr	r0, r1, r0, lsl #16
40016c4c:	e58d0020 	str	r0, [sp, #32]
40016c50:	e1d500b6 	ldrh	r0, [r5, #6]
40016c54:	e241100f 	sub	r1, r1, #15
40016c58:	e0000001 	and	r0, r0, r1
40016c5c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016c60:	e1d401b4 	ldrh	r0, [r4, #20]
40016c64:	e28d1018 	add	r1, sp, #24
40016c68:	eb002ec1 	bl	40022774 <CyU3PDmaDscrSetConfig>
40016c6c:	e59d000c 	ldr	r0, [sp, #12]
40016c70:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016c74:	e58d000c 	str	r0, [sp, #12]
40016c78:	e59d000c 	ldr	r0, [sp, #12]
40016c7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016c80:	e58d000c 	str	r0, [sp, #12]
40016c84:	e59d000c 	ldr	r0, [sp, #12]
40016c88:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016c8c:	e58d000c 	str	r0, [sp, #12]
40016c90:	e59d000c 	ldr	r0, [sp, #12]
40016c94:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c98:	e58d000c 	str	r0, [sp, #12]
40016c9c:	e3a00001 	mov	r0, #1
40016ca0:	e58d0004 	str	r0, [sp, #4]
40016ca4:	e3a00000 	mov	r0, #0
40016ca8:	e58d0008 	str	r0, [sp, #8]
40016cac:	e3e00000 	mvn	r0, #0
40016cb0:	e58d0010 	str	r0, [sp, #16]
40016cb4:	e59d0014 	ldr	r0, [sp, #20]
40016cb8:	e3800001 	orr	r0, r0, #1
40016cbc:	e58d0014 	str	r0, [sp, #20]
40016cc0:	e59d0014 	ldr	r0, [sp, #20]
40016cc4:	e3c00080 	bic	r0, r0, #128	; 0x80
40016cc8:	e58d0014 	str	r0, [sp, #20]
40016ccc:	e1d401b4 	ldrh	r0, [r4, #20]
40016cd0:	e58d0000 	str	r0, [sp]
40016cd4:	e1d401b0 	ldrh	r0, [r4, #16]
40016cd8:	e1a0100d 	mov	r1, sp
40016cdc:	ebfff8d6 	bl	4001503c <CyU3PDmaSocketSetConfig>
40016ce0:	e284003c 	add	r0, r4, #60	; 0x3c
40016ce4:	ebffcd1b 	bl	4000a158 <_txe_mutex_put>
40016ce8:	e3a00000 	mov	r0, #0
40016cec:	eaffff80 	b	40016af4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cf0:	40080000 	.word	0x40080000
40016cf4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016cf8 <CyU3PDmaChannelSetupSendBuffer>:
40016cf8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016cfc:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016d00:	e1a04000 	mov	r4, r0
40016d04:	e1a05001 	mov	r5, r1
40016d08:	e3550000 	cmp	r5, #0
40016d0c:	1a000002 	bne	40016d1c <CyU3PDmaChannelSetupSendBuffer+0x24>
40016d10:	e3a00041 	mov	r0, #65	; 0x41
40016d14:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016d18:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016d1c:	e5950000 	ldr	r0, [r5]
40016d20:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016d24:	3a000005 	bcc	40016d40 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016d28:	e5950000 	ldr	r0, [r5]
40016d2c:	e1d510b4 	ldrh	r1, [r5, #4]
40016d30:	e0800001 	add	r0, r0, r1
40016d34:	e59f11ec 	ldr	r1, [pc, #492]	; 40016f28 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016d38:	e1500001 	cmp	r0, r1
40016d3c:	3a000001 	bcc	40016d48 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016d40:	e3a00040 	mov	r0, #64	; 0x40
40016d44:	eafffff2 	b	40016d14 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016d48:	e1d500b4 	ldrh	r0, [r5, #4]
40016d4c:	e59f11d8 	ldr	r1, [pc, #472]	; 40016f2c <CyU3PDmaChannelSetupSendBuffer+0x234>
40016d50:	e1500001 	cmp	r0, r1
40016d54:	da000001 	ble	40016d60 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016d58:	e3a00040 	mov	r0, #64	; 0x40
40016d5c:	eaffffec 	b	40016d14 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016d60:	e3e01000 	mvn	r1, #0
40016d64:	e1a00004 	mov	r0, r4
40016d68:	ebfff965 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016d6c:	e1a07000 	mov	r7, r0
40016d70:	e3570000 	cmp	r7, #0
40016d74:	0a000001 	beq	40016d80 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016d78:	e1a00007 	mov	r0, r7
40016d7c:	eaffffe4 	b	40016d14 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016d80:	e1d400b4 	ldrh	r0, [r4, #4]
40016d84:	e3500003 	cmp	r0, #3
40016d88:	1a000000 	bne	40016d90 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016d8c:	e3a07046 	mov	r7, #70	; 0x46
40016d90:	e5940000 	ldr	r0, [r4]
40016d94:	e3500001 	cmp	r0, #1
40016d98:	0a000000 	beq	40016da0 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016d9c:	e3a07043 	mov	r7, #67	; 0x43
40016da0:	e3570000 	cmp	r7, #0
40016da4:	0a000003 	beq	40016db8 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016da8:	e284003c 	add	r0, r4, #60	; 0x3c
40016dac:	ebffcce9 	bl	4000a158 <_txe_mutex_put>
40016db0:	e1a00007 	mov	r0, r7
40016db4:	eaffffd6 	b	40016d14 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016db8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016dbc:	e3500000 	cmp	r0, #0
40016dc0:	0a000005 	beq	40016ddc <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016dc4:	e1d500b4 	ldrh	r0, [r5, #4]
40016dc8:	e3500000 	cmp	r0, #0
40016dcc:	0a000002 	beq	40016ddc <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016dd0:	e1d510b4 	ldrh	r1, [r5, #4]
40016dd4:	e5950000 	ldr	r0, [r5]
40016dd8:	ebffed10 	bl	40012220 <CyU3PSysCleanDRegion>
40016ddc:	e1d401b2 	ldrh	r0, [r4, #18]
40016de0:	ebfff7d3 	bl	40014d34 <CyU3PDmaSocketDisable>
40016de4:	e1d401b2 	ldrh	r0, [r4, #18]
40016de8:	e3a01000 	mov	r1, #0
40016dec:	ebfff8eb 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40016df0:	e3a02002 	mov	r2, #2
40016df4:	e3e01027 	mvn	r1, #39	; 0x27
40016df8:	e2840074 	add	r0, r4, #116	; 0x74
40016dfc:	ebffcc08 	bl	40009e24 <_txe_event_flags_set>
40016e00:	e3a00003 	mov	r0, #3
40016e04:	e5840000 	str	r0, [r4]
40016e08:	e1d401b2 	ldrh	r0, [r4, #18]
40016e0c:	e28d1004 	add	r1, sp, #4
40016e10:	ebfff7df 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40016e14:	e59d0004 	ldr	r0, [sp, #4]
40016e18:	e1c401b8 	strh	r0, [r4, #24]
40016e1c:	e1d401b4 	ldrh	r0, [r4, #20]
40016e20:	e28d101c 	add	r1, sp, #28
40016e24:	eb002e37 	bl	40022708 <CyU3PDmaDscrGetConfig>
40016e28:	e5950000 	ldr	r0, [r5]
40016e2c:	e58d001c 	str	r0, [sp, #28]
40016e30:	e1d401b2 	ldrh	r0, [r4, #18]
40016e34:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016e38:	e58d0020 	str	r0, [sp, #32]
40016e3c:	e59d0020 	ldr	r0, [sp, #32]
40016e40:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016e44:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016e48:	e58d0020 	str	r0, [sp, #32]
40016e4c:	e1d401b8 	ldrh	r0, [r4, #24]
40016e50:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016e54:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016e58:	e1d500b4 	ldrh	r0, [r5, #4]
40016e5c:	e280000f 	add	r0, r0, #15
40016e60:	e59f10c4 	ldr	r1, [pc, #196]	; 40016f2c <CyU3PDmaChannelSetupSendBuffer+0x234>
40016e64:	e0006001 	and	r6, r0, r1
40016e68:	e1d500b4 	ldrh	r0, [r5, #4]
40016e6c:	e1860800 	orr	r0, r6, r0, lsl #16
40016e70:	e3800008 	orr	r0, r0, #8
40016e74:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016e78:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016e7c:	e1d510b8 	ldrh	r1, [r5, #8]
40016e80:	e201100e 	and	r1, r1, #14
40016e84:	e1800001 	orr	r0, r0, r1
40016e88:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016e8c:	e1d401b4 	ldrh	r0, [r4, #20]
40016e90:	e28d101c 	add	r1, sp, #28
40016e94:	eb002e36 	bl	40022774 <CyU3PDmaDscrSetConfig>
40016e98:	e59d0010 	ldr	r0, [sp, #16]
40016e9c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016ea0:	e58d0010 	str	r0, [sp, #16]
40016ea4:	e59d0010 	ldr	r0, [sp, #16]
40016ea8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016eac:	e58d0010 	str	r0, [sp, #16]
40016eb0:	e59d0010 	ldr	r0, [sp, #16]
40016eb4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016eb8:	e58d0010 	str	r0, [sp, #16]
40016ebc:	e59d0010 	ldr	r0, [sp, #16]
40016ec0:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016ec4:	e58d0010 	str	r0, [sp, #16]
40016ec8:	e59d0010 	ldr	r0, [sp, #16]
40016ecc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016ed0:	e58d0010 	str	r0, [sp, #16]
40016ed4:	e1d500b4 	ldrh	r0, [r5, #4]
40016ed8:	e58d0008 	str	r0, [sp, #8]
40016edc:	e3a00000 	mov	r0, #0
40016ee0:	e58d000c 	str	r0, [sp, #12]
40016ee4:	e3e00000 	mvn	r0, #0
40016ee8:	e58d0014 	str	r0, [sp, #20]
40016eec:	e59d0018 	ldr	r0, [sp, #24]
40016ef0:	e3800002 	orr	r0, r0, #2
40016ef4:	e58d0018 	str	r0, [sp, #24]
40016ef8:	e59d0018 	ldr	r0, [sp, #24]
40016efc:	e3c00080 	bic	r0, r0, #128	; 0x80
40016f00:	e58d0018 	str	r0, [sp, #24]
40016f04:	e1d401b4 	ldrh	r0, [r4, #20]
40016f08:	e58d0004 	str	r0, [sp, #4]
40016f0c:	e1d401b2 	ldrh	r0, [r4, #18]
40016f10:	e28d1004 	add	r1, sp, #4
40016f14:	ebfff848 	bl	4001503c <CyU3PDmaSocketSetConfig>
40016f18:	e284003c 	add	r0, r4, #60	; 0x3c
40016f1c:	ebffcc8d 	bl	4000a158 <_txe_mutex_put>
40016f20:	e3a00000 	mov	r0, #0
40016f24:	eaffff7a 	b	40016d14 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f28:	40080000 	.word	0x40080000
40016f2c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016f30 <CyU3PDmaChannelWaitForCompletion>:
40016f30:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016f34:	e1a04000 	mov	r4, r0
40016f38:	e1a05001 	mov	r5, r1
40016f3c:	e3a08000 	mov	r8, #0
40016f40:	e1a01005 	mov	r1, r5
40016f44:	e1a00004 	mov	r0, r4
40016f48:	ebfff8ed 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40016f4c:	e1a07000 	mov	r7, r0
40016f50:	e3570000 	cmp	r7, #0
40016f54:	0a000001 	beq	40016f60 <CyU3PDmaChannelWaitForCompletion+0x30>
40016f58:	e1a00007 	mov	r0, r7
40016f5c:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016f60:	e5946000 	ldr	r6, [r4]
40016f64:	e3560001 	cmp	r6, #1
40016f68:	1a00000b 	bne	40016f9c <CyU3PDmaChannelWaitForCompletion+0x6c>
40016f6c:	e3a03000 	mov	r3, #0
40016f70:	e58d3000 	str	r3, [sp]
40016f74:	e28d3004 	add	r3, sp, #4
40016f78:	e3a02000 	mov	r2, #0
40016f7c:	e3a01007 	mov	r1, #7
40016f80:	e2840074 	add	r0, r4, #116	; 0x74
40016f84:	ebffcb76 	bl	40009d64 <_txe_event_flags_get>
40016f88:	e1a07000 	mov	r7, r0
40016f8c:	e3570000 	cmp	r7, #0
40016f90:	0a000016 	beq	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016f94:	e3a07042 	mov	r7, #66	; 0x42
40016f98:	ea000014 	b	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016f9c:	e3560002 	cmp	r6, #2
40016fa0:	1a000005 	bne	40016fbc <CyU3PDmaChannelWaitForCompletion+0x8c>
40016fa4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016fa8:	e3500000 	cmp	r0, #0
40016fac:	1a000000 	bne	40016fb4 <CyU3PDmaChannelWaitForCompletion+0x84>
40016fb0:	e3a07046 	mov	r7, #70	; 0x46
40016fb4:	e3a08061 	mov	r8, #97	; 0x61
40016fb8:	ea00000c 	b	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016fbc:	e3560003 	cmp	r6, #3
40016fc0:	1a000001 	bne	40016fcc <CyU3PDmaChannelWaitForCompletion+0x9c>
40016fc4:	e3a08062 	mov	r8, #98	; 0x62
40016fc8:	ea000008 	b	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016fcc:	e3560004 	cmp	r6, #4
40016fd0:	1a000001 	bne	40016fdc <CyU3PDmaChannelWaitForCompletion+0xac>
40016fd4:	e3a08064 	mov	r8, #100	; 0x64
40016fd8:	ea000004 	b	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016fdc:	e3560005 	cmp	r6, #5
40016fe0:	1a000001 	bne	40016fec <CyU3PDmaChannelWaitForCompletion+0xbc>
40016fe4:	e3a07049 	mov	r7, #73	; 0x49
40016fe8:	ea000000 	b	40016ff0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016fec:	e3a07042 	mov	r7, #66	; 0x42
40016ff0:	e284003c 	add	r0, r4, #60	; 0x3c
40016ff4:	ebffcc57 	bl	4000a158 <_txe_mutex_put>
40016ff8:	e3570000 	cmp	r7, #0
40016ffc:	1a000015 	bne	40017058 <CyU3PDmaChannelWaitForCompletion+0x128>
40017000:	e3580000 	cmp	r8, #0
40017004:	0a000013 	beq	40017058 <CyU3PDmaChannelWaitForCompletion+0x128>
40017008:	e58d5000 	str	r5, [sp]
4001700c:	e28d3004 	add	r3, sp, #4
40017010:	e3a02000 	mov	r2, #0
40017014:	e1a01008 	mov	r1, r8
40017018:	e2840074 	add	r0, r4, #116	; 0x74
4001701c:	ebffcb50 	bl	40009d64 <_txe_event_flags_get>
40017020:	e1a07000 	mov	r7, r0
40017024:	e3570000 	cmp	r7, #0
40017028:	0a000001 	beq	40017034 <CyU3PDmaChannelWaitForCompletion+0x104>
4001702c:	e3a07045 	mov	r7, #69	; 0x45
40017030:	ea000008 	b	40017058 <CyU3PDmaChannelWaitForCompletion+0x128>
40017034:	e59d0004 	ldr	r0, [sp, #4]
40017038:	e3100040 	tst	r0, #64	; 0x40
4001703c:	0a000001 	beq	40017048 <CyU3PDmaChannelWaitForCompletion+0x118>
40017040:	e3a07049 	mov	r7, #73	; 0x49
40017044:	ea000003 	b	40017058 <CyU3PDmaChannelWaitForCompletion+0x128>
40017048:	e59d0004 	ldr	r0, [sp, #4]
4001704c:	e3100020 	tst	r0, #32
40017050:	0a000000 	beq	40017058 <CyU3PDmaChannelWaitForCompletion+0x128>
40017054:	e3a07048 	mov	r7, #72	; 0x48
40017058:	e1a00007 	mov	r0, r7
4001705c:	eaffffbe 	b	40016f5c <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40017060 <CyU3PDmaChannelWaitForRecvBuffer>:
40017060:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40017064:	e24dd018 	sub	sp, sp, #24
40017068:	e1a04000 	mov	r4, r0
4001706c:	e1a05001 	mov	r5, r1
40017070:	e1a06002 	mov	r6, r2
40017074:	e3550000 	cmp	r5, #0
40017078:	1a000002 	bne	40017088 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
4001707c:	e3a00041 	mov	r0, #65	; 0x41
40017080:	e28dd018 	add	sp, sp, #24
40017084:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017088:	e1a01006 	mov	r1, r6
4001708c:	e1a00004 	mov	r0, r4
40017090:	ebfff89b 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40017094:	e1a07000 	mov	r7, r0
40017098:	e3570000 	cmp	r7, #0
4001709c:	0a000001 	beq	400170a8 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
400170a0:	e1a00007 	mov	r0, r7
400170a4:	eafffff5 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400170a8:	e1d400b4 	ldrh	r0, [r4, #4]
400170ac:	e3500004 	cmp	r0, #4
400170b0:	1a000000 	bne	400170b8 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
400170b4:	e3a07046 	mov	r7, #70	; 0x46
400170b8:	e5948000 	ldr	r8, [r4]
400170bc:	e3570000 	cmp	r7, #0
400170c0:	1a000034 	bne	40017198 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400170c4:	e3580004 	cmp	r8, #4
400170c8:	1a00001e 	bne	40017148 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
400170cc:	e284003c 	add	r0, r4, #60	; 0x3c
400170d0:	ebffcc20 	bl	4000a158 <_txe_mutex_put>
400170d4:	e58d6000 	str	r6, [sp]
400170d8:	e28d3014 	add	r3, sp, #20
400170dc:	e3a02000 	mov	r2, #0
400170e0:	e3a01064 	mov	r1, #100	; 0x64
400170e4:	e2840074 	add	r0, r4, #116	; 0x74
400170e8:	ebffcb1d 	bl	40009d64 <_txe_event_flags_get>
400170ec:	e1a07000 	mov	r7, r0
400170f0:	e3570000 	cmp	r7, #0
400170f4:	0a000001 	beq	40017100 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
400170f8:	e3a00045 	mov	r0, #69	; 0x45
400170fc:	eaffffdf 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017100:	e59d0014 	ldr	r0, [sp, #20]
40017104:	e3100040 	tst	r0, #64	; 0x40
40017108:	0a000001 	beq	40017114 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
4001710c:	e3a00049 	mov	r0, #73	; 0x49
40017110:	eaffffda 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017114:	e59d0014 	ldr	r0, [sp, #20]
40017118:	e3100020 	tst	r0, #32
4001711c:	0a000001 	beq	40017128 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40017120:	e3a00048 	mov	r0, #72	; 0x48
40017124:	eaffffd5 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017128:	e1a01006 	mov	r1, r6
4001712c:	e1a00004 	mov	r0, r4
40017130:	ebfff873 	bl	40015304 <CyU3PDmaChannelAcquireLock>
40017134:	e1a07000 	mov	r7, r0
40017138:	e3570000 	cmp	r7, #0
4001713c:	0a000015 	beq	40017198 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017140:	e1a00007 	mov	r0, r7
40017144:	eaffffcd 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017148:	e3580001 	cmp	r8, #1
4001714c:	1a000010 	bne	40017194 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40017150:	e3a03000 	mov	r3, #0
40017154:	e58d3000 	str	r3, [sp]
40017158:	e28d3014 	add	r3, sp, #20
4001715c:	e3a02000 	mov	r2, #0
40017160:	e3a01024 	mov	r1, #36	; 0x24
40017164:	e2840074 	add	r0, r4, #116	; 0x74
40017168:	ebffcafd 	bl	40009d64 <_txe_event_flags_get>
4001716c:	e1a07000 	mov	r7, r0
40017170:	e3570000 	cmp	r7, #0
40017174:	0a000001 	beq	40017180 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40017178:	e3a07047 	mov	r7, #71	; 0x47
4001717c:	ea000005 	b	40017198 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017180:	e59d0014 	ldr	r0, [sp, #20]
40017184:	e3100020 	tst	r0, #32
40017188:	0a000002 	beq	40017198 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
4001718c:	e3a07042 	mov	r7, #66	; 0x42
40017190:	ea000000 	b	40017198 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017194:	e3a07047 	mov	r7, #71	; 0x47
40017198:	e3570000 	cmp	r7, #0
4001719c:	0a000003 	beq	400171b0 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
400171a0:	e284003c 	add	r0, r4, #60	; 0x3c
400171a4:	ebffcbeb 	bl	4000a158 <_txe_mutex_put>
400171a8:	e1a00007 	mov	r0, r7
400171ac:	eaffffb3 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400171b0:	e1d401b4 	ldrh	r0, [r4, #20]
400171b4:	e28d1004 	add	r1, sp, #4
400171b8:	eb002d52 	bl	40022708 <CyU3PDmaDscrGetConfig>
400171bc:	e59d0004 	ldr	r0, [sp, #4]
400171c0:	e5850000 	str	r0, [r5]
400171c4:	e59d0010 	ldr	r0, [sp, #16]
400171c8:	e59f1030 	ldr	r1, [pc, #48]	; 40017200 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
400171cc:	e0010820 	and	r0, r1, r0, lsr #16
400171d0:	e1c500b4 	strh	r0, [r5, #4]
400171d4:	e241100f 	sub	r1, r1, #15
400171d8:	e59d0010 	ldr	r0, [sp, #16]
400171dc:	e0000001 	and	r0, r0, r1
400171e0:	e1c500b6 	strh	r0, [r5, #6]
400171e4:	e59d0010 	ldr	r0, [sp, #16]
400171e8:	e200000f 	and	r0, r0, #15
400171ec:	e1c500b8 	strh	r0, [r5, #8]
400171f0:	e284003c 	add	r0, r4, #60	; 0x3c
400171f4:	ebffcbd7 	bl	4000a158 <_txe_mutex_put>
400171f8:	e3a00000 	mov	r0, #0
400171fc:	eaffff9f 	b	40017080 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017200:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40017204 <CyU3PDmaConfigureSockets_TypeAuto>:
40017204:	e92d4010 	push	{r4, lr}
40017208:	e24dd018 	sub	sp, sp, #24
4001720c:	e1a04000 	mov	r4, r0
40017210:	e1d401b0 	ldrh	r0, [r4, #16]
40017214:	ebfff6c6 	bl	40014d34 <CyU3PDmaSocketDisable>
40017218:	e1d401b2 	ldrh	r0, [r4, #18]
4001721c:	ebfff6c4 	bl	40014d34 <CyU3PDmaSocketDisable>
40017220:	e1d401b0 	ldrh	r0, [r4, #16]
40017224:	e1a0100d 	mov	r1, sp
40017228:	ebfff6d9 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001722c:	e1d400bc 	ldrh	r0, [r4, #12]
40017230:	e58d0000 	str	r0, [sp]
40017234:	e3a00000 	mov	r0, #0
40017238:	e58d0004 	str	r0, [sp, #4]
4001723c:	e58d0008 	str	r0, [sp, #8]
40017240:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017244:	e58d000c 	str	r0, [sp, #12]
40017248:	e1d401b0 	ldrh	r0, [r4, #16]
4001724c:	eb000df6 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
40017250:	e3500000 	cmp	r0, #0
40017254:	0a000002 	beq	40017264 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40017258:	e59d000c 	ldr	r0, [sp, #12]
4001725c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017260:	e58d000c 	str	r0, [sp, #12]
40017264:	e3e00000 	mvn	r0, #0
40017268:	e58d0010 	str	r0, [sp, #16]
4001726c:	e1d400b4 	ldrh	r0, [r4, #4]
40017270:	e3500001 	cmp	r0, #1
40017274:	1a000001 	bne	40017280 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40017278:	e3a00041 	mov	r0, #65	; 0x41
4001727c:	ea000000 	b	40017284 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40017280:	e3a00040 	mov	r0, #64	; 0x40
40017284:	e58d0014 	str	r0, [sp, #20]
40017288:	e1d401b0 	ldrh	r0, [r4, #16]
4001728c:	e1a0100d 	mov	r1, sp
40017290:	ebfff769 	bl	4001503c <CyU3PDmaSocketSetConfig>
40017294:	e1d401b2 	ldrh	r0, [r4, #18]
40017298:	e1a0100d 	mov	r1, sp
4001729c:	ebfff6bc 	bl	40014d94 <CyU3PDmaSocketGetConfig>
400172a0:	e1d400bc 	ldrh	r0, [r4, #12]
400172a4:	e58d0000 	str	r0, [sp]
400172a8:	e3a00000 	mov	r0, #0
400172ac:	e58d0004 	str	r0, [sp, #4]
400172b0:	e58d0008 	str	r0, [sp, #8]
400172b4:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400172b8:	e58d000c 	str	r0, [sp, #12]
400172bc:	e1d401b2 	ldrh	r0, [r4, #18]
400172c0:	eb000dd9 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
400172c4:	e3500000 	cmp	r0, #0
400172c8:	0a000002 	beq	400172d8 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
400172cc:	e59d000c 	ldr	r0, [sp, #12]
400172d0:	e3800b01 	orr	r0, r0, #1024	; 0x400
400172d4:	e58d000c 	str	r0, [sp, #12]
400172d8:	e3e00000 	mvn	r0, #0
400172dc:	e58d0010 	str	r0, [sp, #16]
400172e0:	e3a000c0 	mov	r0, #192	; 0xc0
400172e4:	e58d0014 	str	r0, [sp, #20]
400172e8:	e1d401b2 	ldrh	r0, [r4, #18]
400172ec:	e1a0100d 	mov	r1, sp
400172f0:	ebfff751 	bl	4001503c <CyU3PDmaSocketSetConfig>
400172f4:	e3a00000 	mov	r0, #0
400172f8:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400172fc:	e28dd018 	add	sp, sp, #24
40017300:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017304 <CyU3PDmaConfigureSockets_TypeManual>:
40017304:	e92d4010 	push	{r4, lr}
40017308:	e24dd018 	sub	sp, sp, #24
4001730c:	e1a04000 	mov	r4, r0
40017310:	e1d400b4 	ldrh	r0, [r4, #4]
40017314:	e3500004 	cmp	r0, #4
40017318:	0a00001f 	beq	4001739c <CyU3PDmaConfigureSockets_TypeManual+0x98>
4001731c:	e1d401b0 	ldrh	r0, [r4, #16]
40017320:	ebfff683 	bl	40014d34 <CyU3PDmaSocketDisable>
40017324:	e1d401b0 	ldrh	r0, [r4, #16]
40017328:	e1a0100d 	mov	r1, sp
4001732c:	ebfff698 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40017330:	e1d400bc 	ldrh	r0, [r4, #12]
40017334:	e58d0000 	str	r0, [sp]
40017338:	e3a00000 	mov	r0, #0
4001733c:	e58d0004 	str	r0, [sp, #4]
40017340:	e58d0008 	str	r0, [sp, #8]
40017344:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017348:	e58d000c 	str	r0, [sp, #12]
4001734c:	e1d401b0 	ldrh	r0, [r4, #16]
40017350:	eb000db5 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
40017354:	e3500000 	cmp	r0, #0
40017358:	0a000002 	beq	40017368 <CyU3PDmaConfigureSockets_TypeManual+0x64>
4001735c:	e59d000c 	ldr	r0, [sp, #12]
40017360:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017364:	e58d000c 	str	r0, [sp, #12]
40017368:	e3e00000 	mvn	r0, #0
4001736c:	e58d0010 	str	r0, [sp, #16]
40017370:	e3a00041 	mov	r0, #65	; 0x41
40017374:	e58d0014 	str	r0, [sp, #20]
40017378:	e1d400b4 	ldrh	r0, [r4, #4]
4001737c:	e3500003 	cmp	r0, #3
40017380:	1a000002 	bne	40017390 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017384:	e59d0014 	ldr	r0, [sp, #20]
40017388:	e3800080 	orr	r0, r0, #128	; 0x80
4001738c:	e58d0014 	str	r0, [sp, #20]
40017390:	e1d401b0 	ldrh	r0, [r4, #16]
40017394:	e1a0100d 	mov	r1, sp
40017398:	ebfff727 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001739c:	e1d400b4 	ldrh	r0, [r4, #4]
400173a0:	e3500003 	cmp	r0, #3
400173a4:	0a000019 	beq	40017410 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
400173a8:	e1d401b2 	ldrh	r0, [r4, #18]
400173ac:	ebfff660 	bl	40014d34 <CyU3PDmaSocketDisable>
400173b0:	e1d401b2 	ldrh	r0, [r4, #18]
400173b4:	e1a0100d 	mov	r1, sp
400173b8:	ebfff675 	bl	40014d94 <CyU3PDmaSocketGetConfig>
400173bc:	e1d400be 	ldrh	r0, [r4, #14]
400173c0:	e58d0000 	str	r0, [sp]
400173c4:	e3a00000 	mov	r0, #0
400173c8:	e58d0004 	str	r0, [sp, #4]
400173cc:	e58d0008 	str	r0, [sp, #8]
400173d0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400173d4:	e58d000c 	str	r0, [sp, #12]
400173d8:	e1d401b2 	ldrh	r0, [r4, #18]
400173dc:	eb000d92 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
400173e0:	e3500000 	cmp	r0, #0
400173e4:	0a000002 	beq	400173f4 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
400173e8:	e59d000c 	ldr	r0, [sp, #12]
400173ec:	e3800b01 	orr	r0, r0, #1024	; 0x400
400173f0:	e58d000c 	str	r0, [sp, #12]
400173f4:	e3e00000 	mvn	r0, #0
400173f8:	e58d0010 	str	r0, [sp, #16]
400173fc:	e3a000c2 	mov	r0, #194	; 0xc2
40017400:	e58d0014 	str	r0, [sp, #20]
40017404:	e1d401b2 	ldrh	r0, [r4, #18]
40017408:	e1a0100d 	mov	r1, sp
4001740c:	ebfff70a 	bl	4001503c <CyU3PDmaSocketSetConfig>
40017410:	e3a00000 	mov	r0, #0
40017414:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017418:	e28dd018 	add	sp, sp, #24
4001741c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

40017420 <CyU3PDmaMultiChannelAcquireLock>:
40017420:	e92d4070 	push	{r4, r5, r6, lr}
40017424:	e1a04000 	mov	r4, r0
40017428:	e1a05001 	mov	r5, r1
4001742c:	e3540000 	cmp	r4, #0
40017430:	1a000001 	bne	4001743c <CyU3PDmaMultiChannelAcquireLock+0x1c>
40017434:	e3a00041 	mov	r0, #65	; 0x41
40017438:	e8bd8070 	pop	{r4, r5, r6, pc}
4001743c:	e5940000 	ldr	r0, [r4]
40017440:	e3500000 	cmp	r0, #0
40017444:	1a000001 	bne	40017450 <CyU3PDmaMultiChannelAcquireLock+0x30>
40017448:	e3a00044 	mov	r0, #68	; 0x44
4001744c:	eafffff9 	b	40017438 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017450:	e1a01005 	mov	r1, r5
40017454:	e2840078 	add	r0, r4, #120	; 0x78
40017458:	ebffcb09 	bl	4000a084 <_txe_mutex_get>
4001745c:	e3500000 	cmp	r0, #0
40017460:	0a000001 	beq	4001746c <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017464:	e3a0001d 	mov	r0, #29
40017468:	eafffff2 	b	40017438 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001746c:	e3a00000 	mov	r0, #0
40017470:	eafffff0 	b	40017438 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

40017474 <CyU3PDmaMultiChannelCommitBuffer>:
40017474:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017478:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4001747c:	e1a04000 	mov	r4, r0
40017480:	e1a05001 	mov	r5, r1
40017484:	e1a06002 	mov	r6, r2
40017488:	e3e01000 	mvn	r1, #0
4001748c:	e1a00004 	mov	r0, r4
40017490:	ebffffe2 	bl	40017420 <CyU3PDmaMultiChannelAcquireLock>
40017494:	e1a0b000 	mov	fp, r0
40017498:	e35b0000 	cmp	fp, #0
4001749c:	0a000002 	beq	400174ac <CyU3PDmaMultiChannelCommitBuffer+0x38>
400174a0:	e1a0000b 	mov	r0, fp
400174a4:	e28dd03c 	add	sp, sp, #60	; 0x3c
400174a8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400174ac:	e1d400b4 	ldrh	r0, [r4, #4]
400174b0:	e20070ff 	and	r7, r0, #255	; 0xff
400174b4:	e1d400b6 	ldrh	r0, [r4, #6]
400174b8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400174bc:	e0400001 	sub	r0, r0, r1
400174c0:	e1500005 	cmp	r0, r5
400174c4:	aa000000 	bge	400174cc <CyU3PDmaMultiChannelCommitBuffer+0x58>
400174c8:	e3a0b040 	mov	fp, #64	; 0x40
400174cc:	e5940000 	ldr	r0, [r4]
400174d0:	e3500002 	cmp	r0, #2
400174d4:	0a000000 	beq	400174dc <CyU3PDmaMultiChannelCommitBuffer+0x68>
400174d8:	e3a0b042 	mov	fp, #66	; 0x42
400174dc:	e5940000 	ldr	r0, [r4]
400174e0:	e3500005 	cmp	r0, #5
400174e4:	1a000000 	bne	400174ec <CyU3PDmaMultiChannelCommitBuffer+0x78>
400174e8:	e3a0b049 	mov	fp, #73	; 0x49
400174ec:	e5940000 	ldr	r0, [r4]
400174f0:	e3500007 	cmp	r0, #7
400174f4:	1a000000 	bne	400174fc <CyU3PDmaMultiChannelCommitBuffer+0x88>
400174f8:	e3a0b048 	mov	fp, #72	; 0x48
400174fc:	e3570006 	cmp	r7, #6
40017500:	1a000000 	bne	40017508 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017504:	e3a0b046 	mov	fp, #70	; 0x46
40017508:	e3570005 	cmp	r7, #5
4001750c:	1a000034 	bne	400175e4 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017510:	e35b0000 	cmp	fp, #0
40017514:	1a000032 	bne	400175e4 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017518:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001751c:	e28d1024 	add	r1, sp, #36	; 0x24
40017520:	ebfff61b 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40017524:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017528:	e3100702 	tst	r0, #524288	; 0x80000
4001752c:	0a000027 	beq	400175d0 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
40017530:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40017534:	e1a09800 	lsl	r9, r0, #16
40017538:	e1a09829 	lsr	r9, r9, #16
4001753c:	e28d1004 	add	r1, sp, #4
40017540:	e1a00009 	mov	r0, r9
40017544:	eb002c6f 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017548:	e59d0010 	ldr	r0, [sp, #16]
4001754c:	e3100008 	tst	r0, #8
40017550:	0a00001c 	beq	400175c8 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017554:	e59d0010 	ldr	r0, [sp, #16]
40017558:	e1a00800 	lsl	r0, r0, #16
4001755c:	e1a00820 	lsr	r0, r0, #16
40017560:	e58d0010 	str	r0, [sp, #16]
40017564:	e59d0010 	ldr	r0, [sp, #16]
40017568:	e1800805 	orr	r0, r0, r5, lsl #16
4001756c:	e58d0010 	str	r0, [sp, #16]
40017570:	e3560000 	cmp	r6, #0
40017574:	0a000007 	beq	40017598 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017578:	e59d0010 	ldr	r0, [sp, #16]
4001757c:	e3c0000f 	bic	r0, r0, #15
40017580:	e58d0010 	str	r0, [sp, #16]
40017584:	e206100e 	and	r1, r6, #14
40017588:	e3811008 	orr	r1, r1, #8
4001758c:	e59d0010 	ldr	r0, [sp, #16]
40017590:	e1800001 	orr	r0, r0, r1
40017594:	e58d0010 	str	r0, [sp, #16]
40017598:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001759c:	e3500000 	cmp	r0, #0
400175a0:	0a000004 	beq	400175b8 <CyU3PDmaMultiChannelCommitBuffer+0x144>
400175a4:	e59d2010 	ldr	r2, [sp, #16]
400175a8:	e59f327c 	ldr	r3, [pc, #636]	; 4001782c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400175ac:	e0021003 	and	r1, r2, r3
400175b0:	e59d0004 	ldr	r0, [sp, #4]
400175b4:	ebffeb19 	bl	40012220 <CyU3PSysCleanDRegion>
400175b8:	e28d1004 	add	r1, sp, #4
400175bc:	e1a00009 	mov	r0, r9
400175c0:	eb002c6b 	bl	40022774 <CyU3PDmaDscrSetConfig>
400175c4:	ea000002 	b	400175d4 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400175c8:	e3a0b047 	mov	fp, #71	; 0x47
400175cc:	ea000000 	b	400175d4 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400175d0:	e3a0b047 	mov	fp, #71	; 0x47
400175d4:	e2840078 	add	r0, r4, #120	; 0x78
400175d8:	ebffcade 	bl	4000a158 <_txe_mutex_put>
400175dc:	e1a0000b 	mov	r0, fp
400175e0:	eaffffaf 	b	400174a4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400175e4:	e35b0000 	cmp	fp, #0
400175e8:	1a00000d 	bne	40017624 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400175ec:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400175f0:	e28d1014 	add	r1, sp, #20
400175f4:	eb002c43 	bl	40022708 <CyU3PDmaDscrGetConfig>
400175f8:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400175fc:	e28d1004 	add	r1, sp, #4
40017600:	eb002c40 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017604:	e59d0020 	ldr	r0, [sp, #32]
40017608:	e3100008 	tst	r0, #8
4001760c:	1a000000 	bne	40017614 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
40017610:	e3a0b047 	mov	fp, #71	; 0x47
40017614:	e59d0010 	ldr	r0, [sp, #16]
40017618:	e3100008 	tst	r0, #8
4001761c:	0a000000 	beq	40017624 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017620:	e3a0b047 	mov	fp, #71	; 0x47
40017624:	e35b0000 	cmp	fp, #0
40017628:	0a000003 	beq	4001763c <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
4001762c:	e2840078 	add	r0, r4, #120	; 0x78
40017630:	ebffcac8 	bl	4000a158 <_txe_mutex_put>
40017634:	e1a0000b 	mov	r0, fp
40017638:	eaffff99 	b	400174a4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001763c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017640:	e3500000 	cmp	r0, #0
40017644:	0a000004 	beq	4001765c <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017648:	e59d2010 	ldr	r2, [sp, #16]
4001764c:	e59f31d8 	ldr	r3, [pc, #472]	; 4001782c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017650:	e0021003 	and	r1, r2, r3
40017654:	e59d0004 	ldr	r0, [sp, #4]
40017658:	ebffeaf0 	bl	40012220 <CyU3PSysCleanDRegion>
4001765c:	e3570009 	cmp	r7, #9
40017660:	1a00003a 	bne	40017750 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017664:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017668:	e3a0a000 	mov	sl, #0
4001766c:	ea00002a 	b	4001771c <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
40017670:	e28d1004 	add	r1, sp, #4
40017674:	e1a00009 	mov	r0, r9
40017678:	eb002c22 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001767c:	e284000c 	add	r0, r4, #12
40017680:	e080008a 	add	r0, r0, sl, lsl #1
40017684:	e1d000b0 	ldrh	r0, [r0]
40017688:	e3500000 	cmp	r0, #0
4001768c:	1a00001d 	bne	40017708 <CyU3PDmaMultiChannelCommitBuffer+0x294>
40017690:	e59d0010 	ldr	r0, [sp, #16]
40017694:	e59f1190 	ldr	r1, [pc, #400]	; 4001782c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017698:	e0000001 	and	r0, r0, r1
4001769c:	e58d0010 	str	r0, [sp, #16]
400176a0:	e59d0010 	ldr	r0, [sp, #16]
400176a4:	e1800805 	orr	r0, r0, r5, lsl #16
400176a8:	e58d0010 	str	r0, [sp, #16]
400176ac:	e3560000 	cmp	r6, #0
400176b0:	1a000005 	bne	400176cc <CyU3PDmaMultiChannelCommitBuffer+0x258>
400176b4:	e59d1020 	ldr	r1, [sp, #32]
400176b8:	e201100f 	and	r1, r1, #15
400176bc:	e59d0010 	ldr	r0, [sp, #16]
400176c0:	e1800001 	orr	r0, r0, r1
400176c4:	e58d0010 	str	r0, [sp, #16]
400176c8:	ea000004 	b	400176e0 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
400176cc:	e206100e 	and	r1, r6, #14
400176d0:	e3811008 	orr	r1, r1, #8
400176d4:	e59d0010 	ldr	r0, [sp, #16]
400176d8:	e1800001 	orr	r0, r0, r1
400176dc:	e58d0010 	str	r0, [sp, #16]
400176e0:	e28d1004 	add	r1, sp, #4
400176e4:	e1a00009 	mov	r0, r9
400176e8:	eb002c21 	bl	40022774 <CyU3PDmaDscrSetConfig>
400176ec:	e59d0008 	ldr	r0, [sp, #8]
400176f0:	e1a08900 	lsl	r8, r0, #18
400176f4:	e1a08928 	lsr	r8, r8, #18
400176f8:	e3a02001 	mov	r2, #1
400176fc:	e1a01009 	mov	r1, r9
40017700:	e1a00008 	mov	r0, r8
40017704:	ebfff63a 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
40017708:	e59d000c 	ldr	r0, [sp, #12]
4001770c:	e59f111c 	ldr	r1, [pc, #284]	; 40017830 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017710:	e0019820 	and	r9, r1, r0, lsr #16
40017714:	e28a0001 	add	r0, sl, #1
40017718:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
4001771c:	e1d400ba 	ldrh	r0, [r4, #10]
40017720:	e150000a 	cmp	r0, sl
40017724:	caffffd1 	bgt	40017670 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017728:	e59d001c 	ldr	r0, [sp, #28]
4001772c:	e59f10fc 	ldr	r1, [pc, #252]	; 40017830 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017730:	e0010820 	and	r0, r1, r0, lsr #16
40017734:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017738:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001773c:	e28d1014 	add	r1, sp, #20
40017740:	eb002bf0 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017744:	e59d001c 	ldr	r0, [sp, #28]
40017748:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001774c:	ea000032 	b	4001781c <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017750:	e59d0010 	ldr	r0, [sp, #16]
40017754:	e59f10d0 	ldr	r1, [pc, #208]	; 4001782c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017758:	e0000001 	and	r0, r0, r1
4001775c:	e58d0010 	str	r0, [sp, #16]
40017760:	e59d0010 	ldr	r0, [sp, #16]
40017764:	e1800805 	orr	r0, r0, r5, lsl #16
40017768:	e58d0010 	str	r0, [sp, #16]
4001776c:	e3560000 	cmp	r6, #0
40017770:	1a000005 	bne	4001778c <CyU3PDmaMultiChannelCommitBuffer+0x318>
40017774:	e59d1020 	ldr	r1, [sp, #32]
40017778:	e201100f 	and	r1, r1, #15
4001777c:	e59d0010 	ldr	r0, [sp, #16]
40017780:	e1800001 	orr	r0, r0, r1
40017784:	e58d0010 	str	r0, [sp, #16]
40017788:	ea000004 	b	400177a0 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
4001778c:	e206100e 	and	r1, r6, #14
40017790:	e3811008 	orr	r1, r1, #8
40017794:	e59d0010 	ldr	r0, [sp, #16]
40017798:	e1800001 	orr	r0, r0, r1
4001779c:	e58d0010 	str	r0, [sp, #16]
400177a0:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400177a4:	e28d1004 	add	r1, sp, #4
400177a8:	eb002bf1 	bl	40022774 <CyU3PDmaDscrSetConfig>
400177ac:	e59d0008 	ldr	r0, [sp, #8]
400177b0:	e1a08900 	lsl	r8, r0, #18
400177b4:	e1a08928 	lsr	r8, r8, #18
400177b8:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
400177bc:	e3a02001 	mov	r2, #1
400177c0:	e1a00008 	mov	r0, r8
400177c4:	ebfff60a 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
400177c8:	e3570007 	cmp	r7, #7
400177cc:	1a000009 	bne	400177f8 <CyU3PDmaMultiChannelCommitBuffer+0x384>
400177d0:	e59d000c 	ldr	r0, [sp, #12]
400177d4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400177d8:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400177dc:	e28d1004 	add	r1, sp, #4
400177e0:	eb002bc8 	bl	40022708 <CyU3PDmaDscrGetConfig>
400177e4:	e59d000c 	ldr	r0, [sp, #12]
400177e8:	e59f1040 	ldr	r1, [pc, #64]	; 40017830 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400177ec:	e0010820 	and	r0, r1, r0, lsr #16
400177f0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400177f4:	ea000008 	b	4001781c <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400177f8:	e59d001c 	ldr	r0, [sp, #28]
400177fc:	e59f102c 	ldr	r1, [pc, #44]	; 40017830 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017800:	e0010820 	and	r0, r1, r0, lsr #16
40017804:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017808:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001780c:	e28d1014 	add	r1, sp, #20
40017810:	eb002bbc 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017814:	e59d001c 	ldr	r0, [sp, #28]
40017818:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001781c:	e2840078 	add	r0, r4, #120	; 0x78
40017820:	ebffca4c 	bl	4000a158 <_txe_mutex_put>
40017824:	e3a00000 	mov	r0, #0
40017828:	eaffff1d 	b	400174a4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001782c:	0000fff0 	.word	0x0000fff0
40017830:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017834 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017834:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017838:	e24dd024 	sub	sp, sp, #36	; 0x24
4001783c:	e1a04000 	mov	r4, r0
40017840:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017844:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017848:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001784c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017850:	e1d400b8 	ldrh	r0, [r4, #8]
40017854:	e1d430ba 	ldrh	r3, [r4, #10]
40017858:	e0000093 	mul	r0, r3, r0
4001785c:	e1a01800 	lsl	r1, r0, #16
40017860:	e1a01821 	lsr	r1, r1, #16
40017864:	e1d420b6 	ldrh	r2, [r4, #6]
40017868:	e1a03006 	mov	r3, r6
4001786c:	e284001c 	add	r0, r4, #28
40017870:	eb002ab5 	bl	4002234c <CyU3PDmaDscrChainCreate>
40017874:	e1a05000 	mov	r5, r0
40017878:	e3550000 	cmp	r5, #0
4001787c:	0a000002 	beq	4001788c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017880:	e1a00005 	mov	r0, r5
40017884:	e28dd024 	add	sp, sp, #36	; 0x24
40017888:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001788c:	e1d400b4 	ldrh	r0, [r4, #4]
40017890:	e3500005 	cmp	r0, #5
40017894:	1a00003c 	bne	4001798c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017898:	e3a07000 	mov	r7, #0
4001789c:	e1d481bc 	ldrh	r8, [r4, #28]
400178a0:	ea000035 	b	4001797c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
400178a4:	e3a09000 	mov	r9, #0
400178a8:	ea00002e 	b	40017968 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
400178ac:	e28d1004 	add	r1, sp, #4
400178b0:	e1a00008 	mov	r0, r8
400178b4:	eb002b93 	bl	40022708 <CyU3PDmaDscrGetConfig>
400178b8:	e3570000 	cmp	r7, #0
400178bc:	1a000003 	bne	400178d0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
400178c0:	e2840014 	add	r0, r4, #20
400178c4:	e0800089 	add	r0, r0, r9, lsl #1
400178c8:	e1c080b0 	strh	r8, [r0]
400178cc:	ea000020 	b	40017954 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
400178d0:	e2841014 	add	r1, r4, #20
400178d4:	e0811089 	add	r1, r1, r9, lsl #1
400178d8:	e1d100b0 	ldrh	r0, [r1]
400178dc:	e28d1014 	add	r1, sp, #20
400178e0:	eb002b88 	bl	40022708 <CyU3PDmaDscrGetConfig>
400178e4:	e59d0018 	ldr	r0, [sp, #24]
400178e8:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
400178ec:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400178f0:	e58d0018 	str	r0, [sp, #24]
400178f4:	e2841024 	add	r1, r4, #36	; 0x24
400178f8:	e0811089 	add	r1, r1, r9, lsl #1
400178fc:	e59d0018 	ldr	r0, [sp, #24]
40017900:	e1d110b0 	ldrh	r1, [r1]
40017904:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017908:	e1821801 	orr	r1, r2, r1, lsl #16
4001790c:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017910:	e1800001 	orr	r0, r0, r1
40017914:	e58d0018 	str	r0, [sp, #24]
40017918:	e59d001c 	ldr	r0, [sp, #28]
4001791c:	e1a00800 	lsl	r0, r0, #16
40017920:	e1a00820 	lsr	r0, r0, #16
40017924:	e58d001c 	str	r0, [sp, #28]
40017928:	e59d001c 	ldr	r0, [sp, #28]
4001792c:	e1800808 	orr	r0, r0, r8, lsl #16
40017930:	e58d001c 	str	r0, [sp, #28]
40017934:	e2841014 	add	r1, r4, #20
40017938:	e0811089 	add	r1, r1, r9, lsl #1
4001793c:	e1d100b0 	ldrh	r0, [r1]
40017940:	e28d1014 	add	r1, sp, #20
40017944:	eb002b8a 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017948:	e2840014 	add	r0, r4, #20
4001794c:	e0800089 	add	r0, r0, r9, lsl #1
40017950:	e1c080b0 	strh	r8, [r0]
40017954:	e59d000c 	ldr	r0, [sp, #12]
40017958:	e1a08800 	lsl	r8, r0, #16
4001795c:	e1a08828 	lsr	r8, r8, #16
40017960:	e2890001 	add	r0, r9, #1
40017964:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017968:	e1d400ba 	ldrh	r0, [r4, #10]
4001796c:	e1500009 	cmp	r0, r9
40017970:	caffffcd 	bgt	400178ac <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017974:	e2870001 	add	r0, r7, #1
40017978:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001797c:	e1d400b8 	ldrh	r0, [r4, #8]
40017980:	e1500007 	cmp	r0, r7
40017984:	aaffffc6 	bge	400178a4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017988:	ea000056 	b	40017ae8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
4001798c:	e3a07000 	mov	r7, #0
40017990:	e1d481bc 	ldrh	r8, [r4, #28]
40017994:	ea000050 	b	40017adc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017998:	e3a09000 	mov	r9, #0
4001799c:	ea000049 	b	40017ac8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
400179a0:	e3570000 	cmp	r7, #0
400179a4:	1a00000d 	bne	400179e0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
400179a8:	e3a06cff 	mov	r6, #65280	; 0xff00
400179ac:	e2840024 	add	r0, r4, #36	; 0x24
400179b0:	e0800089 	add	r0, r0, r9, lsl #1
400179b4:	e1d000b0 	ldrh	r0, [r0]
400179b8:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400179bc:	e1810800 	orr	r0, r1, r0, lsl #16
400179c0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400179c4:	e1866000 	orr	r6, r6, r0
400179c8:	e1d410b8 	ldrh	r1, [r4, #8]
400179cc:	e2842014 	add	r2, r4, #20
400179d0:	e0820089 	add	r0, r2, r9, lsl #1
400179d4:	e1a03006 	mov	r3, r6
400179d8:	e3a02000 	mov	r2, #0
400179dc:	eb002a5a 	bl	4002234c <CyU3PDmaDscrChainCreate>
400179e0:	e2841014 	add	r1, r4, #20
400179e4:	e0811089 	add	r1, r1, r9, lsl #1
400179e8:	e1d100b0 	ldrh	r0, [r1]
400179ec:	e28d1014 	add	r1, sp, #20
400179f0:	eb002b44 	bl	40022708 <CyU3PDmaDscrGetConfig>
400179f4:	e28d1004 	add	r1, sp, #4
400179f8:	e1a00008 	mov	r0, r8
400179fc:	eb002b41 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017a00:	e59d0004 	ldr	r0, [sp, #4]
40017a04:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a08:	e0800001 	add	r0, r0, r1
40017a0c:	e58d0014 	str	r0, [sp, #20]
40017a10:	e59d0010 	ldr	r0, [sp, #16]
40017a14:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a18:	e0400001 	sub	r0, r0, r1
40017a1c:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017a20:	e0400001 	sub	r0, r0, r1
40017a24:	e58d0020 	str	r0, [sp, #32]
40017a28:	e2841014 	add	r1, r4, #20
40017a2c:	e0811089 	add	r1, r1, r9, lsl #1
40017a30:	e1d100b0 	ldrh	r0, [r1]
40017a34:	e28d1014 	add	r1, sp, #20
40017a38:	eb002b4d 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017a3c:	e59d0004 	ldr	r0, [sp, #4]
40017a40:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a44:	e0800001 	add	r0, r0, r1
40017a48:	e58d0004 	str	r0, [sp, #4]
40017a4c:	e1d400b6 	ldrh	r0, [r4, #6]
40017a50:	e280000f 	add	r0, r0, #15
40017a54:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a58:	e0400001 	sub	r0, r0, r1
40017a5c:	e59f10b4 	ldr	r1, [pc, #180]	; 40017b18 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017a60:	e0000001 	and	r0, r0, r1
40017a64:	e58d0010 	str	r0, [sp, #16]
40017a68:	e59d000c 	ldr	r0, [sp, #12]
40017a6c:	e1a00800 	lsl	r0, r0, #16
40017a70:	e1a00820 	lsr	r0, r0, #16
40017a74:	e58d000c 	str	r0, [sp, #12]
40017a78:	e2841014 	add	r1, r4, #20
40017a7c:	e0811089 	add	r1, r1, r9, lsl #1
40017a80:	e59d000c 	ldr	r0, [sp, #12]
40017a84:	e1d110b0 	ldrh	r1, [r1]
40017a88:	e1800801 	orr	r0, r0, r1, lsl #16
40017a8c:	e58d000c 	str	r0, [sp, #12]
40017a90:	e28d1004 	add	r1, sp, #4
40017a94:	e1a00008 	mov	r0, r8
40017a98:	eb002b35 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017a9c:	e59d000c 	ldr	r0, [sp, #12]
40017aa0:	e1a08800 	lsl	r8, r0, #16
40017aa4:	e1a08828 	lsr	r8, r8, #16
40017aa8:	e59d001c 	ldr	r0, [sp, #28]
40017aac:	e59f1068 	ldr	r1, [pc, #104]	; 40017b1c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017ab0:	e0010820 	and	r0, r1, r0, lsr #16
40017ab4:	e2841014 	add	r1, r4, #20
40017ab8:	e0811089 	add	r1, r1, r9, lsl #1
40017abc:	e1c100b0 	strh	r0, [r1]
40017ac0:	e2890001 	add	r0, r9, #1
40017ac4:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017ac8:	e1d400ba 	ldrh	r0, [r4, #10]
40017acc:	e1500009 	cmp	r0, r9
40017ad0:	caffffb2 	bgt	400179a0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017ad4:	e2870001 	add	r0, r7, #1
40017ad8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017adc:	e1d400b8 	ldrh	r0, [r4, #8]
40017ae0:	e1500007 	cmp	r0, r7
40017ae4:	caffffab 	bgt	40017998 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017ae8:	e1a00004 	mov	r0, r4
40017aec:	eb000509 	bl	40018f18 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017af0:	e1d401b4 	ldrh	r0, [r4, #20]
40017af4:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017af8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017afc:	e1d401bc 	ldrh	r0, [r4, #28]
40017b00:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017b04:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017b08:	e2840034 	add	r0, r4, #52	; 0x34
40017b0c:	eb002a85 	bl	40022528 <CyU3PDmaDscrGet>
40017b10:	e3a00000 	mov	r0, #0
40017b14:	eaffff5a 	b	40017884 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017b18:	0000fff0 	.word	0x0000fff0
40017b1c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017b20 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017b20:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017b24:	e24dd024 	sub	sp, sp, #36	; 0x24
40017b28:	e1a04000 	mov	r4, r0
40017b2c:	e3a06cff 	mov	r6, #65280	; 0xff00
40017b30:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017b34:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017b38:	e1810800 	orr	r0, r1, r0, lsl #16
40017b3c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017b40:	e1866000 	orr	r6, r6, r0
40017b44:	e1d400b8 	ldrh	r0, [r4, #8]
40017b48:	e1d430ba 	ldrh	r3, [r4, #10]
40017b4c:	e0000093 	mul	r0, r3, r0
40017b50:	e1a01800 	lsl	r1, r0, #16
40017b54:	e1a01821 	lsr	r1, r1, #16
40017b58:	e1d420b6 	ldrh	r2, [r4, #6]
40017b5c:	e1a03006 	mov	r3, r6
40017b60:	e2840014 	add	r0, r4, #20
40017b64:	eb0029f8 	bl	4002234c <CyU3PDmaDscrChainCreate>
40017b68:	e1a05000 	mov	r5, r0
40017b6c:	e3550000 	cmp	r5, #0
40017b70:	0a000002 	beq	40017b80 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017b74:	e1a00005 	mov	r0, r5
40017b78:	e28dd024 	add	sp, sp, #36	; 0x24
40017b7c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017b80:	e1d400b4 	ldrh	r0, [r4, #4]
40017b84:	e3500006 	cmp	r0, #6
40017b88:	1a00003a 	bne	40017c78 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017b8c:	e3a07000 	mov	r7, #0
40017b90:	e1d481b4 	ldrh	r8, [r4, #20]
40017b94:	ea000033 	b	40017c68 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017b98:	e3a09000 	mov	r9, #0
40017b9c:	ea00002c 	b	40017c54 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017ba0:	e28d1014 	add	r1, sp, #20
40017ba4:	e1a00008 	mov	r0, r8
40017ba8:	eb002ad6 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017bac:	e3570000 	cmp	r7, #0
40017bb0:	1a000003 	bne	40017bc4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017bb4:	e284001c 	add	r0, r4, #28
40017bb8:	e0800089 	add	r0, r0, r9, lsl #1
40017bbc:	e1c080b0 	strh	r8, [r0]
40017bc0:	ea00001e 	b	40017c40 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017bc4:	e284101c 	add	r1, r4, #28
40017bc8:	e0811089 	add	r1, r1, r9, lsl #1
40017bcc:	e1d100b0 	ldrh	r0, [r1]
40017bd0:	e28d1004 	add	r1, sp, #4
40017bd4:	eb002acb 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017bd8:	e59d0008 	ldr	r0, [sp, #8]
40017bdc:	e1a00720 	lsr	r0, r0, #14
40017be0:	e1a00700 	lsl	r0, r0, #14
40017be4:	e58d0008 	str	r0, [sp, #8]
40017be8:	e284102c 	add	r1, r4, #44	; 0x2c
40017bec:	e0811089 	add	r1, r1, r9, lsl #1
40017bf0:	e59d0008 	ldr	r0, [sp, #8]
40017bf4:	e1d110b0 	ldrh	r1, [r1]
40017bf8:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017bfc:	e1800001 	orr	r0, r0, r1
40017c00:	e58d0008 	str	r0, [sp, #8]
40017c04:	e59d000c 	ldr	r0, [sp, #12]
40017c08:	e1a00820 	lsr	r0, r0, #16
40017c0c:	e1a00800 	lsl	r0, r0, #16
40017c10:	e58d000c 	str	r0, [sp, #12]
40017c14:	e59d000c 	ldr	r0, [sp, #12]
40017c18:	e1800008 	orr	r0, r0, r8
40017c1c:	e58d000c 	str	r0, [sp, #12]
40017c20:	e284101c 	add	r1, r4, #28
40017c24:	e0811089 	add	r1, r1, r9, lsl #1
40017c28:	e1d100b0 	ldrh	r0, [r1]
40017c2c:	e28d1004 	add	r1, sp, #4
40017c30:	eb002acf 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017c34:	e284001c 	add	r0, r4, #28
40017c38:	e0800089 	add	r0, r0, r9, lsl #1
40017c3c:	e1c080b0 	strh	r8, [r0]
40017c40:	e59d001c 	ldr	r0, [sp, #28]
40017c44:	e59f11c4 	ldr	r1, [pc, #452]	; 40017e10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017c48:	e0018820 	and	r8, r1, r0, lsr #16
40017c4c:	e2890001 	add	r0, r9, #1
40017c50:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017c54:	e1d400ba 	ldrh	r0, [r4, #10]
40017c58:	e1500009 	cmp	r0, r9
40017c5c:	caffffcf 	bgt	40017ba0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017c60:	e2870001 	add	r0, r7, #1
40017c64:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c68:	e1d400b8 	ldrh	r0, [r4, #8]
40017c6c:	e1500007 	cmp	r0, r7
40017c70:	aaffffc8 	bge	40017b98 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017c74:	ea000059 	b	40017de0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017c78:	e3a07000 	mov	r7, #0
40017c7c:	e1d481b4 	ldrh	r8, [r4, #20]
40017c80:	ea000053 	b	40017dd4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017c84:	e3a09000 	mov	r9, #0
40017c88:	ea00004c 	b	40017dc0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017c8c:	e3570000 	cmp	r7, #0
40017c90:	1a00000b 	bne	40017cc4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017c94:	e284002c 	add	r0, r4, #44	; 0x2c
40017c98:	e0800089 	add	r0, r0, r9, lsl #1
40017c9c:	e1d000b0 	ldrh	r0, [r0]
40017ca0:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017ca4:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017ca8:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017cac:	e1d410b8 	ldrh	r1, [r4, #8]
40017cb0:	e284201c 	add	r2, r4, #28
40017cb4:	e0820089 	add	r0, r2, r9, lsl #1
40017cb8:	e1a03006 	mov	r3, r6
40017cbc:	e3a02000 	mov	r2, #0
40017cc0:	eb0029a1 	bl	4002234c <CyU3PDmaDscrChainCreate>
40017cc4:	e284101c 	add	r1, r4, #28
40017cc8:	e0811089 	add	r1, r1, r9, lsl #1
40017ccc:	e1d100b0 	ldrh	r0, [r1]
40017cd0:	e28d1004 	add	r1, sp, #4
40017cd4:	eb002a8b 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017cd8:	e28d1014 	add	r1, sp, #20
40017cdc:	e1a00008 	mov	r0, r8
40017ce0:	eb002a88 	bl	40022708 <CyU3PDmaDscrGetConfig>
40017ce4:	e59d0014 	ldr	r0, [sp, #20]
40017ce8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017cec:	e0800001 	add	r0, r0, r1
40017cf0:	e58d0004 	str	r0, [sp, #4]
40017cf4:	e1d400b6 	ldrh	r0, [r4, #6]
40017cf8:	e280000f 	add	r0, r0, #15
40017cfc:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017d00:	e0400001 	sub	r0, r0, r1
40017d04:	e59f1108 	ldr	r1, [pc, #264]	; 40017e14 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017d08:	e0000001 	and	r0, r0, r1
40017d0c:	e58d0010 	str	r0, [sp, #16]
40017d10:	e59d000c 	ldr	r0, [sp, #12]
40017d14:	e1a00800 	lsl	r0, r0, #16
40017d18:	e1a00820 	lsr	r0, r0, #16
40017d1c:	e58d000c 	str	r0, [sp, #12]
40017d20:	e59d000c 	ldr	r0, [sp, #12]
40017d24:	e1800808 	orr	r0, r0, r8, lsl #16
40017d28:	e58d000c 	str	r0, [sp, #12]
40017d2c:	e284101c 	add	r1, r4, #28
40017d30:	e0811089 	add	r1, r1, r9, lsl #1
40017d34:	e1d100b0 	ldrh	r0, [r1]
40017d38:	e28d1004 	add	r1, sp, #4
40017d3c:	eb002a8c 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017d40:	e59d0014 	ldr	r0, [sp, #20]
40017d44:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017d48:	e0800001 	add	r0, r0, r1
40017d4c:	e58d0014 	str	r0, [sp, #20]
40017d50:	e1d400b6 	ldrh	r0, [r4, #6]
40017d54:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017d58:	e0400001 	sub	r0, r0, r1
40017d5c:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017d60:	e0400001 	sub	r0, r0, r1
40017d64:	e58d0020 	str	r0, [sp, #32]
40017d68:	e59d001c 	ldr	r0, [sp, #28]
40017d6c:	e1a00820 	lsr	r0, r0, #16
40017d70:	e1a00800 	lsl	r0, r0, #16
40017d74:	e58d001c 	str	r0, [sp, #28]
40017d78:	e284101c 	add	r1, r4, #28
40017d7c:	e0811089 	add	r1, r1, r9, lsl #1
40017d80:	e59d001c 	ldr	r0, [sp, #28]
40017d84:	e1d110b0 	ldrh	r1, [r1]
40017d88:	e1800001 	orr	r0, r0, r1
40017d8c:	e58d001c 	str	r0, [sp, #28]
40017d90:	e28d1014 	add	r1, sp, #20
40017d94:	e1a00008 	mov	r0, r8
40017d98:	eb002a75 	bl	40022774 <CyU3PDmaDscrSetConfig>
40017d9c:	e59d001c 	ldr	r0, [sp, #28]
40017da0:	e59f1068 	ldr	r1, [pc, #104]	; 40017e10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017da4:	e0018820 	and	r8, r1, r0, lsr #16
40017da8:	e284101c 	add	r1, r4, #28
40017dac:	e0811089 	add	r1, r1, r9, lsl #1
40017db0:	e59d000c 	ldr	r0, [sp, #12]
40017db4:	e1c100b0 	strh	r0, [r1]
40017db8:	e2890001 	add	r0, r9, #1
40017dbc:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017dc0:	e1d400ba 	ldrh	r0, [r4, #10]
40017dc4:	e1500009 	cmp	r0, r9
40017dc8:	caffffaf 	bgt	40017c8c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017dcc:	e2870001 	add	r0, r7, #1
40017dd0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017dd4:	e1d400b8 	ldrh	r0, [r4, #8]
40017dd8:	e1500007 	cmp	r0, r7
40017ddc:	caffffa8 	bgt	40017c84 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017de0:	e1d401b4 	ldrh	r0, [r4, #20]
40017de4:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017de8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017dec:	e1d401bc 	ldrh	r0, [r4, #28]
40017df0:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017df4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017df8:	e2840034 	add	r0, r4, #52	; 0x34
40017dfc:	eb0029c9 	bl	40022528 <CyU3PDmaDscrGet>
40017e00:	e1a00004 	mov	r0, r4
40017e04:	eb0004a3 	bl	40019098 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017e08:	e3a00000 	mov	r0, #0
40017e0c:	eaffff59 	b	40017b78 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017e10:	0000ffff 	.word	0x0000ffff
40017e14:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017e18 <CyU3PDmaMultiChannelCreate>:
40017e18:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017e1c:	e1a04000 	mov	r4, r0
40017e20:	e1a05001 	mov	r5, r1
40017e24:	e1a06002 	mov	r6, r2
40017e28:	e3560000 	cmp	r6, #0
40017e2c:	1a000001 	bne	40017e38 <CyU3PDmaMultiChannelCreate+0x20>
40017e30:	e3a00041 	mov	r0, #65	; 0x41
40017e34:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017e38:	e3540000 	cmp	r4, #0
40017e3c:	1a000001 	bne	40017e48 <CyU3PDmaMultiChannelCreate+0x30>
40017e40:	e3a00041 	mov	r0, #65	; 0x41
40017e44:	eafffffa 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017e48:	e1d600b2 	ldrh	r0, [r6, #2]
40017e4c:	e3500000 	cmp	r0, #0
40017e50:	1a000001 	bne	40017e5c <CyU3PDmaMultiChannelCreate+0x44>
40017e54:	e3a00040 	mov	r0, #64	; 0x40
40017e58:	eafffff5 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017e5c:	e1d600b4 	ldrh	r0, [r6, #4]
40017e60:	e3500002 	cmp	r0, #2
40017e64:	ba000002 	blt	40017e74 <CyU3PDmaMultiChannelCreate+0x5c>
40017e68:	e1d600b4 	ldrh	r0, [r6, #4]
40017e6c:	e3500004 	cmp	r0, #4
40017e70:	da000001 	ble	40017e7c <CyU3PDmaMultiChannelCreate+0x64>
40017e74:	e3a00040 	mov	r0, #64	; 0x40
40017e78:	eaffffed 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017e7c:	e3550006 	cmp	r5, #6
40017e80:	0a000001 	beq	40017e8c <CyU3PDmaMultiChannelCreate+0x74>
40017e84:	e3550005 	cmp	r5, #5
40017e88:	1a000007 	bne	40017eac <CyU3PDmaMultiChannelCreate+0x94>
40017e8c:	eb0029dd 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
40017e90:	e1d610b2 	ldrh	r1, [r6, #2]
40017e94:	e1d620b4 	ldrh	r2, [r6, #4]
40017e98:	e0010192 	mul	r1, r2, r1
40017e9c:	e1500001 	cmp	r0, r1
40017ea0:	ca000016 	bgt	40017f00 <CyU3PDmaMultiChannelCreate+0xe8>
40017ea4:	e3a00010 	mov	r0, #16
40017ea8:	eaffffe1 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017eac:	e3550008 	cmp	r5, #8
40017eb0:	0a000001 	beq	40017ebc <CyU3PDmaMultiChannelCreate+0xa4>
40017eb4:	e3550007 	cmp	r5, #7
40017eb8:	1a000007 	bne	40017edc <CyU3PDmaMultiChannelCreate+0xc4>
40017ebc:	eb0029d1 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
40017ec0:	e1d610b2 	ldrh	r1, [r6, #2]
40017ec4:	e1d620b4 	ldrh	r2, [r6, #4]
40017ec8:	e0010192 	mul	r1, r2, r1
40017ecc:	e1500081 	cmp	r0, r1, lsl #1
40017ed0:	ca00000a 	bgt	40017f00 <CyU3PDmaMultiChannelCreate+0xe8>
40017ed4:	e3a00010 	mov	r0, #16
40017ed8:	eaffffd5 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017edc:	eb0029c9 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
40017ee0:	e1d610b2 	ldrh	r1, [r6, #2]
40017ee4:	e1d620b4 	ldrh	r2, [r6, #4]
40017ee8:	e2822001 	add	r2, r2, #1
40017eec:	e0010192 	mul	r1, r2, r1
40017ef0:	e1500001 	cmp	r0, r1
40017ef4:	ca000001 	bgt	40017f00 <CyU3PDmaMultiChannelCreate+0xe8>
40017ef8:	e3a00010 	mov	r0, #16
40017efc:	eaffffcc 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017f00:	e1d600b0 	ldrh	r0, [r6]
40017f04:	e3500000 	cmp	r0, #0
40017f08:	0a000003 	beq	40017f1c <CyU3PDmaMultiChannelCreate+0x104>
40017f0c:	e1d600b0 	ldrh	r0, [r6]
40017f10:	e59f1634 	ldr	r1, [pc, #1588]	; 4001854c <CyU3PDmaMultiChannelCreate+0x734>
40017f14:	e1500001 	cmp	r0, r1
40017f18:	da000001 	ble	40017f24 <CyU3PDmaMultiChannelCreate+0x10c>
40017f1c:	e3a00040 	mov	r0, #64	; 0x40
40017f20:	eaffffc3 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017f24:	e3550005 	cmp	r5, #5
40017f28:	0a000001 	beq	40017f34 <CyU3PDmaMultiChannelCreate+0x11c>
40017f2c:	e3550006 	cmp	r5, #6
40017f30:	1a000004 	bne	40017f48 <CyU3PDmaMultiChannelCreate+0x130>
40017f34:	e1d600b0 	ldrh	r0, [r6]
40017f38:	e310000f 	tst	r0, #15
40017f3c:	0a00000b 	beq	40017f70 <CyU3PDmaMultiChannelCreate+0x158>
40017f40:	e3a00040 	mov	r0, #64	; 0x40
40017f44:	eaffffba 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017f48:	e1d600b0 	ldrh	r0, [r6]
40017f4c:	e1d611b8 	ldrh	r1, [r6, #24]
40017f50:	e0400001 	sub	r0, r0, r1
40017f54:	e1d611ba 	ldrh	r1, [r6, #26]
40017f58:	e0400001 	sub	r0, r0, r1
40017f5c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017f60:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017f64:	0a000001 	beq	40017f70 <CyU3PDmaMultiChannelCreate+0x158>
40017f68:	e3a00040 	mov	r0, #64	; 0x40
40017f6c:	eaffffb0 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017f70:	e5d6001e 	ldrb	r0, [r6, #30]
40017f74:	e3500002 	cmp	r0, #2
40017f78:	ba000001 	blt	40017f84 <CyU3PDmaMultiChannelCreate+0x16c>
40017f7c:	e3a00040 	mov	r0, #64	; 0x40
40017f80:	eaffffab 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017f84:	e3550005 	cmp	r5, #5
40017f88:	0a000001 	beq	40017f94 <CyU3PDmaMultiChannelCreate+0x17c>
40017f8c:	e3550007 	cmp	r5, #7
40017f90:	1a000065 	bne	4001812c <CyU3PDmaMultiChannelCreate+0x314>
40017f94:	e1d601b6 	ldrh	r0, [r6, #22]
40017f98:	e3500000 	cmp	r0, #0
40017f9c:	0a000008 	beq	40017fc4 <CyU3PDmaMultiChannelCreate+0x1ac>
40017fa0:	e1d601b6 	ldrh	r0, [r6, #22]
40017fa4:	e1d610b2 	ldrh	r1, [r6, #2]
40017fa8:	e1500001 	cmp	r0, r1
40017fac:	aa000002 	bge	40017fbc <CyU3PDmaMultiChannelCreate+0x1a4>
40017fb0:	e1d600b2 	ldrh	r0, [r6, #2]
40017fb4:	e350001f 	cmp	r0, #31
40017fb8:	da000001 	ble	40017fc4 <CyU3PDmaMultiChannelCreate+0x1ac>
40017fbc:	e3a00040 	mov	r0, #64	; 0x40
40017fc0:	eaffff9b 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40017fc4:	e3a09000 	mov	r9, #0
40017fc8:	ea00002b 	b	4001807c <CyU3PDmaMultiChannelCreate+0x264>
40017fcc:	e2860006 	add	r0, r6, #6
40017fd0:	e0800089 	add	r0, r0, r9, lsl #1
40017fd4:	e1d000b0 	ldrh	r0, [r0]
40017fd8:	e3a0103f 	mov	r1, #63	; 0x3f
40017fdc:	e0018440 	and	r8, r1, r0, asr #8
40017fe0:	e2860006 	add	r0, r6, #6
40017fe4:	e0800089 	add	r0, r0, r9, lsl #1
40017fe8:	e1d000b0 	ldrh	r0, [r0]
40017fec:	e20070ff 	and	r7, r0, #255	; 0xff
40017ff0:	e2861006 	add	r1, r6, #6
40017ff4:	e0811089 	add	r1, r1, r9, lsl #1
40017ff8:	e1d100b0 	ldrh	r0, [r1]
40017ffc:	ebfff3c4 	bl	40014f14 <CyU3PDmaSocketIsValidProducer>
40018000:	e3500000 	cmp	r0, #0
40018004:	1a000001 	bne	40018010 <CyU3PDmaMultiChannelCreate+0x1f8>
40018008:	e3a00040 	mov	r0, #64	; 0x40
4001800c:	eaffff88 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40018010:	e59f0538 	ldr	r0, [pc, #1336]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018014:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018018:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001801c:	e3500000 	cmp	r0, #0
40018020:	0a000001 	beq	4001802c <CyU3PDmaMultiChannelCreate+0x214>
40018024:	e3a00040 	mov	r0, #64	; 0x40
40018028:	eaffff81 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
4001802c:	e2890001 	add	r0, r9, #1
40018030:	e200a0ff 	and	sl, r0, #255	; 0xff
40018034:	ea00000b 	b	40018068 <CyU3PDmaMultiChannelCreate+0x250>
40018038:	e2860006 	add	r0, r6, #6
4001803c:	e0800089 	add	r0, r0, r9, lsl #1
40018040:	e1d000b0 	ldrh	r0, [r0]
40018044:	e2861006 	add	r1, r6, #6
40018048:	e081108a 	add	r1, r1, sl, lsl #1
4001804c:	e1d110b0 	ldrh	r1, [r1]
40018050:	e1500001 	cmp	r0, r1
40018054:	1a000001 	bne	40018060 <CyU3PDmaMultiChannelCreate+0x248>
40018058:	e3a00040 	mov	r0, #64	; 0x40
4001805c:	eaffff74 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40018060:	e28a0001 	add	r0, sl, #1
40018064:	e200a0ff 	and	sl, r0, #255	; 0xff
40018068:	e1d600b4 	ldrh	r0, [r6, #4]
4001806c:	e150000a 	cmp	r0, sl
40018070:	cafffff0 	bgt	40018038 <CyU3PDmaMultiChannelCreate+0x220>
40018074:	e2890001 	add	r0, r9, #1
40018078:	e20090ff 	and	r9, r0, #255	; 0xff
4001807c:	e1d600b4 	ldrh	r0, [r6, #4]
40018080:	e1500009 	cmp	r0, r9
40018084:	caffffd0 	bgt	40017fcc <CyU3PDmaMultiChannelCreate+0x1b4>
40018088:	e1d600be 	ldrh	r0, [r6, #14]
4001808c:	e3a0103f 	mov	r1, #63	; 0x3f
40018090:	e0018440 	and	r8, r1, r0, asr #8
40018094:	e1d600be 	ldrh	r0, [r6, #14]
40018098:	e20070ff 	and	r7, r0, #255	; 0xff
4001809c:	e1d600be 	ldrh	r0, [r6, #14]
400180a0:	ebfff363 	bl	40014e34 <CyU3PDmaSocketIsValidConsumer>
400180a4:	e3500000 	cmp	r0, #0
400180a8:	1a000001 	bne	400180b4 <CyU3PDmaMultiChannelCreate+0x29c>
400180ac:	e3a00040 	mov	r0, #64	; 0x40
400180b0:	eaffff5f 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
400180b4:	e59f0494 	ldr	r0, [pc, #1172]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
400180b8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400180bc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400180c0:	e3500000 	cmp	r0, #0
400180c4:	0a000001 	beq	400180d0 <CyU3PDmaMultiChannelCreate+0x2b8>
400180c8:	e3a00040 	mov	r0, #64	; 0x40
400180cc:	eaffff58 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
400180d0:	e59f0478 	ldr	r0, [pc, #1144]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
400180d4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400180d8:	e7804107 	str	r4, [r0, r7, lsl #2]
400180dc:	e3a09000 	mov	r9, #0
400180e0:	ea00000d 	b	4001811c <CyU3PDmaMultiChannelCreate+0x304>
400180e4:	e2860006 	add	r0, r6, #6
400180e8:	e0800089 	add	r0, r0, r9, lsl #1
400180ec:	e1d000b0 	ldrh	r0, [r0]
400180f0:	e3a0103f 	mov	r1, #63	; 0x3f
400180f4:	e0018440 	and	r8, r1, r0, asr #8
400180f8:	e2860006 	add	r0, r6, #6
400180fc:	e0800089 	add	r0, r0, r9, lsl #1
40018100:	e1d000b0 	ldrh	r0, [r0]
40018104:	e20070ff 	and	r7, r0, #255	; 0xff
40018108:	e59f0440 	ldr	r0, [pc, #1088]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
4001810c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018110:	e7804107 	str	r4, [r0, r7, lsl #2]
40018114:	e2890001 	add	r0, r9, #1
40018118:	e20090ff 	and	r9, r0, #255	; 0xff
4001811c:	e1d600b4 	ldrh	r0, [r6, #4]
40018120:	e1500009 	cmp	r0, r9
40018124:	caffffee 	bgt	400180e4 <CyU3PDmaMultiChannelCreate+0x2cc>
40018128:	ea00005d 	b	400182a4 <CyU3PDmaMultiChannelCreate+0x48c>
4001812c:	e1d601b6 	ldrh	r0, [r6, #22]
40018130:	e3500000 	cmp	r0, #0
40018134:	0a000001 	beq	40018140 <CyU3PDmaMultiChannelCreate+0x328>
40018138:	e3a00040 	mov	r0, #64	; 0x40
4001813c:	eaffff3c 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40018140:	e3a09000 	mov	r9, #0
40018144:	ea00002b 	b	400181f8 <CyU3PDmaMultiChannelCreate+0x3e0>
40018148:	e286000e 	add	r0, r6, #14
4001814c:	e0800089 	add	r0, r0, r9, lsl #1
40018150:	e1d000b0 	ldrh	r0, [r0]
40018154:	e3a0103f 	mov	r1, #63	; 0x3f
40018158:	e0018440 	and	r8, r1, r0, asr #8
4001815c:	e286000e 	add	r0, r6, #14
40018160:	e0800089 	add	r0, r0, r9, lsl #1
40018164:	e1d000b0 	ldrh	r0, [r0]
40018168:	e20070ff 	and	r7, r0, #255	; 0xff
4001816c:	e286100e 	add	r1, r6, #14
40018170:	e0811089 	add	r1, r1, r9, lsl #1
40018174:	e1d100b0 	ldrh	r0, [r1]
40018178:	ebfff32d 	bl	40014e34 <CyU3PDmaSocketIsValidConsumer>
4001817c:	e3500000 	cmp	r0, #0
40018180:	1a000001 	bne	4001818c <CyU3PDmaMultiChannelCreate+0x374>
40018184:	e3a00040 	mov	r0, #64	; 0x40
40018188:	eaffff29 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
4001818c:	e59f03bc 	ldr	r0, [pc, #956]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018190:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018194:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018198:	e3500000 	cmp	r0, #0
4001819c:	0a000001 	beq	400181a8 <CyU3PDmaMultiChannelCreate+0x390>
400181a0:	e3a00040 	mov	r0, #64	; 0x40
400181a4:	eaffff22 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
400181a8:	e2890001 	add	r0, r9, #1
400181ac:	e200a0ff 	and	sl, r0, #255	; 0xff
400181b0:	ea00000b 	b	400181e4 <CyU3PDmaMultiChannelCreate+0x3cc>
400181b4:	e286000e 	add	r0, r6, #14
400181b8:	e0800089 	add	r0, r0, r9, lsl #1
400181bc:	e1d000b0 	ldrh	r0, [r0]
400181c0:	e286100e 	add	r1, r6, #14
400181c4:	e081108a 	add	r1, r1, sl, lsl #1
400181c8:	e1d110b0 	ldrh	r1, [r1]
400181cc:	e1500001 	cmp	r0, r1
400181d0:	1a000001 	bne	400181dc <CyU3PDmaMultiChannelCreate+0x3c4>
400181d4:	e3a00040 	mov	r0, #64	; 0x40
400181d8:	eaffff15 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
400181dc:	e28a0001 	add	r0, sl, #1
400181e0:	e200a0ff 	and	sl, r0, #255	; 0xff
400181e4:	e1d600b4 	ldrh	r0, [r6, #4]
400181e8:	e150000a 	cmp	r0, sl
400181ec:	cafffff0 	bgt	400181b4 <CyU3PDmaMultiChannelCreate+0x39c>
400181f0:	e2890001 	add	r0, r9, #1
400181f4:	e20090ff 	and	r9, r0, #255	; 0xff
400181f8:	e1d600b4 	ldrh	r0, [r6, #4]
400181fc:	e1500009 	cmp	r0, r9
40018200:	caffffd0 	bgt	40018148 <CyU3PDmaMultiChannelCreate+0x330>
40018204:	e1d600b6 	ldrh	r0, [r6, #6]
40018208:	e3a0103f 	mov	r1, #63	; 0x3f
4001820c:	e0018440 	and	r8, r1, r0, asr #8
40018210:	e1d600b6 	ldrh	r0, [r6, #6]
40018214:	e20070ff 	and	r7, r0, #255	; 0xff
40018218:	e1d600b6 	ldrh	r0, [r6, #6]
4001821c:	ebfff33c 	bl	40014f14 <CyU3PDmaSocketIsValidProducer>
40018220:	e3500000 	cmp	r0, #0
40018224:	1a000001 	bne	40018230 <CyU3PDmaMultiChannelCreate+0x418>
40018228:	e3a00040 	mov	r0, #64	; 0x40
4001822c:	eaffff00 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
40018230:	e59f0318 	ldr	r0, [pc, #792]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018234:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018238:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001823c:	e3500000 	cmp	r0, #0
40018240:	0a000001 	beq	4001824c <CyU3PDmaMultiChannelCreate+0x434>
40018244:	e3a00040 	mov	r0, #64	; 0x40
40018248:	eafffef9 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
4001824c:	e59f02fc 	ldr	r0, [pc, #764]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018250:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018254:	e7804107 	str	r4, [r0, r7, lsl #2]
40018258:	e3a09000 	mov	r9, #0
4001825c:	ea00000d 	b	40018298 <CyU3PDmaMultiChannelCreate+0x480>
40018260:	e286000e 	add	r0, r6, #14
40018264:	e0800089 	add	r0, r0, r9, lsl #1
40018268:	e1d000b0 	ldrh	r0, [r0]
4001826c:	e3a0103f 	mov	r1, #63	; 0x3f
40018270:	e0018440 	and	r8, r1, r0, asr #8
40018274:	e286000e 	add	r0, r6, #14
40018278:	e0800089 	add	r0, r0, r9, lsl #1
4001827c:	e1d000b0 	ldrh	r0, [r0]
40018280:	e20070ff 	and	r7, r0, #255	; 0xff
40018284:	e59f02c4 	ldr	r0, [pc, #708]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018288:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001828c:	e7804107 	str	r4, [r0, r7, lsl #2]
40018290:	e2890001 	add	r0, r9, #1
40018294:	e20090ff 	and	r9, r0, #255	; 0xff
40018298:	e1d600b4 	ldrh	r0, [r6, #4]
4001829c:	e1500009 	cmp	r0, r9
400182a0:	caffffee 	bgt	40018260 <CyU3PDmaMultiChannelCreate+0x448>
400182a4:	e1c450b4 	strh	r5, [r4, #4]
400182a8:	e1d600b0 	ldrh	r0, [r6]
400182ac:	e1c400b6 	strh	r0, [r4, #6]
400182b0:	e1d600b2 	ldrh	r0, [r6, #2]
400182b4:	e1c400b8 	strh	r0, [r4, #8]
400182b8:	e1d601b6 	ldrh	r0, [r6, #22]
400182bc:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
400182c0:	e1d600b4 	ldrh	r0, [r6, #4]
400182c4:	e1c400ba 	strh	r0, [r4, #10]
400182c8:	e3a09000 	mov	r9, #0
400182cc:	ea000014 	b	40018324 <CyU3PDmaMultiChannelCreate+0x50c>
400182d0:	e2860006 	add	r0, r6, #6
400182d4:	e0800089 	add	r0, r0, r9, lsl #1
400182d8:	e1d000b0 	ldrh	r0, [r0]
400182dc:	e2841024 	add	r1, r4, #36	; 0x24
400182e0:	e0811089 	add	r1, r1, r9, lsl #1
400182e4:	e1c100b0 	strh	r0, [r1]
400182e8:	e286000e 	add	r0, r6, #14
400182ec:	e0800089 	add	r0, r0, r9, lsl #1
400182f0:	e1d000b0 	ldrh	r0, [r0]
400182f4:	e284102c 	add	r1, r4, #44	; 0x2c
400182f8:	e0811089 	add	r1, r1, r9, lsl #1
400182fc:	e1c100b0 	strh	r0, [r1]
40018300:	e3a00000 	mov	r0, #0
40018304:	e284105c 	add	r1, r4, #92	; 0x5c
40018308:	e0811089 	add	r1, r1, r9, lsl #1
4001830c:	e1c100b0 	strh	r0, [r1]
40018310:	e2841064 	add	r1, r4, #100	; 0x64
40018314:	e0811089 	add	r1, r1, r9, lsl #1
40018318:	e1c100b0 	strh	r0, [r1]
4001831c:	e2890001 	add	r0, r9, #1
40018320:	e20090ff 	and	r9, r0, #255	; 0xff
40018324:	e3590004 	cmp	r9, #4
40018328:	baffffe8 	blt	400182d0 <CyU3PDmaMultiChannelCreate+0x4b8>
4001832c:	e1d601b8 	ldrh	r0, [r6, #24]
40018330:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
40018334:	e1d601ba 	ldrh	r0, [r6, #26]
40018338:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
4001833c:	e1d601bc 	ldrh	r0, [r6, #28]
40018340:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018344:	e5d6001e 	ldrb	r0, [r6, #30]
40018348:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
4001834c:	e5960020 	ldr	r0, [r6, #32]
40018350:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018354:	e3a03038 	mov	r3, #56	; 0x38
40018358:	e3a02000 	mov	r2, #0
4001835c:	e1a01002 	mov	r1, r2
40018360:	e2840078 	add	r0, r4, #120	; 0x78
40018364:	ebffc6c8 	bl	40009e8c <_txe_mutex_create>
40018368:	e3a02028 	mov	r2, #40	; 0x28
4001836c:	e3a01000 	mov	r1, #0
40018370:	e28400b0 	add	r0, r4, #176	; 0xb0
40018374:	ebffc60a 	bl	40009ba4 <_txe_event_flags_create>
40018378:	e5960024 	ldr	r0, [r6, #36]	; 0x24
4001837c:	e58400d8 	str	r0, [r4, #216]	; 0xd8
40018380:	e59f01cc 	ldr	r0, [pc, #460]	; 40018554 <CyU3PDmaMultiChannelCreate+0x73c>
40018384:	e5900000 	ldr	r0, [r0]
40018388:	e5840074 	str	r0, [r4, #116]	; 0x74
4001838c:	e2450005 	sub	r0, r5, #5
40018390:	e3500005 	cmp	r0, #5
40018394:	308ff100 	addcc	pc, pc, r0, lsl #2
40018398:	ea00001d 	b	40018414 <CyU3PDmaMultiChannelCreate+0x5fc>
4001839c:	ea000003 	b	400183b0 <CyU3PDmaMultiChannelCreate+0x598>
400183a0:	ea000008 	b	400183c8 <CyU3PDmaMultiChannelCreate+0x5b0>
400183a4:	ea000003 	b	400183b8 <CyU3PDmaMultiChannelCreate+0x5a0>
400183a8:	ea000008 	b	400183d0 <CyU3PDmaMultiChannelCreate+0x5b8>
400183ac:	ea00000b 	b	400183e0 <CyU3PDmaMultiChannelCreate+0x5c8>
400183b0:	e1a00000 	nop			; (mov r0, r0)
400183b4:	e1a00000 	nop			; (mov r0, r0)
400183b8:	e1a00004 	mov	r0, r4
400183bc:	ebfffd1c 	bl	40017834 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
400183c0:	e1a0b000 	mov	fp, r0
400183c4:	ea000015 	b	40018420 <CyU3PDmaMultiChannelCreate+0x608>
400183c8:	e1a00000 	nop			; (mov r0, r0)
400183cc:	e1a00000 	nop			; (mov r0, r0)
400183d0:	e1a00004 	mov	r0, r4
400183d4:	ebfffdd1 	bl	40017b20 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
400183d8:	e1a0b000 	mov	fp, r0
400183dc:	ea00000f 	b	40018420 <CyU3PDmaMultiChannelCreate+0x608>
400183e0:	e1a00000 	nop			; (mov r0, r0)
400183e4:	e59f016c 	ldr	r0, [pc, #364]	; 40018558 <CyU3PDmaMultiChannelCreate+0x740>
400183e8:	e5900000 	ldr	r0, [r0]
400183ec:	e3500000 	cmp	r0, #0
400183f0:	1a000001 	bne	400183fc <CyU3PDmaMultiChannelCreate+0x5e4>
400183f4:	e3a0b047 	mov	fp, #71	; 0x47
400183f8:	ea000004 	b	40018410 <CyU3PDmaMultiChannelCreate+0x5f8>
400183fc:	e1a00004 	mov	r0, r4
40018400:	e59f1150 	ldr	r1, [pc, #336]	; 40018558 <CyU3PDmaMultiChannelCreate+0x740>
40018404:	e5911000 	ldr	r1, [r1]
40018408:	e12fff31 	blx	r1
4001840c:	e1a0b000 	mov	fp, r0
40018410:	ea000002 	b	40018420 <CyU3PDmaMultiChannelCreate+0x608>
40018414:	e1a00000 	nop			; (mov r0, r0)
40018418:	e3a0b040 	mov	fp, #64	; 0x40
4001841c:	e1a00000 	nop			; (mov r0, r0)
40018420:	e1a00000 	nop			; (mov r0, r0)
40018424:	e35b0000 	cmp	fp, #0
40018428:	1a000002 	bne	40018438 <CyU3PDmaMultiChannelCreate+0x620>
4001842c:	e3a00001 	mov	r0, #1
40018430:	e5840000 	str	r0, [r4]
40018434:	ea000042 	b	40018544 <CyU3PDmaMultiChannelCreate+0x72c>
40018438:	e2840078 	add	r0, r4, #120	; 0x78
4001843c:	ebffc6f0 	bl	4000a004 <_txe_mutex_delete>
40018440:	e28400b0 	add	r0, r4, #176	; 0xb0
40018444:	ebffc626 	bl	40009ce4 <_txe_event_flags_delete>
40018448:	e3550005 	cmp	r5, #5
4001844c:	0a000001 	beq	40018458 <CyU3PDmaMultiChannelCreate+0x640>
40018450:	e3550007 	cmp	r5, #7
40018454:	1a00001d 	bne	400184d0 <CyU3PDmaMultiChannelCreate+0x6b8>
40018458:	e1d600be 	ldrh	r0, [r6, #14]
4001845c:	e3a0103f 	mov	r1, #63	; 0x3f
40018460:	e0018440 	and	r8, r1, r0, asr #8
40018464:	e1d600be 	ldrh	r0, [r6, #14]
40018468:	e20070ff 	and	r7, r0, #255	; 0xff
4001846c:	e3a00000 	mov	r0, #0
40018470:	e59f10d8 	ldr	r1, [pc, #216]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018474:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018478:	e7810107 	str	r0, [r1, r7, lsl #2]
4001847c:	e3a09000 	mov	r9, #0
40018480:	ea00000e 	b	400184c0 <CyU3PDmaMultiChannelCreate+0x6a8>
40018484:	e2860006 	add	r0, r6, #6
40018488:	e0800089 	add	r0, r0, r9, lsl #1
4001848c:	e1d000b0 	ldrh	r0, [r0]
40018490:	e3a0103f 	mov	r1, #63	; 0x3f
40018494:	e0018440 	and	r8, r1, r0, asr #8
40018498:	e2860006 	add	r0, r6, #6
4001849c:	e0800089 	add	r0, r0, r9, lsl #1
400184a0:	e1d000b0 	ldrh	r0, [r0]
400184a4:	e20070ff 	and	r7, r0, #255	; 0xff
400184a8:	e3a00000 	mov	r0, #0
400184ac:	e59f109c 	ldr	r1, [pc, #156]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
400184b0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400184b4:	e7810107 	str	r0, [r1, r7, lsl #2]
400184b8:	e2890001 	add	r0, r9, #1
400184bc:	e20090ff 	and	r9, r0, #255	; 0xff
400184c0:	e1d600b4 	ldrh	r0, [r6, #4]
400184c4:	e1500009 	cmp	r0, r9
400184c8:	caffffed 	bgt	40018484 <CyU3PDmaMultiChannelCreate+0x66c>
400184cc:	ea00001c 	b	40018544 <CyU3PDmaMultiChannelCreate+0x72c>
400184d0:	e1d600b6 	ldrh	r0, [r6, #6]
400184d4:	e3a0103f 	mov	r1, #63	; 0x3f
400184d8:	e0018440 	and	r8, r1, r0, asr #8
400184dc:	e1d600b6 	ldrh	r0, [r6, #6]
400184e0:	e20070ff 	and	r7, r0, #255	; 0xff
400184e4:	e3a00000 	mov	r0, #0
400184e8:	e59f1060 	ldr	r1, [pc, #96]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
400184ec:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400184f0:	e7810107 	str	r0, [r1, r7, lsl #2]
400184f4:	e3a09000 	mov	r9, #0
400184f8:	ea00000e 	b	40018538 <CyU3PDmaMultiChannelCreate+0x720>
400184fc:	e286000e 	add	r0, r6, #14
40018500:	e0800089 	add	r0, r0, r9, lsl #1
40018504:	e1d000b0 	ldrh	r0, [r0]
40018508:	e3a0103f 	mov	r1, #63	; 0x3f
4001850c:	e0018440 	and	r8, r1, r0, asr #8
40018510:	e286000e 	add	r0, r6, #14
40018514:	e0800089 	add	r0, r0, r9, lsl #1
40018518:	e1d000b0 	ldrh	r0, [r0]
4001851c:	e20070ff 	and	r7, r0, #255	; 0xff
40018520:	e3a00000 	mov	r0, #0
40018524:	e59f1024 	ldr	r1, [pc, #36]	; 40018550 <CyU3PDmaMultiChannelCreate+0x738>
40018528:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001852c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018530:	e2890001 	add	r0, r9, #1
40018534:	e20090ff 	and	r9, r0, #255	; 0xff
40018538:	e1d600b4 	ldrh	r0, [r6, #4]
4001853c:	e1500009 	cmp	r0, r9
40018540:	caffffed 	bgt	400184fc <CyU3PDmaMultiChannelCreate+0x6e4>
40018544:	e1a0000b 	mov	r0, fp
40018548:	eafffe39 	b	40017e34 <CyU3PDmaMultiChannelCreate+0x1c>
4001854c:	0000fff0 	.word	0x0000fff0
40018550:	4003118c 	.word	0x4003118c
40018554:	400310f0 	.word	0x400310f0
40018558:	40031178 	.word	0x40031178

Disassembly of section i.CyU3PDmaMultiChannelReset:

4001855c <CyU3PDmaMultiChannelReset>:
4001855c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40018560:	e1a04000 	mov	r4, r0
40018564:	e3e01000 	mvn	r1, #0
40018568:	e1a00004 	mov	r0, r4
4001856c:	ebfffbab 	bl	40017420 <CyU3PDmaMultiChannelAcquireLock>
40018570:	e1a06000 	mov	r6, r0
40018574:	e3560000 	cmp	r6, #0
40018578:	0a000001 	beq	40018584 <CyU3PDmaMultiChannelReset+0x28>
4001857c:	e1a00006 	mov	r0, r6
40018580:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018584:	e1d400b4 	ldrh	r0, [r4, #4]
40018588:	e2400005 	sub	r0, r0, #5
4001858c:	e3500005 	cmp	r0, #5
40018590:	308ff100 	addcc	pc, pc, r0, lsl #2
40018594:	ea00001a 	b	40018604 <CyU3PDmaMultiChannelReset+0xa8>
40018598:	ea000003 	b	400185ac <CyU3PDmaMultiChannelReset+0x50>
4001859c:	ea000007 	b	400185c0 <CyU3PDmaMultiChannelReset+0x64>
400185a0:	ea000003 	b	400185b4 <CyU3PDmaMultiChannelReset+0x58>
400185a4:	ea000007 	b	400185c8 <CyU3PDmaMultiChannelReset+0x6c>
400185a8:	ea000009 	b	400185d4 <CyU3PDmaMultiChannelReset+0x78>
400185ac:	e1a00000 	nop			; (mov r0, r0)
400185b0:	e1a00000 	nop			; (mov r0, r0)
400185b4:	e1a00004 	mov	r0, r4
400185b8:	eb00003c 	bl	400186b0 <CyU3PDmaMultiChannelReset_TypeManyToOne>
400185bc:	ea000012 	b	4001860c <CyU3PDmaMultiChannelReset+0xb0>
400185c0:	e1a00000 	nop			; (mov r0, r0)
400185c4:	e1a00000 	nop			; (mov r0, r0)
400185c8:	e1a00004 	mov	r0, r4
400185cc:	eb000083 	bl	400187e0 <CyU3PDmaMultiChannelReset_TypeOneToMany>
400185d0:	ea00000d 	b	4001860c <CyU3PDmaMultiChannelReset+0xb0>
400185d4:	e1a00000 	nop			; (mov r0, r0)
400185d8:	e59f00cc 	ldr	r0, [pc, #204]	; 400186ac <CyU3PDmaMultiChannelReset+0x150>
400185dc:	e5900000 	ldr	r0, [r0]
400185e0:	e3500000 	cmp	r0, #0
400185e4:	1a000001 	bne	400185f0 <CyU3PDmaMultiChannelReset+0x94>
400185e8:	e3a00047 	mov	r0, #71	; 0x47
400185ec:	eaffffe3 	b	40018580 <CyU3PDmaMultiChannelReset+0x24>
400185f0:	e1a00004 	mov	r0, r4
400185f4:	e59f10b0 	ldr	r1, [pc, #176]	; 400186ac <CyU3PDmaMultiChannelReset+0x150>
400185f8:	e5911000 	ldr	r1, [r1]
400185fc:	e12fff31 	blx	r1
40018600:	ea000001 	b	4001860c <CyU3PDmaMultiChannelReset+0xb0>
40018604:	e1a00000 	nop			; (mov r0, r0)
40018608:	e1a00000 	nop			; (mov r0, r0)
4001860c:	e1a00000 	nop			; (mov r0, r0)
40018610:	ebffc086 	bl	40008830 <_tx_thread_identify>
40018614:	e1a05000 	mov	r5, r0
40018618:	e3550000 	cmp	r5, #0
4001861c:	0a000003 	beq	40018630 <CyU3PDmaMultiChannelReset+0xd4>
40018620:	e1a0200d 	mov	r2, sp
40018624:	e3a01002 	mov	r1, #2
40018628:	e1a00005 	mov	r0, r5
4001862c:	ebffc88d 	bl	4000a868 <_txe_thread_priority_change>
40018630:	e3a02002 	mov	r2, #2
40018634:	e3e01047 	mvn	r1, #71	; 0x47
40018638:	e28400b0 	add	r0, r4, #176	; 0xb0
4001863c:	ebffc5f8 	bl	40009e24 <_txe_event_flags_set>
40018640:	e3a02000 	mov	r2, #0
40018644:	e3a01020 	mov	r1, #32
40018648:	e28400b0 	add	r0, r4, #176	; 0xb0
4001864c:	ebffc5f4 	bl	40009e24 <_txe_event_flags_set>
40018650:	e3a00001 	mov	r0, #1
40018654:	e5840000 	str	r0, [r4]
40018658:	e2840078 	add	r0, r4, #120	; 0x78
4001865c:	ebffc6bd 	bl	4000a158 <_txe_mutex_put>
40018660:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018664:	e3500000 	cmp	r0, #0
40018668:	0a000007 	beq	4001868c <CyU3PDmaMultiChannelReset+0x130>
4001866c:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
40018670:	e3100020 	tst	r0, #32
40018674:	0a000004 	beq	4001868c <CyU3PDmaMultiChannelReset+0x130>
40018678:	e3a02000 	mov	r2, #0
4001867c:	e3a01020 	mov	r1, #32
40018680:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018684:	e1a00004 	mov	r0, r4
40018688:	e12fff33 	blx	r3
4001868c:	e3550000 	cmp	r5, #0
40018690:	0a000003 	beq	400186a4 <CyU3PDmaMultiChannelReset+0x148>
40018694:	e1a0200d 	mov	r2, sp
40018698:	e1a00005 	mov	r0, r5
4001869c:	e59d1000 	ldr	r1, [sp]
400186a0:	ebffc870 	bl	4000a868 <_txe_thread_priority_change>
400186a4:	e3a00000 	mov	r0, #0
400186a8:	eaffffb4 	b	40018580 <CyU3PDmaMultiChannelReset+0x24>
400186ac:	40031180 	.word	0x40031180

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

400186b0 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
400186b0:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400186b4:	e1a04000 	mov	r4, r0
400186b8:	e1a00004 	mov	r0, r4
400186bc:	eb000215 	bl	40018f18 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400186c0:	e1d451bc 	ldrh	r5, [r4, #28]
400186c4:	e1d400b8 	ldrh	r0, [r4, #8]
400186c8:	e1d410ba 	ldrh	r1, [r4, #10]
400186cc:	e0000091 	mul	r0, r1, r0
400186d0:	e1a06800 	lsl	r6, r0, #16
400186d4:	e1a06826 	lsr	r6, r6, #16
400186d8:	ea00000c 	b	40018710 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
400186dc:	e1a0100d 	mov	r1, sp
400186e0:	e1a00005 	mov	r0, r5
400186e4:	eb002807 	bl	40022708 <CyU3PDmaDscrGetConfig>
400186e8:	e59d000c 	ldr	r0, [sp, #12]
400186ec:	e59f10e4 	ldr	r1, [pc, #228]	; 400187d8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400186f0:	e0000001 	and	r0, r0, r1
400186f4:	e58d000c 	str	r0, [sp, #12]
400186f8:	e1a0100d 	mov	r1, sp
400186fc:	e1a00005 	mov	r0, r5
40018700:	eb00281b 	bl	40022774 <CyU3PDmaDscrSetConfig>
40018704:	e59d0008 	ldr	r0, [sp, #8]
40018708:	e1a05800 	lsl	r5, r0, #16
4001870c:	e1a05825 	lsr	r5, r5, #16
40018710:	e1b00006 	movs	r0, r6
40018714:	e2461001 	sub	r1, r6, #1
40018718:	e1a06801 	lsl	r6, r1, #16
4001871c:	e1a06826 	lsr	r6, r6, #16
40018720:	1affffed 	bne	400186dc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
40018724:	e1d400b4 	ldrh	r0, [r4, #4]
40018728:	e3500007 	cmp	r0, #7
4001872c:	1a000021 	bne	400187b8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
40018730:	e3a07000 	mov	r7, #0
40018734:	ea00001c 	b	400187ac <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
40018738:	e2840014 	add	r0, r4, #20
4001873c:	e0800087 	add	r0, r0, r7, lsl #1
40018740:	e1d000b0 	ldrh	r0, [r0]
40018744:	e284103e 	add	r1, r4, #62	; 0x3e
40018748:	e0811087 	add	r1, r1, r7, lsl #1
4001874c:	e1c100b0 	strh	r0, [r1]
40018750:	e1a05000 	mov	r5, r0
40018754:	e3a06000 	mov	r6, #0
40018758:	ea00000e 	b	40018798 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
4001875c:	e1a0100d 	mov	r1, sp
40018760:	e1a00005 	mov	r0, r5
40018764:	eb0027e7 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018768:	e59d000c 	ldr	r0, [sp, #12]
4001876c:	e59f1064 	ldr	r1, [pc, #100]	; 400187d8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018770:	e0000001 	and	r0, r0, r1
40018774:	e58d000c 	str	r0, [sp, #12]
40018778:	e1a0100d 	mov	r1, sp
4001877c:	e1a00005 	mov	r0, r5
40018780:	eb0027fb 	bl	40022774 <CyU3PDmaDscrSetConfig>
40018784:	e59d0008 	ldr	r0, [sp, #8]
40018788:	e59f104c 	ldr	r1, [pc, #76]	; 400187dc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
4001878c:	e0015820 	and	r5, r1, r0, lsr #16
40018790:	e2860001 	add	r0, r6, #1
40018794:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018798:	e1d400b8 	ldrh	r0, [r4, #8]
4001879c:	e1500006 	cmp	r0, r6
400187a0:	caffffed 	bgt	4001875c <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
400187a4:	e2870001 	add	r0, r7, #1
400187a8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400187ac:	e1d400ba 	ldrh	r0, [r4, #10]
400187b0:	e1500007 	cmp	r0, r7
400187b4:	caffffdf 	bgt	40018738 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
400187b8:	e1d401b4 	ldrh	r0, [r4, #20]
400187bc:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400187c0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400187c4:	e1d401bc 	ldrh	r0, [r4, #28]
400187c8:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400187cc:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
400187d0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400187d4:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400187d8:	0000fff0 	.word	0x0000fff0
400187dc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

400187e0 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
400187e0:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400187e4:	e1a04000 	mov	r4, r0
400187e8:	e1a00004 	mov	r0, r4
400187ec:	eb000229 	bl	40019098 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
400187f0:	e1d451b4 	ldrh	r5, [r4, #20]
400187f4:	e1d400b8 	ldrh	r0, [r4, #8]
400187f8:	e1d410ba 	ldrh	r1, [r4, #10]
400187fc:	e0000091 	mul	r0, r1, r0
40018800:	e1a06800 	lsl	r6, r0, #16
40018804:	e1a06826 	lsr	r6, r6, #16
40018808:	ea00000c 	b	40018840 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
4001880c:	e1a0100d 	mov	r1, sp
40018810:	e1a00005 	mov	r0, r5
40018814:	eb0027bb 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018818:	e59d000c 	ldr	r0, [sp, #12]
4001881c:	e59f10e4 	ldr	r1, [pc, #228]	; 40018908 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018820:	e0000001 	and	r0, r0, r1
40018824:	e58d000c 	str	r0, [sp, #12]
40018828:	e1a0100d 	mov	r1, sp
4001882c:	e1a00005 	mov	r0, r5
40018830:	eb0027cf 	bl	40022774 <CyU3PDmaDscrSetConfig>
40018834:	e59d0008 	ldr	r0, [sp, #8]
40018838:	e59f10cc 	ldr	r1, [pc, #204]	; 4001890c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
4001883c:	e0015820 	and	r5, r1, r0, lsr #16
40018840:	e1b00006 	movs	r0, r6
40018844:	e2461001 	sub	r1, r6, #1
40018848:	e1a06801 	lsl	r6, r1, #16
4001884c:	e1a06826 	lsr	r6, r6, #16
40018850:	1affffed 	bne	4001880c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018854:	e1d400b4 	ldrh	r0, [r4, #4]
40018858:	e3500008 	cmp	r0, #8
4001885c:	1a000021 	bne	400188e8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
40018860:	e3a07000 	mov	r7, #0
40018864:	ea00001c 	b	400188dc <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018868:	e284001c 	add	r0, r4, #28
4001886c:	e0800087 	add	r0, r0, r7, lsl #1
40018870:	e1d000b0 	ldrh	r0, [r0]
40018874:	e2841046 	add	r1, r4, #70	; 0x46
40018878:	e0811087 	add	r1, r1, r7, lsl #1
4001887c:	e1c100b0 	strh	r0, [r1]
40018880:	e1a05000 	mov	r5, r0
40018884:	e3a06000 	mov	r6, #0
40018888:	ea00000e 	b	400188c8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
4001888c:	e1a0100d 	mov	r1, sp
40018890:	e1a00005 	mov	r0, r5
40018894:	eb00279b 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018898:	e59d000c 	ldr	r0, [sp, #12]
4001889c:	e59f1064 	ldr	r1, [pc, #100]	; 40018908 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400188a0:	e0000001 	and	r0, r0, r1
400188a4:	e58d000c 	str	r0, [sp, #12]
400188a8:	e1a0100d 	mov	r1, sp
400188ac:	e1a00005 	mov	r0, r5
400188b0:	eb0027af 	bl	40022774 <CyU3PDmaDscrSetConfig>
400188b4:	e59d0008 	ldr	r0, [sp, #8]
400188b8:	e1a05800 	lsl	r5, r0, #16
400188bc:	e1a05825 	lsr	r5, r5, #16
400188c0:	e2860001 	add	r0, r6, #1
400188c4:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400188c8:	e1d400b8 	ldrh	r0, [r4, #8]
400188cc:	e1500006 	cmp	r0, r6
400188d0:	caffffed 	bgt	4001888c <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
400188d4:	e2870001 	add	r0, r7, #1
400188d8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400188dc:	e1d400ba 	ldrh	r0, [r4, #10]
400188e0:	e1500007 	cmp	r0, r7
400188e4:	caffffdf 	bgt	40018868 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
400188e8:	e1d401b4 	ldrh	r0, [r4, #20]
400188ec:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
400188f0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400188f4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400188f8:	e1d401bc 	ldrh	r0, [r4, #28]
400188fc:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018900:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018904:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018908:	0000fff0 	.word	0x0000fff0
4001890c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018910 <CyU3PDmaMultiChannelSetXfer>:
40018910:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018914:	e1a04000 	mov	r4, r0
40018918:	e1a05001 	mov	r5, r1
4001891c:	e1a06002 	mov	r6, r2
40018920:	e3e01000 	mvn	r1, #0
40018924:	e1a00004 	mov	r0, r4
40018928:	ebfffabc 	bl	40017420 <CyU3PDmaMultiChannelAcquireLock>
4001892c:	e1a07000 	mov	r7, r0
40018930:	e3570000 	cmp	r7, #0
40018934:	0a000001 	beq	40018940 <CyU3PDmaMultiChannelSetXfer+0x30>
40018938:	e1a00007 	mov	r0, r7
4001893c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018940:	e5940000 	ldr	r0, [r4]
40018944:	e3500001 	cmp	r0, #1
40018948:	0a000000 	beq	40018950 <CyU3PDmaMultiChannelSetXfer+0x40>
4001894c:	e3a07043 	mov	r7, #67	; 0x43
40018950:	e1d400ba 	ldrh	r0, [r4, #10]
40018954:	e1500006 	cmp	r0, r6
40018958:	ca000000 	bgt	40018960 <CyU3PDmaMultiChannelSetXfer+0x50>
4001895c:	e3a07040 	mov	r7, #64	; 0x40
40018960:	e1d400b4 	ldrh	r0, [r4, #4]
40018964:	e3500009 	cmp	r0, #9
40018968:	1a000002 	bne	40018978 <CyU3PDmaMultiChannelSetXfer+0x68>
4001896c:	e3560000 	cmp	r6, #0
40018970:	0a000000 	beq	40018978 <CyU3PDmaMultiChannelSetXfer+0x68>
40018974:	e3a07040 	mov	r7, #64	; 0x40
40018978:	e3570000 	cmp	r7, #0
4001897c:	1a00002d 	bne	40018a38 <CyU3PDmaMultiChannelSetXfer+0x128>
40018980:	e3a02002 	mov	r2, #2
40018984:	e3e01027 	mvn	r1, #39	; 0x27
40018988:	e28400b0 	add	r0, r4, #176	; 0xb0
4001898c:	ebffc524 	bl	40009e24 <_txe_event_flags_set>
40018990:	e5845070 	str	r5, [r4, #112]	; 0x70
40018994:	e1d400b4 	ldrh	r0, [r4, #4]
40018998:	e2400005 	sub	r0, r0, #5
4001899c:	e3500005 	cmp	r0, #5
400189a0:	308ff100 	addcc	pc, pc, r0, lsl #2
400189a4:	ea000020 	b	40018a2c <CyU3PDmaMultiChannelSetXfer+0x11c>
400189a8:	ea000003 	b	400189bc <CyU3PDmaMultiChannelSetXfer+0xac>
400189ac:	ea000009 	b	400189d8 <CyU3PDmaMultiChannelSetXfer+0xc8>
400189b0:	ea000003 	b	400189c4 <CyU3PDmaMultiChannelSetXfer+0xb4>
400189b4:	ea000009 	b	400189e0 <CyU3PDmaMultiChannelSetXfer+0xd0>
400189b8:	ea00000d 	b	400189f4 <CyU3PDmaMultiChannelSetXfer+0xe4>
400189bc:	e1a00000 	nop			; (mov r0, r0)
400189c0:	e1a00000 	nop			; (mov r0, r0)
400189c4:	e1a02006 	mov	r2, r6
400189c8:	e1a01005 	mov	r1, r5
400189cc:	e1a00004 	mov	r0, r4
400189d0:	eb00001d 	bl	40018a4c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
400189d4:	ea000016 	b	40018a34 <CyU3PDmaMultiChannelSetXfer+0x124>
400189d8:	e1a00000 	nop			; (mov r0, r0)
400189dc:	e1a00000 	nop			; (mov r0, r0)
400189e0:	e1a02006 	mov	r2, r6
400189e4:	e1a01005 	mov	r1, r5
400189e8:	e1a00004 	mov	r0, r4
400189ec:	eb0000b2 	bl	40018cbc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
400189f0:	ea00000f 	b	40018a34 <CyU3PDmaMultiChannelSetXfer+0x124>
400189f4:	e1a00000 	nop			; (mov r0, r0)
400189f8:	e59f0048 	ldr	r0, [pc, #72]	; 40018a48 <CyU3PDmaMultiChannelSetXfer+0x138>
400189fc:	e5900000 	ldr	r0, [r0]
40018a00:	e3500000 	cmp	r0, #0
40018a04:	1a000001 	bne	40018a10 <CyU3PDmaMultiChannelSetXfer+0x100>
40018a08:	e3a00047 	mov	r0, #71	; 0x47
40018a0c:	eaffffca 	b	4001893c <CyU3PDmaMultiChannelSetXfer+0x2c>
40018a10:	e1a02006 	mov	r2, r6
40018a14:	e1a01005 	mov	r1, r5
40018a18:	e1a00004 	mov	r0, r4
40018a1c:	e59f3024 	ldr	r3, [pc, #36]	; 40018a48 <CyU3PDmaMultiChannelSetXfer+0x138>
40018a20:	e5933000 	ldr	r3, [r3]
40018a24:	e12fff33 	blx	r3
40018a28:	ea000001 	b	40018a34 <CyU3PDmaMultiChannelSetXfer+0x124>
40018a2c:	e1a00000 	nop			; (mov r0, r0)
40018a30:	e1a00000 	nop			; (mov r0, r0)
40018a34:	e1a00000 	nop			; (mov r0, r0)
40018a38:	e2840078 	add	r0, r4, #120	; 0x78
40018a3c:	ebffc5c5 	bl	4000a158 <_txe_mutex_put>
40018a40:	e1a00007 	mov	r0, r7
40018a44:	eaffffbc 	b	4001893c <CyU3PDmaMultiChannelSetXfer+0x2c>
40018a48:	40031184 	.word	0x40031184

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018a4c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018a4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018a50:	e24dd028 	sub	sp, sp, #40	; 0x28
40018a54:	e1a04000 	mov	r4, r0
40018a58:	e1a05001 	mov	r5, r1
40018a5c:	e1a06002 	mov	r6, r2
40018a60:	e3a00002 	mov	r0, #2
40018a64:	e5840000 	str	r0, [r4]
40018a68:	e3a07000 	mov	r7, #0
40018a6c:	ea000005 	b	40018a88 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018a70:	e2841024 	add	r1, r4, #36	; 0x24
40018a74:	e0811087 	add	r1, r1, r7, lsl #1
40018a78:	e1d100b0 	ldrh	r0, [r1]
40018a7c:	ebfff0ac 	bl	40014d34 <CyU3PDmaSocketDisable>
40018a80:	e2870001 	add	r0, r7, #1
40018a84:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a88:	e1d400ba 	ldrh	r0, [r4, #10]
40018a8c:	e1500007 	cmp	r0, r7
40018a90:	cafffff6 	bgt	40018a70 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018a94:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018a98:	ebfff0a5 	bl	40014d34 <CyU3PDmaSocketDisable>
40018a9c:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018aa0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018aa4:	ebfff1bd 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40018aa8:	e2840014 	add	r0, r4, #20
40018aac:	e0800086 	add	r0, r0, r6, lsl #1
40018ab0:	e1d000b0 	ldrh	r0, [r0]
40018ab4:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018ab8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018abc:	e3a07000 	mov	r7, #0
40018ac0:	ea000040 	b	40018bc8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018ac4:	e2841024 	add	r1, r4, #36	; 0x24
40018ac8:	e0811087 	add	r1, r1, r7, lsl #1
40018acc:	e1d100b0 	ldrh	r0, [r1]
40018ad0:	e28d1010 	add	r1, sp, #16
40018ad4:	ebfff0ae 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40018ad8:	e3a00000 	mov	r0, #0
40018adc:	e58d0014 	str	r0, [sp, #20]
40018ae0:	e58d0018 	str	r0, [sp, #24]
40018ae4:	e59d001c 	ldr	r0, [sp, #28]
40018ae8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018aec:	e58d001c 	str	r0, [sp, #28]
40018af0:	e59d001c 	ldr	r0, [sp, #28]
40018af4:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018af8:	e58d001c 	str	r0, [sp, #28]
40018afc:	e59d001c 	ldr	r0, [sp, #28]
40018b00:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018b04:	e58d001c 	str	r0, [sp, #28]
40018b08:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018b0c:	e3500001 	cmp	r0, #1
40018b10:	1a000003 	bne	40018b24 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018b14:	e59d001c 	ldr	r0, [sp, #28]
40018b18:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018b1c:	e58d001c 	str	r0, [sp, #28]
40018b20:	ea000002 	b	40018b30 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018b24:	e59d001c 	ldr	r0, [sp, #28]
40018b28:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018b2c:	e58d001c 	str	r0, [sp, #28]
40018b30:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018b34:	e3500000 	cmp	r0, #0
40018b38:	0a000006 	beq	40018b58 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018b3c:	e1d400b8 	ldrh	r0, [r4, #8]
40018b40:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018b44:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018b48:	e1800281 	orr	r0, r0, r1, lsl #5
40018b4c:	e59d101c 	ldr	r1, [sp, #28]
40018b50:	e1800001 	orr	r0, r0, r1
40018b54:	e58d001c 	str	r0, [sp, #28]
40018b58:	e3e00000 	mvn	r0, #0
40018b5c:	e58d0020 	str	r0, [sp, #32]
40018b60:	e1570006 	cmp	r7, r6
40018b64:	ba000004 	blt	40018b7c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018b68:	e2840014 	add	r0, r4, #20
40018b6c:	e0800087 	add	r0, r0, r7, lsl #1
40018b70:	e1d000b0 	ldrh	r0, [r0]
40018b74:	e58d0010 	str	r0, [sp, #16]
40018b78:	ea000007 	b	40018b9c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018b7c:	e2841014 	add	r1, r4, #20
40018b80:	e0811087 	add	r1, r1, r7, lsl #1
40018b84:	e1d100b0 	ldrh	r0, [r1]
40018b88:	e1a0100d 	mov	r1, sp
40018b8c:	eb0026dd 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018b90:	e59d0008 	ldr	r0, [sp, #8]
40018b94:	e1a00820 	lsr	r0, r0, #16
40018b98:	e58d0010 	str	r0, [sp, #16]
40018b9c:	e284103e 	add	r1, r4, #62	; 0x3e
40018ba0:	e0811087 	add	r1, r1, r7, lsl #1
40018ba4:	e59d0010 	ldr	r0, [sp, #16]
40018ba8:	e1c100b0 	strh	r0, [r1]
40018bac:	e2841024 	add	r1, r4, #36	; 0x24
40018bb0:	e0811087 	add	r1, r1, r7, lsl #1
40018bb4:	e1d100b0 	ldrh	r0, [r1]
40018bb8:	e28d1010 	add	r1, sp, #16
40018bbc:	ebfff11e 	bl	4001503c <CyU3PDmaSocketSetConfig>
40018bc0:	e2870001 	add	r0, r7, #1
40018bc4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018bc8:	e1d400ba 	ldrh	r0, [r4, #10]
40018bcc:	e1500007 	cmp	r0, r7
40018bd0:	caffffbb 	bgt	40018ac4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018bd4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018bd8:	e28d1010 	add	r1, sp, #16
40018bdc:	ebfff06c 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40018be0:	e58d5014 	str	r5, [sp, #20]
40018be4:	e3a00000 	mov	r0, #0
40018be8:	e58d0018 	str	r0, [sp, #24]
40018bec:	e3550000 	cmp	r5, #0
40018bf0:	1a000006 	bne	40018c10 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018bf4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018bf8:	e3c00080 	bic	r0, r0, #128	; 0x80
40018bfc:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018c00:	e59d001c 	ldr	r0, [sp, #28]
40018c04:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018c08:	e58d001c 	str	r0, [sp, #28]
40018c0c:	ea000005 	b	40018c28 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018c10:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018c14:	e3800080 	orr	r0, r0, #128	; 0x80
40018c18:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018c1c:	e59d001c 	ldr	r0, [sp, #28]
40018c20:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018c24:	e58d001c 	str	r0, [sp, #28]
40018c28:	e59d001c 	ldr	r0, [sp, #28]
40018c2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018c30:	e58d001c 	str	r0, [sp, #28]
40018c34:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018c38:	e3500001 	cmp	r0, #1
40018c3c:	1a000003 	bne	40018c50 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018c40:	e59d001c 	ldr	r0, [sp, #28]
40018c44:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018c48:	e58d001c 	str	r0, [sp, #28]
40018c4c:	ea000002 	b	40018c5c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018c50:	e59d001c 	ldr	r0, [sp, #28]
40018c54:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018c58:	e58d001c 	str	r0, [sp, #28]
40018c5c:	e3e00000 	mvn	r0, #0
40018c60:	e58d0020 	str	r0, [sp, #32]
40018c64:	e1d481bc 	ldrh	r8, [r4, #28]
40018c68:	e3a07000 	mov	r7, #0
40018c6c:	ea000007 	b	40018c90 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018c70:	e1a0100d 	mov	r1, sp
40018c74:	e1a00008 	mov	r0, r8
40018c78:	eb0026a2 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018c7c:	e59d0008 	ldr	r0, [sp, #8]
40018c80:	e1a08800 	lsl	r8, r0, #16
40018c84:	e1a08828 	lsr	r8, r8, #16
40018c88:	e2870001 	add	r0, r7, #1
40018c8c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c90:	e1570006 	cmp	r7, r6
40018c94:	bafffff5 	blt	40018c70 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018c98:	e58d8010 	str	r8, [sp, #16]
40018c9c:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018ca0:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018ca4:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018ca8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018cac:	e28d1010 	add	r1, sp, #16
40018cb0:	ebfff0e1 	bl	4001503c <CyU3PDmaSocketSetConfig>
40018cb4:	e28dd028 	add	sp, sp, #40	; 0x28
40018cb8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018cbc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018cbc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018cc0:	e24dd028 	sub	sp, sp, #40	; 0x28
40018cc4:	e1a04000 	mov	r4, r0
40018cc8:	e1a05001 	mov	r5, r1
40018ccc:	e1a06002 	mov	r6, r2
40018cd0:	e3a00002 	mov	r0, #2
40018cd4:	e5840000 	str	r0, [r4]
40018cd8:	e3a07000 	mov	r7, #0
40018cdc:	ea000005 	b	40018cf8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018ce0:	e284102c 	add	r1, r4, #44	; 0x2c
40018ce4:	e0811087 	add	r1, r1, r7, lsl #1
40018ce8:	e1d100b0 	ldrh	r0, [r1]
40018cec:	ebfff010 	bl	40014d34 <CyU3PDmaSocketDisable>
40018cf0:	e2870001 	add	r0, r7, #1
40018cf4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018cf8:	e1d400ba 	ldrh	r0, [r4, #10]
40018cfc:	e1500007 	cmp	r0, r7
40018d00:	cafffff6 	bgt	40018ce0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018d04:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018d08:	ebfff009 	bl	40014d34 <CyU3PDmaSocketDisable>
40018d0c:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018d10:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018d14:	ebfff121 	bl	400151a0 <CyU3PDmaUpdateSocketSuspendOption>
40018d18:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018d1c:	e28d1010 	add	r1, sp, #16
40018d20:	ebfff01b 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40018d24:	e58d5014 	str	r5, [sp, #20]
40018d28:	e3a00000 	mov	r0, #0
40018d2c:	e58d0018 	str	r0, [sp, #24]
40018d30:	e3550000 	cmp	r5, #0
40018d34:	1a000006 	bne	40018d54 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018d38:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018d3c:	e3c00080 	bic	r0, r0, #128	; 0x80
40018d40:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018d44:	e59d001c 	ldr	r0, [sp, #28]
40018d48:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018d4c:	e58d001c 	str	r0, [sp, #28]
40018d50:	ea000005 	b	40018d6c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018d54:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018d58:	e3800080 	orr	r0, r0, #128	; 0x80
40018d5c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018d60:	e59d001c 	ldr	r0, [sp, #28]
40018d64:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018d68:	e58d001c 	str	r0, [sp, #28]
40018d6c:	e59d001c 	ldr	r0, [sp, #28]
40018d70:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018d74:	e58d001c 	str	r0, [sp, #28]
40018d78:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018d7c:	e3500001 	cmp	r0, #1
40018d80:	1a000003 	bne	40018d94 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018d84:	e59d001c 	ldr	r0, [sp, #28]
40018d88:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018d8c:	e58d001c 	str	r0, [sp, #28]
40018d90:	ea000002 	b	40018da0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018d94:	e59d001c 	ldr	r0, [sp, #28]
40018d98:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018d9c:	e58d001c 	str	r0, [sp, #28]
40018da0:	e3e00000 	mvn	r0, #0
40018da4:	e58d0020 	str	r0, [sp, #32]
40018da8:	e1d481b4 	ldrh	r8, [r4, #20]
40018dac:	e3a07000 	mov	r7, #0
40018db0:	ea000007 	b	40018dd4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018db4:	e1a0100d 	mov	r1, sp
40018db8:	e1a00008 	mov	r0, r8
40018dbc:	eb002651 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018dc0:	e59d0008 	ldr	r0, [sp, #8]
40018dc4:	e59f1148 	ldr	r1, [pc, #328]	; 40018f14 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018dc8:	e0018820 	and	r8, r1, r0, lsr #16
40018dcc:	e2870001 	add	r0, r7, #1
40018dd0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018dd4:	e1570006 	cmp	r7, r6
40018dd8:	bafffff5 	blt	40018db4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018ddc:	e58d8010 	str	r8, [sp, #16]
40018de0:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018de4:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018de8:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018dec:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018df0:	e28d1010 	add	r1, sp, #16
40018df4:	ebfff090 	bl	4001503c <CyU3PDmaSocketSetConfig>
40018df8:	e284001c 	add	r0, r4, #28
40018dfc:	e0800086 	add	r0, r0, r6, lsl #1
40018e00:	e1d000b0 	ldrh	r0, [r0]
40018e04:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018e08:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018e0c:	e3a07000 	mov	r7, #0
40018e10:	ea00003a 	b	40018f00 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018e14:	e284102c 	add	r1, r4, #44	; 0x2c
40018e18:	e0811087 	add	r1, r1, r7, lsl #1
40018e1c:	e1d100b0 	ldrh	r0, [r1]
40018e20:	e28d1010 	add	r1, sp, #16
40018e24:	ebffefda 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40018e28:	e3a00000 	mov	r0, #0
40018e2c:	e58d0014 	str	r0, [sp, #20]
40018e30:	e58d0018 	str	r0, [sp, #24]
40018e34:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018e38:	e3c00080 	bic	r0, r0, #128	; 0x80
40018e3c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018e40:	e59d001c 	ldr	r0, [sp, #28]
40018e44:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018e48:	e58d001c 	str	r0, [sp, #28]
40018e4c:	e59d001c 	ldr	r0, [sp, #28]
40018e50:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018e54:	e58d001c 	str	r0, [sp, #28]
40018e58:	e59d001c 	ldr	r0, [sp, #28]
40018e5c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018e60:	e58d001c 	str	r0, [sp, #28]
40018e64:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018e68:	e3500001 	cmp	r0, #1
40018e6c:	1a000003 	bne	40018e80 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018e70:	e59d001c 	ldr	r0, [sp, #28]
40018e74:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018e78:	e58d001c 	str	r0, [sp, #28]
40018e7c:	ea000002 	b	40018e8c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018e80:	e59d001c 	ldr	r0, [sp, #28]
40018e84:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018e88:	e58d001c 	str	r0, [sp, #28]
40018e8c:	e3e00000 	mvn	r0, #0
40018e90:	e58d0020 	str	r0, [sp, #32]
40018e94:	e1570006 	cmp	r7, r6
40018e98:	ba000004 	blt	40018eb0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018e9c:	e284001c 	add	r0, r4, #28
40018ea0:	e0800087 	add	r0, r0, r7, lsl #1
40018ea4:	e1d000b0 	ldrh	r0, [r0]
40018ea8:	e58d0010 	str	r0, [sp, #16]
40018eac:	ea000008 	b	40018ed4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018eb0:	e284101c 	add	r1, r4, #28
40018eb4:	e0811087 	add	r1, r1, r7, lsl #1
40018eb8:	e1d100b0 	ldrh	r0, [r1]
40018ebc:	e1a0100d 	mov	r1, sp
40018ec0:	eb002610 	bl	40022708 <CyU3PDmaDscrGetConfig>
40018ec4:	e59d0008 	ldr	r0, [sp, #8]
40018ec8:	e1a00800 	lsl	r0, r0, #16
40018ecc:	e1a00820 	lsr	r0, r0, #16
40018ed0:	e58d0010 	str	r0, [sp, #16]
40018ed4:	e2841046 	add	r1, r4, #70	; 0x46
40018ed8:	e0811087 	add	r1, r1, r7, lsl #1
40018edc:	e59d0010 	ldr	r0, [sp, #16]
40018ee0:	e1c100b0 	strh	r0, [r1]
40018ee4:	e284102c 	add	r1, r4, #44	; 0x2c
40018ee8:	e0811087 	add	r1, r1, r7, lsl #1
40018eec:	e1d100b0 	ldrh	r0, [r1]
40018ef0:	e28d1010 	add	r1, sp, #16
40018ef4:	ebfff050 	bl	4001503c <CyU3PDmaSocketSetConfig>
40018ef8:	e2870001 	add	r0, r7, #1
40018efc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018f00:	e1d400ba 	ldrh	r0, [r4, #10]
40018f04:	e1500007 	cmp	r0, r7
40018f08:	caffffc1 	bgt	40018e14 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018f0c:	e28dd028 	add	sp, sp, #40	; 0x28
40018f10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018f14:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018f18 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018f18:	e92d4030 	push	{r4, r5, lr}
40018f1c:	e24dd01c 	sub	sp, sp, #28
40018f20:	e1a04000 	mov	r4, r0
40018f24:	e3a05000 	mov	r5, #0
40018f28:	ea000031 	b	40018ff4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018f2c:	e2840014 	add	r0, r4, #20
40018f30:	e0800085 	add	r0, r0, r5, lsl #1
40018f34:	e1d000b0 	ldrh	r0, [r0]
40018f38:	e284103e 	add	r1, r4, #62	; 0x3e
40018f3c:	e0811085 	add	r1, r1, r5, lsl #1
40018f40:	e1c100b0 	strh	r0, [r1]
40018f44:	e2841024 	add	r1, r4, #36	; 0x24
40018f48:	e0811085 	add	r1, r1, r5, lsl #1
40018f4c:	e1d100b0 	ldrh	r0, [r1]
40018f50:	ebffef77 	bl	40014d34 <CyU3PDmaSocketDisable>
40018f54:	e2841024 	add	r1, r4, #36	; 0x24
40018f58:	e0811085 	add	r1, r1, r5, lsl #1
40018f5c:	e1d100b0 	ldrh	r0, [r1]
40018f60:	e28d1004 	add	r1, sp, #4
40018f64:	ebffef8a 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40018f68:	e2840014 	add	r0, r4, #20
40018f6c:	e0800085 	add	r0, r0, r5, lsl #1
40018f70:	e1d000b0 	ldrh	r0, [r0]
40018f74:	e58d0004 	str	r0, [sp, #4]
40018f78:	e3a00000 	mov	r0, #0
40018f7c:	e58d0008 	str	r0, [sp, #8]
40018f80:	e58d000c 	str	r0, [sp, #12]
40018f84:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018f88:	e58d0010 	str	r0, [sp, #16]
40018f8c:	e2841024 	add	r1, r4, #36	; 0x24
40018f90:	e0811085 	add	r1, r1, r5, lsl #1
40018f94:	e1d100b0 	ldrh	r0, [r1]
40018f98:	eb0006a3 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
40018f9c:	e3500000 	cmp	r0, #0
40018fa0:	0a000002 	beq	40018fb0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018fa4:	e59d0010 	ldr	r0, [sp, #16]
40018fa8:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018fac:	e58d0010 	str	r0, [sp, #16]
40018fb0:	e3e00000 	mvn	r0, #0
40018fb4:	e58d0014 	str	r0, [sp, #20]
40018fb8:	e1d400b4 	ldrh	r0, [r4, #4]
40018fbc:	e3500005 	cmp	r0, #5
40018fc0:	1a000002 	bne	40018fd0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018fc4:	e3a00040 	mov	r0, #64	; 0x40
40018fc8:	e58d0018 	str	r0, [sp, #24]
40018fcc:	ea000001 	b	40018fd8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018fd0:	e3a00041 	mov	r0, #65	; 0x41
40018fd4:	e58d0018 	str	r0, [sp, #24]
40018fd8:	e2841024 	add	r1, r4, #36	; 0x24
40018fdc:	e0811085 	add	r1, r1, r5, lsl #1
40018fe0:	e1d100b0 	ldrh	r0, [r1]
40018fe4:	e28d1004 	add	r1, sp, #4
40018fe8:	ebfff013 	bl	4001503c <CyU3PDmaSocketSetConfig>
40018fec:	e2850001 	add	r0, r5, #1
40018ff0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018ff4:	e1d400ba 	ldrh	r0, [r4, #10]
40018ff8:	e1500005 	cmp	r0, r5
40018ffc:	caffffca 	bgt	40018f2c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40019000:	e1d401bc 	ldrh	r0, [r4, #28]
40019004:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40019008:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001900c:	ebffef48 	bl	40014d34 <CyU3PDmaSocketDisable>
40019010:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019014:	e28d1004 	add	r1, sp, #4
40019018:	ebffef5d 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001901c:	e1d401bc 	ldrh	r0, [r4, #28]
40019020:	e58d0004 	str	r0, [sp, #4]
40019024:	e3a00000 	mov	r0, #0
40019028:	e58d0008 	str	r0, [sp, #8]
4001902c:	e58d000c 	str	r0, [sp, #12]
40019030:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40019034:	e58d0010 	str	r0, [sp, #16]
40019038:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001903c:	eb00067a 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
40019040:	e3500000 	cmp	r0, #0
40019044:	0a000002 	beq	40019054 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40019048:	e59d0010 	ldr	r0, [sp, #16]
4001904c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019050:	e58d0010 	str	r0, [sp, #16]
40019054:	e3e00000 	mvn	r0, #0
40019058:	e58d0014 	str	r0, [sp, #20]
4001905c:	e1d400b4 	ldrh	r0, [r4, #4]
40019060:	e3500005 	cmp	r0, #5
40019064:	1a000002 	bne	40019074 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40019068:	e3a000c0 	mov	r0, #192	; 0xc0
4001906c:	e58d0018 	str	r0, [sp, #24]
40019070:	ea000001 	b	4001907c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40019074:	e3a000c2 	mov	r0, #194	; 0xc2
40019078:	e58d0018 	str	r0, [sp, #24]
4001907c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019080:	e28d1004 	add	r1, sp, #4
40019084:	ebffefec 	bl	4001503c <CyU3PDmaSocketSetConfig>
40019088:	e3a00000 	mov	r0, #0
4001908c:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40019090:	e28dd01c 	add	sp, sp, #28
40019094:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40019098 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40019098:	e92d4030 	push	{r4, r5, lr}
4001909c:	e24dd01c 	sub	sp, sp, #28
400190a0:	e1a04000 	mov	r4, r0
400190a4:	e1d401b4 	ldrh	r0, [r4, #20]
400190a8:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
400190ac:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400190b0:	ebffef1f 	bl	40014d34 <CyU3PDmaSocketDisable>
400190b4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400190b8:	e28d1004 	add	r1, sp, #4
400190bc:	ebffef34 	bl	40014d94 <CyU3PDmaSocketGetConfig>
400190c0:	e1d401b4 	ldrh	r0, [r4, #20]
400190c4:	e58d0004 	str	r0, [sp, #4]
400190c8:	e3a00000 	mov	r0, #0
400190cc:	e58d0008 	str	r0, [sp, #8]
400190d0:	e58d000c 	str	r0, [sp, #12]
400190d4:	e3a00646 	mov	r0, #73400320	; 0x4600000
400190d8:	e58d0010 	str	r0, [sp, #16]
400190dc:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400190e0:	eb000651 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
400190e4:	e3500000 	cmp	r0, #0
400190e8:	0a000002 	beq	400190f8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
400190ec:	e59d0010 	ldr	r0, [sp, #16]
400190f0:	e3800b01 	orr	r0, r0, #1024	; 0x400
400190f4:	e58d0010 	str	r0, [sp, #16]
400190f8:	e3e00000 	mvn	r0, #0
400190fc:	e58d0014 	str	r0, [sp, #20]
40019100:	e1d400b4 	ldrh	r0, [r4, #4]
40019104:	e3500006 	cmp	r0, #6
40019108:	1a000002 	bne	40019118 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
4001910c:	e3a000c0 	mov	r0, #192	; 0xc0
40019110:	e58d0018 	str	r0, [sp, #24]
40019114:	ea000001 	b	40019120 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40019118:	e3a000c1 	mov	r0, #193	; 0xc1
4001911c:	e58d0018 	str	r0, [sp, #24]
40019120:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019124:	e28d1004 	add	r1, sp, #4
40019128:	ebffefc3 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001912c:	e3a05000 	mov	r5, #0
40019130:	ea000035 	b	4001920c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40019134:	e284001c 	add	r0, r4, #28
40019138:	e0800085 	add	r0, r0, r5, lsl #1
4001913c:	e1d000b0 	ldrh	r0, [r0]
40019140:	e2841046 	add	r1, r4, #70	; 0x46
40019144:	e0811085 	add	r1, r1, r5, lsl #1
40019148:	e1c100b0 	strh	r0, [r1]
4001914c:	e284102c 	add	r1, r4, #44	; 0x2c
40019150:	e0811085 	add	r1, r1, r5, lsl #1
40019154:	e1d100b0 	ldrh	r0, [r1]
40019158:	ebffeef5 	bl	40014d34 <CyU3PDmaSocketDisable>
4001915c:	e284102c 	add	r1, r4, #44	; 0x2c
40019160:	e0811085 	add	r1, r1, r5, lsl #1
40019164:	e1d100b0 	ldrh	r0, [r1]
40019168:	e28d1004 	add	r1, sp, #4
4001916c:	ebffef08 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40019170:	e284001c 	add	r0, r4, #28
40019174:	e0800085 	add	r0, r0, r5, lsl #1
40019178:	e1d000b0 	ldrh	r0, [r0]
4001917c:	e58d0004 	str	r0, [sp, #4]
40019180:	e3a00000 	mov	r0, #0
40019184:	e58d0008 	str	r0, [sp, #8]
40019188:	e58d000c 	str	r0, [sp, #12]
4001918c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40019190:	e58d0010 	str	r0, [sp, #16]
40019194:	e284102c 	add	r1, r4, #44	; 0x2c
40019198:	e0811085 	add	r1, r1, r5, lsl #1
4001919c:	e1d100b0 	ldrh	r0, [r1]
400191a0:	eb000621 	bl	4001aa2c <CyU3PDmaIsSockAvlEnReqd>
400191a4:	e3500000 	cmp	r0, #0
400191a8:	0a000002 	beq	400191b8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
400191ac:	e59d0010 	ldr	r0, [sp, #16]
400191b0:	e3800b01 	orr	r0, r0, #1024	; 0x400
400191b4:	e58d0010 	str	r0, [sp, #16]
400191b8:	e3e00000 	mvn	r0, #0
400191bc:	e58d0014 	str	r0, [sp, #20]
400191c0:	e1d400b4 	ldrh	r0, [r4, #4]
400191c4:	e3500006 	cmp	r0, #6
400191c8:	1a000002 	bne	400191d8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
400191cc:	e3a00040 	mov	r0, #64	; 0x40
400191d0:	e58d0018 	str	r0, [sp, #24]
400191d4:	ea000001 	b	400191e0 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
400191d8:	e3a00042 	mov	r0, #66	; 0x42
400191dc:	e58d0018 	str	r0, [sp, #24]
400191e0:	e284102c 	add	r1, r4, #44	; 0x2c
400191e4:	e0811085 	add	r1, r1, r5, lsl #1
400191e8:	e1d100b0 	ldrh	r0, [r1]
400191ec:	e28d1004 	add	r1, sp, #4
400191f0:	ebffef91 	bl	4001503c <CyU3PDmaSocketSetConfig>
400191f4:	e3a00000 	mov	r0, #0
400191f8:	e2841064 	add	r1, r4, #100	; 0x64
400191fc:	e0811085 	add	r1, r1, r5, lsl #1
40019200:	e1c100b0 	strh	r0, [r1]
40019204:	e2850001 	add	r0, r5, #1
40019208:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001920c:	e1d400ba 	ldrh	r0, [r4, #10]
40019210:	e1500005 	cmp	r0, r5
40019214:	caffffc6 	bgt	40019134 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40019218:	e28dd01c 	add	sp, sp, #28
4001921c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40019220 <CyU3PDmaMultiChannelSetWrapUp>:
40019220:	e92d4070 	push	{r4, r5, r6, lr}
40019224:	e1a04000 	mov	r4, r0
40019228:	e1a05001 	mov	r5, r1
4001922c:	e3e01000 	mvn	r1, #0
40019230:	e1a00004 	mov	r0, r4
40019234:	ebfff879 	bl	40017420 <CyU3PDmaMultiChannelAcquireLock>
40019238:	e1a06000 	mov	r6, r0
4001923c:	e3560000 	cmp	r6, #0
40019240:	0a000001 	beq	4001924c <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40019244:	e1a00006 	mov	r0, r6
40019248:	e8bd8070 	pop	{r4, r5, r6, pc}
4001924c:	e5940000 	ldr	r0, [r4]
40019250:	e3500004 	cmp	r0, #4
40019254:	0a000003 	beq	40019268 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019258:	e5940000 	ldr	r0, [r4]
4001925c:	e3500002 	cmp	r0, #2
40019260:	0a000000 	beq	40019268 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019264:	e3a06047 	mov	r6, #71	; 0x47
40019268:	e1d400b4 	ldrh	r0, [r4, #4]
4001926c:	e3500006 	cmp	r0, #6
40019270:	0a000005 	beq	4001928c <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019274:	e1d400b4 	ldrh	r0, [r4, #4]
40019278:	e3500008 	cmp	r0, #8
4001927c:	0a000002 	beq	4001928c <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019280:	e1d400b4 	ldrh	r0, [r4, #4]
40019284:	e3500009 	cmp	r0, #9
40019288:	1a000003 	bne	4001929c <CyU3PDmaMultiChannelSetWrapUp+0x7c>
4001928c:	e3550000 	cmp	r5, #0
40019290:	0a000005 	beq	400192ac <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019294:	e3a06040 	mov	r6, #64	; 0x40
40019298:	ea000003 	b	400192ac <CyU3PDmaMultiChannelSetWrapUp+0x8c>
4001929c:	e1d400ba 	ldrh	r0, [r4, #10]
400192a0:	e1500005 	cmp	r0, r5
400192a4:	ca000000 	bgt	400192ac <CyU3PDmaMultiChannelSetWrapUp+0x8c>
400192a8:	e3a06040 	mov	r6, #64	; 0x40
400192ac:	e3560000 	cmp	r6, #0
400192b0:	1a000003 	bne	400192c4 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
400192b4:	e2841024 	add	r1, r4, #36	; 0x24
400192b8:	e0811085 	add	r1, r1, r5, lsl #1
400192bc:	e1d100b0 	ldrh	r0, [r1]
400192c0:	ebffef88 	bl	400150e8 <CyU3PDmaSocketSetWrapUp>
400192c4:	e2840078 	add	r0, r4, #120	; 0x78
400192c8:	ebffc3a2 	bl	4000a158 <_txe_mutex_put>
400192cc:	e1a00006 	mov	r0, r6
400192d0:	eaffffdc 	b	40019248 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

400192d4 <CyU3PDmaApplicationDefine>:
400192d4:	e92d4010 	push	{r4, lr}
400192d8:	e24dd020 	sub	sp, sp, #32
400192dc:	eb000051 	bl	40019428 <CyU3PDmaInit>
400192e0:	e3a02028 	mov	r2, #40	; 0x28
400192e4:	e3a01000 	mov	r1, #0
400192e8:	e59f007c 	ldr	r0, [pc, #124]	; 4001936c <CyU3PDmaApplicationDefine+0x98>
400192ec:	ebffc22c 	bl	40009ba4 <_txe_event_flags_create>
400192f0:	e3a00c02 	mov	r0, #512	; 0x200
400192f4:	ebffa8de 	bl	40003674 <CyU3PMemAlloc>
400192f8:	e1a04000 	mov	r4, r0
400192fc:	e3a0303c 	mov	r3, #60	; 0x3c
40019300:	e3a02c02 	mov	r2, #512	; 0x200
40019304:	e1cd20f0 	strd	r2, [sp]
40019308:	e1a03004 	mov	r3, r4
4001930c:	e3a02004 	mov	r2, #4
40019310:	e3a01000 	mov	r1, #0
40019314:	e59f0054 	ldr	r0, [pc, #84]	; 40019370 <CyU3PDmaApplicationDefine+0x9c>
40019318:	ebffc3b6 	bl	4000a1f8 <_txe_queue_create>
4001931c:	e3a00b01 	mov	r0, #1024	; 0x400
40019320:	ebffa8d3 	bl	40003674 <CyU3PMemAlloc>
40019324:	e1a04000 	mov	r4, r0
40019328:	e3a030a8 	mov	r3, #168	; 0xa8
4001932c:	e3a02001 	mov	r2, #1
40019330:	e3a01000 	mov	r1, #0
40019334:	e3a00002 	mov	r0, #2
40019338:	e28dc00c 	add	ip, sp, #12
4001933c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40019340:	e3a02b01 	mov	r2, #1024	; 0x400
40019344:	e1a03001 	mov	r3, r1
40019348:	e58d2004 	str	r2, [sp, #4]
4001934c:	e59f2020 	ldr	r2, [pc, #32]	; 40019374 <CyU3PDmaApplicationDefine+0xa0>
40019350:	e28f1020 	add	r1, pc, #32
40019354:	e58d0008 	str	r0, [sp, #8]
40019358:	e59f0028 	ldr	r0, [pc, #40]	; 40019388 <CyU3PDmaApplicationDefine+0xb4>
4001935c:	e58d4000 	str	r4, [sp]
40019360:	ebffc48a 	bl	4000a590 <_txe_thread_create>
40019364:	e28dd020 	add	sp, sp, #32
40019368:	e8bd8010 	pop	{r4, pc}
4001936c:	40031d88 	.word	0x40031d88
40019370:	40031db0 	.word	0x40031db0
40019374:	4001abd8 	.word	0x4001abd8
40019378:	445f3130 	.word	0x445f3130
4001937c:	545f414d 	.word	0x545f414d
40019380:	41455248 	.word	0x41455248
40019384:	00000044 	.word	0x00000044
40019388:	40031ce0 	.word	0x40031ce0

Disassembly of section i.CyU3PDmaChannelHandleError:

4001938c <CyU3PDmaChannelHandleError>:
4001938c:	e92d4010 	push	{r4, lr}
40019390:	e1a04000 	mov	r4, r0
40019394:	e3e01000 	mvn	r1, #0
40019398:	e284003c 	add	r0, r4, #60	; 0x3c
4001939c:	ebffc338 	bl	4000a084 <_txe_mutex_get>
400193a0:	e1d400b4 	ldrh	r0, [r4, #4]
400193a4:	e3500004 	cmp	r0, #4
400193a8:	0a000001 	beq	400193b4 <CyU3PDmaChannelHandleError+0x28>
400193ac:	e1d401b0 	ldrh	r0, [r4, #16]
400193b0:	ebffee5f 	bl	40014d34 <CyU3PDmaSocketDisable>
400193b4:	e1d400b4 	ldrh	r0, [r4, #4]
400193b8:	e3500003 	cmp	r0, #3
400193bc:	0a000001 	beq	400193c8 <CyU3PDmaChannelHandleError+0x3c>
400193c0:	e1d401b2 	ldrh	r0, [r4, #18]
400193c4:	ebffee5a 	bl	40014d34 <CyU3PDmaSocketDisable>
400193c8:	e3a02002 	mov	r2, #2
400193cc:	e3e01007 	mvn	r1, #7
400193d0:	e2840074 	add	r0, r4, #116	; 0x74
400193d4:	ebffc292 	bl	40009e24 <_txe_event_flags_set>
400193d8:	e3a02000 	mov	r2, #0
400193dc:	e3a01040 	mov	r1, #64	; 0x40
400193e0:	e2840074 	add	r0, r4, #116	; 0x74
400193e4:	ebffc28e 	bl	40009e24 <_txe_event_flags_set>
400193e8:	e3a00005 	mov	r0, #5
400193ec:	e5840000 	str	r0, [r4]
400193f0:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400193f4:	e3500000 	cmp	r0, #0
400193f8:	0a000007 	beq	4001941c <CyU3PDmaChannelHandleError+0x90>
400193fc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40019400:	e3100040 	tst	r0, #64	; 0x40
40019404:	0a000004 	beq	4001941c <CyU3PDmaChannelHandleError+0x90>
40019408:	e3a02000 	mov	r2, #0
4001940c:	e3a01040 	mov	r1, #64	; 0x40
40019410:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019414:	e1a00004 	mov	r0, r4
40019418:	e12fff33 	blx	r3
4001941c:	e284003c 	add	r0, r4, #60	; 0x3c
40019420:	ebffc34c 	bl	4000a158 <_txe_mutex_put>
40019424:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019428 <CyU3PDmaInit>:
40019428:	e92d4010 	push	{r4, lr}
4001942c:	e3a02020 	mov	r2, #32
40019430:	e3a01000 	mov	r1, #0
40019434:	e59f006c 	ldr	r0, [pc, #108]	; 400194a8 <CyU3PDmaInit+0x80>
40019438:	ebffa89e 	bl	400036b8 <CyU3PMemSet>
4001943c:	e3a02080 	mov	r2, #128	; 0x80
40019440:	e3a01000 	mov	r1, #0
40019444:	e59f0060 	ldr	r0, [pc, #96]	; 400194ac <CyU3PDmaInit+0x84>
40019448:	ebffa89a 	bl	400036b8 <CyU3PMemSet>
4001944c:	e3a02020 	mov	r2, #32
40019450:	e3a01000 	mov	r1, #0
40019454:	e59f0054 	ldr	r0, [pc, #84]	; 400194b0 <CyU3PDmaInit+0x88>
40019458:	ebffa896 	bl	400036b8 <CyU3PMemSet>
4001945c:	e3a02040 	mov	r2, #64	; 0x40
40019460:	e3a01000 	mov	r1, #0
40019464:	e59f0048 	ldr	r0, [pc, #72]	; 400194b4 <CyU3PDmaInit+0x8c>
40019468:	ebffa892 	bl	400036b8 <CyU3PMemSet>
4001946c:	e3a02040 	mov	r2, #64	; 0x40
40019470:	e3a01000 	mov	r1, #0
40019474:	e59f003c 	ldr	r0, [pc, #60]	; 400194b8 <CyU3PDmaInit+0x90>
40019478:	ebffa88e 	bl	400036b8 <CyU3PMemSet>
4001947c:	e3a00000 	mov	r0, #0
40019480:	e59f1034 	ldr	r1, [pc, #52]	; 400194bc <CyU3PDmaInit+0x94>
40019484:	e5810000 	str	r0, [r1]
40019488:	eb002462 	bl	40022618 <CyU3PDmaDscrListCreate>
4001948c:	ebffa9ca 	bl	40003bbc <CyU3PDmaBufferInit>
40019490:	e3a00000 	mov	r0, #0
40019494:	e59f1024 	ldr	r1, [pc, #36]	; 400194c0 <CyU3PDmaInit+0x98>
40019498:	e1c100b0 	strh	r0, [r1]
4001949c:	e59f1020 	ldr	r1, [pc, #32]	; 400194c4 <CyU3PDmaInit+0x9c>
400194a0:	e1c100b0 	strh	r0, [r1]
400194a4:	e8bd8010 	pop	{r4, pc}
400194a8:	40031ba0 	.word	0x40031ba0
400194ac:	40031bc0 	.word	0x40031bc0
400194b0:	40031c40 	.word	0x40031c40
400194b4:	40031c60 	.word	0x40031c60
400194b8:	40031ca0 	.word	0x40031ca0
400194bc:	40031160 	.word	0x40031160
400194c0:	40031188 	.word	0x40031188
400194c4:	4003118a 	.word	0x4003118a

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

400194c8 <CyU3PDmaIntHandler_TypeAuto>:
400194c8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400194cc:	e24dd01c 	sub	sp, sp, #28
400194d0:	e1a04000 	mov	r4, r0
400194d4:	e5949004 	ldr	r9, [r4, #4]
400194d8:	e5948008 	ldr	r8, [r4, #8]
400194dc:	e3180040 	tst	r8, #64	; 0x40
400194e0:	0a000003 	beq	400194f4 <CyU3PDmaIntHandler_TypeAuto+0x2c>
400194e4:	e1a00009 	mov	r0, r9
400194e8:	ebffffa7 	bl	4001938c <CyU3PDmaChannelHandleError>
400194ec:	e28dd01c 	add	sp, sp, #28
400194f0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400194f4:	e3e01000 	mvn	r1, #0
400194f8:	e289003c 	add	r0, r9, #60	; 0x3c
400194fc:	ebffc2e0 	bl	4000a084 <_txe_mutex_get>
40019500:	e1d901b2 	ldrh	r0, [r9, #18]
40019504:	e5941000 	ldr	r1, [r4]
40019508:	e1500821 	cmp	r0, r1, lsr #16
4001950c:	1a00004b 	bne	40019640 <CyU3PDmaIntHandler_TypeAuto+0x178>
40019510:	e1d901b2 	ldrh	r0, [r9, #18]
40019514:	e3a0103f 	mov	r1, #63	; 0x3f
40019518:	e0015440 	and	r5, r1, r0, asr #8
4001951c:	e1d901b2 	ldrh	r0, [r9, #18]
40019520:	e20060ff 	and	r6, r0, #255	; 0xff
40019524:	e594000c 	ldr	r0, [r4, #12]
40019528:	e1a07800 	lsl	r7, r0, #16
4001952c:	e1a07827 	lsr	r7, r7, #16
40019530:	e3180080 	tst	r8, #128	; 0x80
40019534:	0a000012 	beq	40019584 <CyU3PDmaIntHandler_TypeAuto+0xbc>
40019538:	e3a00001 	mov	r0, #1
4001953c:	e5890000 	str	r0, [r9]
40019540:	e3a02000 	mov	r2, #0
40019544:	e3a01001 	mov	r1, #1
40019548:	e2890074 	add	r0, r9, #116	; 0x74
4001954c:	ebffc234 	bl	40009e24 <_txe_event_flags_set>
40019550:	ebffe599 	bl	40012bbc <CyU3PSysBarrierSync>
40019554:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019558:	e3500000 	cmp	r0, #0
4001955c:	0a000028 	beq	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019560:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019564:	e3100001 	tst	r0, #1
40019568:	0a000025 	beq	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001956c:	e3a02000 	mov	r2, #0
40019570:	e3a01001 	mov	r1, #1
40019574:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019578:	e1a00009 	mov	r0, r9
4001957c:	e12fff33 	blx	r3
40019580:	ea00001f 	b	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019584:	e3180002 	tst	r8, #2
40019588:	0a00001d 	beq	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001958c:	e5990000 	ldr	r0, [r9]
40019590:	e3500003 	cmp	r0, #3
40019594:	1a00001a 	bne	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019598:	e3a00001 	mov	r0, #1
4001959c:	e5890000 	str	r0, [r9]
400195a0:	e59f0284 	ldr	r0, [pc, #644]	; 4001982c <CyU3PDmaIntHandler_TypeAuto+0x364>
400195a4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400195a8:	e0800386 	add	r0, r0, r6, lsl #7
400195ac:	e5900014 	ldr	r0, [r0, #20]
400195b0:	e3c00002 	bic	r0, r0, #2
400195b4:	e59f1270 	ldr	r1, [pc, #624]	; 4001982c <CyU3PDmaIntHandler_TypeAuto+0x364>
400195b8:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400195bc:	e0811386 	add	r1, r1, r6, lsl #7
400195c0:	e5810014 	str	r0, [r1, #20]
400195c4:	e3a02000 	mov	r2, #0
400195c8:	e3a01002 	mov	r1, #2
400195cc:	e2890074 	add	r0, r9, #116	; 0x74
400195d0:	ebffc213 	bl	40009e24 <_txe_event_flags_set>
400195d4:	ebffe578 	bl	40012bbc <CyU3PSysBarrierSync>
400195d8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400195dc:	e3500000 	cmp	r0, #0
400195e0:	0a000007 	beq	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400195e4:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400195e8:	e3100002 	tst	r0, #2
400195ec:	0a000004 	beq	40019604 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400195f0:	e3a02000 	mov	r2, #0
400195f4:	e3a01002 	mov	r1, #2
400195f8:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400195fc:	e1a00009 	mov	r0, r9
40019600:	e12fff33 	blx	r3
40019604:	e3180e12 	tst	r8, #288	; 0x120
40019608:	0a000084 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001960c:	ebffe56a 	bl	40012bbc <CyU3PSysBarrierSync>
40019610:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019614:	e3500000 	cmp	r0, #0
40019618:	0a000080 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001961c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019620:	e3100c01 	tst	r0, #256	; 0x100
40019624:	0a00007d 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019628:	e3a02000 	mov	r2, #0
4001962c:	e3a01c01 	mov	r1, #256	; 0x100
40019630:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019634:	e1a00009 	mov	r0, r9
40019638:	e12fff33 	blx	r3
4001963c:	ea000077 	b	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019640:	e1d901b0 	ldrh	r0, [r9, #16]
40019644:	e3a0103f 	mov	r1, #63	; 0x3f
40019648:	e0015440 	and	r5, r1, r0, asr #8
4001964c:	e1d901b0 	ldrh	r0, [r9, #16]
40019650:	e20060ff 	and	r6, r0, #255	; 0xff
40019654:	e594000c 	ldr	r0, [r4, #12]
40019658:	e1a07800 	lsl	r7, r0, #16
4001965c:	e1a07827 	lsr	r7, r7, #16
40019660:	e3180001 	tst	r8, #1
40019664:	0a00005f 	beq	400197e8 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019668:	e5990000 	ldr	r0, [r9]
4001966c:	e3500004 	cmp	r0, #4
40019670:	0a00002b 	beq	40019724 <CyU3PDmaIntHandler_TypeAuto+0x25c>
40019674:	e1a00000 	nop			; (mov r0, r0)
40019678:	e1d901b6 	ldrh	r0, [r9, #22]
4001967c:	e28d100c 	add	r1, sp, #12
40019680:	eb002420 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019684:	e59d000c 	ldr	r0, [sp, #12]
40019688:	e58d0000 	str	r0, [sp]
4001968c:	e59d0018 	ldr	r0, [sp, #24]
40019690:	e59f1198 	ldr	r1, [pc, #408]	; 40019830 <CyU3PDmaIntHandler_TypeAuto+0x368>
40019694:	e0010820 	and	r0, r1, r0, lsr #16
40019698:	e1cd00b4 	strh	r0, [sp, #4]
4001969c:	e241100f 	sub	r1, r1, #15
400196a0:	e59d0018 	ldr	r0, [sp, #24]
400196a4:	e0000001 	and	r0, r0, r1
400196a8:	e1cd00b6 	strh	r0, [sp, #6]
400196ac:	e59d0018 	ldr	r0, [sp, #24]
400196b0:	e200000f 	and	r0, r0, #15
400196b4:	e1cd00b8 	strh	r0, [sp, #8]
400196b8:	e1811241 	orr	r1, r1, r1, asr #4
400196bc:	e59d0014 	ldr	r0, [sp, #20]
400196c0:	e0010820 	and	r0, r1, r0, lsr #16
400196c4:	e1c901b6 	strh	r0, [r9, #22]
400196c8:	ebffe53b 	bl	40012bbc <CyU3PSysBarrierSync>
400196cc:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400196d0:	e3500000 	cmp	r0, #0
400196d4:	0a000002 	beq	400196e4 <CyU3PDmaIntHandler_TypeAuto+0x21c>
400196d8:	e1dd10b6 	ldrh	r1, [sp, #6]
400196dc:	e59d0000 	ldr	r0, [sp]
400196e0:	ebffe2dc 	bl	40012258 <CyU3PSysFlushDRegion>
400196e4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400196e8:	e3500000 	cmp	r0, #0
400196ec:	0a000007 	beq	40019710 <CyU3PDmaIntHandler_TypeAuto+0x248>
400196f0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400196f4:	e3100008 	tst	r0, #8
400196f8:	0a000004 	beq	40019710 <CyU3PDmaIntHandler_TypeAuto+0x248>
400196fc:	e1a0200d 	mov	r2, sp
40019700:	e3a01008 	mov	r1, #8
40019704:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019708:	e1a00009 	mov	r0, r9
4001970c:	e12fff33 	blx	r3
40019710:	e1d901b6 	ldrh	r0, [r9, #22]
40019714:	e1500007 	cmp	r0, r7
40019718:	1affffd6 	bne	40019678 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
4001971c:	e1c971be 	strh	r7, [r9, #30]
40019720:	ea000030 	b	400197e8 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019724:	e1d901b4 	ldrh	r0, [r9, #20]
40019728:	e28d100c 	add	r1, sp, #12
4001972c:	eb0023f5 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019730:	e59d000c 	ldr	r0, [sp, #12]
40019734:	e58d0000 	str	r0, [sp]
40019738:	e59d0018 	ldr	r0, [sp, #24]
4001973c:	e59f10ec 	ldr	r1, [pc, #236]	; 40019830 <CyU3PDmaIntHandler_TypeAuto+0x368>
40019740:	e0010820 	and	r0, r1, r0, lsr #16
40019744:	e1cd00b4 	strh	r0, [sp, #4]
40019748:	e241100f 	sub	r1, r1, #15
4001974c:	e59d0018 	ldr	r0, [sp, #24]
40019750:	e0000001 	and	r0, r0, r1
40019754:	e1cd00b6 	strh	r0, [sp, #6]
40019758:	e59d0018 	ldr	r0, [sp, #24]
4001975c:	e200000f 	and	r0, r0, #15
40019760:	e1cd00b8 	strh	r0, [sp, #8]
40019764:	e3a00001 	mov	r0, #1
40019768:	e5890000 	str	r0, [r9]
4001976c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001982c <CyU3PDmaIntHandler_TypeAuto+0x364>
40019770:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019774:	e0800386 	add	r0, r0, r6, lsl #7
40019778:	e5900014 	ldr	r0, [r0, #20]
4001977c:	e3c00001 	bic	r0, r0, #1
40019780:	e59f10a4 	ldr	r1, [pc, #164]	; 4001982c <CyU3PDmaIntHandler_TypeAuto+0x364>
40019784:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019788:	e0811386 	add	r1, r1, r6, lsl #7
4001978c:	e5810014 	str	r0, [r1, #20]
40019790:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019794:	e3500000 	cmp	r0, #0
40019798:	0a000002 	beq	400197a8 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
4001979c:	e1dd10b6 	ldrh	r1, [sp, #6]
400197a0:	e59d0000 	ldr	r0, [sp]
400197a4:	ebffe2ab 	bl	40012258 <CyU3PSysFlushDRegion>
400197a8:	e3a02000 	mov	r2, #0
400197ac:	e3a01004 	mov	r1, #4
400197b0:	e2890074 	add	r0, r9, #116	; 0x74
400197b4:	ebffc19a 	bl	40009e24 <_txe_event_flags_set>
400197b8:	ebffe4ff 	bl	40012bbc <CyU3PSysBarrierSync>
400197bc:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400197c0:	e3500000 	cmp	r0, #0
400197c4:	0a000007 	beq	400197e8 <CyU3PDmaIntHandler_TypeAuto+0x320>
400197c8:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400197cc:	e3100004 	tst	r0, #4
400197d0:	0a000004 	beq	400197e8 <CyU3PDmaIntHandler_TypeAuto+0x320>
400197d4:	e1a0200d 	mov	r2, sp
400197d8:	e3a01004 	mov	r1, #4
400197dc:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197e0:	e1a00009 	mov	r0, r9
400197e4:	e12fff33 	blx	r3
400197e8:	e3180020 	tst	r8, #32
400197ec:	0a00000b 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
400197f0:	ebffe4f1 	bl	40012bbc <CyU3PSysBarrierSync>
400197f4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400197f8:	e3500000 	cmp	r0, #0
400197fc:	0a000007 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019800:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019804:	e3100080 	tst	r0, #128	; 0x80
40019808:	0a000004 	beq	40019820 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001980c:	e3a02000 	mov	r2, #0
40019810:	e3a01080 	mov	r1, #128	; 0x80
40019814:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019818:	e1a00009 	mov	r0, r9
4001981c:	e12fff33 	blx	r3
40019820:	e289003c 	add	r0, r9, #60	; 0x3c
40019824:	ebffc24b 	bl	4000a158 <_txe_mutex_put>
40019828:	eaffff2f 	b	400194ec <CyU3PDmaIntHandler_TypeAuto+0x24>
4001982c:	40031164 	.word	0x40031164
40019830:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019834 <CyU3PDmaIntHandler_TypeManual>:
40019834:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019838:	e24dd034 	sub	sp, sp, #52	; 0x34
4001983c:	e1a04000 	mov	r4, r0
40019840:	e5945004 	ldr	r5, [r4, #4]
40019844:	e5946008 	ldr	r6, [r4, #8]
40019848:	e3160040 	tst	r6, #64	; 0x40
4001984c:	0a000003 	beq	40019860 <CyU3PDmaIntHandler_TypeManual+0x2c>
40019850:	e1a00005 	mov	r0, r5
40019854:	ebfffecc 	bl	4001938c <CyU3PDmaChannelHandleError>
40019858:	e28dd034 	add	sp, sp, #52	; 0x34
4001985c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40019860:	e3e01000 	mvn	r1, #0
40019864:	e285003c 	add	r0, r5, #60	; 0x3c
40019868:	ebffc205 	bl	4000a084 <_txe_mutex_get>
4001986c:	e1d501b2 	ldrh	r0, [r5, #18]
40019870:	e5941000 	ldr	r1, [r4]
40019874:	e1500821 	cmp	r0, r1, lsr #16
40019878:	1a0000d6 	bne	40019bd8 <CyU3PDmaIntHandler_TypeManual+0x3a4>
4001987c:	e594000c 	ldr	r0, [r4, #12]
40019880:	e1a07800 	lsl	r7, r0, #16
40019884:	e1a07827 	lsr	r7, r7, #16
40019888:	e3160002 	tst	r6, #2
4001988c:	0a000060 	beq	40019a14 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019890:	e5950000 	ldr	r0, [r5]
40019894:	e3500003 	cmp	r0, #3
40019898:	1a000013 	bne	400198ec <CyU3PDmaIntHandler_TypeManual+0xb8>
4001989c:	e3a00001 	mov	r0, #1
400198a0:	e5850000 	str	r0, [r5]
400198a4:	e3a02000 	mov	r2, #0
400198a8:	e3a01002 	mov	r1, #2
400198ac:	e2850074 	add	r0, r5, #116	; 0x74
400198b0:	ebffc15b 	bl	40009e24 <_txe_event_flags_set>
400198b4:	e3c66080 	bic	r6, r6, #128	; 0x80
400198b8:	ebffe4bf 	bl	40012bbc <CyU3PSysBarrierSync>
400198bc:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198c0:	e3500000 	cmp	r0, #0
400198c4:	0a000052 	beq	40019a14 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400198c8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198cc:	e3100002 	tst	r0, #2
400198d0:	0a00004f 	beq	40019a14 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400198d4:	e3a02000 	mov	r2, #0
400198d8:	e3a01002 	mov	r1, #2
400198dc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198e0:	e1a00005 	mov	r0, r5
400198e4:	e12fff33 	blx	r3
400198e8:	ea000049 	b	40019a14 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400198ec:	e1d500b4 	ldrh	r0, [r5, #4]
400198f0:	e3500002 	cmp	r0, #2
400198f4:	1a000027 	bne	40019998 <CyU3PDmaIntHandler_TypeManual+0x164>
400198f8:	e1a00000 	nop			; (mov r0, r0)
400198fc:	e1d501ba 	ldrh	r0, [r5, #26]
40019900:	e28d1024 	add	r1, sp, #36	; 0x24
40019904:	eb00237f 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019908:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001990c:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019dbc <CyU3PDmaIntHandler_TypeManual+0x588>
40019910:	e0000001 	and	r0, r0, r1
40019914:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019918:	e1d501ba 	ldrh	r0, [r5, #26]
4001991c:	e28d1024 	add	r1, sp, #36	; 0x24
40019920:	eb002393 	bl	40022774 <CyU3PDmaDscrSetConfig>
40019924:	e1d511ba 	ldrh	r1, [r5, #26]
40019928:	e1d501b0 	ldrh	r0, [r5, #16]
4001992c:	e3a02000 	mov	r2, #0
40019930:	ebffedaf 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
40019934:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019938:	e59f1480 	ldr	r1, [pc, #1152]	; 40019dc0 <CyU3PDmaIntHandler_TypeManual+0x58c>
4001993c:	e0010820 	and	r0, r1, r0, lsr #16
40019940:	e1c501ba 	strh	r0, [r5, #26]
40019944:	e1d502b0 	ldrh	r0, [r5, #32]
40019948:	e28d1024 	add	r1, sp, #36	; 0x24
4001994c:	eb00236d 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019950:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019954:	e1c502b0 	strh	r0, [r5, #32]
40019958:	ebffe497 	bl	40012bbc <CyU3PSysBarrierSync>
4001995c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019960:	e3500000 	cmp	r0, #0
40019964:	0a000007 	beq	40019988 <CyU3PDmaIntHandler_TypeManual+0x154>
40019968:	e5950030 	ldr	r0, [r5, #48]	; 0x30
4001996c:	e3100010 	tst	r0, #16
40019970:	0a000004 	beq	40019988 <CyU3PDmaIntHandler_TypeManual+0x154>
40019974:	e3a02000 	mov	r2, #0
40019978:	e3a01010 	mov	r1, #16
4001997c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019980:	e1a00005 	mov	r0, r5
40019984:	e12fff33 	blx	r3
40019988:	e1d502b0 	ldrh	r0, [r5, #32]
4001998c:	e1500007 	cmp	r0, r7
40019990:	1affffd9 	bne	400198fc <CyU3PDmaIntHandler_TypeManual+0xc8>
40019994:	ea00001e 	b	40019a14 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019998:	e1a00000 	nop			; (mov r0, r0)
4001999c:	e1d501b8 	ldrh	r0, [r5, #24]
400199a0:	e28d1024 	add	r1, sp, #36	; 0x24
400199a4:	eb002357 	bl	40022708 <CyU3PDmaDscrGetConfig>
400199a8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199ac:	e3100008 	tst	r0, #8
400199b0:	1a000003 	bne	400199c4 <CyU3PDmaIntHandler_TypeManual+0x190>
400199b4:	e3a02000 	mov	r2, #0
400199b8:	e3a01010 	mov	r1, #16
400199bc:	e2850074 	add	r0, r5, #116	; 0x74
400199c0:	ebffc117 	bl	40009e24 <_txe_event_flags_set>
400199c4:	e1d502b0 	ldrh	r0, [r5, #32]
400199c8:	e28d1024 	add	r1, sp, #36	; 0x24
400199cc:	eb00234d 	bl	40022708 <CyU3PDmaDscrGetConfig>
400199d0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400199d4:	e1c502b0 	strh	r0, [r5, #32]
400199d8:	ebffe477 	bl	40012bbc <CyU3PSysBarrierSync>
400199dc:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400199e0:	e3500000 	cmp	r0, #0
400199e4:	0a000007 	beq	40019a08 <CyU3PDmaIntHandler_TypeManual+0x1d4>
400199e8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199ec:	e3100010 	tst	r0, #16
400199f0:	0a000004 	beq	40019a08 <CyU3PDmaIntHandler_TypeManual+0x1d4>
400199f4:	e3a02000 	mov	r2, #0
400199f8:	e3a01010 	mov	r1, #16
400199fc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a00:	e1a00005 	mov	r0, r5
40019a04:	e12fff33 	blx	r3
40019a08:	e1d502b0 	ldrh	r0, [r5, #32]
40019a0c:	e1500007 	cmp	r0, r7
40019a10:	1affffe1 	bne	4001999c <CyU3PDmaIntHandler_TypeManual+0x168>
40019a14:	e3160010 	tst	r6, #16
40019a18:	0a000046 	beq	40019b38 <CyU3PDmaIntHandler_TypeManual+0x304>
40019a1c:	e1d502b0 	ldrh	r0, [r5, #32]
40019a20:	e28d1024 	add	r1, sp, #36	; 0x24
40019a24:	eb002337 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019a28:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a2c:	e3100001 	tst	r0, #1
40019a30:	0a000040 	beq	40019b38 <CyU3PDmaIntHandler_TypeManual+0x304>
40019a34:	e1d501b2 	ldrh	r0, [r5, #18]
40019a38:	ebffecbd 	bl	40014d34 <CyU3PDmaSocketDisable>
40019a3c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a40:	e59f1374 	ldr	r1, [pc, #884]	; 40019dbc <CyU3PDmaIntHandler_TypeManual+0x588>
40019a44:	e0000001 	and	r0, r0, r1
40019a48:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019a4c:	e1d502b0 	ldrh	r0, [r5, #32]
40019a50:	e28d1024 	add	r1, sp, #36	; 0x24
40019a54:	eb002346 	bl	40022774 <CyU3PDmaDscrSetConfig>
40019a58:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019a5c:	e1c502b0 	strh	r0, [r5, #32]
40019a60:	e1d501b2 	ldrh	r0, [r5, #18]
40019a64:	e28d100c 	add	r1, sp, #12
40019a68:	ebffecc9 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40019a6c:	e59d0018 	ldr	r0, [sp, #24]
40019a70:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019a74:	e58d0018 	str	r0, [sp, #24]
40019a78:	e59d0018 	ldr	r0, [sp, #24]
40019a7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019a80:	e58d0018 	str	r0, [sp, #24]
40019a84:	e3a00000 	mov	r0, #0
40019a88:	e58d001c 	str	r0, [sp, #28]
40019a8c:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019a90:	e2400001 	sub	r0, r0, #1
40019a94:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019a98:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019a9c:	e3500000 	cmp	r0, #0
40019aa0:	1a000004 	bne	40019ab8 <CyU3PDmaIntHandler_TypeManual+0x284>
40019aa4:	e3a00010 	mov	r0, #16
40019aa8:	e58d001c 	str	r0, [sp, #28]
40019aac:	e59d0020 	ldr	r0, [sp, #32]
40019ab0:	e3c00010 	bic	r0, r0, #16
40019ab4:	e58d0020 	str	r0, [sp, #32]
40019ab8:	e1d502b0 	ldrh	r0, [r5, #32]
40019abc:	e58d000c 	str	r0, [sp, #12]
40019ac0:	e1d501b2 	ldrh	r0, [r5, #18]
40019ac4:	e28d100c 	add	r1, sp, #12
40019ac8:	ebffed5b 	bl	4001503c <CyU3PDmaSocketSetConfig>
40019acc:	e1d501ba 	ldrh	r0, [r5, #26]
40019ad0:	e28d1024 	add	r1, sp, #36	; 0x24
40019ad4:	eb00230b 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019ad8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019adc:	e59f12d8 	ldr	r1, [pc, #728]	; 40019dbc <CyU3PDmaIntHandler_TypeManual+0x588>
40019ae0:	e0000001 	and	r0, r0, r1
40019ae4:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ae8:	e1d501ba 	ldrh	r0, [r5, #26]
40019aec:	e28d1024 	add	r1, sp, #36	; 0x24
40019af0:	eb00231f 	bl	40022774 <CyU3PDmaDscrSetConfig>
40019af4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019af8:	e3500000 	cmp	r0, #0
40019afc:	0a000004 	beq	40019b14 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019b00:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019b04:	e59f32b0 	ldr	r3, [pc, #688]	; 40019dbc <CyU3PDmaIntHandler_TypeManual+0x588>
40019b08:	e0021003 	and	r1, r2, r3
40019b0c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019b10:	ebffe1d0 	bl	40012258 <CyU3PSysFlushDRegion>
40019b14:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b18:	e59f12a0 	ldr	r1, [pc, #672]	; 40019dc0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019b1c:	e0010820 	and	r0, r1, r0, lsr #16
40019b20:	e1c501ba 	strh	r0, [r5, #26]
40019b24:	e1d511ba 	ldrh	r1, [r5, #26]
40019b28:	e1d501b0 	ldrh	r0, [r5, #16]
40019b2c:	e3a02000 	mov	r2, #0
40019b30:	ebffed2f 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
40019b34:	ebffe420 	bl	40012bbc <CyU3PSysBarrierSync>
40019b38:	e3160080 	tst	r6, #128	; 0x80
40019b3c:	0a000016 	beq	40019b9c <CyU3PDmaIntHandler_TypeManual+0x368>
40019b40:	e1d500b4 	ldrh	r0, [r5, #4]
40019b44:	e3500002 	cmp	r0, #2
40019b48:	1a000001 	bne	40019b54 <CyU3PDmaIntHandler_TypeManual+0x320>
40019b4c:	e1d501b0 	ldrh	r0, [r5, #16]
40019b50:	ebffec77 	bl	40014d34 <CyU3PDmaSocketDisable>
40019b54:	e3a00001 	mov	r0, #1
40019b58:	e5850000 	str	r0, [r5]
40019b5c:	e3a02000 	mov	r2, #0
40019b60:	e3a01001 	mov	r1, #1
40019b64:	e2850074 	add	r0, r5, #116	; 0x74
40019b68:	ebffc0ad 	bl	40009e24 <_txe_event_flags_set>
40019b6c:	ebffe412 	bl	40012bbc <CyU3PSysBarrierSync>
40019b70:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b74:	e3500000 	cmp	r0, #0
40019b78:	0a000007 	beq	40019b9c <CyU3PDmaIntHandler_TypeManual+0x368>
40019b7c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b80:	e3100001 	tst	r0, #1
40019b84:	0a000004 	beq	40019b9c <CyU3PDmaIntHandler_TypeManual+0x368>
40019b88:	e3a02000 	mov	r2, #0
40019b8c:	e3a01001 	mov	r1, #1
40019b90:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b94:	e1a00005 	mov	r0, r5
40019b98:	e12fff33 	blx	r3
40019b9c:	e3160e12 	tst	r6, #288	; 0x120
40019ba0:	0a000082 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019ba4:	ebffe404 	bl	40012bbc <CyU3PSysBarrierSync>
40019ba8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019bac:	e3500000 	cmp	r0, #0
40019bb0:	0a00007e 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bb4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019bb8:	e3100c01 	tst	r0, #256	; 0x100
40019bbc:	0a00007b 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bc0:	e3a02000 	mov	r2, #0
40019bc4:	e3a01c01 	mov	r1, #256	; 0x100
40019bc8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019bcc:	e1a00005 	mov	r0, r5
40019bd0:	e12fff33 	blx	r3
40019bd4:	ea000075 	b	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bd8:	e594000c 	ldr	r0, [r4, #12]
40019bdc:	e1a07800 	lsl	r7, r0, #16
40019be0:	e1a07827 	lsr	r7, r7, #16
40019be4:	e3160001 	tst	r6, #1
40019be8:	0a00005d 	beq	40019d64 <CyU3PDmaIntHandler_TypeManual+0x530>
40019bec:	e5950000 	ldr	r0, [r5]
40019bf0:	e3500004 	cmp	r0, #4
40019bf4:	0a000031 	beq	40019cc0 <CyU3PDmaIntHandler_TypeManual+0x48c>
40019bf8:	e1a00000 	nop			; (mov r0, r0)
40019bfc:	e1d501be 	ldrh	r0, [r5, #30]
40019c00:	e28d1024 	add	r1, sp, #36	; 0x24
40019c04:	eb0022bf 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019c08:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019c0c:	e58d0000 	str	r0, [sp]
40019c10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c14:	e59f11a4 	ldr	r1, [pc, #420]	; 40019dc0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019c18:	e0010820 	and	r0, r1, r0, lsr #16
40019c1c:	e1cd00b4 	strh	r0, [sp, #4]
40019c20:	e241100f 	sub	r1, r1, #15
40019c24:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c28:	e0000001 	and	r0, r0, r1
40019c2c:	e1cd00b6 	strh	r0, [sp, #6]
40019c30:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c34:	e200000f 	and	r0, r0, #15
40019c38:	e1cd00b8 	strh	r0, [sp, #8]
40019c3c:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019c40:	e3500000 	cmp	r0, #0
40019c44:	0a000002 	beq	40019c54 <CyU3PDmaIntHandler_TypeManual+0x420>
40019c48:	e1dd10b6 	ldrh	r1, [sp, #6]
40019c4c:	e59d0000 	ldr	r0, [sp]
40019c50:	ebffe180 	bl	40012258 <CyU3PSysFlushDRegion>
40019c54:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c58:	e3100008 	tst	r0, #8
40019c5c:	0a000003 	beq	40019c70 <CyU3PDmaIntHandler_TypeManual+0x43c>
40019c60:	e3a02000 	mov	r2, #0
40019c64:	e3a01008 	mov	r1, #8
40019c68:	e2850074 	add	r0, r5, #116	; 0x74
40019c6c:	ebffc06c 	bl	40009e24 <_txe_event_flags_set>
40019c70:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c74:	e59f1144 	ldr	r1, [pc, #324]	; 40019dc0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019c78:	e0010820 	and	r0, r1, r0, lsr #16
40019c7c:	e1c501be 	strh	r0, [r5, #30]
40019c80:	ebffe3cd 	bl	40012bbc <CyU3PSysBarrierSync>
40019c84:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019c88:	e3500000 	cmp	r0, #0
40019c8c:	0a000007 	beq	40019cb0 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019c90:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019c94:	e3100008 	tst	r0, #8
40019c98:	0a000004 	beq	40019cb0 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019c9c:	e1a0200d 	mov	r2, sp
40019ca0:	e3a01008 	mov	r1, #8
40019ca4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ca8:	e1a00005 	mov	r0, r5
40019cac:	e12fff33 	blx	r3
40019cb0:	e1d501be 	ldrh	r0, [r5, #30]
40019cb4:	e1500007 	cmp	r0, r7
40019cb8:	1affffcf 	bne	40019bfc <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019cbc:	ea000028 	b	40019d64 <CyU3PDmaIntHandler_TypeManual+0x530>
40019cc0:	e1d501b4 	ldrh	r0, [r5, #20]
40019cc4:	e28d1024 	add	r1, sp, #36	; 0x24
40019cc8:	eb00228e 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019ccc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019cd0:	e58d0000 	str	r0, [sp]
40019cd4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cd8:	e59f10e0 	ldr	r1, [pc, #224]	; 40019dc0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019cdc:	e0010820 	and	r0, r1, r0, lsr #16
40019ce0:	e1cd00b4 	strh	r0, [sp, #4]
40019ce4:	e241100f 	sub	r1, r1, #15
40019ce8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cec:	e0000001 	and	r0, r0, r1
40019cf0:	e1cd00b6 	strh	r0, [sp, #6]
40019cf4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cf8:	e200000f 	and	r0, r0, #15
40019cfc:	e1cd00b8 	strh	r0, [sp, #8]
40019d00:	e3a00001 	mov	r0, #1
40019d04:	e5850000 	str	r0, [r5]
40019d08:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019d0c:	e3500000 	cmp	r0, #0
40019d10:	0a000002 	beq	40019d20 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019d14:	e1dd10b6 	ldrh	r1, [sp, #6]
40019d18:	e59d0000 	ldr	r0, [sp]
40019d1c:	ebffe14d 	bl	40012258 <CyU3PSysFlushDRegion>
40019d20:	e3a02000 	mov	r2, #0
40019d24:	e3a01004 	mov	r1, #4
40019d28:	e2850074 	add	r0, r5, #116	; 0x74
40019d2c:	ebffc03c 	bl	40009e24 <_txe_event_flags_set>
40019d30:	e3c66080 	bic	r6, r6, #128	; 0x80
40019d34:	ebffe3a0 	bl	40012bbc <CyU3PSysBarrierSync>
40019d38:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d3c:	e3500000 	cmp	r0, #0
40019d40:	0a000007 	beq	40019d64 <CyU3PDmaIntHandler_TypeManual+0x530>
40019d44:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d48:	e3100004 	tst	r0, #4
40019d4c:	0a000004 	beq	40019d64 <CyU3PDmaIntHandler_TypeManual+0x530>
40019d50:	e1a0200d 	mov	r2, sp
40019d54:	e3a01004 	mov	r1, #4
40019d58:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d5c:	e1a00005 	mov	r0, r5
40019d60:	e12fff33 	blx	r3
40019d64:	e3160080 	tst	r6, #128	; 0x80
40019d68:	0a000002 	beq	40019d78 <CyU3PDmaIntHandler_TypeManual+0x544>
40019d6c:	e3a00006 	mov	r0, #6
40019d70:	e5850000 	str	r0, [r5]
40019d74:	ebffe390 	bl	40012bbc <CyU3PSysBarrierSync>
40019d78:	e3160020 	tst	r6, #32
40019d7c:	0a00000b 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d80:	ebffe38d 	bl	40012bbc <CyU3PSysBarrierSync>
40019d84:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d88:	e3500000 	cmp	r0, #0
40019d8c:	0a000007 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d90:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d94:	e3100080 	tst	r0, #128	; 0x80
40019d98:	0a000004 	beq	40019db0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d9c:	e3a02000 	mov	r2, #0
40019da0:	e3a01080 	mov	r1, #128	; 0x80
40019da4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019da8:	e1a00005 	mov	r0, r5
40019dac:	e12fff33 	blx	r3
40019db0:	e285003c 	add	r0, r5, #60	; 0x3c
40019db4:	ebffc0e7 	bl	4000a158 <_txe_mutex_put>
40019db8:	eafffea6 	b	40019858 <CyU3PDmaIntHandler_TypeManual+0x24>
40019dbc:	0000fff0 	.word	0x0000fff0
40019dc0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019dc4 <CyU3PDmaIntHandler_TypeManyToOne>:
40019dc4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019dc8:	e24dd034 	sub	sp, sp, #52	; 0x34
40019dcc:	e1a04000 	mov	r4, r0
40019dd0:	e5945004 	ldr	r5, [r4, #4]
40019dd4:	e5946008 	ldr	r6, [r4, #8]
40019dd8:	e3160040 	tst	r6, #64	; 0x40
40019ddc:	0a000003 	beq	40019df0 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019de0:	e1a00005 	mov	r0, r5
40019de4:	eb00033d 	bl	4001aae0 <CyU3PDmaMultiChannelHandleError>
40019de8:	e28dd034 	add	sp, sp, #52	; 0x34
40019dec:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019df0:	e3e01000 	mvn	r1, #0
40019df4:	e2850078 	add	r0, r5, #120	; 0x78
40019df8:	ebffc0a1 	bl	4000a084 <_txe_mutex_get>
40019dfc:	e5940000 	ldr	r0, [r4]
40019e00:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019e04:	e0019820 	and	r9, r1, r0, lsr #16
40019e08:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019e0c:	e1500009 	cmp	r0, r9
40019e10:	1a0000d8 	bne	4001a178 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019e14:	e594000c 	ldr	r0, [r4, #12]
40019e18:	e0007001 	and	r7, r0, r1
40019e1c:	e3160002 	tst	r6, #2
40019e20:	0a000054 	beq	40019f78 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019e24:	e5950000 	ldr	r0, [r5]
40019e28:	e3500003 	cmp	r0, #3
40019e2c:	0a000030 	beq	40019ef4 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019e30:	e1a00000 	nop			; (mov r0, r0)
40019e34:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019e38:	e28d1024 	add	r1, sp, #36	; 0x24
40019e3c:	eb002231 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019e40:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e44:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019e48:	e0010820 	and	r0, r1, r0, lsr #16
40019e4c:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019e50:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e54:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019e58:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019e5c:	e28d1024 	add	r1, sp, #36	; 0x24
40019e60:	eb002228 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019e64:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e68:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a39c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019e6c:	e0000001 	and	r0, r0, r1
40019e70:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019e74:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019e78:	e28d1024 	add	r1, sp, #36	; 0x24
40019e7c:	eb00223c 	bl	40022774 <CyU3PDmaDscrSetConfig>
40019e80:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019e84:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a3a0 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019e88:	e0000001 	and	r0, r0, r1
40019e8c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019e90:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019e94:	e1a00820 	lsr	r0, r0, #16
40019e98:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019e9c:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019ea0:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019ea4:	e1a00802 	lsl	r0, r2, #16
40019ea8:	e1a00820 	lsr	r0, r0, #16
40019eac:	e3a02000 	mov	r2, #0
40019eb0:	ebffec4f 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
40019eb4:	ebffe340 	bl	40012bbc <CyU3PSysBarrierSync>
40019eb8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019ebc:	e3500000 	cmp	r0, #0
40019ec0:	0a000007 	beq	40019ee4 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019ec4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019ec8:	e3100010 	tst	r0, #16
40019ecc:	0a000004 	beq	40019ee4 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019ed0:	e3a02000 	mov	r2, #0
40019ed4:	e3a01010 	mov	r1, #16
40019ed8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019edc:	e1a00005 	mov	r0, r5
40019ee0:	e12fff33 	blx	r3
40019ee4:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019ee8:	e1500007 	cmp	r0, r7
40019eec:	1affffd0 	bne	40019e34 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019ef0:	ea000020 	b	40019f78 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019ef4:	e3a00001 	mov	r0, #1
40019ef8:	e5850000 	str	r0, [r5]
40019efc:	e1d500b4 	ldrh	r0, [r5, #4]
40019f00:	e3500005 	cmp	r0, #5
40019f04:	1a00000a 	bne	40019f34 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019f08:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019f0c:	e1a0100d 	mov	r1, sp
40019f10:	ebffeb9f 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40019f14:	e3a00000 	mov	r0, #0
40019f18:	e58d0010 	str	r0, [sp, #16]
40019f1c:	e59d0014 	ldr	r0, [sp, #20]
40019f20:	e3c00002 	bic	r0, r0, #2
40019f24:	e58d0014 	str	r0, [sp, #20]
40019f28:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019f2c:	e1a0100d 	mov	r1, sp
40019f30:	ebffec41 	bl	4001503c <CyU3PDmaSocketSetConfig>
40019f34:	e3a02000 	mov	r2, #0
40019f38:	e3a01002 	mov	r1, #2
40019f3c:	e28500b0 	add	r0, r5, #176	; 0xb0
40019f40:	ebffbfb7 	bl	40009e24 <_txe_event_flags_set>
40019f44:	e3c66080 	bic	r6, r6, #128	; 0x80
40019f48:	ebffe31b 	bl	40012bbc <CyU3PSysBarrierSync>
40019f4c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019f50:	e3500000 	cmp	r0, #0
40019f54:	0a000007 	beq	40019f78 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019f58:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019f5c:	e3100002 	tst	r0, #2
40019f60:	0a000004 	beq	40019f78 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019f64:	e3a02000 	mov	r2, #0
40019f68:	e3a01002 	mov	r1, #2
40019f6c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019f70:	e1a00005 	mov	r0, r5
40019f74:	e12fff33 	blx	r3
40019f78:	e3160010 	tst	r6, #16
40019f7c:	0a00004f 	beq	4001a0c0 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019f80:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019f84:	e28d1024 	add	r1, sp, #36	; 0x24
40019f88:	eb0021de 	bl	40022708 <CyU3PDmaDscrGetConfig>
40019f8c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019f90:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f94:	e0010820 	and	r0, r1, r0, lsr #16
40019f98:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019f9c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fa0:	e3100001 	tst	r0, #1
40019fa4:	0a000045 	beq	4001a0c0 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019fa8:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019fac:	ebffeb60 	bl	40014d34 <CyU3PDmaSocketDisable>
40019fb0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fb4:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a39c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019fb8:	e0000001 	and	r0, r0, r1
40019fbc:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019fc0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019fc4:	e28d1024 	add	r1, sp, #36	; 0x24
40019fc8:	eb0021e9 	bl	40022774 <CyU3PDmaDscrSetConfig>
40019fcc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019fd0:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019fd4:	e1a0100d 	mov	r1, sp
40019fd8:	e1a00009 	mov	r0, r9
40019fdc:	ebffeb6c 	bl	40014d94 <CyU3PDmaSocketGetConfig>
40019fe0:	e59d000c 	ldr	r0, [sp, #12]
40019fe4:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019fe8:	e58d000c 	str	r0, [sp, #12]
40019fec:	e59d000c 	ldr	r0, [sp, #12]
40019ff0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019ff4:	e58d000c 	str	r0, [sp, #12]
40019ff8:	e3a00000 	mov	r0, #0
40019ffc:	e58d0010 	str	r0, [sp, #16]
4001a000:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a004:	e2400001 	sub	r0, r0, #1
4001a008:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
4001a00c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a010:	e3500000 	cmp	r0, #0
4001a014:	1a000004 	bne	4001a02c <CyU3PDmaIntHandler_TypeManyToOne+0x268>
4001a018:	e3a00010 	mov	r0, #16
4001a01c:	e58d0010 	str	r0, [sp, #16]
4001a020:	e59d0014 	ldr	r0, [sp, #20]
4001a024:	e3c00010 	bic	r0, r0, #16
4001a028:	e58d0014 	str	r0, [sp, #20]
4001a02c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a030:	e58d0000 	str	r0, [sp]
4001a034:	e1a0100d 	mov	r1, sp
4001a038:	e1a00009 	mov	r0, r9
4001a03c:	ebffebfe 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001a040:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a044:	e28d1024 	add	r1, sp, #36	; 0x24
4001a048:	eb0021ae 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a04c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a050:	e59f1344 	ldr	r1, [pc, #836]	; 4001a39c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a054:	e0000001 	and	r0, r0, r1
4001a058:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a05c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a060:	e28d1024 	add	r1, sp, #36	; 0x24
4001a064:	eb0021c2 	bl	40022774 <CyU3PDmaDscrSetConfig>
4001a068:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a06c:	e3500000 	cmp	r0, #0
4001a070:	0a000004 	beq	4001a088 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
4001a074:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001a078:	e59f331c 	ldr	r3, [pc, #796]	; 4001a39c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a07c:	e0021003 	and	r1, r2, r3
4001a080:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a084:	ebffe073 	bl	40012258 <CyU3PSysFlushDRegion>
4001a088:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a08c:	e59f130c 	ldr	r1, [pc, #780]	; 4001a3a0 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a090:	e0000001 	and	r0, r0, r1
4001a094:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a098:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a09c:	e1a00820 	lsr	r0, r0, #16
4001a0a0:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a0a4:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a0a8:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a0ac:	e1a00802 	lsl	r0, r2, #16
4001a0b0:	e1a00820 	lsr	r0, r0, #16
4001a0b4:	e3a02000 	mov	r2, #0
4001a0b8:	ebffebcd 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
4001a0bc:	ebffe2be 	bl	40012bbc <CyU3PSysBarrierSync>
4001a0c0:	e3160080 	tst	r6, #128	; 0x80
4001a0c4:	0a00001c 	beq	4001a13c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a0c8:	e3a08000 	mov	r8, #0
4001a0cc:	ea000005 	b	4001a0e8 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
4001a0d0:	e2851024 	add	r1, r5, #36	; 0x24
4001a0d4:	e0811088 	add	r1, r1, r8, lsl #1
4001a0d8:	e1d100b0 	ldrh	r0, [r1]
4001a0dc:	ebffeb14 	bl	40014d34 <CyU3PDmaSocketDisable>
4001a0e0:	e2880001 	add	r0, r8, #1
4001a0e4:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a0e8:	e1d500ba 	ldrh	r0, [r5, #10]
4001a0ec:	e1500008 	cmp	r0, r8
4001a0f0:	cafffff6 	bgt	4001a0d0 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
4001a0f4:	e3a00001 	mov	r0, #1
4001a0f8:	e5850000 	str	r0, [r5]
4001a0fc:	e3a02000 	mov	r2, #0
4001a100:	e3a01001 	mov	r1, #1
4001a104:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a108:	ebffbf45 	bl	40009e24 <_txe_event_flags_set>
4001a10c:	ebffe2aa 	bl	40012bbc <CyU3PSysBarrierSync>
4001a110:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a114:	e3500000 	cmp	r0, #0
4001a118:	0a000007 	beq	4001a13c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a11c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a120:	e3100001 	tst	r0, #1
4001a124:	0a000004 	beq	4001a13c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a128:	e3a02000 	mov	r2, #0
4001a12c:	e3a01001 	mov	r1, #1
4001a130:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a134:	e1a00005 	mov	r0, r5
4001a138:	e12fff33 	blx	r3
4001a13c:	e3160e12 	tst	r6, #288	; 0x120
4001a140:	0a000091 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a144:	ebffe29c 	bl	40012bbc <CyU3PSysBarrierSync>
4001a148:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a14c:	e3500000 	cmp	r0, #0
4001a150:	0a00008d 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a154:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a158:	e3100c01 	tst	r0, #256	; 0x100
4001a15c:	0a00008a 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a160:	e3a02000 	mov	r2, #0
4001a164:	e3a01c01 	mov	r1, #256	; 0x100
4001a168:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a16c:	e1a00005 	mov	r0, r5
4001a170:	e12fff33 	blx	r3
4001a174:	ea000084 	b	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a178:	e594000c 	ldr	r0, [r4, #12]
4001a17c:	e1a07800 	lsl	r7, r0, #16
4001a180:	e1a07827 	lsr	r7, r7, #16
4001a184:	e3160001 	tst	r6, #1
4001a188:	0a000048 	beq	4001a2b0 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a18c:	e5950000 	ldr	r0, [r5]
4001a190:	e3500004 	cmp	r0, #4
4001a194:	0a00007c 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a198:	e3a08000 	mov	r8, #0
4001a19c:	ea000007 	b	4001a1c0 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a1a0:	e2850024 	add	r0, r5, #36	; 0x24
4001a1a4:	e0800088 	add	r0, r0, r8, lsl #1
4001a1a8:	e1d000b0 	ldrh	r0, [r0]
4001a1ac:	e1500009 	cmp	r0, r9
4001a1b0:	1a000000 	bne	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a1b4:	ea000004 	b	4001a1cc <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a1b8:	e2880001 	add	r0, r8, #1
4001a1bc:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a1c0:	e1d500ba 	ldrh	r0, [r5, #10]
4001a1c4:	e1500008 	cmp	r0, r8
4001a1c8:	cafffff4 	bgt	4001a1a0 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a1cc:	e1a00000 	nop			; (mov r0, r0)
4001a1d0:	e1a00000 	nop			; (mov r0, r0)
4001a1d4:	e285103e 	add	r1, r5, #62	; 0x3e
4001a1d8:	e0811088 	add	r1, r1, r8, lsl #1
4001a1dc:	e1d100b0 	ldrh	r0, [r1]
4001a1e0:	e28d1024 	add	r1, sp, #36	; 0x24
4001a1e4:	eb002147 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a1e8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a1ec:	e58d0018 	str	r0, [sp, #24]
4001a1f0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1f4:	e59f119c 	ldr	r1, [pc, #412]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a1f8:	e0010820 	and	r0, r1, r0, lsr #16
4001a1fc:	e1cd01bc 	strh	r0, [sp, #28]
4001a200:	e241100f 	sub	r1, r1, #15
4001a204:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a208:	e0000001 	and	r0, r0, r1
4001a20c:	e1cd01be 	strh	r0, [sp, #30]
4001a210:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a214:	e200000f 	and	r0, r0, #15
4001a218:	e1cd02b0 	strh	r0, [sp, #32]
4001a21c:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a220:	e3500000 	cmp	r0, #0
4001a224:	0a000002 	beq	4001a234 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a228:	e1dd11be 	ldrh	r1, [sp, #30]
4001a22c:	e59d0018 	ldr	r0, [sp, #24]
4001a230:	ebffe008 	bl	40012258 <CyU3PSysFlushDRegion>
4001a234:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a238:	e3100008 	tst	r0, #8
4001a23c:	0a000003 	beq	4001a250 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a240:	e3a02000 	mov	r2, #0
4001a244:	e3a01008 	mov	r1, #8
4001a248:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a24c:	ebffbef4 	bl	40009e24 <_txe_event_flags_set>
4001a250:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a254:	e59f113c 	ldr	r1, [pc, #316]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a258:	e0010820 	and	r0, r1, r0, lsr #16
4001a25c:	e285103e 	add	r1, r5, #62	; 0x3e
4001a260:	e0811088 	add	r1, r1, r8, lsl #1
4001a264:	e1c100b0 	strh	r0, [r1]
4001a268:	ebffe253 	bl	40012bbc <CyU3PSysBarrierSync>
4001a26c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a270:	e3500000 	cmp	r0, #0
4001a274:	0a000007 	beq	4001a298 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a278:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a27c:	e3100008 	tst	r0, #8
4001a280:	0a000004 	beq	4001a298 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a284:	e28d2018 	add	r2, sp, #24
4001a288:	e3a01008 	mov	r1, #8
4001a28c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a290:	e1a00005 	mov	r0, r5
4001a294:	e12fff33 	blx	r3
4001a298:	e285003e 	add	r0, r5, #62	; 0x3e
4001a29c:	e0800088 	add	r0, r0, r8, lsl #1
4001a2a0:	e1d000b0 	ldrh	r0, [r0]
4001a2a4:	e1500007 	cmp	r0, r7
4001a2a8:	1affffc9 	bne	4001a1d4 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a2ac:	ea000036 	b	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2b0:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a2b4:	e28d1024 	add	r1, sp, #36	; 0x24
4001a2b8:	eb002112 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a2bc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a2c0:	e58d0018 	str	r0, [sp, #24]
4001a2c4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2c8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a398 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a2cc:	e0010820 	and	r0, r1, r0, lsr #16
4001a2d0:	e1cd01bc 	strh	r0, [sp, #28]
4001a2d4:	e241100f 	sub	r1, r1, #15
4001a2d8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2dc:	e0000001 	and	r0, r0, r1
4001a2e0:	e1cd01be 	strh	r0, [sp, #30]
4001a2e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2e8:	e200000f 	and	r0, r0, #15
4001a2ec:	e1cd02b0 	strh	r0, [sp, #32]
4001a2f0:	e3a00001 	mov	r0, #1
4001a2f4:	e5850000 	str	r0, [r5]
4001a2f8:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a2fc:	e3500000 	cmp	r0, #0
4001a300:	0a000002 	beq	4001a310 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a304:	e1dd11be 	ldrh	r1, [sp, #30]
4001a308:	e59d0018 	ldr	r0, [sp, #24]
4001a30c:	ebffdfd1 	bl	40012258 <CyU3PSysFlushDRegion>
4001a310:	e1d500b4 	ldrh	r0, [r5, #4]
4001a314:	e3500005 	cmp	r0, #5
4001a318:	1a00000a 	bne	4001a348 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a31c:	e1a0100d 	mov	r1, sp
4001a320:	e1a00009 	mov	r0, r9
4001a324:	ebffea9a 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001a328:	e3a00000 	mov	r0, #0
4001a32c:	e58d0010 	str	r0, [sp, #16]
4001a330:	e59d0014 	ldr	r0, [sp, #20]
4001a334:	e3c00001 	bic	r0, r0, #1
4001a338:	e58d0014 	str	r0, [sp, #20]
4001a33c:	e1a0100d 	mov	r1, sp
4001a340:	e1a00009 	mov	r0, r9
4001a344:	ebffeb3c 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001a348:	e3a02000 	mov	r2, #0
4001a34c:	e3a01004 	mov	r1, #4
4001a350:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a354:	ebffbeb2 	bl	40009e24 <_txe_event_flags_set>
4001a358:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a35c:	ebffe216 	bl	40012bbc <CyU3PSysBarrierSync>
4001a360:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a364:	e3500000 	cmp	r0, #0
4001a368:	0a000007 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a36c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a370:	e3100004 	tst	r0, #4
4001a374:	0a000004 	beq	4001a38c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a378:	e28d2018 	add	r2, sp, #24
4001a37c:	e3a01004 	mov	r1, #4
4001a380:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a384:	e1a00005 	mov	r0, r5
4001a388:	e12fff33 	blx	r3
4001a38c:	e2850078 	add	r0, r5, #120	; 0x78
4001a390:	ebffbf70 	bl	4000a158 <_txe_mutex_put>
4001a394:	eafffe93 	b	40019de8 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a398:	0000ffff 	.word	0x0000ffff
4001a39c:	0000fff0 	.word	0x0000fff0
4001a3a0:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a3a4 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a3a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a3a8:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a3ac:	e1a04000 	mov	r4, r0
4001a3b0:	e594a004 	ldr	sl, [r4, #4]
4001a3b4:	e5940000 	ldr	r0, [r4]
4001a3b8:	e59f1664 	ldr	r1, [pc, #1636]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a3bc:	e0016820 	and	r6, r1, r0, lsr #16
4001a3c0:	e5945008 	ldr	r5, [r4, #8]
4001a3c4:	e3150040 	tst	r5, #64	; 0x40
4001a3c8:	0a000003 	beq	4001a3dc <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a3cc:	e1a0000a 	mov	r0, sl
4001a3d0:	eb0001c2 	bl	4001aae0 <CyU3PDmaMultiChannelHandleError>
4001a3d4:	e28dd038 	add	sp, sp, #56	; 0x38
4001a3d8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a3dc:	e3e01000 	mvn	r1, #0
4001a3e0:	e28a0078 	add	r0, sl, #120	; 0x78
4001a3e4:	ebffbf26 	bl	4000a084 <_txe_mutex_get>
4001a3e8:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a3ec:	e1500006 	cmp	r0, r6
4001a3f0:	0a0000fc 	beq	4001a7e8 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a3f4:	e594000c 	ldr	r0, [r4, #12]
4001a3f8:	e1a09800 	lsl	r9, r0, #16
4001a3fc:	e1a09829 	lsr	r9, r9, #16
4001a400:	e3a08000 	mov	r8, #0
4001a404:	ea000007 	b	4001a428 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a408:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a40c:	e0800088 	add	r0, r0, r8, lsl #1
4001a410:	e1d000b0 	ldrh	r0, [r0]
4001a414:	e1500006 	cmp	r0, r6
4001a418:	1a000000 	bne	4001a420 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a41c:	ea000004 	b	4001a434 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a420:	e2880001 	add	r0, r8, #1
4001a424:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a428:	e1da00ba 	ldrh	r0, [sl, #10]
4001a42c:	e1500008 	cmp	r0, r8
4001a430:	cafffff4 	bgt	4001a408 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a434:	e1a00000 	nop			; (mov r0, r0)
4001a438:	e3150002 	tst	r5, #2
4001a43c:	0a00007e 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a440:	e59a0000 	ldr	r0, [sl]
4001a444:	e3500003 	cmp	r0, #3
4001a448:	0a00005a 	beq	4001a5b8 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a44c:	e1a00000 	nop			; (mov r0, r0)
4001a450:	e28a1046 	add	r1, sl, #70	; 0x46
4001a454:	e0811088 	add	r1, r1, r8, lsl #1
4001a458:	e1d100b0 	ldrh	r0, [r1]
4001a45c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a460:	eb0020a8 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a464:	e28a1046 	add	r1, sl, #70	; 0x46
4001a468:	e0811088 	add	r1, r1, r8, lsl #1
4001a46c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a470:	e1c100b0 	strh	r0, [r1]
4001a474:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a478:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a47c:	e0017820 	and	r7, r1, r0, lsr #16
4001a480:	e28d1028 	add	r1, sp, #40	; 0x28
4001a484:	e1a00007 	mov	r0, r7
4001a488:	eb00209e 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a48c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a490:	e59f1590 	ldr	r1, [pc, #1424]	; 4001aa28 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a494:	e0000001 	and	r0, r0, r1
4001a498:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a49c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4a0:	e1a00007 	mov	r0, r7
4001a4a4:	eb0020b2 	bl	40022774 <CyU3PDmaDscrSetConfig>
4001a4a8:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a4ac:	e3a02000 	mov	r2, #0
4001a4b0:	e1a01007 	mov	r1, r7
4001a4b4:	ebffeace 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
4001a4b8:	ebffe1bf 	bl	40012bbc <CyU3PSysBarrierSync>
4001a4bc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a4c0:	e3500000 	cmp	r0, #0
4001a4c4:	0a000007 	beq	4001a4e8 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a4c8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a4cc:	e3100010 	tst	r0, #16
4001a4d0:	0a000004 	beq	4001a4e8 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a4d4:	e3a02000 	mov	r2, #0
4001a4d8:	e3a01010 	mov	r1, #16
4001a4dc:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a4e0:	e1a0000a 	mov	r0, sl
4001a4e4:	e12fff33 	blx	r3
4001a4e8:	e28a0046 	add	r0, sl, #70	; 0x46
4001a4ec:	e0800088 	add	r0, r0, r8, lsl #1
4001a4f0:	e1d000b0 	ldrh	r0, [r0]
4001a4f4:	e1500009 	cmp	r0, r9
4001a4f8:	1affffd4 	bne	4001a450 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a4fc:	e59a0000 	ldr	r0, [sl]
4001a500:	e3500006 	cmp	r0, #6
4001a504:	1a00004c 	bne	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a508:	e1da00b8 	ldrh	r0, [sl, #8]
4001a50c:	e1da10ba 	ldrh	r1, [sl, #10]
4001a510:	e0000091 	mul	r0, r1, r0
4001a514:	e1a08800 	lsl	r8, r0, #16
4001a518:	e1a08828 	lsr	r8, r8, #16
4001a51c:	e1da71b4 	ldrh	r7, [sl, #20]
4001a520:	ea00000c 	b	4001a558 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a524:	e28d1028 	add	r1, sp, #40	; 0x28
4001a528:	e1a00007 	mov	r0, r7
4001a52c:	eb002075 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a530:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a534:	e3100008 	tst	r0, #8
4001a538:	0a000000 	beq	4001a540 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a53c:	ea000007 	b	4001a560 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a540:	e2480001 	sub	r0, r8, #1
4001a544:	e1a08800 	lsl	r8, r0, #16
4001a548:	e1a08828 	lsr	r8, r8, #16
4001a54c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a550:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a554:	e0017820 	and	r7, r1, r0, lsr #16
4001a558:	e3580000 	cmp	r8, #0
4001a55c:	1afffff0 	bne	4001a524 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a560:	e1a00000 	nop			; (mov r0, r0)
4001a564:	e3580000 	cmp	r8, #0
4001a568:	1a000033 	bne	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a56c:	e3a00001 	mov	r0, #1
4001a570:	e58a0000 	str	r0, [sl]
4001a574:	e3a02000 	mov	r2, #0
4001a578:	e3a01001 	mov	r1, #1
4001a57c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a580:	ebffbe27 	bl	40009e24 <_txe_event_flags_set>
4001a584:	ebffe18c 	bl	40012bbc <CyU3PSysBarrierSync>
4001a588:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a58c:	e3500000 	cmp	r0, #0
4001a590:	0a000029 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a594:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a598:	e3100001 	tst	r0, #1
4001a59c:	0a000026 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a5a0:	e3a02000 	mov	r2, #0
4001a5a4:	e3a01001 	mov	r1, #1
4001a5a8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a5ac:	e1a0000a 	mov	r0, sl
4001a5b0:	e12fff33 	blx	r3
4001a5b4:	ea000020 	b	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a5b8:	e3a00001 	mov	r0, #1
4001a5bc:	e58a0000 	str	r0, [sl]
4001a5c0:	e1da00b4 	ldrh	r0, [sl, #4]
4001a5c4:	e3500006 	cmp	r0, #6
4001a5c8:	1a00000a 	bne	4001a5f8 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a5cc:	e28d1004 	add	r1, sp, #4
4001a5d0:	e1a00006 	mov	r0, r6
4001a5d4:	ebffe9ee 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001a5d8:	e3a00000 	mov	r0, #0
4001a5dc:	e58d0014 	str	r0, [sp, #20]
4001a5e0:	e59d0018 	ldr	r0, [sp, #24]
4001a5e4:	e3c00002 	bic	r0, r0, #2
4001a5e8:	e58d0018 	str	r0, [sp, #24]
4001a5ec:	e28d1004 	add	r1, sp, #4
4001a5f0:	e1a00006 	mov	r0, r6
4001a5f4:	ebffea90 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001a5f8:	e3a02000 	mov	r2, #0
4001a5fc:	e3a01002 	mov	r1, #2
4001a600:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a604:	ebffbe06 	bl	40009e24 <_txe_event_flags_set>
4001a608:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a60c:	ebffe16a 	bl	40012bbc <CyU3PSysBarrierSync>
4001a610:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a614:	e3500000 	cmp	r0, #0
4001a618:	0a000007 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a61c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a620:	e3100002 	tst	r0, #2
4001a624:	0a000004 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a628:	e3a02000 	mov	r2, #0
4001a62c:	e3a01002 	mov	r1, #2
4001a630:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a634:	e1a0000a 	mov	r0, sl
4001a638:	e12fff33 	blx	r3
4001a63c:	e3150010 	tst	r5, #16
4001a640:	0a000059 	beq	4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a644:	e28a1046 	add	r1, sl, #70	; 0x46
4001a648:	e0811088 	add	r1, r1, r8, lsl #1
4001a64c:	e1d100b0 	ldrh	r0, [r1]
4001a650:	e28d1028 	add	r1, sp, #40	; 0x28
4001a654:	eb00202b 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a658:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a65c:	e3100001 	tst	r0, #1
4001a660:	0a000051 	beq	4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a664:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a668:	e0811088 	add	r1, r1, r8, lsl #1
4001a66c:	e1d100b0 	ldrh	r0, [r1]
4001a670:	ebffe9af 	bl	40014d34 <CyU3PDmaSocketDisable>
4001a674:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a678:	e59f13a8 	ldr	r1, [pc, #936]	; 4001aa28 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a67c:	e0000001 	and	r0, r0, r1
4001a680:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a684:	e28a1046 	add	r1, sl, #70	; 0x46
4001a688:	e0811088 	add	r1, r1, r8, lsl #1
4001a68c:	e1d100b0 	ldrh	r0, [r1]
4001a690:	e28d1028 	add	r1, sp, #40	; 0x28
4001a694:	eb002036 	bl	40022774 <CyU3PDmaDscrSetConfig>
4001a698:	e28a1046 	add	r1, sl, #70	; 0x46
4001a69c:	e0811088 	add	r1, r1, r8, lsl #1
4001a6a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a6a4:	e1c100b0 	strh	r0, [r1]
4001a6a8:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a6ac:	e0811088 	add	r1, r1, r8, lsl #1
4001a6b0:	e1d100b0 	ldrh	r0, [r1]
4001a6b4:	e28d1004 	add	r1, sp, #4
4001a6b8:	ebffe9b5 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001a6bc:	e59d0010 	ldr	r0, [sp, #16]
4001a6c0:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a6c4:	e58d0010 	str	r0, [sp, #16]
4001a6c8:	e59d0010 	ldr	r0, [sp, #16]
4001a6cc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a6d0:	e58d0010 	str	r0, [sp, #16]
4001a6d4:	e3a00000 	mov	r0, #0
4001a6d8:	e58d0014 	str	r0, [sp, #20]
4001a6dc:	e28a0064 	add	r0, sl, #100	; 0x64
4001a6e0:	e0800088 	add	r0, r0, r8, lsl #1
4001a6e4:	e1d000b0 	ldrh	r0, [r0]
4001a6e8:	e2400001 	sub	r0, r0, #1
4001a6ec:	e28a1064 	add	r1, sl, #100	; 0x64
4001a6f0:	e0811088 	add	r1, r1, r8, lsl #1
4001a6f4:	e1c100b0 	strh	r0, [r1]
4001a6f8:	e28a0064 	add	r0, sl, #100	; 0x64
4001a6fc:	e0800088 	add	r0, r0, r8, lsl #1
4001a700:	e1d000b0 	ldrh	r0, [r0]
4001a704:	e3500000 	cmp	r0, #0
4001a708:	1a000004 	bne	4001a720 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a70c:	e3a00010 	mov	r0, #16
4001a710:	e58d0014 	str	r0, [sp, #20]
4001a714:	e59d0018 	ldr	r0, [sp, #24]
4001a718:	e3c00010 	bic	r0, r0, #16
4001a71c:	e58d0018 	str	r0, [sp, #24]
4001a720:	e28a0046 	add	r0, sl, #70	; 0x46
4001a724:	e0800088 	add	r0, r0, r8, lsl #1
4001a728:	e1d000b0 	ldrh	r0, [r0]
4001a72c:	e58d0004 	str	r0, [sp, #4]
4001a730:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a734:	e0811088 	add	r1, r1, r8, lsl #1
4001a738:	e1d100b0 	ldrh	r0, [r1]
4001a73c:	e28d1004 	add	r1, sp, #4
4001a740:	ebffea3d 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001a744:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a748:	e59f12d4 	ldr	r1, [pc, #724]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a74c:	e0017820 	and	r7, r1, r0, lsr #16
4001a750:	e28d1028 	add	r1, sp, #40	; 0x28
4001a754:	e1a00007 	mov	r0, r7
4001a758:	eb001fea 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a75c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a760:	e59f12c0 	ldr	r1, [pc, #704]	; 4001aa28 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a764:	e0000001 	and	r0, r0, r1
4001a768:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a76c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a770:	e1a00007 	mov	r0, r7
4001a774:	eb001ffe 	bl	40022774 <CyU3PDmaDscrSetConfig>
4001a778:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a77c:	e3500000 	cmp	r0, #0
4001a780:	0a000004 	beq	4001a798 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a784:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a788:	e59f3298 	ldr	r3, [pc, #664]	; 4001aa28 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a78c:	e0021003 	and	r1, r2, r3
4001a790:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a794:	ebffdeaf 	bl	40012258 <CyU3PSysFlushDRegion>
4001a798:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a79c:	e3a02000 	mov	r2, #0
4001a7a0:	e1a01007 	mov	r1, r7
4001a7a4:	ebffea12 	bl	40014ff4 <CyU3PDmaSocketSendEvent>
4001a7a8:	ebffe103 	bl	40012bbc <CyU3PSysBarrierSync>
4001a7ac:	e3150020 	tst	r5, #32
4001a7b0:	0a000098 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a7b4:	ebffe100 	bl	40012bbc <CyU3PSysBarrierSync>
4001a7b8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a7bc:	e3500000 	cmp	r0, #0
4001a7c0:	0a000094 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a7c4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a7c8:	e3100080 	tst	r0, #128	; 0x80
4001a7cc:	0a000091 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a7d0:	e3a02000 	mov	r2, #0
4001a7d4:	e3a01080 	mov	r1, #128	; 0x80
4001a7d8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a7dc:	e1a0000a 	mov	r0, sl
4001a7e0:	e12fff33 	blx	r3
4001a7e4:	ea00008b 	b	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a7e8:	e594000c 	ldr	r0, [r4, #12]
4001a7ec:	e1a09800 	lsl	r9, r0, #16
4001a7f0:	e1a09829 	lsr	r9, r9, #16
4001a7f4:	e3150001 	tst	r5, #1
4001a7f8:	0a00006b 	beq	4001a9ac <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a7fc:	e59a0000 	ldr	r0, [sl]
4001a800:	e3500004 	cmp	r0, #4
4001a804:	0a000031 	beq	4001a8d0 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a808:	e1a00000 	nop			; (mov r0, r0)
4001a80c:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a810:	e28d1028 	add	r1, sp, #40	; 0x28
4001a814:	eb001fbb 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a818:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a81c:	e58d001c 	str	r0, [sp, #28]
4001a820:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a824:	e59f11f8 	ldr	r1, [pc, #504]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a828:	e0010820 	and	r0, r1, r0, lsr #16
4001a82c:	e1cd02b0 	strh	r0, [sp, #32]
4001a830:	e241100f 	sub	r1, r1, #15
4001a834:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a838:	e0000001 	and	r0, r0, r1
4001a83c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a840:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a844:	e200000f 	and	r0, r0, #15
4001a848:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a84c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a850:	e3500000 	cmp	r0, #0
4001a854:	0a000002 	beq	4001a864 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a858:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a85c:	e59d001c 	ldr	r0, [sp, #28]
4001a860:	ebffde7c 	bl	40012258 <CyU3PSysFlushDRegion>
4001a864:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a868:	e3100008 	tst	r0, #8
4001a86c:	0a000003 	beq	4001a880 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a870:	e3a02000 	mov	r2, #0
4001a874:	e3a01008 	mov	r1, #8
4001a878:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a87c:	ebffbd68 	bl	40009e24 <_txe_event_flags_set>
4001a880:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a884:	e59f1198 	ldr	r1, [pc, #408]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a888:	e0010820 	and	r0, r1, r0, lsr #16
4001a88c:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a890:	ebffe0c9 	bl	40012bbc <CyU3PSysBarrierSync>
4001a894:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a898:	e3500000 	cmp	r0, #0
4001a89c:	0a000007 	beq	4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a8a0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a8a4:	e3100008 	tst	r0, #8
4001a8a8:	0a000004 	beq	4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a8ac:	e28d201c 	add	r2, sp, #28
4001a8b0:	e3a01008 	mov	r1, #8
4001a8b4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a8b8:	e1a0000a 	mov	r0, sl
4001a8bc:	e12fff33 	blx	r3
4001a8c0:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a8c4:	e1500009 	cmp	r0, r9
4001a8c8:	1affffcf 	bne	4001a80c <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a8cc:	ea000036 	b	4001a9ac <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a8d0:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a8d4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a8d8:	eb001f8a 	bl	40022708 <CyU3PDmaDscrGetConfig>
4001a8dc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a8e0:	e58d001c 	str	r0, [sp, #28]
4001a8e4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a8e8:	e59f1134 	ldr	r1, [pc, #308]	; 4001aa24 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a8ec:	e0010820 	and	r0, r1, r0, lsr #16
4001a8f0:	e1cd02b0 	strh	r0, [sp, #32]
4001a8f4:	e241100f 	sub	r1, r1, #15
4001a8f8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a8fc:	e0000001 	and	r0, r0, r1
4001a900:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a904:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a908:	e200000f 	and	r0, r0, #15
4001a90c:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a910:	e3a00001 	mov	r0, #1
4001a914:	e58a0000 	str	r0, [sl]
4001a918:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a91c:	e3500000 	cmp	r0, #0
4001a920:	0a000002 	beq	4001a930 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a924:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a928:	e59d001c 	ldr	r0, [sp, #28]
4001a92c:	ebffde49 	bl	40012258 <CyU3PSysFlushDRegion>
4001a930:	e1da00b4 	ldrh	r0, [sl, #4]
4001a934:	e3500006 	cmp	r0, #6
4001a938:	1a00000a 	bne	4001a968 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a93c:	e28d1004 	add	r1, sp, #4
4001a940:	e1a00006 	mov	r0, r6
4001a944:	ebffe912 	bl	40014d94 <CyU3PDmaSocketGetConfig>
4001a948:	e3a00000 	mov	r0, #0
4001a94c:	e58d0014 	str	r0, [sp, #20]
4001a950:	e59d0018 	ldr	r0, [sp, #24]
4001a954:	e3c00001 	bic	r0, r0, #1
4001a958:	e58d0018 	str	r0, [sp, #24]
4001a95c:	e28d1004 	add	r1, sp, #4
4001a960:	e1a00006 	mov	r0, r6
4001a964:	ebffe9b4 	bl	4001503c <CyU3PDmaSocketSetConfig>
4001a968:	e3a02000 	mov	r2, #0
4001a96c:	e3a01004 	mov	r1, #4
4001a970:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a974:	ebffbd2a 	bl	40009e24 <_txe_event_flags_set>
4001a978:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a97c:	ebffe08e 	bl	40012bbc <CyU3PSysBarrierSync>
4001a980:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a984:	e3500000 	cmp	r0, #0
4001a988:	0a000007 	beq	4001a9ac <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a98c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a990:	e3100004 	tst	r0, #4
4001a994:	0a000004 	beq	4001a9ac <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a998:	e28d201c 	add	r2, sp, #28
4001a99c:	e3a01004 	mov	r1, #4
4001a9a0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a9a4:	e1a0000a 	mov	r0, sl
4001a9a8:	e12fff33 	blx	r3
4001a9ac:	e3150080 	tst	r5, #128	; 0x80
4001a9b0:	0a000018 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a9b4:	e1da00b4 	ldrh	r0, [sl, #4]
4001a9b8:	e3500006 	cmp	r0, #6
4001a9bc:	1a000012 	bne	4001aa0c <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a9c0:	e3a00001 	mov	r0, #1
4001a9c4:	e58a0000 	str	r0, [sl]
4001a9c8:	e3a02000 	mov	r2, #0
4001a9cc:	e3a01001 	mov	r1, #1
4001a9d0:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a9d4:	ebffbd12 	bl	40009e24 <_txe_event_flags_set>
4001a9d8:	ebffe077 	bl	40012bbc <CyU3PSysBarrierSync>
4001a9dc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a9e0:	e3500000 	cmp	r0, #0
4001a9e4:	0a00000b 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a9e8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a9ec:	e3100001 	tst	r0, #1
4001a9f0:	0a000008 	beq	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a9f4:	e3a02000 	mov	r2, #0
4001a9f8:	e3a01001 	mov	r1, #1
4001a9fc:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001aa00:	e1a0000a 	mov	r0, sl
4001aa04:	e12fff33 	blx	r3
4001aa08:	ea000002 	b	4001aa18 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aa0c:	e3a00006 	mov	r0, #6
4001aa10:	e58a0000 	str	r0, [sl]
4001aa14:	ebffe068 	bl	40012bbc <CyU3PSysBarrierSync>
4001aa18:	e28a0078 	add	r0, sl, #120	; 0x78
4001aa1c:	ebffbdcd 	bl	4000a158 <_txe_mutex_put>
4001aa20:	eafffe6b 	b	4001a3d4 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001aa24:	0000ffff 	.word	0x0000ffff
4001aa28:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001aa2c <CyU3PDmaIsSockAvlEnReqd>:
4001aa2c:	e1a01000 	mov	r1, r0
4001aa30:	e3a0003f 	mov	r0, #63	; 0x3f
4001aa34:	e0000441 	and	r0, r0, r1, asr #8
4001aa38:	e3500003 	cmp	r0, #3
4001aa3c:	1a000004 	bne	4001aa54 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001aa40:	e3a00001 	mov	r0, #1
4001aa44:	e59f203c 	ldr	r2, [pc, #60]	; 4001aa88 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001aa48:	e1d220b0 	ldrh	r2, [r2]
4001aa4c:	e1120110 	tst	r2, r0, lsl r1
4001aa50:	1a000008 	bne	4001aa78 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001aa54:	e3a0003f 	mov	r0, #63	; 0x3f
4001aa58:	e0000441 	and	r0, r0, r1, asr #8
4001aa5c:	e3500004 	cmp	r0, #4
4001aa60:	1a000006 	bne	4001aa80 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001aa64:	e3a00001 	mov	r0, #1
4001aa68:	e59f201c 	ldr	r2, [pc, #28]	; 4001aa8c <CyU3PDmaIsSockAvlEnReqd+0x60>
4001aa6c:	e1d220b0 	ldrh	r2, [r2]
4001aa70:	e1120110 	tst	r2, r0, lsl r1
4001aa74:	0a000001 	beq	4001aa80 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001aa78:	e3a00001 	mov	r0, #1
4001aa7c:	e12fff1e 	bx	lr
4001aa80:	e3a00000 	mov	r0, #0
4001aa84:	eafffffc 	b	4001aa7c <CyU3PDmaIsSockAvlEnReqd+0x50>
4001aa88:	40031188 	.word	0x40031188
4001aa8c:	4003118a 	.word	0x4003118a

Disassembly of section i.CyU3PDmaMsgSend:

4001aa90 <CyU3PDmaMsgSend>:
4001aa90:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001aa94:	e1a04000 	mov	r4, r0
4001aa98:	e1a05001 	mov	r5, r1
4001aa9c:	e1a07002 	mov	r7, r2
4001aaa0:	e3570001 	cmp	r7, #1
4001aaa4:	1a000005 	bne	4001aac0 <CyU3PDmaMsgSend+0x30>
4001aaa8:	e1a02005 	mov	r2, r5
4001aaac:	e1a01004 	mov	r1, r4
4001aab0:	e59f0024 	ldr	r0, [pc, #36]	; 4001aadc <CyU3PDmaMsgSend+0x4c>
4001aab4:	ebffbe3d 	bl	4000a3b0 <_txe_queue_front_send>
4001aab8:	e1a06000 	mov	r6, r0
4001aabc:	ea000004 	b	4001aad4 <CyU3PDmaMsgSend+0x44>
4001aac0:	e1a02005 	mov	r2, r5
4001aac4:	e1a01004 	mov	r1, r4
4001aac8:	e59f000c 	ldr	r0, [pc, #12]	; 4001aadc <CyU3PDmaMsgSend+0x4c>
4001aacc:	ebffbe87 	bl	4000a4f0 <_txe_queue_send>
4001aad0:	e1a06000 	mov	r6, r0
4001aad4:	e1a00006 	mov	r0, r6
4001aad8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001aadc:	40031db0 	.word	0x40031db0

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001aae0 <CyU3PDmaMultiChannelHandleError>:
4001aae0:	e92d4070 	push	{r4, r5, r6, lr}
4001aae4:	e1a04000 	mov	r4, r0
4001aae8:	e3e01000 	mvn	r1, #0
4001aaec:	e2840078 	add	r0, r4, #120	; 0x78
4001aaf0:	ebffbd63 	bl	4000a084 <_txe_mutex_get>
4001aaf4:	e1d400b4 	ldrh	r0, [r4, #4]
4001aaf8:	e3500005 	cmp	r0, #5
4001aafc:	0a000002 	beq	4001ab0c <CyU3PDmaMultiChannelHandleError+0x2c>
4001ab00:	e1d400b4 	ldrh	r0, [r4, #4]
4001ab04:	e3500007 	cmp	r0, #7
4001ab08:	1a00000d 	bne	4001ab44 <CyU3PDmaMultiChannelHandleError+0x64>
4001ab0c:	e3a05000 	mov	r5, #0
4001ab10:	ea000005 	b	4001ab2c <CyU3PDmaMultiChannelHandleError+0x4c>
4001ab14:	e2841024 	add	r1, r4, #36	; 0x24
4001ab18:	e0811085 	add	r1, r1, r5, lsl #1
4001ab1c:	e1d100b0 	ldrh	r0, [r1]
4001ab20:	ebffe883 	bl	40014d34 <CyU3PDmaSocketDisable>
4001ab24:	e2850001 	add	r0, r5, #1
4001ab28:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ab2c:	e1d400ba 	ldrh	r0, [r4, #10]
4001ab30:	e1500005 	cmp	r0, r5
4001ab34:	cafffff6 	bgt	4001ab14 <CyU3PDmaMultiChannelHandleError+0x34>
4001ab38:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001ab3c:	ebffe87c 	bl	40014d34 <CyU3PDmaSocketDisable>
4001ab40:	ea00000c 	b	4001ab78 <CyU3PDmaMultiChannelHandleError+0x98>
4001ab44:	e3a05000 	mov	r5, #0
4001ab48:	ea000005 	b	4001ab64 <CyU3PDmaMultiChannelHandleError+0x84>
4001ab4c:	e284102c 	add	r1, r4, #44	; 0x2c
4001ab50:	e0811085 	add	r1, r1, r5, lsl #1
4001ab54:	e1d100b0 	ldrh	r0, [r1]
4001ab58:	ebffe875 	bl	40014d34 <CyU3PDmaSocketDisable>
4001ab5c:	e2850001 	add	r0, r5, #1
4001ab60:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ab64:	e1d400ba 	ldrh	r0, [r4, #10]
4001ab68:	e1500005 	cmp	r0, r5
4001ab6c:	cafffff6 	bgt	4001ab4c <CyU3PDmaMultiChannelHandleError+0x6c>
4001ab70:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001ab74:	ebffe86e 	bl	40014d34 <CyU3PDmaSocketDisable>
4001ab78:	e3a02002 	mov	r2, #2
4001ab7c:	e3e01007 	mvn	r1, #7
4001ab80:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ab84:	ebffbca6 	bl	40009e24 <_txe_event_flags_set>
4001ab88:	e3a02000 	mov	r2, #0
4001ab8c:	e3a01040 	mov	r1, #64	; 0x40
4001ab90:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ab94:	ebffbca2 	bl	40009e24 <_txe_event_flags_set>
4001ab98:	e3a00005 	mov	r0, #5
4001ab9c:	e5840000 	str	r0, [r4]
4001aba0:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001aba4:	e3500000 	cmp	r0, #0
4001aba8:	0a000007 	beq	4001abcc <CyU3PDmaMultiChannelHandleError+0xec>
4001abac:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001abb0:	e3100040 	tst	r0, #64	; 0x40
4001abb4:	0a000004 	beq	4001abcc <CyU3PDmaMultiChannelHandleError+0xec>
4001abb8:	e3a02000 	mov	r2, #0
4001abbc:	e3a01040 	mov	r1, #64	; 0x40
4001abc0:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001abc4:	e1a00004 	mov	r0, r4
4001abc8:	e12fff33 	blx	r3
4001abcc:	e2840078 	add	r0, r4, #120	; 0x78
4001abd0:	ebffbd60 	bl	4000a158 <_txe_mutex_put>
4001abd4:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001abd8 <CyU3PDmaThreadEntry>:
4001abd8:	e92d4070 	push	{r4, r5, r6, lr}
4001abdc:	e24dd040 	sub	sp, sp, #64	; 0x40
4001abe0:	ea00003f 	b	4001ace4 <CyU3PDmaThreadEntry+0x10c>
4001abe4:	e3e02000 	mvn	r2, #0
4001abe8:	e1a0100d 	mov	r1, sp
4001abec:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ace8 <CyU3PDmaThreadEntry+0x110>
4001abf0:	ebffbe16 	bl	4000a450 <_txe_queue_receive>
4001abf4:	e1a05000 	mov	r5, r0
4001abf8:	e3550000 	cmp	r5, #0
4001abfc:	0a000000 	beq	4001ac04 <CyU3PDmaThreadEntry+0x2c>
4001ac00:	ea000037 	b	4001ace4 <CyU3PDmaThreadEntry+0x10c>
4001ac04:	e59d0000 	ldr	r0, [sp]
4001ac08:	e20040ff 	and	r4, r0, #255	; 0xff
4001ac0c:	e3540000 	cmp	r4, #0
4001ac10:	0a000000 	beq	4001ac18 <CyU3PDmaThreadEntry+0x40>
4001ac14:	ea000032 	b	4001ace4 <CyU3PDmaThreadEntry+0x10c>
4001ac18:	e59d6004 	ldr	r6, [sp, #4]
4001ac1c:	e1d600b4 	ldrh	r0, [r6, #4]
4001ac20:	e350000a 	cmp	r0, #10
4001ac24:	308ff100 	addcc	pc, pc, r0, lsl #2
4001ac28:	ea000028 	b	4001acd0 <CyU3PDmaThreadEntry+0xf8>
4001ac2c:	ea000008 	b	4001ac54 <CyU3PDmaThreadEntry+0x7c>
4001ac30:	ea000009 	b	4001ac5c <CyU3PDmaThreadEntry+0x84>
4001ac34:	ea00000e 	b	4001ac74 <CyU3PDmaThreadEntry+0x9c>
4001ac38:	ea00000a 	b	4001ac68 <CyU3PDmaThreadEntry+0x90>
4001ac3c:	ea00000b 	b	4001ac70 <CyU3PDmaThreadEntry+0x98>
4001ac40:	ea00000e 	b	4001ac80 <CyU3PDmaThreadEntry+0xa8>
4001ac44:	ea000012 	b	4001ac94 <CyU3PDmaThreadEntry+0xbc>
4001ac48:	ea00000e 	b	4001ac88 <CyU3PDmaThreadEntry+0xb0>
4001ac4c:	ea000012 	b	4001ac9c <CyU3PDmaThreadEntry+0xc4>
4001ac50:	ea000014 	b	4001aca8 <CyU3PDmaThreadEntry+0xd0>
4001ac54:	e1a00000 	nop			; (mov r0, r0)
4001ac58:	e1a00000 	nop			; (mov r0, r0)
4001ac5c:	e1a0000d 	mov	r0, sp
4001ac60:	ebfffa18 	bl	400194c8 <CyU3PDmaIntHandler_TypeAuto>
4001ac64:	ea00001b 	b	4001acd8 <CyU3PDmaThreadEntry+0x100>
4001ac68:	e1a00000 	nop			; (mov r0, r0)
4001ac6c:	e1a00000 	nop			; (mov r0, r0)
4001ac70:	e1a00000 	nop			; (mov r0, r0)
4001ac74:	e1a0000d 	mov	r0, sp
4001ac78:	ebfffaed 	bl	40019834 <CyU3PDmaIntHandler_TypeManual>
4001ac7c:	ea000015 	b	4001acd8 <CyU3PDmaThreadEntry+0x100>
4001ac80:	e1a00000 	nop			; (mov r0, r0)
4001ac84:	e1a00000 	nop			; (mov r0, r0)
4001ac88:	e1a0000d 	mov	r0, sp
4001ac8c:	ebfffc4c 	bl	40019dc4 <CyU3PDmaIntHandler_TypeManyToOne>
4001ac90:	ea000010 	b	4001acd8 <CyU3PDmaThreadEntry+0x100>
4001ac94:	e1a00000 	nop			; (mov r0, r0)
4001ac98:	e1a00000 	nop			; (mov r0, r0)
4001ac9c:	e1a0000d 	mov	r0, sp
4001aca0:	ebfffdbf 	bl	4001a3a4 <CyU3PDmaIntHandler_TypeOneToMany>
4001aca4:	ea00000b 	b	4001acd8 <CyU3PDmaThreadEntry+0x100>
4001aca8:	e1a00000 	nop			; (mov r0, r0)
4001acac:	e59f0038 	ldr	r0, [pc, #56]	; 4001acec <CyU3PDmaThreadEntry+0x114>
4001acb0:	e5900000 	ldr	r0, [r0]
4001acb4:	e3500000 	cmp	r0, #0
4001acb8:	0a000003 	beq	4001accc <CyU3PDmaThreadEntry+0xf4>
4001acbc:	e1a0000d 	mov	r0, sp
4001acc0:	e59f1024 	ldr	r1, [pc, #36]	; 4001acec <CyU3PDmaThreadEntry+0x114>
4001acc4:	e5911000 	ldr	r1, [r1]
4001acc8:	e12fff31 	blx	r1
4001accc:	ea000001 	b	4001acd8 <CyU3PDmaThreadEntry+0x100>
4001acd0:	e1a00000 	nop			; (mov r0, r0)
4001acd4:	e1a00000 	nop			; (mov r0, r0)
4001acd8:	e1a00000 	nop			; (mov r0, r0)
4001acdc:	ebffbf09 	bl	4000a908 <_txe_thread_relinquish>
4001ace0:	e1a00000 	nop			; (mov r0, r0)
4001ace4:	eaffffbe 	b	4001abe4 <CyU3PDmaThreadEntry+0xc>
4001ace8:	40031db0 	.word	0x40031db0
4001acec:	400311a0 	.word	0x400311a0

Disassembly of section i.CyU3PGpifInit:

4001acf0 <CyU3PGpifInit>:
4001acf0:	e92d4010 	push	{r4, lr}
4001acf4:	e1a04000 	mov	r4, r0
4001acf8:	e3540000 	cmp	r4, #0
4001acfc:	0a000006 	beq	4001ad1c <CyU3PGpifInit+0x2c>
4001ad00:	e59f005c 	ldr	r0, [pc, #92]	; 4001ad64 <CyU3PGpifInit+0x74>
4001ad04:	e5900000 	ldr	r0, [r0]
4001ad08:	e1a00800 	lsl	r0, r0, #16
4001ad0c:	e1a00820 	lsr	r0, r0, #16
4001ad10:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001ad14:	e59f1048 	ldr	r1, [pc, #72]	; 4001ad64 <CyU3PGpifInit+0x74>
4001ad18:	e5810000 	str	r0, [r1]
4001ad1c:	e3e00000 	mvn	r0, #0
4001ad20:	e59f1040 	ldr	r1, [pc, #64]	; 4001ad68 <CyU3PGpifInit+0x78>
4001ad24:	e5810014 	str	r0, [r1, #20]
4001ad28:	e3a00000 	mov	r0, #0
4001ad2c:	e5810018 	str	r0, [r1, #24]
4001ad30:	e3a00e11 	mov	r0, #272	; 0x110
4001ad34:	e1c11300 	bic	r1, r1, r0, lsl #6
4001ad38:	e5810008 	str	r0, [r1, #8]
4001ad3c:	ebffdf9e 	bl	40012bbc <CyU3PSysBarrierSync>
4001ad40:	e59f001c 	ldr	r0, [pc, #28]	; 4001ad64 <CyU3PGpifInit+0x74>
4001ad44:	e5900000 	ldr	r0, [r0]
4001ad48:	e1a00800 	lsl	r0, r0, #16
4001ad4c:	e1a00820 	lsr	r0, r0, #16
4001ad50:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001ad54:	e59f1008 	ldr	r1, [pc, #8]	; 4001ad64 <CyU3PGpifInit+0x74>
4001ad58:	e5810000 	str	r0, [r1]
4001ad5c:	e3a00000 	mov	r0, #0
4001ad60:	e8bd8010 	pop	{r4, pc}
4001ad64:	e0010000 	.word	0xe0010000
4001ad68:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001ad6c <CyU3PPibApplicationDefine>:
4001ad6c:	e92d4010 	push	{r4, lr}
4001ad70:	e24dd020 	sub	sp, sp, #32
4001ad74:	e3a00000 	mov	r0, #0
4001ad78:	e59f10dc 	ldr	r1, [pc, #220]	; 4001ae5c <CyU3PPibApplicationDefine+0xf0>
4001ad7c:	e5810000 	str	r0, [r1]
4001ad80:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ae60 <CyU3PPibApplicationDefine+0xf4>
4001ad84:	e5810000 	str	r0, [r1]
4001ad88:	e59f10d4 	ldr	r1, [pc, #212]	; 4001ae64 <CyU3PPibApplicationDefine+0xf8>
4001ad8c:	e5810000 	str	r0, [r1]
4001ad90:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ae68 <CyU3PPibApplicationDefine+0xfc>
4001ad94:	e5810000 	str	r0, [r1]
4001ad98:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ae6c <CyU3PPibApplicationDefine+0x100>
4001ad9c:	e5810000 	str	r0, [r1]
4001ada0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ae70 <CyU3PPibApplicationDefine+0x104>
4001ada4:	e5810000 	str	r0, [r1]
4001ada8:	e59f10c4 	ldr	r1, [pc, #196]	; 4001ae74 <CyU3PPibApplicationDefine+0x108>
4001adac:	e5810000 	str	r0, [r1]
4001adb0:	e59f10c0 	ldr	r1, [pc, #192]	; 4001ae78 <CyU3PPibApplicationDefine+0x10c>
4001adb4:	e5810000 	str	r0, [r1]
4001adb8:	e59f10bc 	ldr	r1, [pc, #188]	; 4001ae7c <CyU3PPibApplicationDefine+0x110>
4001adbc:	e5810000 	str	r0, [r1]
4001adc0:	e3a00b01 	mov	r0, #1024	; 0x400
4001adc4:	ebffa22a 	bl	40003674 <CyU3PMemAlloc>
4001adc8:	e1a04000 	mov	r4, r0
4001adcc:	e3a030a8 	mov	r3, #168	; 0xa8
4001add0:	e3a02001 	mov	r2, #1
4001add4:	e3a01000 	mov	r1, #0
4001add8:	e3a00004 	mov	r0, #4
4001addc:	e28dc00c 	add	ip, sp, #12
4001ade0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ade4:	e3a02b01 	mov	r2, #1024	; 0x400
4001ade8:	e1a03001 	mov	r3, r1
4001adec:	e58d2004 	str	r2, [sp, #4]
4001adf0:	e59f2088 	ldr	r2, [pc, #136]	; 4001ae80 <CyU3PPibApplicationDefine+0x114>
4001adf4:	e28f1088 	add	r1, pc, #136	; 0x88
4001adf8:	e58d0008 	str	r0, [sp, #8]
4001adfc:	e59f0090 	ldr	r0, [pc, #144]	; 4001ae94 <CyU3PPibApplicationDefine+0x128>
4001ae00:	e58d4000 	str	r4, [sp]
4001ae04:	ebffbde1 	bl	4000a590 <_txe_thread_create>
4001ae08:	e3a02028 	mov	r2, #40	; 0x28
4001ae0c:	e3a01000 	mov	r1, #0
4001ae10:	e59f0080 	ldr	r0, [pc, #128]	; 4001ae98 <CyU3PPibApplicationDefine+0x12c>
4001ae14:	ebffbb62 	bl	40009ba4 <_txe_event_flags_create>
4001ae18:	e3a02000 	mov	r2, #0
4001ae1c:	e3a01010 	mov	r1, #16
4001ae20:	e59f0070 	ldr	r0, [pc, #112]	; 4001ae98 <CyU3PPibApplicationDefine+0x12c>
4001ae24:	ebffbbfe 	bl	40009e24 <_txe_event_flags_set>
4001ae28:	e3a00040 	mov	r0, #64	; 0x40
4001ae2c:	ebffa210 	bl	40003674 <CyU3PMemAlloc>
4001ae30:	e1a04000 	mov	r4, r0
4001ae34:	e3a0303c 	mov	r3, #60	; 0x3c
4001ae38:	e3a02040 	mov	r2, #64	; 0x40
4001ae3c:	e1cd20f0 	strd	r2, [sp]
4001ae40:	e1a03004 	mov	r3, r4
4001ae44:	e3a02001 	mov	r2, #1
4001ae48:	e3a01000 	mov	r1, #0
4001ae4c:	e59f0048 	ldr	r0, [pc, #72]	; 4001ae9c <CyU3PPibApplicationDefine+0x130>
4001ae50:	ebffbce8 	bl	4000a1f8 <_txe_queue_create>
4001ae54:	e28dd020 	add	sp, sp, #32
4001ae58:	e8bd8010 	pop	{r4, pc}
4001ae5c:	400311a4 	.word	0x400311a4
4001ae60:	400311a8 	.word	0x400311a8
4001ae64:	400311b0 	.word	0x400311b0
4001ae68:	400311c8 	.word	0x400311c8
4001ae6c:	400311bc 	.word	0x400311bc
4001ae70:	400311c0 	.word	0x400311c0
4001ae74:	400311b4 	.word	0x400311b4
4001ae78:	400311b8 	.word	0x400311b8
4001ae7c:	400311ac 	.word	0x400311ac
4001ae80:	4001b054 	.word	0x4001b054
4001ae84:	505f3330 	.word	0x505f3330
4001ae88:	545f4249 	.word	0x545f4249
4001ae8c:	41455248 	.word	0x41455248
4001ae90:	00000044 	.word	0x00000044
4001ae94:	40031e14 	.word	0x40031e14
4001ae98:	40031dec 	.word	0x40031dec
4001ae9c:	40031ebc 	.word	0x40031ebc

Disassembly of section i.CyU3PPibInit:

4001aea0 <CyU3PPibInit>:
4001aea0:	e92d4070 	push	{r4, r5, r6, lr}
4001aea4:	e1a04000 	mov	r4, r0
4001aea8:	e1a05001 	mov	r5, r1
4001aeac:	e3a06000 	mov	r6, #0
4001aeb0:	ebffe724 	bl	40014b48 <CyFx3DevIsGpifSupported>
4001aeb4:	e3500000 	cmp	r0, #0
4001aeb8:	1a000001 	bne	4001aec4 <CyU3PPibInit+0x24>
4001aebc:	e3a00046 	mov	r0, #70	; 0x46
4001aec0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001aec4:	e59f0128 	ldr	r0, [pc, #296]	; 4001aff4 <CyU3PPibInit+0x154>
4001aec8:	e5900000 	ldr	r0, [r0]
4001aecc:	e3500000 	cmp	r0, #0
4001aed0:	0a000001 	beq	4001aedc <CyU3PPibInit+0x3c>
4001aed4:	e3a00043 	mov	r0, #67	; 0x43
4001aed8:	eafffff8 	b	4001aec0 <CyU3PPibInit+0x20>
4001aedc:	e3550000 	cmp	r5, #0
4001aee0:	1a000001 	bne	4001aeec <CyU3PPibInit+0x4c>
4001aee4:	e3a00041 	mov	r0, #65	; 0x41
4001aee8:	eafffff4 	b	4001aec0 <CyU3PPibInit+0x20>
4001aeec:	e5d5000c 	ldrb	r0, [r5, #12]
4001aef0:	e3500004 	cmp	r0, #4
4001aef4:	ba000001 	blt	4001af00 <CyU3PPibInit+0x60>
4001aef8:	e3a00040 	mov	r0, #64	; 0x40
4001aefc:	eaffffef 	b	4001aec0 <CyU3PPibInit+0x20>
4001af00:	e1d500b0 	ldrh	r0, [r5]
4001af04:	e3500002 	cmp	r0, #2
4001af08:	ba000002 	blt	4001af18 <CyU3PPibInit+0x78>
4001af0c:	e1d500b0 	ldrh	r0, [r5]
4001af10:	e3500b01 	cmp	r0, #1024	; 0x400
4001af14:	da000001 	ble	4001af20 <CyU3PPibInit+0x80>
4001af18:	e3a00040 	mov	r0, #64	; 0x40
4001af1c:	eaffffe7 	b	4001aec0 <CyU3PPibInit+0x20>
4001af20:	e3a00001 	mov	r0, #1
4001af24:	e59f10c8 	ldr	r1, [pc, #200]	; 4001aff4 <CyU3PPibInit+0x154>
4001af28:	e5810000 	str	r0, [r1]
4001af2c:	e5d5000c 	ldrb	r0, [r5, #12]
4001af30:	e3a01b06 	mov	r1, #6144	; 0x1800
4001af34:	e0010580 	and	r0, r1, r0, lsl #11
4001af38:	e1d510b0 	ldrh	r1, [r5]
4001af3c:	e2411001 	sub	r1, r1, #1
4001af40:	e1a01b01 	lsl	r1, r1, #22
4001af44:	e1a01b21 	lsr	r1, r1, #22
4001af48:	e1800001 	orr	r0, r0, r1
4001af4c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001aff8 <CyU3PPibInit+0x158>
4001af50:	e581000c 	str	r0, [r1, #12]
4001af54:	e5950004 	ldr	r0, [r5, #4]
4001af58:	e3500000 	cmp	r0, #0
4001af5c:	0a000003 	beq	4001af70 <CyU3PPibInit+0xd0>
4001af60:	e1a00001 	mov	r0, r1
4001af64:	e590000c 	ldr	r0, [r0, #12]
4001af68:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001af6c:	e581000c 	str	r0, [r1, #12]
4001af70:	e59f0080 	ldr	r0, [pc, #128]	; 4001aff8 <CyU3PPibInit+0x158>
4001af74:	e590000c 	ldr	r0, [r0, #12]
4001af78:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001af7c:	e59f1074 	ldr	r1, [pc, #116]	; 4001aff8 <CyU3PPibInit+0x158>
4001af80:	e581000c 	str	r0, [r1, #12]
4001af84:	ebffe755 	bl	40014ce0 <CyFx3PibPowerOn>
4001af88:	e5950008 	ldr	r0, [r5, #8]
4001af8c:	e3500000 	cmp	r0, #0
4001af90:	0a000000 	beq	4001af98 <CyU3PPibInit+0xf8>
4001af94:	ebffe732 	bl	40014c64 <CyFx3PibDllEnable>
4001af98:	e59f005c 	ldr	r0, [pc, #92]	; 4001affc <CyU3PPibInit+0x15c>
4001af9c:	e5900000 	ldr	r0, [r0]
4001afa0:	e3500000 	cmp	r0, #0
4001afa4:	0a000003 	beq	4001afb8 <CyU3PPibInit+0x118>
4001afa8:	e1a00004 	mov	r0, r4
4001afac:	eb0000d4 	bl	4001b304 <CyU3PPmmcInit>
4001afb0:	e1a06000 	mov	r6, r0
4001afb4:	ea000002 	b	4001afc4 <CyU3PPibInit+0x124>
4001afb8:	e1a00004 	mov	r0, r4
4001afbc:	ebffff4b 	bl	4001acf0 <CyU3PGpifInit>
4001afc0:	e1a06000 	mov	r6, r0
4001afc4:	e3e00000 	mvn	r0, #0
4001afc8:	e59f1030 	ldr	r1, [pc, #48]	; 4001b000 <CyU3PPibInit+0x160>
4001afcc:	e5810024 	str	r0, [r1, #36]	; 0x24
4001afd0:	e3560000 	cmp	r6, #0
4001afd4:	1a000004 	bne	4001afec <CyU3PPibInit+0x14c>
4001afd8:	eb000009 	bl	4001b004 <CyU3PPibSocketInit>
4001afdc:	e3a00007 	mov	r0, #7
4001afe0:	eb001c4a 	bl	40022110 <CyU3PVicEnableInt>
4001afe4:	e3a00006 	mov	r0, #6
4001afe8:	eb001c48 	bl	40022110 <CyU3PVicEnableInt>
4001afec:	e1a00006 	mov	r0, r6
4001aff0:	eaffffb2 	b	4001aec0 <CyU3PPibInit+0x20>
4001aff4:	400311a4 	.word	0x400311a4
4001aff8:	e0052000 	.word	0xe0052000
4001affc:	400311a8 	.word	0x400311a8
4001b000:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001b004 <CyU3PPibSocketInit>:
4001b004:	e3a00000 	mov	r0, #0
4001b008:	ea00000d 	b	4001b044 <CyU3PPibSocketInit+0x40>
4001b00c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001b010:	e59f2038 	ldr	r2, [pc, #56]	; 4001b050 <CyU3PPibSocketInit+0x4c>
4001b014:	e0822380 	add	r2, r2, r0, lsl #7
4001b018:	e582100c 	str	r1, [r2, #12]
4001b01c:	e3e01000 	mvn	r1, #0
4001b020:	e59f2028 	ldr	r2, [pc, #40]	; 4001b050 <CyU3PPibSocketInit+0x4c>
4001b024:	e0822380 	add	r2, r2, r0, lsl #7
4001b028:	e5821010 	str	r1, [r2, #16]
4001b02c:	e3a01000 	mov	r1, #0
4001b030:	e59f2018 	ldr	r2, [pc, #24]	; 4001b050 <CyU3PPibSocketInit+0x4c>
4001b034:	e0822380 	add	r2, r2, r0, lsl #7
4001b038:	e5821014 	str	r1, [r2, #20]
4001b03c:	e2801001 	add	r1, r0, #1
4001b040:	e20100ff 	and	r0, r1, #255	; 0xff
4001b044:	e3500020 	cmp	r0, #32
4001b048:	baffffef 	blt	4001b00c <CyU3PPibSocketInit+0x8>
4001b04c:	e12fff1e 	bx	lr
4001b050:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001b054 <CyU3PPibThreadEntry>:
4001b054:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001b058:	e3a00005 	mov	r0, #5
4001b05c:	ebffe25e 	bl	400139dc <CyU3PSysModuleInitCompleteEvt>
4001b060:	e59f0278 	ldr	r0, [pc, #632]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b064:	e5900000 	ldr	r0, [r0]
4001b068:	e1a00800 	lsl	r0, r0, #16
4001b06c:	e1a00820 	lsr	r0, r0, #16
4001b070:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001b074:	e59f1264 	ldr	r1, [pc, #612]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b078:	e5810000 	str	r0, [r1]
4001b07c:	e3a000e1 	mov	r0, #225	; 0xe1
4001b080:	e59f125c 	ldr	r1, [pc, #604]	; 4001b2e4 <CyU3PPibThreadEntry+0x290>
4001b084:	e5810000 	str	r0, [r1]
4001b088:	ea000093 	b	4001b2dc <CyU3PPibThreadEntry+0x288>
4001b08c:	e3e03000 	mvn	r3, #0
4001b090:	e58d3000 	str	r3, [sp]
4001b094:	e28d3008 	add	r3, sp, #8
4001b098:	e3a02001 	mov	r2, #1
4001b09c:	e59f0240 	ldr	r0, [pc, #576]	; 4001b2e4 <CyU3PPibThreadEntry+0x290>
4001b0a0:	e5901000 	ldr	r1, [r0]
4001b0a4:	e59f023c 	ldr	r0, [pc, #572]	; 4001b2e8 <CyU3PPibThreadEntry+0x294>
4001b0a8:	ebffbb2d 	bl	40009d64 <_txe_event_flags_get>
4001b0ac:	e1a04000 	mov	r4, r0
4001b0b0:	e59f122c 	ldr	r1, [pc, #556]	; 4001b2e4 <CyU3PPibThreadEntry+0x290>
4001b0b4:	e59d0008 	ldr	r0, [sp, #8]
4001b0b8:	e5911000 	ldr	r1, [r1]
4001b0bc:	e0000001 	and	r0, r0, r1
4001b0c0:	e58d0008 	str	r0, [sp, #8]
4001b0c4:	e3540000 	cmp	r4, #0
4001b0c8:	0a000000 	beq	4001b0d0 <CyU3PPibThreadEntry+0x7c>
4001b0cc:	ea000082 	b	4001b2dc <CyU3PPibThreadEntry+0x288>
4001b0d0:	ea00007d 	b	4001b2cc <CyU3PPibThreadEntry+0x278>
4001b0d4:	e59d0008 	ldr	r0, [sp, #8]
4001b0d8:	e3100020 	tst	r0, #32
4001b0dc:	0a000017 	beq	4001b140 <CyU3PPibThreadEntry+0xec>
4001b0e0:	e59f0204 	ldr	r0, [pc, #516]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b0e4:	e5900000 	ldr	r0, [r0]
4001b0e8:	e3500000 	cmp	r0, #0
4001b0ec:	0a00000b 	beq	4001b120 <CyU3PPibThreadEntry+0xcc>
4001b0f0:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b2f0 <CyU3PPibThreadEntry+0x29c>
4001b0f4:	e5900000 	ldr	r0, [r0]
4001b0f8:	e3100002 	tst	r0, #2
4001b0fc:	0a000007 	beq	4001b120 <CyU3PPibThreadEntry+0xcc>
4001b100:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b2f4 <CyU3PPibThreadEntry+0x2a0>
4001b104:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001b108:	e1a01800 	lsl	r1, r0, #16
4001b10c:	e1a01821 	lsr	r1, r1, #16
4001b110:	e3a00002 	mov	r0, #2
4001b114:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b118:	e5922000 	ldr	r2, [r2]
4001b11c:	e12fff32 	blx	r2
4001b120:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b124:	e5900000 	ldr	r0, [r0]
4001b128:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001b12c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b130:	e5810000 	str	r0, [r1]
4001b134:	e59d0008 	ldr	r0, [sp, #8]
4001b138:	e3c00020 	bic	r0, r0, #32
4001b13c:	e58d0008 	str	r0, [sp, #8]
4001b140:	e59d0008 	ldr	r0, [sp, #8]
4001b144:	e3100040 	tst	r0, #64	; 0x40
4001b148:	0a000027 	beq	4001b1ec <CyU3PPibThreadEntry+0x198>
4001b14c:	e59f0198 	ldr	r0, [pc, #408]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b150:	e5900000 	ldr	r0, [r0]
4001b154:	e3500000 	cmp	r0, #0
4001b158:	0a000017 	beq	4001b1bc <CyU3PPibThreadEntry+0x168>
4001b15c:	e59f018c 	ldr	r0, [pc, #396]	; 4001b2f0 <CyU3PPibThreadEntry+0x29c>
4001b160:	e5900000 	ldr	r0, [r0]
4001b164:	e3100004 	tst	r0, #4
4001b168:	0a000013 	beq	4001b1bc <CyU3PPibThreadEntry+0x168>
4001b16c:	e59f016c 	ldr	r0, [pc, #364]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b170:	e5900020 	ldr	r0, [r0, #32]
4001b174:	e1a05800 	lsl	r5, r0, #16
4001b178:	e1a05825 	lsr	r5, r5, #16
4001b17c:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b180:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b184:	1a000000 	bne	4001b18c <CyU3PPibThreadEntry+0x138>
4001b188:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b18c:	e59f0164 	ldr	r0, [pc, #356]	; 4001b2f8 <CyU3PPibThreadEntry+0x2a4>
4001b190:	e5900000 	ldr	r0, [r0]
4001b194:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b198:	1a000001 	bne	4001b1a4 <CyU3PPibThreadEntry+0x150>
4001b19c:	e3550004 	cmp	r5, #4
4001b1a0:	da000004 	ble	4001b1b8 <CyU3PPibThreadEntry+0x164>
4001b1a4:	e1a01005 	mov	r1, r5
4001b1a8:	e3a00004 	mov	r0, #4
4001b1ac:	e59f2138 	ldr	r2, [pc, #312]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b1b0:	e5922000 	ldr	r2, [r2]
4001b1b4:	e12fff32 	blx	r2
4001b1b8:	e1a00000 	nop			; (mov r0, r0)
4001b1bc:	e59f012c 	ldr	r0, [pc, #300]	; 4001b2f0 <CyU3PPibThreadEntry+0x29c>
4001b1c0:	e5900000 	ldr	r0, [r0]
4001b1c4:	e3100004 	tst	r0, #4
4001b1c8:	0a000004 	beq	4001b1e0 <CyU3PPibThreadEntry+0x18c>
4001b1cc:	e59f010c 	ldr	r0, [pc, #268]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b1d0:	e5900008 	ldr	r0, [r0, #8]
4001b1d4:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b1d8:	e59f1100 	ldr	r1, [pc, #256]	; 4001b2e0 <CyU3PPibThreadEntry+0x28c>
4001b1dc:	e5810008 	str	r0, [r1, #8]
4001b1e0:	e59d0008 	ldr	r0, [sp, #8]
4001b1e4:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b1e8:	e58d0008 	str	r0, [sp, #8]
4001b1ec:	e59d0008 	ldr	r0, [sp, #8]
4001b1f0:	e3100080 	tst	r0, #128	; 0x80
4001b1f4:	0a000011 	beq	4001b240 <CyU3PPibThreadEntry+0x1ec>
4001b1f8:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b1fc:	e5900000 	ldr	r0, [r0]
4001b200:	e3500000 	cmp	r0, #0
4001b204:	0a00000a 	beq	4001b234 <CyU3PPibThreadEntry+0x1e0>
4001b208:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b2f0 <CyU3PPibThreadEntry+0x29c>
4001b20c:	e5900000 	ldr	r0, [r0]
4001b210:	e3100001 	tst	r0, #1
4001b214:	0a000006 	beq	4001b234 <CyU3PPibThreadEntry+0x1e0>
4001b218:	ebffe6ab 	bl	40014ccc <CyFx3PibGetDllStatus>
4001b21c:	e1a05000 	mov	r5, r0
4001b220:	e1a01000 	mov	r1, r0
4001b224:	e3a00001 	mov	r0, #1
4001b228:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b2ec <CyU3PPibThreadEntry+0x298>
4001b22c:	e5922000 	ldr	r2, [r2]
4001b230:	e12fff32 	blx	r2
4001b234:	e59d0008 	ldr	r0, [sp, #8]
4001b238:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b23c:	e58d0008 	str	r0, [sp, #8]
4001b240:	e59d0008 	ldr	r0, [sp, #8]
4001b244:	e3100001 	tst	r0, #1
4001b248:	0a00001f 	beq	4001b2cc <CyU3PPibThreadEntry+0x278>
4001b24c:	e3a02000 	mov	r2, #0
4001b250:	e28d1004 	add	r1, sp, #4
4001b254:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b2fc <CyU3PPibThreadEntry+0x2a8>
4001b258:	ebffbc7c 	bl	4000a450 <_txe_queue_receive>
4001b25c:	e1a04000 	mov	r4, r0
4001b260:	e3540000 	cmp	r4, #0
4001b264:	1a000015 	bne	4001b2c0 <CyU3PPibThreadEntry+0x26c>
4001b268:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b26c:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b270:	e1b00720 	lsrs	r0, r0, #14
4001b274:	0a000014 	beq	4001b2cc <CyU3PPibThreadEntry+0x278>
4001b278:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b27c:	e20000ff 	and	r0, r0, #255	; 0xff
4001b280:	e3500004 	cmp	r0, #4
4001b284:	1a00000a 	bne	4001b2b4 <CyU3PPibThreadEntry+0x260>
4001b288:	e59f0070 	ldr	r0, [pc, #112]	; 4001b300 <CyU3PPibThreadEntry+0x2ac>
4001b28c:	e5900000 	ldr	r0, [r0]
4001b290:	e3500000 	cmp	r0, #0
4001b294:	0a000005 	beq	4001b2b0 <CyU3PPibThreadEntry+0x25c>
4001b298:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b29c:	e1a01442 	asr	r1, r2, #8
4001b2a0:	e20200ff 	and	r0, r2, #255	; 0xff
4001b2a4:	e59f2054 	ldr	r2, [pc, #84]	; 4001b300 <CyU3PPibThreadEntry+0x2ac>
4001b2a8:	e5922000 	ldr	r2, [r2]
4001b2ac:	e12fff32 	blx	r2
4001b2b0:	ea000001 	b	4001b2bc <CyU3PPibThreadEntry+0x268>
4001b2b4:	e1a00000 	nop			; (mov r0, r0)
4001b2b8:	e1a00000 	nop			; (mov r0, r0)
4001b2bc:	ea000002 	b	4001b2cc <CyU3PPibThreadEntry+0x278>
4001b2c0:	e59d0008 	ldr	r0, [sp, #8]
4001b2c4:	e3c00001 	bic	r0, r0, #1
4001b2c8:	e58d0008 	str	r0, [sp, #8]
4001b2cc:	e59d0008 	ldr	r0, [sp, #8]
4001b2d0:	e3500000 	cmp	r0, #0
4001b2d4:	1affff7e 	bne	4001b0d4 <CyU3PPibThreadEntry+0x80>
4001b2d8:	e1a00000 	nop			; (mov r0, r0)
4001b2dc:	eaffff6a 	b	4001b08c <CyU3PPibThreadEntry+0x38>
4001b2e0:	e0010000 	.word	0xe0010000
4001b2e4:	400311b0 	.word	0x400311b0
4001b2e8:	40031dec 	.word	0x40031dec
4001b2ec:	400311b4 	.word	0x400311b4
4001b2f0:	400311b8 	.word	0x400311b8
4001b2f4:	e0017000 	.word	0xe0017000
4001b2f8:	e0014000 	.word	0xe0014000
4001b2fc:	40031ebc 	.word	0x40031ebc
4001b300:	400311bc 	.word	0x400311bc

Disassembly of section i.CyU3PPmmcInit:

4001b304 <CyU3PPmmcInit>:
4001b304:	e92d4010 	push	{r4, lr}
4001b308:	e1a04000 	mov	r4, r0
4001b30c:	e3540000 	cmp	r4, #0
4001b310:	0a000042 	beq	4001b420 <CyU3PPmmcInit+0x11c>
4001b314:	e3e00000 	mvn	r0, #0
4001b318:	e59f1148 	ldr	r1, [pc, #328]	; 4001b468 <CyU3PPmmcInit+0x164>
4001b31c:	e581000c 	str	r0, [r1, #12]
4001b320:	e3a00000 	mov	r0, #0
4001b324:	e5810010 	str	r0, [r1, #16]
4001b328:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b32c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b330:	e3a00000 	mov	r0, #0
4001b334:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b338:	e5810008 	str	r0, [r1, #8]
4001b33c:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b340:	e5900000 	ldr	r0, [r0]
4001b344:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b348:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b34c:	e5810000 	str	r0, [r1]
4001b350:	e59f0114 	ldr	r0, [pc, #276]	; 4001b46c <CyU3PPmmcInit+0x168>
4001b354:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b358:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b35c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b360:	e3a00001 	mov	r0, #1
4001b364:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b368:	e59f0100 	ldr	r0, [pc, #256]	; 4001b470 <CyU3PPmmcInit+0x16c>
4001b36c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b370:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b474 <CyU3PPmmcInit+0x170>
4001b374:	e5900000 	ldr	r0, [r0]
4001b378:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b37c:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b474 <CyU3PPmmcInit+0x170>
4001b380:	e5900004 	ldr	r0, [r0, #4]
4001b384:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b388:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b474 <CyU3PPmmcInit+0x170>
4001b38c:	e5900008 	ldr	r0, [r0, #8]
4001b390:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b394:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b474 <CyU3PPmmcInit+0x170>
4001b398:	e590000c 	ldr	r0, [r0, #12]
4001b39c:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b3a0:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3a4:	e5900000 	ldr	r0, [r0]
4001b3a8:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b3ac:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3b0:	e5900004 	ldr	r0, [r0, #4]
4001b3b4:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b3b8:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3bc:	e5900008 	ldr	r0, [r0, #8]
4001b3c0:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b3c4:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3c8:	e590000c 	ldr	r0, [r0, #12]
4001b3cc:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b3d0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3d4:	e5900010 	ldr	r0, [r0, #16]
4001b3d8:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b3dc:	e59f0094 	ldr	r0, [pc, #148]	; 4001b478 <CyU3PPmmcInit+0x174>
4001b3e0:	e5900014 	ldr	r0, [r0, #20]
4001b3e4:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b3e8:	e59f008c 	ldr	r0, [pc, #140]	; 4001b47c <CyU3PPmmcInit+0x178>
4001b3ec:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b3f0:	e3a00000 	mov	r0, #0
4001b3f4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b3f8:	e3a00c02 	mov	r0, #512	; 0x200
4001b3fc:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b400:	e3a00000 	mov	r0, #0
4001b404:	e5810004 	str	r0, [r1, #4]
4001b408:	e59f0070 	ldr	r0, [pc, #112]	; 4001b480 <CyU3PPmmcInit+0x17c>
4001b40c:	e5810010 	str	r0, [r1, #16]
4001b410:	e3a00008 	mov	r0, #8
4001b414:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b418:	e5810008 	str	r0, [r1, #8]
4001b41c:	ea000002 	b	4001b42c <CyU3PPmmcInit+0x128>
4001b420:	e3a00000 	mov	r0, #0
4001b424:	e59f103c 	ldr	r1, [pc, #60]	; 4001b468 <CyU3PPmmcInit+0x164>
4001b428:	e5810010 	str	r0, [r1, #16]
4001b42c:	e59f0034 	ldr	r0, [pc, #52]	; 4001b468 <CyU3PPmmcInit+0x164>
4001b430:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b434:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b438:	e59f1028 	ldr	r1, [pc, #40]	; 4001b468 <CyU3PPmmcInit+0x164>
4001b43c:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b440:	ebffdddd 	bl	40012bbc <CyU3PSysBarrierSync>
4001b444:	e59f0038 	ldr	r0, [pc, #56]	; 4001b484 <CyU3PPmmcInit+0x180>
4001b448:	e5900000 	ldr	r0, [r0]
4001b44c:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b450:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b454:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b458:	e59f1024 	ldr	r1, [pc, #36]	; 4001b484 <CyU3PPmmcInit+0x180>
4001b45c:	e5810000 	str	r0, [r1]
4001b460:	e3a00000 	mov	r0, #0
4001b464:	e8bd8010 	pop	{r4, pc}
4001b468:	e0011000 	.word	0xe0011000
4001b46c:	00019201 	.word	0x00019201
4001b470:	04010302 	.word	0x04010302
4001b474:	40011eec 	.word	0x40011eec
4001b478:	40011efc 	.word	0x40011efc
4001b47c:	00ff8080 	.word	0x00ff8080
4001b480:	400a00fb 	.word	0x400a00fb
4001b484:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b488 <CyU3PMboxReset>:
4001b488:	e92d4010 	push	{r4, lr}
4001b48c:	e3a00002 	mov	r0, #2
4001b490:	e59f1028 	ldr	r1, [pc, #40]	; 4001b4c0 <CyU3PMboxReset+0x38>
4001b494:	e5810004 	str	r0, [r1, #4]
4001b498:	e3a02002 	mov	r2, #2
4001b49c:	e3a01010 	mov	r1, #16
4001b4a0:	e59f001c 	ldr	r0, [pc, #28]	; 4001b4c4 <CyU3PMboxReset+0x3c>
4001b4a4:	ebffba5e 	bl	40009e24 <_txe_event_flags_set>
4001b4a8:	e59f0010 	ldr	r0, [pc, #16]	; 4001b4c0 <CyU3PMboxReset+0x38>
4001b4ac:	e5900008 	ldr	r0, [r0, #8]
4001b4b0:	e3800003 	orr	r0, r0, #3
4001b4b4:	e59f1004 	ldr	r1, [pc, #4]	; 4001b4c0 <CyU3PMboxReset+0x38>
4001b4b8:	e5810008 	str	r0, [r1, #8]
4001b4bc:	e8bd8010 	pop	{r4, pc}
4001b4c0:	e0010000 	.word	0xe0010000
4001b4c4:	40031dec 	.word	0x40031dec

Disassembly of section i.CyU3PGpifConfigure:

4001b4c8 <CyU3PGpifConfigure>:
4001b4c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b4cc:	e1a04000 	mov	r4, r0
4001b4d0:	e1a05001 	mov	r5, r1
4001b4d4:	e59f609c 	ldr	r6, [pc, #156]	; 4001b578 <CyU3PGpifConfigure+0xb0>
4001b4d8:	e3540000 	cmp	r4, #0
4001b4dc:	0a000001 	beq	4001b4e8 <CyU3PGpifConfigure+0x20>
4001b4e0:	e3550000 	cmp	r5, #0
4001b4e4:	1a000001 	bne	4001b4f0 <CyU3PGpifConfigure+0x28>
4001b4e8:	e3a00040 	mov	r0, #64	; 0x40
4001b4ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b4f0:	ebffe585 	bl	40014b0c <CyFx3DevIsGpifConfigurable>
4001b4f4:	e3500000 	cmp	r0, #0
4001b4f8:	1a000001 	bne	4001b504 <CyU3PGpifConfigure+0x3c>
4001b4fc:	e3a00046 	mov	r0, #70	; 0x46
4001b500:	eafffff9 	b	4001b4ec <CyU3PGpifConfigure+0x24>
4001b504:	ebffe576 	bl	40014ae4 <CyFx3DevIsGpif32Supported>
4001b508:	e3500000 	cmp	r0, #0
4001b50c:	1a000007 	bne	4001b530 <CyU3PGpifConfigure+0x68>
4001b510:	e3540001 	cmp	r4, #1
4001b514:	da000005 	ble	4001b530 <CyU3PGpifConfigure+0x68>
4001b518:	e5950004 	ldr	r0, [r5, #4]
4001b51c:	e200000c 	and	r0, r0, #12
4001b520:	e3500004 	cmp	r0, #4
4001b524:	9a000001 	bls	4001b530 <CyU3PGpifConfigure+0x68>
4001b528:	e3a00046 	mov	r0, #70	; 0x46
4001b52c:	eaffffee 	b	4001b4ec <CyU3PGpifConfigure+0x24>
4001b530:	e59f0044 	ldr	r0, [pc, #68]	; 4001b57c <CyU3PGpifConfigure+0xb4>
4001b534:	e5900000 	ldr	r0, [r0]
4001b538:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b53c:	0a000001 	beq	4001b548 <CyU3PGpifConfigure+0x80>
4001b540:	e3a00043 	mov	r0, #67	; 0x43
4001b544:	eaffffe8 	b	4001b4ec <CyU3PGpifConfigure+0x24>
4001b548:	e3a07001 	mov	r7, #1
4001b54c:	ea000002 	b	4001b55c <CyU3PGpifConfigure+0x94>
4001b550:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b554:	e4860004 	str	r0, [r6], #4
4001b558:	e2877001 	add	r7, r7, #1
4001b55c:	e1570004 	cmp	r7, r4
4001b560:	bafffffa 	blt	4001b550 <CyU3PGpifConfigure+0x88>
4001b564:	e5950000 	ldr	r0, [r5]
4001b568:	e59f100c 	ldr	r1, [pc, #12]	; 4001b57c <CyU3PGpifConfigure+0xb4>
4001b56c:	e5810000 	str	r0, [r1]
4001b570:	e3a00000 	mov	r0, #0
4001b574:	eaffffdc 	b	4001b4ec <CyU3PGpifConfigure+0x24>
4001b578:	e0014004 	.word	0xe0014004
4001b57c:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b580 <CyU3PGpifDisable>:
4001b580:	e92d4070 	push	{r4, r5, r6, lr}
4001b584:	e1a04000 	mov	r4, r0
4001b588:	e59f0070 	ldr	r0, [pc, #112]	; 4001b600 <CyU3PGpifDisable+0x80>
4001b58c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b590:	e3800002 	orr	r0, r0, #2
4001b594:	e59f1064 	ldr	r1, [pc, #100]	; 4001b600 <CyU3PGpifDisable+0x80>
4001b598:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b59c:	e3a0000a 	mov	r0, #10
4001b5a0:	ebffe057 	bl	40013704 <CyU3PBusyWait>
4001b5a4:	e3a00000 	mov	r0, #0
4001b5a8:	e59f1050 	ldr	r1, [pc, #80]	; 4001b600 <CyU3PGpifDisable+0x80>
4001b5ac:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b5b0:	e3540000 	cmp	r4, #0
4001b5b4:	0a000010 	beq	4001b5fc <CyU3PGpifDisable+0x7c>
4001b5b8:	e3a00e22 	mov	r0, #544	; 0x220
4001b5bc:	e5810000 	str	r0, [r1]
4001b5c0:	e3a05000 	mov	r5, #0
4001b5c4:	ea000007 	b	4001b5e8 <CyU3PGpifDisable+0x68>
4001b5c8:	e3a00000 	mov	r0, #0
4001b5cc:	e59f1030 	ldr	r1, [pc, #48]	; 4001b604 <CyU3PGpifDisable+0x84>
4001b5d0:	e0811205 	add	r1, r1, r5, lsl #4
4001b5d4:	e5810008 	str	r0, [r1, #8]
4001b5d8:	e59f1028 	ldr	r1, [pc, #40]	; 4001b608 <CyU3PGpifDisable+0x88>
4001b5dc:	e0811205 	add	r1, r1, r5, lsl #4
4001b5e0:	e5810008 	str	r0, [r1, #8]
4001b5e4:	e2855001 	add	r5, r5, #1
4001b5e8:	e3550c01 	cmp	r5, #256	; 0x100
4001b5ec:	3afffff5 	bcc	4001b5c8 <CyU3PGpifDisable+0x48>
4001b5f0:	e59f1014 	ldr	r1, [pc, #20]	; 4001b60c <CyU3PGpifDisable+0x8c>
4001b5f4:	e3a0004c 	mov	r0, #76	; 0x4c
4001b5f8:	ebffffb2 	bl	4001b4c8 <CyU3PGpifConfigure>
4001b5fc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b600:	e0014000 	.word	0xe0014000
4001b604:	e0015000 	.word	0xe0015000
4001b608:	e0016000 	.word	0xe0016000
4001b60c:	40011f14 	.word	0x40011f14

Disassembly of section i.CyU3PGpifLoad:

4001b610 <CyU3PGpifLoad>:
4001b610:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b614:	e1a04000 	mov	r4, r0
4001b618:	e59f7264 	ldr	r7, [pc, #612]	; 4001b884 <CyU3PGpifLoad+0x274>
4001b61c:	e3540000 	cmp	r4, #0
4001b620:	0a000008 	beq	4001b648 <CyU3PGpifLoad+0x38>
4001b624:	e1d400b0 	ldrh	r0, [r4]
4001b628:	e3500000 	cmp	r0, #0
4001b62c:	1a000007 	bne	4001b650 <CyU3PGpifLoad+0x40>
4001b630:	e1d400bc 	ldrh	r0, [r4, #12]
4001b634:	e3500000 	cmp	r0, #0
4001b638:	1a000004 	bne	4001b650 <CyU3PGpifLoad+0x40>
4001b63c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b640:	e3500000 	cmp	r0, #0
4001b644:	1a000001 	bne	4001b650 <CyU3PGpifLoad+0x40>
4001b648:	e3a00040 	mov	r0, #64	; 0x40
4001b64c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b650:	e59f0230 	ldr	r0, [pc, #560]	; 4001b888 <CyU3PGpifLoad+0x278>
4001b654:	e5900000 	ldr	r0, [r0]
4001b658:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b65c:	1a000003 	bne	4001b670 <CyU3PGpifLoad+0x60>
4001b660:	e59f0220 	ldr	r0, [pc, #544]	; 4001b888 <CyU3PGpifLoad+0x278>
4001b664:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b668:	e3100001 	tst	r0, #1
4001b66c:	0a000001 	beq	4001b678 <CyU3PGpifLoad+0x68>
4001b670:	e3a00043 	mov	r0, #67	; 0x43
4001b674:	eafffff4 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b678:	ebffe523 	bl	40014b0c <CyFx3DevIsGpifConfigurable>
4001b67c:	e3500000 	cmp	r0, #0
4001b680:	1a000001 	bne	4001b68c <CyU3PGpifLoad+0x7c>
4001b684:	e3a00046 	mov	r0, #70	; 0x46
4001b688:	eaffffef 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b68c:	ebffe514 	bl	40014ae4 <CyFx3DevIsGpif32Supported>
4001b690:	e3500000 	cmp	r0, #0
4001b694:	1a00000c 	bne	4001b6cc <CyU3PGpifLoad+0xbc>
4001b698:	e1d401b4 	ldrh	r0, [r4, #20]
4001b69c:	e3500002 	cmp	r0, #2
4001b6a0:	ba000009 	blt	4001b6cc <CyU3PGpifLoad+0xbc>
4001b6a4:	e5940018 	ldr	r0, [r4, #24]
4001b6a8:	e3500000 	cmp	r0, #0
4001b6ac:	0a000006 	beq	4001b6cc <CyU3PGpifLoad+0xbc>
4001b6b0:	e5940018 	ldr	r0, [r4, #24]
4001b6b4:	e5900004 	ldr	r0, [r0, #4]
4001b6b8:	e200000c 	and	r0, r0, #12
4001b6bc:	e3500004 	cmp	r0, #4
4001b6c0:	9a000001 	bls	4001b6cc <CyU3PGpifLoad+0xbc>
4001b6c4:	e3a00046 	mov	r0, #70	; 0x46
4001b6c8:	eaffffdf 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b6cc:	e1d400b0 	ldrh	r0, [r4]
4001b6d0:	e3500000 	cmp	r0, #0
4001b6d4:	0a00003b 	beq	4001b7c8 <CyU3PGpifLoad+0x1b8>
4001b6d8:	e5940004 	ldr	r0, [r4, #4]
4001b6dc:	e3500000 	cmp	r0, #0
4001b6e0:	1a000001 	bne	4001b6ec <CyU3PGpifLoad+0xdc>
4001b6e4:	e3a00040 	mov	r0, #64	; 0x40
4001b6e8:	eaffffd7 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b6ec:	e3a05000 	mov	r5, #0
4001b6f0:	ea000031 	b	4001b7bc <CyU3PGpifLoad+0x1ac>
4001b6f4:	e5940008 	ldr	r0, [r4, #8]
4001b6f8:	e3500000 	cmp	r0, #0
4001b6fc:	0a000002 	beq	4001b70c <CyU3PGpifLoad+0xfc>
4001b700:	e5940008 	ldr	r0, [r4, #8]
4001b704:	e7d00005 	ldrb	r0, [r0, r5]
4001b708:	ea000000 	b	4001b710 <CyU3PGpifLoad+0x100>
4001b70c:	e1a00005 	mov	r0, r5
4001b710:	e1a06800 	lsl	r6, r0, #16
4001b714:	e1a06826 	lsr	r6, r6, #16
4001b718:	e0861086 	add	r1, r6, r6, lsl #1
4001b71c:	e5940004 	ldr	r0, [r4, #4]
4001b720:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b724:	e59f1160 	ldr	r1, [pc, #352]	; 4001b88c <CyU3PGpifLoad+0x27c>
4001b728:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b72c:	e0861086 	add	r1, r6, r6, lsl #1
4001b730:	e5940004 	ldr	r0, [r4, #4]
4001b734:	e0800181 	add	r0, r0, r1, lsl #3
4001b738:	e5900004 	ldr	r0, [r0, #4]
4001b73c:	e59f1148 	ldr	r1, [pc, #328]	; 4001b88c <CyU3PGpifLoad+0x27c>
4001b740:	e0811205 	add	r1, r1, r5, lsl #4
4001b744:	e5810004 	str	r0, [r1, #4]
4001b748:	e0861086 	add	r1, r6, r6, lsl #1
4001b74c:	e5940004 	ldr	r0, [r4, #4]
4001b750:	e0800181 	add	r0, r0, r1, lsl #3
4001b754:	e5900008 	ldr	r0, [r0, #8]
4001b758:	e59f112c 	ldr	r1, [pc, #300]	; 4001b88c <CyU3PGpifLoad+0x27c>
4001b75c:	e0811205 	add	r1, r1, r5, lsl #4
4001b760:	e5810008 	str	r0, [r1, #8]
4001b764:	e0861086 	add	r1, r6, r6, lsl #1
4001b768:	e5940004 	ldr	r0, [r4, #4]
4001b76c:	e0800181 	add	r0, r0, r1, lsl #3
4001b770:	e590000c 	ldr	r0, [r0, #12]
4001b774:	e59f1114 	ldr	r1, [pc, #276]	; 4001b890 <CyU3PGpifLoad+0x280>
4001b778:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b77c:	e0861086 	add	r1, r6, r6, lsl #1
4001b780:	e5940004 	ldr	r0, [r4, #4]
4001b784:	e0800181 	add	r0, r0, r1, lsl #3
4001b788:	e5900010 	ldr	r0, [r0, #16]
4001b78c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b890 <CyU3PGpifLoad+0x280>
4001b790:	e0811205 	add	r1, r1, r5, lsl #4
4001b794:	e5810004 	str	r0, [r1, #4]
4001b798:	e0861086 	add	r1, r6, r6, lsl #1
4001b79c:	e5940004 	ldr	r0, [r4, #4]
4001b7a0:	e0800181 	add	r0, r0, r1, lsl #3
4001b7a4:	e5900014 	ldr	r0, [r0, #20]
4001b7a8:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b890 <CyU3PGpifLoad+0x280>
4001b7ac:	e0811205 	add	r1, r1, r5, lsl #4
4001b7b0:	e5810008 	str	r0, [r1, #8]
4001b7b4:	e2850001 	add	r0, r5, #1
4001b7b8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b7bc:	e1d400b0 	ldrh	r0, [r4]
4001b7c0:	e1500005 	cmp	r0, r5
4001b7c4:	caffffca 	bgt	4001b6f4 <CyU3PGpifLoad+0xe4>
4001b7c8:	e1d400bc 	ldrh	r0, [r4, #12]
4001b7cc:	e3500000 	cmp	r0, #0
4001b7d0:	0a000013 	beq	4001b824 <CyU3PGpifLoad+0x214>
4001b7d4:	e5940010 	ldr	r0, [r4, #16]
4001b7d8:	e3500000 	cmp	r0, #0
4001b7dc:	0a000002 	beq	4001b7ec <CyU3PGpifLoad+0x1dc>
4001b7e0:	e1d400bc 	ldrh	r0, [r4, #12]
4001b7e4:	e3500020 	cmp	r0, #32
4001b7e8:	da000001 	ble	4001b7f4 <CyU3PGpifLoad+0x1e4>
4001b7ec:	e3a00040 	mov	r0, #64	; 0x40
4001b7f0:	eaffff95 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b7f4:	e3a05000 	mov	r5, #0
4001b7f8:	ea000006 	b	4001b818 <CyU3PGpifLoad+0x208>
4001b7fc:	e5940010 	ldr	r0, [r4, #16]
4001b800:	e0800085 	add	r0, r0, r5, lsl #1
4001b804:	e1d000b0 	ldrh	r0, [r0]
4001b808:	e59f1084 	ldr	r1, [pc, #132]	; 4001b894 <CyU3PGpifLoad+0x284>
4001b80c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b810:	e2850001 	add	r0, r5, #1
4001b814:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b818:	e1d400bc 	ldrh	r0, [r4, #12]
4001b81c:	e1500005 	cmp	r0, r5
4001b820:	cafffff5 	bgt	4001b7fc <CyU3PGpifLoad+0x1ec>
4001b824:	e1d401b4 	ldrh	r0, [r4, #20]
4001b828:	e3500000 	cmp	r0, #0
4001b82c:	0a000012 	beq	4001b87c <CyU3PGpifLoad+0x26c>
4001b830:	e5940018 	ldr	r0, [r4, #24]
4001b834:	e3500000 	cmp	r0, #0
4001b838:	1a000001 	bne	4001b844 <CyU3PGpifLoad+0x234>
4001b83c:	e3a00040 	mov	r0, #64	; 0x40
4001b840:	eaffff81 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b844:	e3a05001 	mov	r5, #1
4001b848:	ea000004 	b	4001b860 <CyU3PGpifLoad+0x250>
4001b84c:	e5940018 	ldr	r0, [r4, #24]
4001b850:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b854:	e4870004 	str	r0, [r7], #4
4001b858:	e2850001 	add	r0, r5, #1
4001b85c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b860:	e1d401b4 	ldrh	r0, [r4, #20]
4001b864:	e1500005 	cmp	r0, r5
4001b868:	cafffff7 	bgt	4001b84c <CyU3PGpifLoad+0x23c>
4001b86c:	e5940018 	ldr	r0, [r4, #24]
4001b870:	e5900000 	ldr	r0, [r0]
4001b874:	e59f100c 	ldr	r1, [pc, #12]	; 4001b888 <CyU3PGpifLoad+0x278>
4001b878:	e5810000 	str	r0, [r1]
4001b87c:	e3a00000 	mov	r0, #0
4001b880:	eaffff71 	b	4001b64c <CyU3PGpifLoad+0x3c>
4001b884:	e0014004 	.word	0xe0014004
4001b888:	e0014000 	.word	0xe0014000
4001b88c:	e0015000 	.word	0xe0015000
4001b890:	e0016000 	.word	0xe0016000
4001b894:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b898 <CyU3PGpifRegisterCallback>:
4001b898:	e59f1004 	ldr	r1, [pc, #4]	; 4001b8a4 <CyU3PGpifRegisterCallback+0xc>
4001b89c:	e5810000 	str	r0, [r1]
4001b8a0:	e12fff1e 	bx	lr
4001b8a4:	400311bc 	.word	0x400311bc

Disassembly of section i.CyU3PGpifSMStart:

4001b8a8 <CyU3PGpifSMStart>:
4001b8a8:	e92d4010 	push	{r4, lr}
4001b8ac:	e1a02000 	mov	r2, r0
4001b8b0:	e59f012c 	ldr	r0, [pc, #300]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b8b4:	e5900000 	ldr	r0, [r0]
4001b8b8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b8bc:	0a000004 	beq	4001b8d4 <CyU3PGpifSMStart+0x2c>
4001b8c0:	e59f0120 	ldr	r0, [pc, #288]	; 4001b9e8 <CyU3PGpifSMStart+0x140>
4001b8c4:	e0800202 	add	r0, r0, r2, lsl #4
4001b8c8:	e5900008 	ldr	r0, [r0, #8]
4001b8cc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b8d0:	1a000001 	bne	4001b8dc <CyU3PGpifSMStart+0x34>
4001b8d4:	e3a00044 	mov	r0, #68	; 0x44
4001b8d8:	e8bd8010 	pop	{r4, pc}
4001b8dc:	e59f0100 	ldr	r0, [pc, #256]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b8e0:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b8e4:	e3100001 	tst	r0, #1
4001b8e8:	0a000001 	beq	4001b8f4 <CyU3PGpifSMStart+0x4c>
4001b8ec:	e3a00043 	mov	r0, #67	; 0x43
4001b8f0:	eafffff8 	b	4001b8d8 <CyU3PGpifSMStart+0x30>
4001b8f4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b8f8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b8fc:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b900:	e1800801 	orr	r0, r0, r1, lsl #16
4001b904:	e3800001 	orr	r0, r0, #1
4001b908:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b90c:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b910:	e1a00004 	mov	r0, r4
4001b914:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b918:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b9ec <CyU3PGpifSMStart+0x144>
4001b91c:	e000000e 	and	r0, r0, lr
4001b920:	e180e802 	orr	lr, r0, r2, lsl #16
4001b924:	e1a00004 	mov	r0, r4
4001b928:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b92c:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b930:	e3800005 	orr	r0, r0, #5
4001b934:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b938:	e1a00004 	mov	r0, r4
4001b93c:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b940:	e5900008 	ldr	r0, [r0, #8]
4001b944:	e2003007 	and	r3, r0, #7
4001b948:	e3530001 	cmp	r3, #1
4001b94c:	0a000004 	beq	4001b964 <CyU3PGpifSMStart+0xbc>
4001b950:	e3530002 	cmp	r3, #2
4001b954:	0a00000b 	beq	4001b988 <CyU3PGpifSMStart+0xe0>
4001b958:	e3530003 	cmp	r3, #3
4001b95c:	1a00001b 	bne	4001b9d0 <CyU3PGpifSMStart+0x128>
4001b960:	ea000011 	b	4001b9ac <CyU3PGpifSMStart+0x104>
4001b964:	e1a00000 	nop			; (mov r0, r0)
4001b968:	e59f0080 	ldr	r0, [pc, #128]	; 4001b9f0 <CyU3PGpifSMStart+0x148>
4001b96c:	e1ce0000 	bic	r0, lr, r0
4001b970:	e3800005 	orr	r0, r0, #5
4001b974:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b978:	e1800424 	orr	r0, r0, r4, lsr #8
4001b97c:	e59f4060 	ldr	r4, [pc, #96]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b980:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b984:	ea000013 	b	4001b9d8 <CyU3PGpifSMStart+0x130>
4001b988:	e1a00000 	nop			; (mov r0, r0)
4001b98c:	e59f0060 	ldr	r0, [pc, #96]	; 4001b9f4 <CyU3PGpifSMStart+0x14c>
4001b990:	e1ce0000 	bic	r0, lr, r0
4001b994:	e3800005 	orr	r0, r0, #5
4001b998:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b99c:	e1800424 	orr	r0, r0, r4, lsr #8
4001b9a0:	e59f403c 	ldr	r4, [pc, #60]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b9a4:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b9a8:	ea00000a 	b	4001b9d8 <CyU3PGpifSMStart+0x130>
4001b9ac:	e1a00000 	nop			; (mov r0, r0)
4001b9b0:	e59f0040 	ldr	r0, [pc, #64]	; 4001b9f8 <CyU3PGpifSMStart+0x150>
4001b9b4:	e1ce0000 	bic	r0, lr, r0
4001b9b8:	e3800005 	orr	r0, r0, #5
4001b9bc:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b9c0:	e1800424 	orr	r0, r0, r4, lsr #8
4001b9c4:	e59f4018 	ldr	r4, [pc, #24]	; 4001b9e4 <CyU3PGpifSMStart+0x13c>
4001b9c8:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b9cc:	ea000001 	b	4001b9d8 <CyU3PGpifSMStart+0x130>
4001b9d0:	e1a00000 	nop			; (mov r0, r0)
4001b9d4:	e1a00000 	nop			; (mov r0, r0)
4001b9d8:	e1a00000 	nop			; (mov r0, r0)
4001b9dc:	e3a00000 	mov	r0, #0
4001b9e0:	eaffffbc 	b	4001b8d8 <CyU3PGpifSMStart+0x30>
4001b9e4:	e0014000 	.word	0xe0014000
4001b9e8:	e0015000 	.word	0xe0015000
4001b9ec:	ff00003a 	.word	0xff00003a
4001b9f0:	0080ffc5 	.word	0x0080ffc5
4001b9f4:	00c0ffc5 	.word	0x00c0ffc5
4001b9f8:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b9fc <CyU3PGpifSMSwitch>:
4001b9fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ba00:	e1a0c000 	mov	ip, r0
4001ba04:	e59de018 	ldr	lr, [sp, #24]
4001ba08:	e3a04000 	mov	r4, #0
4001ba0c:	e3510c01 	cmp	r1, #256	; 0x100
4001ba10:	ba000001 	blt	4001ba1c <CyU3PGpifSMSwitch+0x20>
4001ba14:	e3a00040 	mov	r0, #64	; 0x40
4001ba18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ba1c:	e59f0150 	ldr	r0, [pc, #336]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001ba20:	e5900000 	ldr	r0, [r0]
4001ba24:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba28:	1a000001 	bne	4001ba34 <CyU3PGpifSMSwitch+0x38>
4001ba2c:	e3a00044 	mov	r0, #68	; 0x44
4001ba30:	eafffff8 	b	4001ba18 <CyU3PGpifSMSwitch+0x1c>
4001ba34:	e59f0138 	ldr	r0, [pc, #312]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001ba38:	e5900008 	ldr	r0, [r0, #8]
4001ba3c:	e2006007 	and	r6, r0, #7
4001ba40:	e59f012c 	ldr	r0, [pc, #300]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001ba44:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001ba48:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001ba4c:	e1800803 	orr	r0, r0, r3, lsl #16
4001ba50:	e3800001 	orr	r0, r0, #1
4001ba54:	e59f8118 	ldr	r8, [pc, #280]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001ba58:	e5880118 	str	r0, [r8, #280]	; 0x118
4001ba5c:	e3a00001 	mov	r0, #1
4001ba60:	e1804801 	orr	r4, r0, r1, lsl #16
4001ba64:	e35c0c01 	cmp	ip, #256	; 0x100
4001ba68:	aa000012 	bge	4001bab8 <CyU3PGpifSMSwitch+0xbc>
4001ba6c:	e1c80000 	bic	r0, r8, r0
4001ba70:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001ba74:	e1a05c20 	lsr	r5, r0, #24
4001ba78:	e59f00f8 	ldr	r0, [pc, #248]	; 4001bb78 <CyU3PGpifSMSwitch+0x17c>
4001ba7c:	e7d00006 	ldrb	r0, [r0, r6]
4001ba80:	e0000005 	and	r0, r0, r5
4001ba84:	e59f80ec 	ldr	r8, [pc, #236]	; 4001bb78 <CyU3PGpifSMSwitch+0x17c>
4001ba88:	e7d88006 	ldrb	r8, [r8, r6]
4001ba8c:	e008800c 	and	r8, r8, ip
4001ba90:	e1500008 	cmp	r0, r8
4001ba94:	1a000001 	bne	4001baa0 <CyU3PGpifSMSwitch+0xa4>
4001ba98:	e3844004 	orr	r4, r4, #4
4001ba9c:	ea000006 	b	4001babc <CyU3PGpifSMSwitch+0xc0>
4001baa0:	e3a00008 	mov	r0, #8
4001baa4:	e180040c 	orr	r0, r0, ip, lsl #8
4001baa8:	e1844000 	orr	r4, r4, r0
4001baac:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bab0:	e580e120 	str	lr, [r0, #288]	; 0x120
4001bab4:	ea000000 	b	4001babc <CyU3PGpifSMSwitch+0xc0>
4001bab8:	e3844004 	orr	r4, r4, #4
4001babc:	e3520c01 	cmp	r2, #256	; 0x100
4001bac0:	aa000007 	bge	4001bae4 <CyU3PGpifSMSwitch+0xe8>
4001bac4:	e3a00002 	mov	r0, #2
4001bac8:	e1800c02 	orr	r0, r0, r2, lsl #24
4001bacc:	e1844000 	orr	r4, r4, r0
4001bad0:	e59f009c 	ldr	r0, [pc, #156]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bad4:	e5900018 	ldr	r0, [r0, #24]
4001bad8:	e3800001 	orr	r0, r0, #1
4001badc:	e59f8090 	ldr	r8, [pc, #144]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bae0:	e5880018 	str	r0, [r8, #24]
4001bae4:	e59f0088 	ldr	r0, [pc, #136]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bae8:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001baec:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001baf0:	e3560001 	cmp	r6, #1
4001baf4:	0a000004 	beq	4001bb0c <CyU3PGpifSMSwitch+0x110>
4001baf8:	e3560002 	cmp	r6, #2
4001bafc:	0a000009 	beq	4001bb28 <CyU3PGpifSMSwitch+0x12c>
4001bb00:	e3560003 	cmp	r6, #3
4001bb04:	1a000015 	bne	4001bb60 <CyU3PGpifSMSwitch+0x164>
4001bb08:	ea00000d 	b	4001bb44 <CyU3PGpifSMSwitch+0x148>
4001bb0c:	e1a00000 	nop			; (mov r0, r0)
4001bb10:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001bb14:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001bb18:	e1800428 	orr	r0, r0, r8, lsr #8
4001bb1c:	e59f8050 	ldr	r8, [pc, #80]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bb20:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bb24:	ea00000f 	b	4001bb68 <CyU3PGpifSMSwitch+0x16c>
4001bb28:	e1a00000 	nop			; (mov r0, r0)
4001bb2c:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001bb30:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001bb34:	e1800428 	orr	r0, r0, r8, lsr #8
4001bb38:	e59f8034 	ldr	r8, [pc, #52]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bb3c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bb40:	ea000008 	b	4001bb68 <CyU3PGpifSMSwitch+0x16c>
4001bb44:	e1a00000 	nop			; (mov r0, r0)
4001bb48:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001bb4c:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001bb50:	e1800428 	orr	r0, r0, r8, lsr #8
4001bb54:	e59f8018 	ldr	r8, [pc, #24]	; 4001bb74 <CyU3PGpifSMSwitch+0x178>
4001bb58:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bb5c:	ea000001 	b	4001bb68 <CyU3PGpifSMSwitch+0x16c>
4001bb60:	e1a00000 	nop			; (mov r0, r0)
4001bb64:	e1a00000 	nop			; (mov r0, r0)
4001bb68:	e1a00000 	nop			; (mov r0, r0)
4001bb6c:	e3a00000 	mov	r0, #0
4001bb70:	eaffffa8 	b	4001ba18 <CyU3PGpifSMSwitch+0x1c>
4001bb74:	e0014000 	.word	0xe0014000
4001bb78:	40012044 	.word	0x40012044

Disassembly of section i.CyU3PConnectState:

4001bb7c <CyU3PConnectState>:
4001bb7c:	e92d4070 	push	{r4, r5, r6, lr}
4001bb80:	e1a04000 	mov	r4, r0
4001bb84:	e1a06001 	mov	r6, r1
4001bb88:	e59f0234 	ldr	r0, [pc, #564]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bb8c:	e5d00008 	ldrb	r0, [r0, #8]
4001bb90:	e3500000 	cmp	r0, #0
4001bb94:	1a000001 	bne	4001bba0 <CyU3PConnectState+0x24>
4001bb98:	e3a00042 	mov	r0, #66	; 0x42
4001bb9c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001bba0:	ebffe41a 	bl	40014c10 <CyFx3DevIsUsb3Supported>
4001bba4:	e3500000 	cmp	r0, #0
4001bba8:	1a000000 	bne	4001bbb0 <CyU3PConnectState+0x34>
4001bbac:	e3a06000 	mov	r6, #0
4001bbb0:	e3a05000 	mov	r5, #0
4001bbb4:	e3e01000 	mvn	r1, #0
4001bbb8:	e59f0208 	ldr	r0, [pc, #520]	; 4001bdc8 <CyU3PConnectState+0x24c>
4001bbbc:	ebffb930 	bl	4000a084 <_txe_mutex_get>
4001bbc0:	e3540000 	cmp	r4, #0
4001bbc4:	1a00001a 	bne	4001bc34 <CyU3PConnectState+0xb8>
4001bbc8:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bbcc:	e5d00008 	ldrb	r0, [r0, #8]
4001bbd0:	e3500004 	cmp	r0, #4
4001bbd4:	ba000012 	blt	4001bc24 <CyU3PConnectState+0xa8>
4001bbd8:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bbdc:	e5d00008 	ldrb	r0, [r0, #8]
4001bbe0:	e3500005 	cmp	r0, #5
4001bbe4:	ba000008 	blt	4001bc0c <CyU3PConnectState+0x90>
4001bbe8:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bbec:	e5d11009 	ldrb	r1, [r1, #9]
4001bbf0:	e3510003 	cmp	r1, #3
4001bbf4:	1a000001 	bne	4001bc00 <CyU3PConnectState+0x84>
4001bbf8:	e3a01001 	mov	r1, #1
4001bbfc:	ea000000 	b	4001bc04 <CyU3PConnectState+0x88>
4001bc00:	e3a01000 	mov	r1, #0
4001bc04:	e1a00001 	mov	r0, r1
4001bc08:	eb00050f 	bl	4001d04c <CyU3PUsbPhyDisable>
4001bc0c:	e3a00003 	mov	r0, #3
4001bc10:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bc14:	e5c10008 	strb	r0, [r1, #8]
4001bc18:	e3a00000 	mov	r0, #0
4001bc1c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001bc20:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bc24:	e3a00000 	mov	r0, #0
4001bc28:	e59f1194 	ldr	r1, [pc, #404]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bc2c:	e5810044 	str	r0, [r1, #68]	; 0x44
4001bc30:	ea00005f 	b	4001bdb4 <CyU3PConnectState+0x238>
4001bc34:	e59f0188 	ldr	r0, [pc, #392]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bc38:	e5d00008 	ldrb	r0, [r0, #8]
4001bc3c:	e3500003 	cmp	r0, #3
4001bc40:	0a00000b 	beq	4001bc74 <CyU3PConnectState+0xf8>
4001bc44:	e3500004 	cmp	r0, #4
4001bc48:	0a000004 	beq	4001bc60 <CyU3PConnectState+0xe4>
4001bc4c:	e3500005 	cmp	r0, #5
4001bc50:	0a000004 	beq	4001bc68 <CyU3PConnectState+0xec>
4001bc54:	e3500006 	cmp	r0, #6
4001bc58:	1a000051 	bne	4001bda4 <CyU3PConnectState+0x228>
4001bc5c:	ea000002 	b	4001bc6c <CyU3PConnectState+0xf0>
4001bc60:	e1a00000 	nop			; (mov r0, r0)
4001bc64:	e1a00000 	nop			; (mov r0, r0)
4001bc68:	e1a00000 	nop			; (mov r0, r0)
4001bc6c:	e3a05043 	mov	r5, #67	; 0x43
4001bc70:	ea00004e 	b	4001bdb0 <CyU3PConnectState+0x234>
4001bc74:	e1a00000 	nop			; (mov r0, r0)
4001bc78:	e59f0144 	ldr	r0, [pc, #324]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bc7c:	e5d00007 	ldrb	r0, [r0, #7]
4001bc80:	e3500001 	cmp	r0, #1
4001bc84:	0a00000f 	beq	4001bcc8 <CyU3PConnectState+0x14c>
4001bc88:	e59f013c 	ldr	r0, [pc, #316]	; 4001bdcc <CyU3PConnectState+0x250>
4001bc8c:	e590001c 	ldr	r0, [r0, #28]
4001bc90:	e3500000 	cmp	r0, #0
4001bc94:	0a000007 	beq	4001bcb8 <CyU3PConnectState+0x13c>
4001bc98:	e59f012c 	ldr	r0, [pc, #300]	; 4001bdcc <CyU3PConnectState+0x250>
4001bc9c:	e5900014 	ldr	r0, [r0, #20]
4001bca0:	e3500000 	cmp	r0, #0
4001bca4:	0a000003 	beq	4001bcb8 <CyU3PConnectState+0x13c>
4001bca8:	e59f011c 	ldr	r0, [pc, #284]	; 4001bdcc <CyU3PConnectState+0x250>
4001bcac:	e5900018 	ldr	r0, [r0, #24]
4001bcb0:	e3500000 	cmp	r0, #0
4001bcb4:	1a000003 	bne	4001bcc8 <CyU3PConnectState+0x14c>
4001bcb8:	e59f0108 	ldr	r0, [pc, #264]	; 4001bdc8 <CyU3PConnectState+0x24c>
4001bcbc:	ebffb925 	bl	4000a158 <_txe_mutex_put>
4001bcc0:	e3a00044 	mov	r0, #68	; 0x44
4001bcc4:	eaffffb4 	b	4001bb9c <CyU3PConnectState+0x20>
4001bcc8:	e3560000 	cmp	r6, #0
4001bccc:	0a000007 	beq	4001bcf0 <CyU3PConnectState+0x174>
4001bcd0:	e3a00000 	mov	r0, #0
4001bcd4:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bdd0 <CyU3PConnectState+0x254>
4001bcd8:	e5810014 	str	r0, [r1, #20]
4001bcdc:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bdd4 <CyU3PConnectState+0x258>
4001bce0:	e5810000 	str	r0, [r1]
4001bce4:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bdd8 <CyU3PConnectState+0x25c>
4001bce8:	e5810000 	str	r0, [r1]
4001bcec:	ea000007 	b	4001bd10 <CyU3PConnectState+0x194>
4001bcf0:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bcf4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001bcf8:	e3500000 	cmp	r0, #0
4001bcfc:	0a000003 	beq	4001bd10 <CyU3PConnectState+0x194>
4001bd00:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bdc8 <CyU3PConnectState+0x24c>
4001bd04:	ebffb913 	bl	4000a158 <_txe_mutex_put>
4001bd08:	e3a000ff 	mov	r0, #255	; 0xff
4001bd0c:	eaffffa2 	b	4001bb9c <CyU3PConnectState+0x20>
4001bd10:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd14:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bd18:	e3a00000 	mov	r0, #0
4001bd1c:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd20:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bd24:	e2810000 	add	r0, r1, #0
4001bd28:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bd2c:	e3500000 	cmp	r0, #0
4001bd30:	0a000004 	beq	4001bd48 <CyU3PConnectState+0x1cc>
4001bd34:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bddc <CyU3PConnectState+0x260>
4001bd38:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bd3c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bd40:	e1100001 	tst	r0, r1
4001bd44:	0a000012 	beq	4001bd94 <CyU3PConnectState+0x218>
4001bd48:	e3560000 	cmp	r6, #0
4001bd4c:	0a000007 	beq	4001bd70 <CyU3PConnectState+0x1f4>
4001bd50:	e3a00000 	mov	r0, #0
4001bd54:	e59f1068 	ldr	r1, [pc, #104]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd58:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bd5c:	e3a00001 	mov	r0, #1
4001bd60:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bd64:	e3a00000 	mov	r0, #0
4001bd68:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bd6c:	ea000002 	b	4001bd7c <CyU3PConnectState+0x200>
4001bd70:	e3a00000 	mov	r0, #0
4001bd74:	e59f1048 	ldr	r1, [pc, #72]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd78:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bd7c:	e1a00006 	mov	r0, r6
4001bd80:	eb000527 	bl	4001d224 <CyU3PUsbPhyEnable>
4001bd84:	e3a00005 	mov	r0, #5
4001bd88:	e59f1034 	ldr	r1, [pc, #52]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd8c:	e5c10008 	strb	r0, [r1, #8]
4001bd90:	ea000002 	b	4001bda0 <CyU3PConnectState+0x224>
4001bd94:	e3a00004 	mov	r0, #4
4001bd98:	e59f1024 	ldr	r1, [pc, #36]	; 4001bdc4 <CyU3PConnectState+0x248>
4001bd9c:	e5c10008 	strb	r0, [r1, #8]
4001bda0:	ea000002 	b	4001bdb0 <CyU3PConnectState+0x234>
4001bda4:	e1a00000 	nop			; (mov r0, r0)
4001bda8:	e3a05044 	mov	r5, #68	; 0x44
4001bdac:	e1a00000 	nop			; (mov r0, r0)
4001bdb0:	e1a00000 	nop			; (mov r0, r0)
4001bdb4:	e59f000c 	ldr	r0, [pc, #12]	; 4001bdc8 <CyU3PConnectState+0x24c>
4001bdb8:	ebffb8e6 	bl	4000a158 <_txe_mutex_put>
4001bdbc:	e1a00005 	mov	r0, r5
4001bdc0:	eaffff75 	b	4001bb9c <CyU3PConnectState+0x20>
4001bdc4:	400321c0 	.word	0x400321c0
4001bdc8:	40032360 	.word	0x40032360
4001bdcc:	40032418 	.word	0x40032418
4001bdd0:	e0033000 	.word	0xe0033000
4001bdd4:	40031210 	.word	0x40031210
4001bdd8:	40031214 	.word	0x40031214
4001bddc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bde0 <CyU3POtgGetMode>:
4001bde0:	e59f0004 	ldr	r0, [pc, #4]	; 4001bdec <CyU3POtgGetMode+0xc>
4001bde4:	e5d00000 	ldrb	r0, [r0]
4001bde8:	e12fff1e 	bx	lr
4001bdec:	400311e0 	.word	0x400311e0

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bdf0 <CyU3POtgIsDeviceMode>:
4001bdf0:	e3a01000 	mov	r1, #0
4001bdf4:	e59f00b4 	ldr	r0, [pc, #180]	; 4001beb0 <CyU3POtgIsDeviceMode+0xc0>
4001bdf8:	e5d00000 	ldrb	r0, [r0]
4001bdfc:	e3500000 	cmp	r0, #0
4001be00:	0a000003 	beq	4001be14 <CyU3POtgIsDeviceMode+0x24>
4001be04:	e59f00a4 	ldr	r0, [pc, #164]	; 4001beb0 <CyU3POtgIsDeviceMode+0xc0>
4001be08:	e5d00000 	ldrb	r0, [r0]
4001be0c:	e3500002 	cmp	r0, #2
4001be10:	1a000024 	bne	4001bea8 <CyU3POtgIsDeviceMode+0xb8>
4001be14:	e59f0098 	ldr	r0, [pc, #152]	; 4001beb4 <CyU3POtgIsDeviceMode+0xc4>
4001be18:	e5d00000 	ldrb	r0, [r0]
4001be1c:	e3500000 	cmp	r0, #0
4001be20:	0a000006 	beq	4001be40 <CyU3POtgIsDeviceMode+0x50>
4001be24:	e3500002 	cmp	r0, #2
4001be28:	0a00000c 	beq	4001be60 <CyU3POtgIsDeviceMode+0x70>
4001be2c:	e3500004 	cmp	r0, #4
4001be30:	0a00000b 	beq	4001be64 <CyU3POtgIsDeviceMode+0x74>
4001be34:	e3500005 	cmp	r0, #5
4001be38:	1a00000c 	bne	4001be70 <CyU3POtgIsDeviceMode+0x80>
4001be3c:	ea000009 	b	4001be68 <CyU3POtgIsDeviceMode+0x78>
4001be40:	e1a00000 	nop			; (mov r0, r0)
4001be44:	e59f0064 	ldr	r0, [pc, #100]	; 4001beb0 <CyU3POtgIsDeviceMode+0xc0>
4001be48:	e5d00000 	ldrb	r0, [r0]
4001be4c:	e3500002 	cmp	r0, #2
4001be50:	1a000001 	bne	4001be5c <CyU3POtgIsDeviceMode+0x6c>
4001be54:	e3a00000 	mov	r0, #0
4001be58:	e12fff1e 	bx	lr
4001be5c:	e1a00000 	nop			; (mov r0, r0)
4001be60:	e1a00000 	nop			; (mov r0, r0)
4001be64:	e1a00000 	nop			; (mov r0, r0)
4001be68:	e3a01001 	mov	r1, #1
4001be6c:	ea000002 	b	4001be7c <CyU3POtgIsDeviceMode+0x8c>
4001be70:	e1a00000 	nop			; (mov r0, r0)
4001be74:	e3a01000 	mov	r1, #0
4001be78:	e1a00000 	nop			; (mov r0, r0)
4001be7c:	e1a00000 	nop			; (mov r0, r0)
4001be80:	e59f0030 	ldr	r0, [pc, #48]	; 4001beb8 <CyU3POtgIsDeviceMode+0xc8>
4001be84:	e5900000 	ldr	r0, [r0]
4001be88:	e3500000 	cmp	r0, #0
4001be8c:	0a000005 	beq	4001bea8 <CyU3POtgIsDeviceMode+0xb8>
4001be90:	e3510000 	cmp	r1, #0
4001be94:	1a000001 	bne	4001bea0 <CyU3POtgIsDeviceMode+0xb0>
4001be98:	e3a00001 	mov	r0, #1
4001be9c:	ea000000 	b	4001bea4 <CyU3POtgIsDeviceMode+0xb4>
4001bea0:	e3a00000 	mov	r0, #0
4001bea4:	e1a01000 	mov	r1, r0
4001bea8:	e1a00001 	mov	r0, r1
4001beac:	eaffffe9 	b	4001be58 <CyU3POtgIsDeviceMode+0x68>
4001beb0:	400311e0 	.word	0x400311e0
4001beb4:	400311dc 	.word	0x400311dc
4001beb8:	400311d8 	.word	0x400311d8

Disassembly of section i.CyU3POtgIsHostMode:

4001bebc <CyU3POtgIsHostMode>:
4001bebc:	e3a01000 	mov	r1, #0
4001bec0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bf70 <CyU3POtgIsHostMode+0xb4>
4001bec4:	e5d00000 	ldrb	r0, [r0]
4001bec8:	e3500001 	cmp	r0, #1
4001becc:	0a000003 	beq	4001bee0 <CyU3POtgIsHostMode+0x24>
4001bed0:	e59f0098 	ldr	r0, [pc, #152]	; 4001bf70 <CyU3POtgIsHostMode+0xb4>
4001bed4:	e5d00000 	ldrb	r0, [r0]
4001bed8:	e3500002 	cmp	r0, #2
4001bedc:	1a000021 	bne	4001bf68 <CyU3POtgIsHostMode+0xac>
4001bee0:	e59f008c 	ldr	r0, [pc, #140]	; 4001bf74 <CyU3POtgIsHostMode+0xb8>
4001bee4:	e5d00000 	ldrb	r0, [r0]
4001bee8:	e3500000 	cmp	r0, #0
4001beec:	0a000004 	beq	4001bf04 <CyU3POtgIsHostMode+0x48>
4001bef0:	e3500001 	cmp	r0, #1
4001bef4:	0a00000a 	beq	4001bf24 <CyU3POtgIsHostMode+0x68>
4001bef8:	e3500003 	cmp	r0, #3
4001befc:	1a00000b 	bne	4001bf30 <CyU3POtgIsHostMode+0x74>
4001bf00:	ea000008 	b	4001bf28 <CyU3POtgIsHostMode+0x6c>
4001bf04:	e1a00000 	nop			; (mov r0, r0)
4001bf08:	e59f0060 	ldr	r0, [pc, #96]	; 4001bf70 <CyU3POtgIsHostMode+0xb4>
4001bf0c:	e5d00000 	ldrb	r0, [r0]
4001bf10:	e3500002 	cmp	r0, #2
4001bf14:	1a000001 	bne	4001bf20 <CyU3POtgIsHostMode+0x64>
4001bf18:	e3a00000 	mov	r0, #0
4001bf1c:	e12fff1e 	bx	lr
4001bf20:	e1a00000 	nop			; (mov r0, r0)
4001bf24:	e1a00000 	nop			; (mov r0, r0)
4001bf28:	e3a01001 	mov	r1, #1
4001bf2c:	ea000002 	b	4001bf3c <CyU3POtgIsHostMode+0x80>
4001bf30:	e1a00000 	nop			; (mov r0, r0)
4001bf34:	e3a01000 	mov	r1, #0
4001bf38:	e1a00000 	nop			; (mov r0, r0)
4001bf3c:	e1a00000 	nop			; (mov r0, r0)
4001bf40:	e59f0030 	ldr	r0, [pc, #48]	; 4001bf78 <CyU3POtgIsHostMode+0xbc>
4001bf44:	e5900000 	ldr	r0, [r0]
4001bf48:	e3500000 	cmp	r0, #0
4001bf4c:	0a000005 	beq	4001bf68 <CyU3POtgIsHostMode+0xac>
4001bf50:	e3510000 	cmp	r1, #0
4001bf54:	1a000001 	bne	4001bf60 <CyU3POtgIsHostMode+0xa4>
4001bf58:	e3a00001 	mov	r0, #1
4001bf5c:	ea000000 	b	4001bf64 <CyU3POtgIsHostMode+0xa8>
4001bf60:	e3a00000 	mov	r0, #0
4001bf64:	e1a01000 	mov	r1, r0
4001bf68:	e1a00001 	mov	r0, r1
4001bf6c:	eaffffea 	b	4001bf1c <CyU3POtgIsHostMode+0x60>
4001bf70:	400311e0 	.word	0x400311e0
4001bf74:	400311dc 	.word	0x400311dc
4001bf78:	400311d8 	.word	0x400311d8

Disassembly of section i.CyU3POtgIsStarted:

4001bf7c <CyU3POtgIsStarted>:
4001bf7c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bf88 <CyU3POtgIsStarted+0xc>
4001bf80:	e5900000 	ldr	r0, [r0]
4001bf84:	e12fff1e 	bx	lr
4001bf88:	400311d4 	.word	0x400311d4

Disassembly of section i.CyU3PSetEpConfig:

4001bf8c <CyU3PSetEpConfig>:
4001bf8c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bf90:	e1a04000 	mov	r4, r0
4001bf94:	e1a05001 	mov	r5, r1
4001bf98:	e204607f 	and	r6, r4, #127	; 0x7f
4001bf9c:	e3a07000 	mov	r7, #0
4001bfa0:	e3a08000 	mov	r8, #0
4001bfa4:	e3a09000 	mov	r9, #0
4001bfa8:	e3a0a000 	mov	sl, #0
4001bfac:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c53c <CyU3PSetEpConfig+0x5b0>
4001bfb0:	e5d00008 	ldrb	r0, [r0, #8]
4001bfb4:	e3500000 	cmp	r0, #0
4001bfb8:	1a000001 	bne	4001bfc4 <CyU3PSetEpConfig+0x38>
4001bfbc:	e3a00042 	mov	r0, #66	; 0x42
4001bfc0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bfc4:	e3550000 	cmp	r5, #0
4001bfc8:	1a000001 	bne	4001bfd4 <CyU3PSetEpConfig+0x48>
4001bfcc:	e3a00041 	mov	r0, #65	; 0x41
4001bfd0:	eafffffa 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001bfd4:	e5950000 	ldr	r0, [r5]
4001bfd8:	e3500000 	cmp	r0, #0
4001bfdc:	0a000074 	beq	4001c1b4 <CyU3PSetEpConfig+0x228>
4001bfe0:	e1d500b8 	ldrh	r0, [r5, #8]
4001bfe4:	e3500b01 	cmp	r0, #1024	; 0x400
4001bfe8:	ca000001 	bgt	4001bff4 <CyU3PSetEpConfig+0x68>
4001bfec:	e356000f 	cmp	r6, #15
4001bff0:	da000001 	ble	4001bffc <CyU3PSetEpConfig+0x70>
4001bff4:	e3a00040 	mov	r0, #64	; 0x40
4001bff8:	eafffff0 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001bffc:	e5d50004 	ldrb	r0, [r5, #4]
4001c000:	e3500000 	cmp	r0, #0
4001c004:	0a000002 	beq	4001c014 <CyU3PSetEpConfig+0x88>
4001c008:	e5d50004 	ldrb	r0, [r5, #4]
4001c00c:	e3500003 	cmp	r0, #3
4001c010:	da000001 	ble	4001c01c <CyU3PSetEpConfig+0x90>
4001c014:	e3a00040 	mov	r0, #64	; 0x40
4001c018:	eaffffe8 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c01c:	e5d5000a 	ldrb	r0, [r5, #10]
4001c020:	e3500010 	cmp	r0, #16
4001c024:	ca000008 	bgt	4001c04c <CyU3PSetEpConfig+0xc0>
4001c028:	e5d5000a 	ldrb	r0, [r5, #10]
4001c02c:	e3500001 	cmp	r0, #1
4001c030:	da000007 	ble	4001c054 <CyU3PSetEpConfig+0xc8>
4001c034:	e1d500b8 	ldrh	r0, [r5, #8]
4001c038:	e3500b01 	cmp	r0, #1024	; 0x400
4001c03c:	aa000004 	bge	4001c054 <CyU3PSetEpConfig+0xc8>
4001c040:	e1d500b8 	ldrh	r0, [r5, #8]
4001c044:	e3500000 	cmp	r0, #0
4001c048:	0a000001 	beq	4001c054 <CyU3PSetEpConfig+0xc8>
4001c04c:	e3a00040 	mov	r0, #64	; 0x40
4001c050:	eaffffda 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c054:	e5d50004 	ldrb	r0, [r5, #4]
4001c058:	e1a00f00 	lsl	r0, r0, #30
4001c05c:	e1a08a20 	lsr	r8, r0, #20
4001c060:	e5d50004 	ldrb	r0, [r5, #4]
4001c064:	e2000003 	and	r0, r0, #3
4001c068:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c540 <CyU3PSetEpConfig+0x5b4>
4001c06c:	e7d1a000 	ldrb	sl, [r1, r0]
4001c070:	e5d5000a 	ldrb	r0, [r5, #10]
4001c074:	e3500000 	cmp	r0, #0
4001c078:	0a000004 	beq	4001c090 <CyU3PSetEpConfig+0x104>
4001c07c:	e5d5000a 	ldrb	r0, [r5, #10]
4001c080:	e2400001 	sub	r0, r0, #1
4001c084:	e200000f 	and	r0, r0, #15
4001c088:	e18aa400 	orr	sl, sl, r0, lsl #8
4001c08c:	ea000001 	b	4001c098 <CyU3PSetEpConfig+0x10c>
4001c090:	e3a00001 	mov	r0, #1
4001c094:	e5c5000a 	strb	r0, [r5, #10]
4001c098:	e5d50004 	ldrb	r0, [r5, #4]
4001c09c:	e3500001 	cmp	r0, #1
4001c0a0:	1a000013 	bne	4001c0f4 <CyU3PSetEpConfig+0x168>
4001c0a4:	e5950000 	ldr	r0, [r5]
4001c0a8:	e3500000 	cmp	r0, #0
4001c0ac:	0a000010 	beq	4001c0f4 <CyU3PSetEpConfig+0x168>
4001c0b0:	e5d5000b 	ldrb	r0, [r5, #11]
4001c0b4:	e2000003 	and	r0, r0, #3
4001c0b8:	e1888600 	orr	r8, r8, r0, lsl #12
4001c0bc:	e5d5000a 	ldrb	r0, [r5, #10]
4001c0c0:	e5d5100b 	ldrb	r1, [r5, #11]
4001c0c4:	e1600180 	smulbb	r0, r0, r1
4001c0c8:	e200003f 	and	r0, r0, #63	; 0x3f
4001c0cc:	e18aa100 	orr	sl, sl, r0, lsl #2
4001c0d0:	e5d5000b 	ldrb	r0, [r5, #11]
4001c0d4:	e3500001 	cmp	r0, #1
4001c0d8:	da000005 	ble	4001c0f4 <CyU3PSetEpConfig+0x168>
4001c0dc:	e3560003 	cmp	r6, #3
4001c0e0:	0a000003 	beq	4001c0f4 <CyU3PSetEpConfig+0x168>
4001c0e4:	e3560007 	cmp	r6, #7
4001c0e8:	0a000001 	beq	4001c0f4 <CyU3PSetEpConfig+0x168>
4001c0ec:	e3a0004d 	mov	r0, #77	; 0x4d
4001c0f0:	eaffffb2 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c0f4:	e1d500b8 	ldrh	r0, [r5, #8]
4001c0f8:	e3500000 	cmp	r0, #0
4001c0fc:	0a000004 	beq	4001c114 <CyU3PSetEpConfig+0x188>
4001c100:	e1d500b8 	ldrh	r0, [r5, #8]
4001c104:	e3500b01 	cmp	r0, #1024	; 0x400
4001c108:	ca000001 	bgt	4001c114 <CyU3PSetEpConfig+0x188>
4001c10c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c110:	ea000000 	b	4001c118 <CyU3PSetEpConfig+0x18c>
4001c114:	e3a00b01 	mov	r0, #1024	; 0x400
4001c118:	e1a07800 	lsl	r7, r0, #16
4001c11c:	e1a07827 	lsr	r7, r7, #16
4001c120:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c53c <CyU3PSetEpConfig+0x5b0>
4001c124:	e5d00008 	ldrb	r0, [r0, #8]
4001c128:	e3500005 	cmp	r0, #5
4001c12c:	da00001e 	ble	4001c1ac <CyU3PSetEpConfig+0x220>
4001c130:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c53c <CyU3PSetEpConfig+0x5b0>
4001c134:	e5d00009 	ldrb	r0, [r0, #9]
4001c138:	e3500001 	cmp	r0, #1
4001c13c:	0a000008 	beq	4001c164 <CyU3PSetEpConfig+0x1d8>
4001c140:	e3500002 	cmp	r0, #2
4001c144:	1a000015 	bne	4001c1a0 <CyU3PSetEpConfig+0x214>
4001c148:	e5d50004 	ldrb	r0, [r5, #4]
4001c14c:	e3500002 	cmp	r0, #2
4001c150:	1a000002 	bne	4001c160 <CyU3PSetEpConfig+0x1d4>
4001c154:	e3570c02 	cmp	r7, #512	; 0x200
4001c158:	da000000 	ble	4001c160 <CyU3PSetEpConfig+0x1d4>
4001c15c:	e3a07c02 	mov	r7, #512	; 0x200
4001c160:	ea000010 	b	4001c1a8 <CyU3PSetEpConfig+0x21c>
4001c164:	e1a00000 	nop			; (mov r0, r0)
4001c168:	e5d50004 	ldrb	r0, [r5, #4]
4001c16c:	e3500001 	cmp	r0, #1
4001c170:	1a000003 	bne	4001c184 <CyU3PSetEpConfig+0x1f8>
4001c174:	e3570b01 	cmp	r7, #1024	; 0x400
4001c178:	ba000001 	blt	4001c184 <CyU3PSetEpConfig+0x1f8>
4001c17c:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c544 <CyU3PSetEpConfig+0x5b8>
4001c180:	ea000005 	b	4001c19c <CyU3PSetEpConfig+0x210>
4001c184:	e5d50004 	ldrb	r0, [r5, #4]
4001c188:	e3500001 	cmp	r0, #1
4001c18c:	0a000002 	beq	4001c19c <CyU3PSetEpConfig+0x210>
4001c190:	e3570040 	cmp	r7, #64	; 0x40
4001c194:	da000000 	ble	4001c19c <CyU3PSetEpConfig+0x210>
4001c198:	e3a07040 	mov	r7, #64	; 0x40
4001c19c:	ea000001 	b	4001c1a8 <CyU3PSetEpConfig+0x21c>
4001c1a0:	e1a00000 	nop			; (mov r0, r0)
4001c1a4:	e1a00000 	nop			; (mov r0, r0)
4001c1a8:	e1a00000 	nop			; (mov r0, r0)
4001c1ac:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c1b0:	e1888000 	orr	r8, r8, r0
4001c1b4:	e3e01000 	mvn	r1, #0
4001c1b8:	e59f0388 	ldr	r0, [pc, #904]	; 4001c548 <CyU3PSetEpConfig+0x5bc>
4001c1bc:	ebffb7b0 	bl	4000a084 <_txe_mutex_get>
4001c1c0:	e3140080 	tst	r4, #128	; 0x80
4001c1c4:	0a000062 	beq	4001c354 <CyU3PSetEpConfig+0x3c8>
4001c1c8:	e5950000 	ldr	r0, [r5]
4001c1cc:	e3500000 	cmp	r0, #0
4001c1d0:	1a00001d 	bne	4001c24c <CyU3PSetEpConfig+0x2c0>
4001c1d4:	e59f0370 	ldr	r0, [pc, #880]	; 4001c54c <CyU3PSetEpConfig+0x5c0>
4001c1d8:	e59f1370 	ldr	r1, [pc, #880]	; 4001c550 <CyU3PSetEpConfig+0x5c4>
4001c1dc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1e0:	e3a00020 	mov	r0, #32
4001c1e4:	e59f1368 	ldr	r1, [pc, #872]	; 4001c554 <CyU3PSetEpConfig+0x5c8>
4001c1e8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1ec:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c1f0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1f4:	e3a01001 	mov	r1, #1
4001c1f8:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c1fc:	e59f1354 	ldr	r1, [pc, #852]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c200:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c204:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c208:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c20c:	e3a01001 	mov	r1, #1
4001c210:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c214:	e59f1340 	ldr	r1, [pc, #832]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c218:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c21c:	e3a00000 	mov	r0, #0
4001c220:	e0861086 	add	r1, r6, r6, lsl #1
4001c224:	e59f2334 	ldr	r2, [pc, #820]	; 4001c560 <CyU3PSetEpConfig+0x5d4>
4001c228:	e0821101 	add	r1, r2, r1, lsl #2
4001c22c:	e5810004 	str	r0, [r1, #4]
4001c230:	e0861086 	add	r1, r6, r6, lsl #1
4001c234:	e0821101 	add	r1, r2, r1, lsl #2
4001c238:	e5810008 	str	r0, [r1, #8]
4001c23c:	e59f0304 	ldr	r0, [pc, #772]	; 4001c548 <CyU3PSetEpConfig+0x5bc>
4001c240:	ebffb7c4 	bl	4000a158 <_txe_mutex_put>
4001c244:	e3a00000 	mov	r0, #0
4001c248:	eaffff5c 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c24c:	e3a00001 	mov	r0, #1
4001c250:	e0861086 	add	r1, r6, r6, lsl #1
4001c254:	e59f2304 	ldr	r2, [pc, #772]	; 4001c560 <CyU3PSetEpConfig+0x5d4>
4001c258:	e0821101 	add	r1, r2, r1, lsl #2
4001c25c:	e5810004 	str	r0, [r1, #4]
4001c260:	e0861086 	add	r1, r6, r6, lsl #1
4001c264:	e0821101 	add	r1, r2, r1, lsl #2
4001c268:	e5810008 	str	r0, [r1, #8]
4001c26c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c270:	e0861086 	add	r1, r6, r6, lsl #1
4001c274:	e0821101 	add	r1, r2, r1, lsl #2
4001c278:	e1c100b0 	strh	r0, [r1]
4001c27c:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c564 <CyU3PSetEpConfig+0x5d8>
4001c280:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c284:	e5d50004 	ldrb	r0, [r5, #4]
4001c288:	e3500002 	cmp	r0, #2
4001c28c:	1a000007 	bne	4001c2b0 <CyU3PSetEpConfig+0x324>
4001c290:	e1d500b6 	ldrh	r0, [r5, #6]
4001c294:	e3500000 	cmp	r0, #0
4001c298:	da000004 	ble	4001c2b0 <CyU3PSetEpConfig+0x324>
4001c29c:	e3a02001 	mov	r2, #1
4001c2a0:	e1a01006 	mov	r1, r6
4001c2a4:	e1a00004 	mov	r0, r4
4001c2a8:	eb00031b 	bl	4001cf1c <CyU3PUsbMapStream>
4001c2ac:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c568 <CyU3PSetEpConfig+0x5dc>
4001c2b0:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c2b4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c2b8:	e3a01001 	mov	r1, #1
4001c2bc:	e1800611 	orr	r0, r0, r1, lsl r6
4001c2c0:	e59f1290 	ldr	r1, [pc, #656]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c2c4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c2c8:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c2cc:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c2d0:	e59f1278 	ldr	r1, [pc, #632]	; 4001c550 <CyU3PSetEpConfig+0x5c4>
4001c2d4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c2d8:	e3890001 	orr	r0, r9, #1
4001c2dc:	e59f1270 	ldr	r1, [pc, #624]	; 4001c554 <CyU3PSetEpConfig+0x5c8>
4001c2e0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c2e4:	e2810040 	add	r0, r1, #64	; 0x40
4001c2e8:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c2ec:	e59f0278 	ldr	r0, [pc, #632]	; 4001c56c <CyU3PSetEpConfig+0x5e0>
4001c2f0:	e5900000 	ldr	r0, [r0]
4001c2f4:	e3500000 	cmp	r0, #0
4001c2f8:	0a00007f 	beq	4001c4fc <CyU3PSetEpConfig+0x570>
4001c2fc:	e3a00001 	mov	r0, #1
4001c300:	e59f1268 	ldr	r1, [pc, #616]	; 4001c570 <CyU3PSetEpConfig+0x5e4>
4001c304:	e5911000 	ldr	r1, [r1]
4001c308:	e1110610 	tst	r1, r0, lsl r6
4001c30c:	0a00007a 	beq	4001c4fc <CyU3PSetEpConfig+0x570>
4001c310:	e59f0244 	ldr	r0, [pc, #580]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c314:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c318:	e3a01001 	mov	r1, #1
4001c31c:	e1800611 	orr	r0, r0, r1, lsl r6
4001c320:	e59f1234 	ldr	r1, [pc, #564]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c324:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c328:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c32c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c330:	e3a01001 	mov	r1, #1
4001c334:	e1800611 	orr	r0, r0, r1, lsl r6
4001c338:	e59f1218 	ldr	r1, [pc, #536]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c33c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c340:	e59f0224 	ldr	r0, [pc, #548]	; 4001c56c <CyU3PSetEpConfig+0x5e0>
4001c344:	e5901000 	ldr	r1, [r0]
4001c348:	e1a00004 	mov	r0, r4
4001c34c:	eb0001ba 	bl	4001ca3c <CyU3PUsbEnableEpInterrupts>
4001c350:	ea000069 	b	4001c4fc <CyU3PSetEpConfig+0x570>
4001c354:	e5950000 	ldr	r0, [r5]
4001c358:	e3500000 	cmp	r0, #0
4001c35c:	1a00001e 	bne	4001c3dc <CyU3PSetEpConfig+0x450>
4001c360:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c54c <CyU3PSetEpConfig+0x5c0>
4001c364:	e59f1208 	ldr	r1, [pc, #520]	; 4001c574 <CyU3PSetEpConfig+0x5e8>
4001c368:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c36c:	e3a00020 	mov	r0, #32
4001c370:	e59f1200 	ldr	r1, [pc, #512]	; 4001c578 <CyU3PSetEpConfig+0x5ec>
4001c374:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c378:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c37c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c380:	e2861010 	add	r1, r6, #16
4001c384:	e3a02001 	mov	r2, #1
4001c388:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c38c:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c390:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c394:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c398:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c39c:	e2861010 	add	r1, r6, #16
4001c3a0:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c3a4:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c3a8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c3ac:	e3a00000 	mov	r0, #0
4001c3b0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3b4:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c57c <CyU3PSetEpConfig+0x5f0>
4001c3b8:	e0821101 	add	r1, r2, r1, lsl #2
4001c3bc:	e5810004 	str	r0, [r1, #4]
4001c3c0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3c4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3c8:	e5810008 	str	r0, [r1, #8]
4001c3cc:	e59f0174 	ldr	r0, [pc, #372]	; 4001c548 <CyU3PSetEpConfig+0x5bc>
4001c3d0:	ebffb760 	bl	4000a158 <_txe_mutex_put>
4001c3d4:	e3a00000 	mov	r0, #0
4001c3d8:	eafffef8 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c3dc:	e3a00001 	mov	r0, #1
4001c3e0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3e4:	e59f2190 	ldr	r2, [pc, #400]	; 4001c57c <CyU3PSetEpConfig+0x5f0>
4001c3e8:	e0821101 	add	r1, r2, r1, lsl #2
4001c3ec:	e5810004 	str	r0, [r1, #4]
4001c3f0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3f4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3f8:	e5810008 	str	r0, [r1, #8]
4001c3fc:	e1d500b8 	ldrh	r0, [r5, #8]
4001c400:	e0861086 	add	r1, r6, r6, lsl #1
4001c404:	e0821101 	add	r1, r2, r1, lsl #2
4001c408:	e1c100b0 	strh	r0, [r1]
4001c40c:	e59f016c 	ldr	r0, [pc, #364]	; 4001c580 <CyU3PSetEpConfig+0x5f4>
4001c410:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c414:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c418:	e1800007 	orr	r0, r0, r7
4001c41c:	e59f115c 	ldr	r1, [pc, #348]	; 4001c580 <CyU3PSetEpConfig+0x5f4>
4001c420:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c424:	e5d50004 	ldrb	r0, [r5, #4]
4001c428:	e3500002 	cmp	r0, #2
4001c42c:	1a00000e 	bne	4001c46c <CyU3PSetEpConfig+0x4e0>
4001c430:	e1d500b6 	ldrh	r0, [r5, #6]
4001c434:	e3500000 	cmp	r0, #0
4001c438:	da00000b 	ble	4001c46c <CyU3PSetEpConfig+0x4e0>
4001c43c:	e3a02001 	mov	r2, #1
4001c440:	e1a01006 	mov	r1, r6
4001c444:	e1a00004 	mov	r0, r4
4001c448:	eb0002b3 	bl	4001cf1c <CyU3PUsbMapStream>
4001c44c:	e59f0104 	ldr	r0, [pc, #260]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c450:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c454:	e2861010 	add	r1, r6, #16
4001c458:	e3a02001 	mov	r2, #1
4001c45c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c460:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c464:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c468:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c568 <CyU3PSetEpConfig+0x5dc>
4001c46c:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c470:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c574 <CyU3PSetEpConfig+0x5e8>
4001c474:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c478:	e3890001 	orr	r0, r9, #1
4001c47c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c578 <CyU3PSetEpConfig+0x5ec>
4001c480:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c484:	e2810040 	add	r0, r1, #64	; 0x40
4001c488:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c48c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c56c <CyU3PSetEpConfig+0x5e0>
4001c490:	e5900000 	ldr	r0, [r0]
4001c494:	e3500000 	cmp	r0, #0
4001c498:	0a000017 	beq	4001c4fc <CyU3PSetEpConfig+0x570>
4001c49c:	e2860010 	add	r0, r6, #16
4001c4a0:	e3a01001 	mov	r1, #1
4001c4a4:	e1a00011 	lsl	r0, r1, r0
4001c4a8:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c570 <CyU3PSetEpConfig+0x5e4>
4001c4ac:	e5911000 	ldr	r1, [r1]
4001c4b0:	e1100001 	tst	r0, r1
4001c4b4:	0a000010 	beq	4001c4fc <CyU3PSetEpConfig+0x570>
4001c4b8:	e59f009c 	ldr	r0, [pc, #156]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c4bc:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c4c0:	e2861010 	add	r1, r6, #16
4001c4c4:	e3a02001 	mov	r2, #1
4001c4c8:	e1800112 	orr	r0, r0, r2, lsl r1
4001c4cc:	e59f1088 	ldr	r1, [pc, #136]	; 4001c55c <CyU3PSetEpConfig+0x5d0>
4001c4d0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c4d4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c4d8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c4dc:	e2861010 	add	r1, r6, #16
4001c4e0:	e1800112 	orr	r0, r0, r2, lsl r1
4001c4e4:	e59f106c 	ldr	r1, [pc, #108]	; 4001c558 <CyU3PSetEpConfig+0x5cc>
4001c4e8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c4ec:	e59f0078 	ldr	r0, [pc, #120]	; 4001c56c <CyU3PSetEpConfig+0x5e0>
4001c4f0:	e5901000 	ldr	r1, [r0]
4001c4f4:	e1a00004 	mov	r0, r4
4001c4f8:	eb00014f 	bl	4001ca3c <CyU3PUsbEnableEpInterrupts>
4001c4fc:	e59f0038 	ldr	r0, [pc, #56]	; 4001c53c <CyU3PSetEpConfig+0x5b0>
4001c500:	e5d00008 	ldrb	r0, [r0, #8]
4001c504:	e3500005 	cmp	r0, #5
4001c508:	ba000007 	blt	4001c52c <CyU3PSetEpConfig+0x5a0>
4001c50c:	e1a00004 	mov	r0, r4
4001c510:	eb00040e 	bl	4001d550 <CyU3PUsbResetEp>
4001c514:	e1a00004 	mov	r0, r4
4001c518:	eb0001a4 	bl	4001cbb0 <CyU3PUsbFlushEp>
4001c51c:	e3a02001 	mov	r2, #1
4001c520:	e3a01000 	mov	r1, #0
4001c524:	e1a00004 	mov	r0, r4
4001c528:	eb00066c 	bl	4001dee0 <CyU3PUsbStall>
4001c52c:	e59f0014 	ldr	r0, [pc, #20]	; 4001c548 <CyU3PSetEpConfig+0x5bc>
4001c530:	ebffb708 	bl	4000a158 <_txe_mutex_put>
4001c534:	e3a00000 	mov	r0, #0
4001c538:	eafffea0 	b	4001bfc0 <CyU3PSetEpConfig+0x34>
4001c53c:	400321c0 	.word	0x400321c0
4001c540:	40012048 	.word	0x40012048
4001c544:	000003ff 	.word	0x000003ff
4001c548:	40032360 	.word	0x40032360
4001c54c:	00004040 	.word	0x00004040
4001c550:	e0031418 	.word	0xe0031418
4001c554:	e0033500 	.word	0xe0033500
4001c558:	e0033000 	.word	0xe0033000
4001c55c:	e0031000 	.word	0xe0031000
4001c560:	40032038 	.word	0x40032038
4001c564:	e0031c40 	.word	0xe0031c40
4001c568:	00400028 	.word	0x00400028
4001c56c:	40031208 	.word	0x40031208
4001c570:	4003120c 	.word	0x4003120c
4001c574:	e0031498 	.word	0xe0031498
4001c578:	e0033600 	.word	0xe0033600
4001c57c:	400320f8 	.word	0x400320f8
4001c580:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c584 <CyU3PSetUsbCoreClock>:
4001c584:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c588:	e1a04000 	mov	r4, r0
4001c58c:	e1a05001 	mov	r5, r1
4001c590:	eb0016d5 	bl	400220ec <CyU3PVicDisableAllInterrupts>
4001c594:	e1a06000 	mov	r6, r0
4001c598:	e59f0064 	ldr	r0, [pc, #100]	; 4001c604 <CyU3PSetUsbCoreClock+0x80>
4001c59c:	e5900008 	ldr	r0, [r0, #8]
4001c5a0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c5a4:	e59f1058 	ldr	r1, [pc, #88]	; 4001c604 <CyU3PSetUsbCoreClock+0x80>
4001c5a8:	e5810008 	str	r0, [r1, #8]
4001c5ac:	e3a07014 	mov	r7, #20
4001c5b0:	ea000001 	b	4001c5bc <CyU3PSetUsbCoreClock+0x38>
4001c5b4:	e1a00000 	nop			; (mov r0, r0)
4001c5b8:	e2477001 	sub	r7, r7, #1
4001c5bc:	e3570000 	cmp	r7, #0
4001c5c0:	1afffffb 	bne	4001c5b4 <CyU3PSetUsbCoreClock+0x30>
4001c5c4:	e1850104 	orr	r0, r5, r4, lsl #2
4001c5c8:	e59f1034 	ldr	r1, [pc, #52]	; 4001c604 <CyU3PSetUsbCoreClock+0x80>
4001c5cc:	e5810008 	str	r0, [r1, #8]
4001c5d0:	e1a00001 	mov	r0, r1
4001c5d4:	e5900008 	ldr	r0, [r0, #8]
4001c5d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c5dc:	e5810008 	str	r0, [r1, #8]
4001c5e0:	e3a07050 	mov	r7, #80	; 0x50
4001c5e4:	ea000001 	b	4001c5f0 <CyU3PSetUsbCoreClock+0x6c>
4001c5e8:	e1a00000 	nop			; (mov r0, r0)
4001c5ec:	e2477001 	sub	r7, r7, #1
4001c5f0:	e3570000 	cmp	r7, #0
4001c5f4:	1afffffb 	bne	4001c5e8 <CyU3PSetUsbCoreClock+0x64>
4001c5f8:	e1a00006 	mov	r0, r6
4001c5fc:	eb0016c8 	bl	40022124 <CyU3PVicEnableInterrupts>
4001c600:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c604:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c608 <CyU3PUibInit>:
4001c608:	e92d4010 	push	{r4, lr}
4001c60c:	e3a04000 	mov	r4, #0
4001c610:	e3a00000 	mov	r0, #0
4001c614:	e59f117c 	ldr	r1, [pc, #380]	; 4001c798 <CyU3PUibInit+0x190>
4001c618:	e5810004 	str	r0, [r1, #4]
4001c61c:	e5810008 	str	r0, [r1, #8]
4001c620:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c624:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c628:	e581001c 	str	r0, [r1, #28]
4001c62c:	e3e00000 	mvn	r0, #0
4001c630:	e581000c 	str	r0, [r1, #12]
4001c634:	e5810004 	str	r0, [r1, #4]
4001c638:	e59f015c 	ldr	r0, [pc, #348]	; 4001c79c <CyU3PUibInit+0x194>
4001c63c:	e5810008 	str	r0, [r1, #8]
4001c640:	e3a00000 	mov	r0, #0
4001c644:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c648:	e3e00000 	mvn	r0, #0
4001c64c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c650:	e59f0148 	ldr	r0, [pc, #328]	; 4001c7a0 <CyU3PUibInit+0x198>
4001c654:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c658:	eb0016c4 	bl	40022170 <CyFx3Usb2PhySetup>
4001c65c:	e3e00000 	mvn	r0, #0
4001c660:	e59f113c 	ldr	r1, [pc, #316]	; 4001c7a4 <CyU3PUibInit+0x19c>
4001c664:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c668:	e59f0138 	ldr	r0, [pc, #312]	; 4001c7a8 <CyU3PUibInit+0x1a0>
4001c66c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c670:	e3e00000 	mvn	r0, #0
4001c674:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c678:	e3a00000 	mov	r0, #0
4001c67c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c680:	e3a00001 	mov	r0, #1
4001c684:	e1811680 	orr	r1, r1, r0, lsl #13
4001c688:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c68c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c690:	e3a00043 	mov	r0, #67	; 0x43
4001c694:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c698:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c69c:	e59f0108 	ldr	r0, [pc, #264]	; 4001c7ac <CyU3PUibInit+0x1a4>
4001c6a0:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c6a4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c6a8:	e3a00040 	mov	r0, #64	; 0x40
4001c6ac:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c6b0:	e1800400 	orr	r0, r0, r0, lsl #8
4001c6b4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c6b8:	e3a00040 	mov	r0, #64	; 0x40
4001c6bc:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c6c0:	e3a04001 	mov	r4, #1
4001c6c4:	ea000015 	b	4001c720 <CyU3PUibInit+0x118>
4001c6c8:	e1a00004 	mov	r0, r4
4001c6cc:	eb000137 	bl	4001cbb0 <CyU3PUsbFlushEp>
4001c6d0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c7b0 <CyU3PUibInit+0x1a8>
4001c6d4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c6d8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c6dc:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c7b0 <CyU3PUibInit+0x1a8>
4001c6e0:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c6e4:	e3a00000 	mov	r0, #0
4001c6e8:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c7b4 <CyU3PUibInit+0x1ac>
4001c6ec:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c6f0:	e3840080 	orr	r0, r4, #128	; 0x80
4001c6f4:	eb00012d 	bl	4001cbb0 <CyU3PUsbFlushEp>
4001c6f8:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c7b8 <CyU3PUibInit+0x1b0>
4001c6fc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c700:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c704:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c7b8 <CyU3PUibInit+0x1b0>
4001c708:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c70c:	e3a00000 	mov	r0, #0
4001c710:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c7bc <CyU3PUibInit+0x1b4>
4001c714:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c718:	e2840001 	add	r0, r4, #1
4001c71c:	e20040ff 	and	r4, r0, #255	; 0xff
4001c720:	e3540010 	cmp	r4, #16
4001c724:	baffffe7 	blt	4001c6c8 <CyU3PUibInit+0xc0>
4001c728:	e59f0090 	ldr	r0, [pc, #144]	; 4001c7c0 <CyU3PUibInit+0x1b8>
4001c72c:	e5900004 	ldr	r0, [r0, #4]
4001c730:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c734:	e59f1084 	ldr	r1, [pc, #132]	; 4001c7c0 <CyU3PUibInit+0x1b8>
4001c738:	e5810004 	str	r0, [r1, #4]
4001c73c:	e3e00000 	mvn	r0, #0
4001c740:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c744:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c748:	e3a00b01 	mov	r0, #1024	; 0x400
4001c74c:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c750:	e59f106c 	ldr	r1, [pc, #108]	; 4001c7c4 <CyU3PUibInit+0x1bc>
4001c754:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c758:	e3a00015 	mov	r0, #21
4001c75c:	eb00166b 	bl	40022110 <CyU3PVicEnableInt>
4001c760:	e59f0060 	ldr	r0, [pc, #96]	; 4001c7c8 <CyU3PUibInit+0x1c0>
4001c764:	e5900000 	ldr	r0, [r0]
4001c768:	e3500000 	cmp	r0, #0
4001c76c:	0a000008 	beq	4001c794 <CyU3PUibInit+0x18c>
4001c770:	e59f0054 	ldr	r0, [pc, #84]	; 4001c7cc <CyU3PUibInit+0x1c4>
4001c774:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c778:	e3100b01 	tst	r0, #1024	; 0x400
4001c77c:	0a000004 	beq	4001c794 <CyU3PUibInit+0x18c>
4001c780:	e3a01000 	mov	r1, #0
4001c784:	e3a0000b 	mov	r0, #11
4001c788:	e59f2038 	ldr	r2, [pc, #56]	; 4001c7c8 <CyU3PUibInit+0x1c0>
4001c78c:	e5922000 	ldr	r2, [r2]
4001c790:	e12fff32 	blx	r2
4001c794:	e8bd8010 	pop	{r4, pc}
4001c798:	e0050000 	.word	0xe0050000
4001c79c:	00038081 	.word	0x00038081
4001c7a0:	00004a3d 	.word	0x00004a3d
4001c7a4:	e0031000 	.word	0xe0031000
4001c7a8:	0000095c 	.word	0x0000095c
4001c7ac:	00004040 	.word	0x00004040
4001c7b0:	e0031498 	.word	0xe0031498
4001c7b4:	e0033600 	.word	0xe0033600
4001c7b8:	e0031418 	.word	0xe0031418
4001c7bc:	e0033500 	.word	0xe0033500
4001c7c0:	e0030000 	.word	0xe0030000
4001c7c4:	400321c0 	.word	0x400321c0
4001c7c8:	40031228 	.word	0x40031228
4001c7cc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c7d0 <CyU3PUsbAckSetup>:
4001c7d0:	e92d4010 	push	{r4, lr}
4001c7d4:	e3e01000 	mvn	r1, #0
4001c7d8:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c8dc <CyU3PUsbAckSetup+0x10c>
4001c7dc:	ebffb628 	bl	4000a084 <_txe_mutex_get>
4001c7e0:	eb000780 	bl	4001e5e8 <GetUsbLinkActive>
4001c7e4:	eb00019e 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c7e8:	e3500000 	cmp	r0, #0
4001c7ec:	0a000002 	beq	4001c7fc <CyU3PUsbAckSetup+0x2c>
4001c7f0:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c8dc <CyU3PUsbAckSetup+0x10c>
4001c7f4:	ebffb657 	bl	4000a158 <_txe_mutex_put>
4001c7f8:	e8bd8010 	pop	{r4, pc}
4001c7fc:	e3a00000 	mov	r0, #0
4001c800:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c8e0 <CyU3PUsbAckSetup+0x110>
4001c804:	e5810014 	str	r0, [r1, #20]
4001c808:	e2810000 	add	r0, r1, #0
4001c80c:	e5d00009 	ldrb	r0, [r0, #9]
4001c810:	e3500003 	cmp	r0, #3
4001c814:	1a000026 	bne	4001c8b4 <CyU3PUsbAckSetup+0xe4>
4001c818:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c8e4 <CyU3PUsbAckSetup+0x114>
4001c81c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c820:	e3c00004 	bic	r0, r0, #4
4001c824:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c8e4 <CyU3PUsbAckSetup+0x114>
4001c828:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c82c:	e1a00001 	mov	r0, r1
4001c830:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c834:	e3c00004 	bic	r0, r0, #4
4001c838:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c83c:	eb00162a 	bl	400220ec <CyU3PVicDisableAllInterrupts>
4001c840:	e1a04000 	mov	r4, r0
4001c844:	e3a00001 	mov	r0, #1
4001c848:	ebffdbad 	bl	40013704 <CyU3PBusyWait>
4001c84c:	e59f0090 	ldr	r0, [pc, #144]	; 4001c8e4 <CyU3PUsbAckSetup+0x114>
4001c850:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c854:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c858:	e59f1084 	ldr	r1, [pc, #132]	; 4001c8e4 <CyU3PUsbAckSetup+0x114>
4001c85c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c860:	e1a00004 	mov	r0, r4
4001c864:	eb00162e 	bl	40022124 <CyU3PVicEnableInterrupts>
4001c868:	e3a00c02 	mov	r0, #512	; 0x200
4001c86c:	e59f1074 	ldr	r1, [pc, #116]	; 4001c8e8 <CyU3PUsbAckSetup+0x118>
4001c870:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c874:	e3a00016 	mov	r0, #22
4001c878:	eb000ced 	bl	4001fc34 <CyU3PUsbAddToEventLog>
4001c87c:	e59f005c 	ldr	r0, [pc, #92]	; 4001c8e0 <CyU3PUsbAckSetup+0x110>
4001c880:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c884:	e3500000 	cmp	r0, #0
4001c888:	1a000010 	bne	4001c8d0 <CyU3PUsbAckSetup+0x100>
4001c88c:	e3a00001 	mov	r0, #1
4001c890:	e59f1054 	ldr	r1, [pc, #84]	; 4001c8ec <CyU3PUsbAckSetup+0x11c>
4001c894:	e5810000 	str	r0, [r1]
4001c898:	e3a02000 	mov	r2, #0
4001c89c:	e3a01064 	mov	r1, #100	; 0x64
4001c8a0:	e59f0048 	ldr	r0, [pc, #72]	; 4001c8f0 <CyU3PUsbAckSetup+0x120>
4001c8a4:	ebffb844 	bl	4000a9bc <_txe_timer_change>
4001c8a8:	e59f0040 	ldr	r0, [pc, #64]	; 4001c8f0 <CyU3PUsbAckSetup+0x120>
4001c8ac:	ebffb832 	bl	4000a97c <_txe_timer_activate>
4001c8b0:	ea000006 	b	4001c8d0 <CyU3PUsbAckSetup+0x100>
4001c8b4:	e59f002c 	ldr	r0, [pc, #44]	; 4001c8e8 <CyU3PUsbAckSetup+0x118>
4001c8b8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c8bc:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c8c0:	e59f1020 	ldr	r1, [pc, #32]	; 4001c8e8 <CyU3PUsbAckSetup+0x118>
4001c8c4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c8c8:	e3a00040 	mov	r0, #64	; 0x40
4001c8cc:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c8d0:	e59f0004 	ldr	r0, [pc, #4]	; 4001c8dc <CyU3PUsbAckSetup+0x10c>
4001c8d4:	ebffb61f 	bl	4000a158 <_txe_mutex_put>
4001c8d8:	eaffffc6 	b	4001c7f8 <CyU3PUsbAckSetup+0x28>
4001c8dc:	40032360 	.word	0x40032360
4001c8e0:	400321c0 	.word	0x400321c0
4001c8e4:	e0033000 	.word	0xe0033000
4001c8e8:	e0031000 	.word	0xe0031000
4001c8ec:	4003123c 	.word	0x4003123c
4001c8f0:	40032b20 	.word	0x40032b20

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c8f4 <CyU3PUsbCreateDmaChannels>:
4001c8f4:	e92d4010 	push	{r4, lr}
4001c8f8:	e24dd020 	sub	sp, sp, #32
4001c8fc:	e3a00c02 	mov	r0, #512	; 0x200
4001c900:	e1cd00b4 	strh	r0, [sp, #4]
4001c904:	e3a00001 	mov	r0, #1
4001c908:	e1cd00b6 	strh	r0, [sp, #6]
4001c90c:	e3a00000 	mov	r0, #0
4001c910:	e1cd00bc 	strh	r0, [sp, #12]
4001c914:	e3a00c03 	mov	r0, #768	; 0x300
4001c918:	e1cd00ba 	strh	r0, [sp, #10]
4001c91c:	e3a00000 	mov	r0, #0
4001c920:	e5cd0014 	strb	r0, [sp, #20]
4001c924:	e1cd00be 	strh	r0, [sp, #14]
4001c928:	e1cd01b0 	strh	r0, [sp, #16]
4001c92c:	e1cd01b2 	strh	r0, [sp, #18]
4001c930:	e58d0018 	str	r0, [sp, #24]
4001c934:	e58d001c 	str	r0, [sp, #28]
4001c938:	e59f00ec 	ldr	r0, [pc, #236]	; 4001ca2c <CyU3PUsbCreateDmaChannels+0x138>
4001c93c:	e1cd00b8 	strh	r0, [sp, #8]
4001c940:	e28d2004 	add	r2, sp, #4
4001c944:	e3a01004 	mov	r1, #4
4001c948:	e59f00e0 	ldr	r0, [pc, #224]	; 4001ca30 <CyU3PUsbCreateDmaChannels+0x13c>
4001c94c:	ebffe411 	bl	40015998 <CyU3PDmaChannelCreate>
4001c950:	e1a04000 	mov	r4, r0
4001c954:	e3540000 	cmp	r4, #0
4001c958:	0a000002 	beq	4001c968 <CyU3PUsbCreateDmaChannels+0x74>
4001c95c:	e3a0004e 	mov	r0, #78	; 0x4e
4001c960:	e28dd020 	add	sp, sp, #32
4001c964:	e8bd8010 	pop	{r4, pc}
4001c968:	e59f00c4 	ldr	r0, [pc, #196]	; 4001ca34 <CyU3PUsbCreateDmaChannels+0x140>
4001c96c:	e5900000 	ldr	r0, [r0]
4001c970:	e3500000 	cmp	r0, #0
4001c974:	0a000009 	beq	4001c9a0 <CyU3PUsbCreateDmaChannels+0xac>
4001c978:	e3a01001 	mov	r1, #1
4001c97c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001ca30 <CyU3PUsbCreateDmaChannels+0x13c>
4001c980:	ebffe274 	bl	40015358 <CyU3PDmaChannelCacheControl>
4001c984:	e1a04000 	mov	r4, r0
4001c988:	e3540000 	cmp	r4, #0
4001c98c:	0a000003 	beq	4001c9a0 <CyU3PUsbCreateDmaChannels+0xac>
4001c990:	e59f0098 	ldr	r0, [pc, #152]	; 4001ca30 <CyU3PUsbCreateDmaChannels+0x13c>
4001c994:	ebffe4f9 	bl	40015d80 <CyU3PDmaChannelDestroy>
4001c998:	e3a0004e 	mov	r0, #78	; 0x4e
4001c99c:	eaffffef 	b	4001c960 <CyU3PUsbCreateDmaChannels+0x6c>
4001c9a0:	e3a00b01 	mov	r0, #1024	; 0x400
4001c9a4:	e1cd00b8 	strh	r0, [sp, #8]
4001c9a8:	e3a00000 	mov	r0, #0
4001c9ac:	e58d001c 	str	r0, [sp, #28]
4001c9b0:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c9b4:	e1cd00ba 	strh	r0, [sp, #10]
4001c9b8:	e28d2004 	add	r2, sp, #4
4001c9bc:	e3a01003 	mov	r1, #3
4001c9c0:	e59f0070 	ldr	r0, [pc, #112]	; 4001ca38 <CyU3PUsbCreateDmaChannels+0x144>
4001c9c4:	ebffe3f3 	bl	40015998 <CyU3PDmaChannelCreate>
4001c9c8:	e1a04000 	mov	r4, r0
4001c9cc:	e3540000 	cmp	r4, #0
4001c9d0:	0a000003 	beq	4001c9e4 <CyU3PUsbCreateDmaChannels+0xf0>
4001c9d4:	e59f0054 	ldr	r0, [pc, #84]	; 4001ca30 <CyU3PUsbCreateDmaChannels+0x13c>
4001c9d8:	ebffe4e8 	bl	40015d80 <CyU3PDmaChannelDestroy>
4001c9dc:	e3a0004e 	mov	r0, #78	; 0x4e
4001c9e0:	eaffffde 	b	4001c960 <CyU3PUsbCreateDmaChannels+0x6c>
4001c9e4:	e59f0048 	ldr	r0, [pc, #72]	; 4001ca34 <CyU3PUsbCreateDmaChannels+0x140>
4001c9e8:	e5900000 	ldr	r0, [r0]
4001c9ec:	e3500000 	cmp	r0, #0
4001c9f0:	0a00000b 	beq	4001ca24 <CyU3PUsbCreateDmaChannels+0x130>
4001c9f4:	e3a01001 	mov	r1, #1
4001c9f8:	e59f0038 	ldr	r0, [pc, #56]	; 4001ca38 <CyU3PUsbCreateDmaChannels+0x144>
4001c9fc:	ebffe255 	bl	40015358 <CyU3PDmaChannelCacheControl>
4001ca00:	e1a04000 	mov	r4, r0
4001ca04:	e3540000 	cmp	r4, #0
4001ca08:	0a000005 	beq	4001ca24 <CyU3PUsbCreateDmaChannels+0x130>
4001ca0c:	e59f001c 	ldr	r0, [pc, #28]	; 4001ca30 <CyU3PUsbCreateDmaChannels+0x13c>
4001ca10:	ebffe4da 	bl	40015d80 <CyU3PDmaChannelDestroy>
4001ca14:	e59f001c 	ldr	r0, [pc, #28]	; 4001ca38 <CyU3PUsbCreateDmaChannels+0x144>
4001ca18:	ebffe4d8 	bl	40015d80 <CyU3PDmaChannelDestroy>
4001ca1c:	e3a0004e 	mov	r0, #78	; 0x4e
4001ca20:	eaffffce 	b	4001c960 <CyU3PUsbCreateDmaChannels+0x6c>
4001ca24:	e1a00004 	mov	r0, r4
4001ca28:	eaffffcc 	b	4001c960 <CyU3PUsbCreateDmaChannels+0x6c>
4001ca2c:	00003f01 	.word	0x00003f01
4001ca30:	40031ef8 	.word	0x40031ef8
4001ca34:	400310ec 	.word	0x400310ec
4001ca38:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001ca3c <CyU3PUsbEnableEpInterrupts>:
4001ca3c:	e200300f 	and	r3, r0, #15
4001ca40:	e3100080 	tst	r0, #128	; 0x80
4001ca44:	0a00002a 	beq	4001caf4 <CyU3PUsbEnableEpInterrupts+0xb8>
4001ca48:	e59fc150 	ldr	ip, [pc, #336]	; 4001cba0 <CyU3PUsbEnableEpInterrupts+0x164>
4001ca4c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ca50:	e3120901 	tst	r2, #16384	; 0x4000
4001ca54:	0a00000d 	beq	4001ca90 <CyU3PUsbEnableEpInterrupts+0x54>
4001ca58:	e3110001 	tst	r1, #1
4001ca5c:	0a000000 	beq	4001ca64 <CyU3PUsbEnableEpInterrupts+0x28>
4001ca60:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001ca64:	e3110002 	tst	r1, #2
4001ca68:	0a000000 	beq	4001ca70 <CyU3PUsbEnableEpInterrupts+0x34>
4001ca6c:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001ca70:	e3110004 	tst	r1, #4
4001ca74:	0a000000 	beq	4001ca7c <CyU3PUsbEnableEpInterrupts+0x40>
4001ca78:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001ca7c:	e3110008 	tst	r1, #8
4001ca80:	0a000000 	beq	4001ca88 <CyU3PUsbEnableEpInterrupts+0x4c>
4001ca84:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001ca88:	e59fc110 	ldr	ip, [pc, #272]	; 4001cba0 <CyU3PUsbEnableEpInterrupts+0x164>
4001ca8c:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ca90:	e59fc10c 	ldr	ip, [pc, #268]	; 4001cba4 <CyU3PUsbEnableEpInterrupts+0x168>
4001ca94:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ca98:	e3120001 	tst	r2, #1
4001ca9c:	0a00003e 	beq	4001cb9c <CyU3PUsbEnableEpInterrupts+0x160>
4001caa0:	e3110001 	tst	r1, #1
4001caa4:	0a000000 	beq	4001caac <CyU3PUsbEnableEpInterrupts+0x70>
4001caa8:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001caac:	e3110002 	tst	r1, #2
4001cab0:	0a000000 	beq	4001cab8 <CyU3PUsbEnableEpInterrupts+0x7c>
4001cab4:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cab8:	e3110004 	tst	r1, #4
4001cabc:	0a000000 	beq	4001cac4 <CyU3PUsbEnableEpInterrupts+0x88>
4001cac0:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cac4:	e3110010 	tst	r1, #16
4001cac8:	0a000000 	beq	4001cad0 <CyU3PUsbEnableEpInterrupts+0x94>
4001cacc:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cad0:	e3110020 	tst	r1, #32
4001cad4:	0a000000 	beq	4001cadc <CyU3PUsbEnableEpInterrupts+0xa0>
4001cad8:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cadc:	e3110040 	tst	r1, #64	; 0x40
4001cae0:	0a000000 	beq	4001cae8 <CyU3PUsbEnableEpInterrupts+0xac>
4001cae4:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cae8:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001cba4 <CyU3PUsbEnableEpInterrupts+0x168>
4001caec:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001caf0:	ea000029 	b	4001cb9c <CyU3PUsbEnableEpInterrupts+0x160>
4001caf4:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001cba8 <CyU3PUsbEnableEpInterrupts+0x16c>
4001caf8:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cafc:	e3120901 	tst	r2, #16384	; 0x4000
4001cb00:	0a00000d 	beq	4001cb3c <CyU3PUsbEnableEpInterrupts+0x100>
4001cb04:	e3110001 	tst	r1, #1
4001cb08:	0a000000 	beq	4001cb10 <CyU3PUsbEnableEpInterrupts+0xd4>
4001cb0c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cb10:	e3110002 	tst	r1, #2
4001cb14:	0a000000 	beq	4001cb1c <CyU3PUsbEnableEpInterrupts+0xe0>
4001cb18:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cb1c:	e3110004 	tst	r1, #4
4001cb20:	0a000000 	beq	4001cb28 <CyU3PUsbEnableEpInterrupts+0xec>
4001cb24:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cb28:	e3110008 	tst	r1, #8
4001cb2c:	0a000000 	beq	4001cb34 <CyU3PUsbEnableEpInterrupts+0xf8>
4001cb30:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cb34:	e59fc06c 	ldr	ip, [pc, #108]	; 4001cba8 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cb38:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cb3c:	e59fc068 	ldr	ip, [pc, #104]	; 4001cbac <CyU3PUsbEnableEpInterrupts+0x170>
4001cb40:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cb44:	e3120001 	tst	r2, #1
4001cb48:	0a000013 	beq	4001cb9c <CyU3PUsbEnableEpInterrupts+0x160>
4001cb4c:	e3110001 	tst	r1, #1
4001cb50:	0a000000 	beq	4001cb58 <CyU3PUsbEnableEpInterrupts+0x11c>
4001cb54:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cb58:	e3110002 	tst	r1, #2
4001cb5c:	0a000000 	beq	4001cb64 <CyU3PUsbEnableEpInterrupts+0x128>
4001cb60:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cb64:	e3110004 	tst	r1, #4
4001cb68:	0a000000 	beq	4001cb70 <CyU3PUsbEnableEpInterrupts+0x134>
4001cb6c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cb70:	e3110010 	tst	r1, #16
4001cb74:	0a000000 	beq	4001cb7c <CyU3PUsbEnableEpInterrupts+0x140>
4001cb78:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cb7c:	e3110020 	tst	r1, #32
4001cb80:	0a000000 	beq	4001cb88 <CyU3PUsbEnableEpInterrupts+0x14c>
4001cb84:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cb88:	e3110040 	tst	r1, #64	; 0x40
4001cb8c:	0a000000 	beq	4001cb94 <CyU3PUsbEnableEpInterrupts+0x158>
4001cb90:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cb94:	e59fc010 	ldr	ip, [pc, #16]	; 4001cbac <CyU3PUsbEnableEpInterrupts+0x170>
4001cb98:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cb9c:	e12fff1e 	bx	lr
4001cba0:	e0031418 	.word	0xe0031418
4001cba4:	e0033500 	.word	0xe0033500
4001cba8:	e0031498 	.word	0xe0031498
4001cbac:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001cbb0 <CyU3PUsbFlushEp>:
4001cbb0:	e92d4070 	push	{r4, r5, r6, lr}
4001cbb4:	e1a04000 	mov	r4, r0
4001cbb8:	e204507f 	and	r5, r4, #127	; 0x7f
4001cbbc:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cc6c <CyU3PUsbFlushEp+0xbc>
4001cbc0:	e5d00008 	ldrb	r0, [r0, #8]
4001cbc4:	e3500000 	cmp	r0, #0
4001cbc8:	1a000001 	bne	4001cbd4 <CyU3PUsbFlushEp+0x24>
4001cbcc:	e3a00042 	mov	r0, #66	; 0x42
4001cbd0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cbd4:	e355000f 	cmp	r5, #15
4001cbd8:	da000001 	ble	4001cbe4 <CyU3PUsbFlushEp+0x34>
4001cbdc:	e3a00040 	mov	r0, #64	; 0x40
4001cbe0:	eafffffa 	b	4001cbd0 <CyU3PUsbFlushEp+0x20>
4001cbe4:	e3e01000 	mvn	r1, #0
4001cbe8:	e59f0080 	ldr	r0, [pc, #128]	; 4001cc70 <CyU3PUsbFlushEp+0xc0>
4001cbec:	ebffb524 	bl	4000a084 <_txe_mutex_get>
4001cbf0:	e3140080 	tst	r4, #128	; 0x80
4001cbf4:	0a00000c 	beq	4001cc2c <CyU3PUsbFlushEp+0x7c>
4001cbf8:	e59f0074 	ldr	r0, [pc, #116]	; 4001cc74 <CyU3PUsbFlushEp+0xc4>
4001cbfc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cc00:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cc04:	e59f1068 	ldr	r1, [pc, #104]	; 4001cc74 <CyU3PUsbFlushEp+0xc4>
4001cc08:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cc0c:	e3a0000a 	mov	r0, #10
4001cc10:	ebffdabb 	bl	40013704 <CyU3PBusyWait>
4001cc14:	e59f0058 	ldr	r0, [pc, #88]	; 4001cc74 <CyU3PUsbFlushEp+0xc4>
4001cc18:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cc1c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cc20:	e59f104c 	ldr	r1, [pc, #76]	; 4001cc74 <CyU3PUsbFlushEp+0xc4>
4001cc24:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cc28:	ea00000b 	b	4001cc5c <CyU3PUsbFlushEp+0xac>
4001cc2c:	e59f0044 	ldr	r0, [pc, #68]	; 4001cc78 <CyU3PUsbFlushEp+0xc8>
4001cc30:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cc34:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cc38:	e59f1038 	ldr	r1, [pc, #56]	; 4001cc78 <CyU3PUsbFlushEp+0xc8>
4001cc3c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cc40:	e3a0000a 	mov	r0, #10
4001cc44:	ebffdaae 	bl	40013704 <CyU3PBusyWait>
4001cc48:	e59f0028 	ldr	r0, [pc, #40]	; 4001cc78 <CyU3PUsbFlushEp+0xc8>
4001cc4c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cc50:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cc54:	e59f101c 	ldr	r1, [pc, #28]	; 4001cc78 <CyU3PUsbFlushEp+0xc8>
4001cc58:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cc5c:	e59f000c 	ldr	r0, [pc, #12]	; 4001cc70 <CyU3PUsbFlushEp+0xc0>
4001cc60:	ebffb53c 	bl	4000a158 <_txe_mutex_put>
4001cc64:	e3a00000 	mov	r0, #0
4001cc68:	eaffffd8 	b	4001cbd0 <CyU3PUsbFlushEp+0x20>
4001cc6c:	400321c0 	.word	0x400321c0
4001cc70:	40032360 	.word	0x40032360
4001cc74:	e0031c40 	.word	0xe0031c40
4001cc78:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001cc7c <CyU3PUsbGetEP0Data>:
4001cc7c:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001cc80:	e1a04000 	mov	r4, r0
4001cc84:	e1a05001 	mov	r5, r1
4001cc88:	e1a06002 	mov	r6, r2
4001cc8c:	e59f8198 	ldr	r8, [pc, #408]	; 4001ce2c <CyU3PUsbGetEP0Data+0x1b0>
4001cc90:	e59f0198 	ldr	r0, [pc, #408]	; 4001ce30 <CyU3PUsbGetEP0Data+0x1b4>
4001cc94:	e5d00008 	ldrb	r0, [r0, #8]
4001cc98:	e3500000 	cmp	r0, #0
4001cc9c:	1a000001 	bne	4001cca8 <CyU3PUsbGetEP0Data+0x2c>
4001cca0:	e3a00042 	mov	r0, #66	; 0x42
4001cca4:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001cca8:	e3550000 	cmp	r5, #0
4001ccac:	1a000001 	bne	4001ccb8 <CyU3PUsbGetEP0Data+0x3c>
4001ccb0:	e3a00040 	mov	r0, #64	; 0x40
4001ccb4:	eafffffa 	b	4001cca4 <CyU3PUsbGetEP0Data+0x28>
4001ccb8:	e3e01000 	mvn	r1, #0
4001ccbc:	e59f0170 	ldr	r0, [pc, #368]	; 4001ce34 <CyU3PUsbGetEP0Data+0x1b8>
4001ccc0:	ebffb4ef 	bl	4000a084 <_txe_mutex_get>
4001ccc4:	e284000f 	add	r0, r4, #15
4001ccc8:	e59f1168 	ldr	r1, [pc, #360]	; 4001ce38 <CyU3PUsbGetEP0Data+0x1bc>
4001cccc:	e0004001 	and	r4, r0, r1
4001ccd0:	e59f0164 	ldr	r0, [pc, #356]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001ccd4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ccd8:	e3c00008 	bic	r0, r0, #8
4001ccdc:	e59f1158 	ldr	r1, [pc, #344]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001cce0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cce4:	e59f0144 	ldr	r0, [pc, #324]	; 4001ce30 <CyU3PUsbGetEP0Data+0x1b4>
4001cce8:	e5900018 	ldr	r0, [r0, #24]
4001ccec:	e3500000 	cmp	r0, #0
4001ccf0:	1a000002 	bne	4001cd00 <CyU3PUsbGetEP0Data+0x84>
4001ccf4:	eb00005a 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ccf8:	e3500000 	cmp	r0, #0
4001ccfc:	0a000008 	beq	4001cd24 <CyU3PUsbGetEP0Data+0xa8>
4001cd00:	e59f0134 	ldr	r0, [pc, #308]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001cd04:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cd08:	e3800008 	orr	r0, r0, #8
4001cd0c:	e59f1128 	ldr	r1, [pc, #296]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001cd10:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cd14:	e59f0118 	ldr	r0, [pc, #280]	; 4001ce34 <CyU3PUsbGetEP0Data+0x1b8>
4001cd18:	ebffb50e 	bl	4000a158 <_txe_mutex_put>
4001cd1c:	e3a00051 	mov	r0, #81	; 0x51
4001cd20:	eaffffdf 	b	4001cca4 <CyU3PUsbGetEP0Data+0x28>
4001cd24:	e59f0110 	ldr	r0, [pc, #272]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001cd28:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cd2c:	e3800008 	orr	r0, r0, #8
4001cd30:	e59f1104 	ldr	r1, [pc, #260]	; 4001ce3c <CyU3PUsbGetEP0Data+0x1c0>
4001cd34:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cd38:	eb00062a 	bl	4001e5e8 <GetUsbLinkActive>
4001cd3c:	e1cd40b6 	strh	r4, [sp, #6]
4001cd40:	e58d5000 	str	r5, [sp]
4001cd44:	e3a00000 	mov	r0, #0
4001cd48:	e1cd00b8 	strh	r0, [sp, #8]
4001cd4c:	e1a0100d 	mov	r1, sp
4001cd50:	e59f00e8 	ldr	r0, [pc, #232]	; 4001ce40 <CyU3PUsbGetEP0Data+0x1c4>
4001cd54:	ebffe75f 	bl	40016ad8 <CyU3PDmaChannelSetupRecvBuffer>
4001cd58:	e20070ff 	and	r7, r0, #255	; 0xff
4001cd5c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001ce34 <CyU3PUsbGetEP0Data+0x1b8>
4001cd60:	ebffb4fc 	bl	4000a158 <_txe_mutex_put>
4001cd64:	e3570000 	cmp	r7, #0
4001cd68:	1a00002d 	bne	4001ce24 <CyU3PUsbGetEP0Data+0x1a8>
4001cd6c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001ce30 <CyU3PUsbGetEP0Data+0x1b4>
4001cd70:	e5900014 	ldr	r0, [r0, #20]
4001cd74:	e3500000 	cmp	r0, #0
4001cd78:	0a000000 	beq	4001cd80 <CyU3PUsbGetEP0Data+0x104>
4001cd7c:	ebfffe93 	bl	4001c7d0 <CyU3PUsbAckSetup>
4001cd80:	ea00000e 	b	4001cdc0 <CyU3PUsbGetEP0Data+0x144>
4001cd84:	e3a02064 	mov	r2, #100	; 0x64
4001cd88:	e1a0100d 	mov	r1, sp
4001cd8c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001ce40 <CyU3PUsbGetEP0Data+0x1c4>
4001cd90:	ebffe8b2 	bl	40017060 <CyU3PDmaChannelWaitForRecvBuffer>
4001cd94:	e20070ff 	and	r7, r0, #255	; 0xff
4001cd98:	e3570045 	cmp	r7, #69	; 0x45
4001cd9c:	1a000006 	bne	4001cdbc <CyU3PUsbGetEP0Data+0x140>
4001cda0:	eb00002f 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cda4:	e3500000 	cmp	r0, #0
4001cda8:	0a000001 	beq	4001cdb4 <CyU3PUsbGetEP0Data+0x138>
4001cdac:	e3a00051 	mov	r0, #81	; 0x51
4001cdb0:	eaffffbb 	b	4001cca4 <CyU3PUsbGetEP0Data+0x28>
4001cdb4:	e2488064 	sub	r8, r8, #100	; 0x64
4001cdb8:	ea000000 	b	4001cdc0 <CyU3PUsbGetEP0Data+0x144>
4001cdbc:	ea000001 	b	4001cdc8 <CyU3PUsbGetEP0Data+0x14c>
4001cdc0:	e3580000 	cmp	r8, #0
4001cdc4:	1affffee 	bne	4001cd84 <CyU3PUsbGetEP0Data+0x108>
4001cdc8:	e1a00000 	nop			; (mov r0, r0)
4001cdcc:	e3570000 	cmp	r7, #0
4001cdd0:	0a00000f 	beq	4001ce14 <CyU3PUsbGetEP0Data+0x198>
4001cdd4:	e3e01000 	mvn	r1, #0
4001cdd8:	e59f0054 	ldr	r0, [pc, #84]	; 4001ce34 <CyU3PUsbGetEP0Data+0x1b8>
4001cddc:	ebffb4a8 	bl	4000a084 <_txe_mutex_get>
4001cde0:	e3a01001 	mov	r1, #1
4001cde4:	e3a00000 	mov	r0, #0
4001cde8:	eb000376 	bl	4001dbc8 <CyU3PUsbSetEpNak>
4001cdec:	e3a00064 	mov	r0, #100	; 0x64
4001cdf0:	ebffda43 	bl	40013704 <CyU3PBusyWait>
4001cdf4:	e59f0044 	ldr	r0, [pc, #68]	; 4001ce40 <CyU3PUsbGetEP0Data+0x1c4>
4001cdf8:	ebffe57b 	bl	400163ec <CyU3PDmaChannelReset>
4001cdfc:	e3a01000 	mov	r1, #0
4001ce00:	e1a00001 	mov	r0, r1
4001ce04:	eb00036f 	bl	4001dbc8 <CyU3PUsbSetEpNak>
4001ce08:	e59f0024 	ldr	r0, [pc, #36]	; 4001ce34 <CyU3PUsbGetEP0Data+0x1b8>
4001ce0c:	ebffb4d1 	bl	4000a158 <_txe_mutex_put>
4001ce10:	ea000003 	b	4001ce24 <CyU3PUsbGetEP0Data+0x1a8>
4001ce14:	e3560000 	cmp	r6, #0
4001ce18:	0a000001 	beq	4001ce24 <CyU3PUsbGetEP0Data+0x1a8>
4001ce1c:	e1dd00b4 	ldrh	r0, [sp, #4]
4001ce20:	e1c600b0 	strh	r0, [r6]
4001ce24:	e1a00007 	mov	r0, r7
4001ce28:	eaffff9d 	b	4001cca4 <CyU3PUsbGetEP0Data+0x28>
4001ce2c:	00001388 	.word	0x00001388
4001ce30:	400321c0 	.word	0x400321c0
4001ce34:	40032360 	.word	0x40032360
4001ce38:	0000fff0 	.word	0x0000fff0
4001ce3c:	e0031000 	.word	0xe0031000
4001ce40:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbGetSpeed:

4001ce44 <CyU3PUsbGetSpeed>:
4001ce44:	e59f0004 	ldr	r0, [pc, #4]	; 4001ce50 <CyU3PUsbGetSpeed+0xc>
4001ce48:	e5d00009 	ldrb	r0, [r0, #9]
4001ce4c:	e12fff1e 	bx	lr
4001ce50:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbHostIsStarted:

4001ce54 <CyU3PUsbHostIsStarted>:
4001ce54:	e59f0004 	ldr	r0, [pc, #4]	; 4001ce60 <CyU3PUsbHostIsStarted+0xc>
4001ce58:	e5900000 	ldr	r0, [r0]
4001ce5c:	e12fff1e 	bx	lr
4001ce60:	400311e8 	.word	0x400311e8

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001ce64:	e59f0038 	ldr	r0, [pc, #56]	; 4001cea4 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001ce68:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001ce6c:	e3500000 	cmp	r0, #0
4001ce70:	1a000007 	bne	4001ce94 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001ce74:	e59f002c 	ldr	r0, [pc, #44]	; 4001cea8 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001ce78:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001ce7c:	e3100040 	tst	r0, #64	; 0x40
4001ce80:	1a000003 	bne	4001ce94 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001ce84:	e59f0020 	ldr	r0, [pc, #32]	; 4001ceac <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001ce88:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001ce8c:	e3100c02 	tst	r0, #512	; 0x200
4001ce90:	0a000001 	beq	4001ce9c <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001ce94:	e3a00001 	mov	r0, #1
4001ce98:	e12fff1e 	bx	lr
4001ce9c:	e3a00000 	mov	r0, #0
4001cea0:	eafffffc 	b	4001ce98 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cea4:	400321c0 	.word	0x400321c0
4001cea8:	e0031000 	.word	0xe0031000
4001ceac:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001ceb0 <CyU3PUsbLoadBootloaderDescs>:
4001ceb0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001ceb4:	e1a04000 	mov	r4, r0
4001ceb8:	e3a06000 	mov	r6, #0
4001cebc:	e5940008 	ldr	r0, [r4, #8]
4001cec0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cec4:	e1a00000 	nop			; (mov r0, r0)
4001cec8:	ea00000f 	b	4001cf0c <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cecc:	e2843010 	add	r3, r4, #16
4001ced0:	e0833186 	add	r3, r3, r6, lsl #3
4001ced4:	e5932004 	ldr	r2, [r3, #4]
4001ced8:	e2843010 	add	r3, r4, #16
4001cedc:	e0833186 	add	r3, r3, r6, lsl #3
4001cee0:	e5d31001 	ldrb	r1, [r3, #1]
4001cee4:	e2843010 	add	r3, r4, #16
4001cee8:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001ceec:	eb0002bf 	bl	4001d9f0 <CyU3PUsbSetDesc>
4001cef0:	e1a05000 	mov	r5, r0
4001cef4:	e3550000 	cmp	r5, #0
4001cef8:	0a000001 	beq	4001cf04 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cefc:	e1a00005 	mov	r0, r5
4001cf00:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cf04:	e2860001 	add	r0, r6, #1
4001cf08:	e20060ff 	and	r6, r0, #255	; 0xff
4001cf0c:	e1560007 	cmp	r6, r7
4001cf10:	baffffed 	blt	4001cecc <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cf14:	e3a00000 	mov	r0, #0
4001cf18:	eafffff8 	b	4001cf00 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cf1c <CyU3PUsbMapStream>:
4001cf1c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cf20:	e1a03000 	mov	r3, r0
4001cf24:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cf28:	e59f005c 	ldr	r0, [pc, #92]	; 4001cf8c <CyU3PUsbMapStream+0x70>
4001cf2c:	e5d00008 	ldrb	r0, [r0, #8]
4001cf30:	e3500000 	cmp	r0, #0
4001cf34:	1a000001 	bne	4001cf40 <CyU3PUsbMapStream+0x24>
4001cf38:	e3a00042 	mov	r0, #66	; 0x42
4001cf3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cf40:	e35c000f 	cmp	ip, #15
4001cf44:	da000001 	ble	4001cf50 <CyU3PUsbMapStream+0x34>
4001cf48:	e3a00040 	mov	r0, #64	; 0x40
4001cf4c:	eafffffa 	b	4001cf3c <CyU3PUsbMapStream+0x20>
4001cf50:	e3130080 	tst	r3, #128	; 0x80
4001cf54:	0a000005 	beq	4001cf70 <CyU3PUsbMapStream+0x54>
4001cf58:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cf5c:	e180080c 	orr	r0, r0, ip, lsl #16
4001cf60:	e1800002 	orr	r0, r0, r2
4001cf64:	e59fe024 	ldr	lr, [pc, #36]	; 4001cf90 <CyU3PUsbMapStream+0x74>
4001cf68:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cf6c:	ea000004 	b	4001cf84 <CyU3PUsbMapStream+0x68>
4001cf70:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cf74:	e180080c 	orr	r0, r0, ip, lsl #16
4001cf78:	e1800002 	orr	r0, r0, r2
4001cf7c:	e59fe010 	ldr	lr, [pc, #16]	; 4001cf94 <CyU3PUsbMapStream+0x78>
4001cf80:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cf84:	e3a00000 	mov	r0, #0
4001cf88:	eaffffeb 	b	4001cf3c <CyU3PUsbMapStream+0x20>
4001cf8c:	400321c0 	.word	0x400321c0
4001cf90:	e00335c0 	.word	0xe00335c0
4001cf94:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001cf98 <CyU3PUsbOtgVbusChangeHandler>:
4001cf98:	e92d4010 	push	{r4, lr}
4001cf9c:	e3a04000 	mov	r4, #0
4001cfa0:	e59f0094 	ldr	r0, [pc, #148]	; 4001d03c <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cfa4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001cfa8:	e3500000 	cmp	r0, #0
4001cfac:	0a000005 	beq	4001cfc8 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001cfb0:	e59f0088 	ldr	r0, [pc, #136]	; 4001d040 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001cfb4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001cfb8:	e59f107c 	ldr	r1, [pc, #124]	; 4001d03c <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cfbc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001cfc0:	e1100001 	tst	r0, r1
4001cfc4:	0a000008 	beq	4001cfec <CyU3PUsbOtgVbusChangeHandler+0x54>
4001cfc8:	e3a04001 	mov	r4, #1
4001cfcc:	e3a00018 	mov	r0, #24
4001cfd0:	e59f106c 	ldr	r1, [pc, #108]	; 4001d044 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cfd4:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cfd8:	e1c10000 	bic	r0, r1, r0
4001cfdc:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cfe0:	e3c00018 	bic	r0, r0, #24
4001cfe4:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cfe8:	ea000009 	b	4001d014 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cfec:	ebfffbb2 	bl	4001bebc <CyU3POtgIsHostMode>
4001cff0:	e3500000 	cmp	r0, #0
4001cff4:	0a000006 	beq	4001d014 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cff8:	e3a00018 	mov	r0, #24
4001cffc:	e59f1040 	ldr	r1, [pc, #64]	; 4001d044 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d000:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d004:	e1c10000 	bic	r0, r1, r0
4001d008:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d00c:	e3800018 	orr	r0, r0, #24
4001d010:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d014:	e59f002c 	ldr	r0, [pc, #44]	; 4001d048 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d018:	e5900004 	ldr	r0, [r0, #4]
4001d01c:	e3500000 	cmp	r0, #0
4001d020:	0a000004 	beq	4001d038 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001d024:	e59f001c 	ldr	r0, [pc, #28]	; 4001d048 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d028:	e1a01004 	mov	r1, r4
4001d02c:	e5902004 	ldr	r2, [r0, #4]
4001d030:	e3a00002 	mov	r0, #2
4001d034:	e12fff32 	blx	r2
4001d038:	e8bd8010 	pop	{r4, pc}
4001d03c:	400321c0 	.word	0x400321c0
4001d040:	e0051000 	.word	0xe0051000
4001d044:	e0031000 	.word	0xe0031000
4001d048:	400311e0 	.word	0x400311e0

Disassembly of section i.CyU3PUsbPhyDisable:

4001d04c <CyU3PUsbPhyDisable>:
4001d04c:	e92d4010 	push	{r4, lr}
4001d050:	e1a04000 	mov	r4, r0
4001d054:	e2841003 	add	r1, r4, #3
4001d058:	e20100ff 	and	r0, r1, #255	; 0xff
4001d05c:	eb000af4 	bl	4001fc34 <CyU3PUsbAddToEventLog>
4001d060:	e3a00000 	mov	r0, #0
4001d064:	e59f1184 	ldr	r1, [pc, #388]	; 4001d1f0 <CyU3PUsbPhyDisable+0x1a4>
4001d068:	e5810000 	str	r0, [r1]
4001d06c:	e59f0180 	ldr	r0, [pc, #384]	; 4001d1f4 <CyU3PUsbPhyDisable+0x1a8>
4001d070:	ebffb6e5 	bl	4000ac0c <_txe_timer_deactivate>
4001d074:	e3a00008 	mov	r0, #8
4001d078:	eb00141f 	bl	400220fc <CyU3PVicDisableInt>
4001d07c:	e59f0174 	ldr	r0, [pc, #372]	; 4001d1f8 <CyU3PUsbPhyDisable+0x1ac>
4001d080:	e5900004 	ldr	r0, [r0, #4]
4001d084:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001d088:	e59f1168 	ldr	r1, [pc, #360]	; 4001d1f8 <CyU3PUsbPhyDisable+0x1ac>
4001d08c:	e5810004 	str	r0, [r1, #4]
4001d090:	e3e00000 	mvn	r0, #0
4001d094:	e0411600 	sub	r1, r1, r0, lsl #12
4001d098:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d09c:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d0a0:	e59f0154 	ldr	r0, [pc, #340]	; 4001d1fc <CyU3PUsbPhyDisable+0x1b0>
4001d0a4:	ebffe4d0 	bl	400163ec <CyU3PDmaChannelReset>
4001d0a8:	e59f0150 	ldr	r0, [pc, #336]	; 4001d200 <CyU3PUsbPhyDisable+0x1b4>
4001d0ac:	ebffe4ce 	bl	400163ec <CyU3PDmaChannelReset>
4001d0b0:	e3540000 	cmp	r4, #0
4001d0b4:	0a00002b 	beq	4001d168 <CyU3PUsbPhyDisable+0x11c>
4001d0b8:	e3a00001 	mov	r0, #1
4001d0bc:	e59f1140 	ldr	r1, [pc, #320]	; 4001d204 <CyU3PUsbPhyDisable+0x1b8>
4001d0c0:	e5810060 	str	r0, [r1, #96]	; 0x60
4001d0c4:	ebffb60f 	bl	4000a908 <_txe_thread_relinquish>
4001d0c8:	e3e00000 	mvn	r0, #0
4001d0cc:	e59f1134 	ldr	r1, [pc, #308]	; 4001d208 <CyU3PUsbPhyDisable+0x1bc>
4001d0d0:	e5810004 	str	r0, [r1, #4]
4001d0d4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d0d8:	e0010000 	and	r0, r1, r0
4001d0dc:	e5900014 	ldr	r0, [r0, #20]
4001d0e0:	e59f1124 	ldr	r1, [pc, #292]	; 4001d20c <CyU3PUsbPhyDisable+0x1c0>
4001d0e4:	e5810000 	str	r0, [r1]
4001d0e8:	e3a00000 	mov	r0, #0
4001d0ec:	e59f111c 	ldr	r1, [pc, #284]	; 4001d210 <CyU3PUsbPhyDisable+0x1c4>
4001d0f0:	e5810000 	str	r0, [r1]
4001d0f4:	e3a01000 	mov	r1, #0
4001d0f8:	e59f0114 	ldr	r0, [pc, #276]	; 4001d214 <CyU3PUsbPhyDisable+0x1c8>
4001d0fc:	eb00146d 	bl	400222b8 <CyFx3UsbWritePhyReg>
4001d100:	e3a01002 	mov	r1, #2
4001d104:	e1a00001 	mov	r0, r1
4001d108:	ebfffd1d 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001d10c:	e3a00002 	mov	r0, #2
4001d110:	ebffd97b 	bl	40013704 <CyU3PBusyWait>
4001d114:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d118:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d11c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d120:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d124:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d128:	e3a00002 	mov	r0, #2
4001d12c:	ebffd974 	bl	40013704 <CyU3PBusyWait>
4001d130:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d134:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d138:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001d13c:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d140:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d144:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001d148:	e590001c 	ldr	r0, [r0, #28]
4001d14c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001d150:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001d154:	e581001c 	str	r0, [r1, #28]
4001d158:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d21c <CyU3PUsbPhyDisable+0x1d0>
4001d15c:	e5900000 	ldr	r0, [r0]
4001d160:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d164:	ea00000e 	b	4001d1a4 <CyU3PUsbPhyDisable+0x158>
4001d168:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d16c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d170:	e3800008 	orr	r0, r0, #8
4001d174:	e59f109c 	ldr	r1, [pc, #156]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d178:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d17c:	e3a01002 	mov	r1, #2
4001d180:	e1a00001 	mov	r0, r1
4001d184:	ebfffcfe 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001d188:	e3a00002 	mov	r0, #2
4001d18c:	ebffd95c 	bl	40013704 <CyU3PBusyWait>
4001d190:	e59f0080 	ldr	r0, [pc, #128]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d194:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d198:	e2000001 	and	r0, r0, #1
4001d19c:	e59f1074 	ldr	r1, [pc, #116]	; 4001d218 <CyU3PUsbPhyDisable+0x1cc>
4001d1a0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1a4:	e59f0074 	ldr	r0, [pc, #116]	; 4001d220 <CyU3PUsbPhyDisable+0x1d4>
4001d1a8:	e5900000 	ldr	r0, [r0]
4001d1ac:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d1b0:	e59f1068 	ldr	r1, [pc, #104]	; 4001d220 <CyU3PUsbPhyDisable+0x1d4>
4001d1b4:	e5810000 	str	r0, [r1]
4001d1b8:	e3a00000 	mov	r0, #0
4001d1bc:	e59f1040 	ldr	r1, [pc, #64]	; 4001d204 <CyU3PUsbPhyDisable+0x1b8>
4001d1c0:	e5c10009 	strb	r0, [r1, #9]
4001d1c4:	ebfffb6c 	bl	4001bf7c <CyU3POtgIsStarted>
4001d1c8:	e3500000 	cmp	r0, #0
4001d1cc:	0a000006 	beq	4001d1ec <CyU3PUsbPhyDisable+0x1a0>
4001d1d0:	e3a00064 	mov	r0, #100	; 0x64
4001d1d4:	ebffd94a 	bl	40013704 <CyU3PBusyWait>
4001d1d8:	e59f0040 	ldr	r0, [pc, #64]	; 4001d220 <CyU3PUsbPhyDisable+0x1d4>
4001d1dc:	e5900000 	ldr	r0, [r0]
4001d1e0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d1e4:	e59f1034 	ldr	r1, [pc, #52]	; 4001d220 <CyU3PUsbPhyDisable+0x1d4>
4001d1e8:	e5810000 	str	r0, [r1]
4001d1ec:	e8bd8010 	pop	{r4, pc}
4001d1f0:	4003123c 	.word	0x4003123c
4001d1f4:	40032b20 	.word	0x40032b20
4001d1f8:	e0030000 	.word	0xe0030000
4001d1fc:	40031ef8 	.word	0x40031ef8
4001d200:	40031f98 	.word	0x40031f98
4001d204:	400321c0 	.word	0x400321c0
4001d208:	e0033000 	.word	0xe0033000
4001d20c:	40031210 	.word	0x40031210
4001d210:	40031240 	.word	0x40031240
4001d214:	00001005 	.word	0x00001005
4001d218:	e0031000 	.word	0xe0031000
4001d21c:	400310e4 	.word	0x400310e4
4001d220:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d224 <CyU3PUsbPhyEnable>:
4001d224:	e92d4070 	push	{r4, r5, r6, lr}
4001d228:	e1a04000 	mov	r4, r0
4001d22c:	e2841005 	add	r1, r4, #5
4001d230:	e20100ff 	and	r0, r1, #255	; 0xff
4001d234:	eb000a7e 	bl	4001fc34 <CyU3PUsbAddToEventLog>
4001d238:	e3e00000 	mvn	r0, #0
4001d23c:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d240:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d244:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d248:	e3a00008 	mov	r0, #8
4001d24c:	eb0013af 	bl	40022110 <CyU3PVicEnableInt>
4001d250:	e3a00009 	mov	r0, #9
4001d254:	eb0013ad 	bl	40022110 <CyU3PVicEnableInt>
4001d258:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d500 <CyU3PUsbPhyEnable+0x2dc>
4001d25c:	e5900004 	ldr	r0, [r0, #4]
4001d260:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d264:	e59f1294 	ldr	r1, [pc, #660]	; 4001d500 <CyU3PUsbPhyEnable+0x2dc>
4001d268:	e5810004 	str	r0, [r1, #4]
4001d26c:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d270:	e5900000 	ldr	r0, [r0]
4001d274:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d278:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d27c:	e5810000 	str	r0, [r1]
4001d280:	e3540000 	cmp	r4, #0
4001d284:	0a000069 	beq	4001d430 <CyU3PUsbPhyEnable+0x20c>
4001d288:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d28c:	e5900014 	ldr	r0, [r0, #20]
4001d290:	e59f126c 	ldr	r1, [pc, #620]	; 4001d504 <CyU3PUsbPhyEnable+0x2e0>
4001d294:	e5810000 	str	r0, [r1]
4001d298:	e3a00000 	mov	r0, #0
4001d29c:	e59f1264 	ldr	r1, [pc, #612]	; 4001d508 <CyU3PUsbPhyEnable+0x2e4>
4001d2a0:	e5810000 	str	r0, [r1]
4001d2a4:	e3e00000 	mvn	r0, #0
4001d2a8:	e59f125c 	ldr	r1, [pc, #604]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d2ac:	e5810004 	str	r0, [r1, #4]
4001d2b0:	e59f0258 	ldr	r0, [pc, #600]	; 4001d510 <CyU3PUsbPhyEnable+0x2ec>
4001d2b4:	e5810008 	str	r0, [r1, #8]
4001d2b8:	e3e00000 	mvn	r0, #0
4001d2bc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d2c0:	e59f024c 	ldr	r0, [pc, #588]	; 4001d514 <CyU3PUsbPhyEnable+0x2f0>
4001d2c4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d2c8:	e59f0248 	ldr	r0, [pc, #584]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d2cc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d2d0:	e3500000 	cmp	r0, #0
4001d2d4:	0a000003 	beq	4001d2e8 <CyU3PUsbPhyEnable+0xc4>
4001d2d8:	e1a00001 	mov	r0, r1
4001d2dc:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d2e0:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d2e4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d2e8:	e3a00000 	mov	r0, #0
4001d2ec:	e59f1224 	ldr	r1, [pc, #548]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d2f0:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d2f4:	e59f0220 	ldr	r0, [pc, #544]	; 4001d51c <CyU3PUsbPhyEnable+0x2f8>
4001d2f8:	e5900000 	ldr	r0, [r0]
4001d2fc:	e3500000 	cmp	r0, #0
4001d300:	0a000003 	beq	4001d314 <CyU3PUsbPhyEnable+0xf0>
4001d304:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d308:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d30c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d310:	ea000002 	b	4001d320 <CyU3PUsbPhyEnable+0xfc>
4001d314:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d318:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d31c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d320:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d520 <CyU3PUsbPhyEnable+0x2fc>
4001d324:	e5900000 	ldr	r0, [r0]
4001d328:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d32c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d330:	eb00139a 	bl	400221a0 <CyFx3Usb3LnkSetup>
4001d334:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d524 <CyU3PUsbPhyEnable+0x300>
4001d338:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d33c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d340:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d344:	e1c10000 	bic	r0, r1, r0
4001d348:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d34c:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d350:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d354:	e3a00000 	mov	r0, #0
4001d358:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d35c:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d360:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d364:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d368:	e581001c 	str	r0, [r1, #28]
4001d36c:	e3a01002 	mov	r1, #2
4001d370:	e1a00001 	mov	r0, r1
4001d374:	ebfffc82 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001d378:	eb00135b 	bl	400220ec <CyU3PVicDisableAllInterrupts>
4001d37c:	e1a05000 	mov	r5, r0
4001d380:	e3a00000 	mov	r0, #0
4001d384:	e59f119c 	ldr	r1, [pc, #412]	; 4001d528 <CyU3PUsbPhyEnable+0x304>
4001d388:	e5810000 	str	r0, [r1]
4001d38c:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d390:	e59f1174 	ldr	r1, [pc, #372]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d394:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d398:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d39c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d3a0:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d3a4:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d3a8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d3ac:	e3a00064 	mov	r0, #100	; 0x64
4001d3b0:	ebffd8d3 	bl	40013704 <CyU3PBusyWait>
4001d3b4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d3b8:	e5900000 	ldr	r0, [r0]
4001d3bc:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d3c0:	e59f1144 	ldr	r1, [pc, #324]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d3c4:	e5810000 	str	r0, [r1]
4001d3c8:	e59f015c 	ldr	r0, [pc, #348]	; 4001d52c <CyU3PUsbPhyEnable+0x308>
4001d3cc:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d3d0:	e3a01080 	mov	r1, #128	; 0x80
4001d3d4:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d3d8:	eb0013b6 	bl	400222b8 <CyFx3UsbWritePhyReg>
4001d3dc:	e3a01d06 	mov	r1, #384	; 0x180
4001d3e0:	e59f0148 	ldr	r0, [pc, #328]	; 4001d530 <CyU3PUsbPhyEnable+0x30c>
4001d3e4:	eb0013b3 	bl	400222b8 <CyFx3UsbWritePhyReg>
4001d3e8:	e3a01080 	mov	r1, #128	; 0x80
4001d3ec:	e59f0140 	ldr	r0, [pc, #320]	; 4001d534 <CyU3PUsbPhyEnable+0x310>
4001d3f0:	eb0013b0 	bl	400222b8 <CyFx3UsbWritePhyReg>
4001d3f4:	e1a00005 	mov	r0, r5
4001d3f8:	eb001349 	bl	40022124 <CyU3PVicEnableInterrupts>
4001d3fc:	e59f0108 	ldr	r0, [pc, #264]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d400:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d404:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d408:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d50c <CyU3PUsbPhyEnable+0x2e8>
4001d40c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d410:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d414:	e581001c 	str	r0, [r1, #28]
4001d418:	e3a00064 	mov	r0, #100	; 0x64
4001d41c:	ebffd8b8 	bl	40013704 <CyU3PBusyWait>
4001d420:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d424:	e59f110c 	ldr	r1, [pc, #268]	; 4001d538 <CyU3PUsbPhyEnable+0x314>
4001d428:	e5810008 	str	r0, [r1, #8]
4001d42c:	ea000031 	b	4001d4f8 <CyU3PUsbPhyEnable+0x2d4>
4001d430:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d438:	e3500000 	cmp	r0, #0
4001d43c:	0a000000 	beq	4001d444 <CyU3PUsbPhyEnable+0x220>
4001d440:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d444:	e3a00001 	mov	r0, #1
4001d448:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d44c:	e5c10009 	strb	r0, [r1, #9]
4001d450:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d454:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d53c <CyU3PUsbPhyEnable+0x318>
4001d458:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d45c:	e3a00000 	mov	r0, #0
4001d460:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d518 <CyU3PUsbPhyEnable+0x2f4>
4001d464:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d468:	e59f008c 	ldr	r0, [pc, #140]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d46c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d470:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d474:	e59f1080 	ldr	r1, [pc, #128]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d478:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d47c:	e1a00001 	mov	r0, r1
4001d480:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d484:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d488:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d48c:	e3a00002 	mov	r0, #2
4001d490:	ebffd89b 	bl	40013704 <CyU3PBusyWait>
4001d494:	e59f0060 	ldr	r0, [pc, #96]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d498:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d49c:	e2000001 	and	r0, r0, #1
4001d4a0:	e59f1054 	ldr	r1, [pc, #84]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d4a4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d4a8:	e1a00001 	mov	r0, r1
4001d4ac:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d4b0:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d4b4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d4b8:	e3a00064 	mov	r0, #100	; 0x64
4001d4bc:	ebffd890 	bl	40013704 <CyU3PBusyWait>
4001d4c0:	eb00132a 	bl	40022170 <CyFx3Usb2PhySetup>
4001d4c4:	e59f0074 	ldr	r0, [pc, #116]	; 4001d540 <CyU3PUsbPhyEnable+0x31c>
4001d4c8:	e59f102c 	ldr	r1, [pc, #44]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d4cc:	e5810008 	str	r0, [r1, #8]
4001d4d0:	e3a00050 	mov	r0, #80	; 0x50
4001d4d4:	ebffd88a 	bl	40013704 <CyU3PBusyWait>
4001d4d8:	e3a01000 	mov	r1, #0
4001d4dc:	e3a00002 	mov	r0, #2
4001d4e0:	ebfffc27 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001d4e4:	e59f0010 	ldr	r0, [pc, #16]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d4e8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d4ec:	e3c00008 	bic	r0, r0, #8
4001d4f0:	e59f1004 	ldr	r1, [pc, #4]	; 4001d4fc <CyU3PUsbPhyEnable+0x2d8>
4001d4f4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d4f8:	eaffffd0 	b	4001d440 <CyU3PUsbPhyEnable+0x21c>
4001d4fc:	e0031000 	.word	0xe0031000
4001d500:	e0030000 	.word	0xe0030000
4001d504:	40031210 	.word	0x40031210
4001d508:	40031240 	.word	0x40031240
4001d50c:	e0033000 	.word	0xe0033000
4001d510:	00038081 	.word	0x00038081
4001d514:	00004a3d 	.word	0x00004a3d
4001d518:	400321c0 	.word	0x400321c0
4001d51c:	400311cc 	.word	0x400311cc
4001d520:	40031218 	.word	0x40031218
4001d524:	00000908 	.word	0x00000908
4001d528:	40031200 	.word	0x40031200
4001d52c:	00310418 	.word	0x00310418
4001d530:	00001006 	.word	0x00001006
4001d534:	00001024 	.word	0x00001024
4001d538:	e0052000 	.word	0xe0052000
4001d53c:	e0032000 	.word	0xe0032000
4001d540:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d544 <CyU3PUsbPowerOn>:
4001d544:	e92d4010 	push	{r4, lr}
4001d548:	eb00133a 	bl	40022238 <CyFx3UsbPowerOn>
4001d54c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d550 <CyU3PUsbResetEp>:
4001d550:	e92d4070 	push	{r4, r5, r6, lr}
4001d554:	e1a04000 	mov	r4, r0
4001d558:	e204507f 	and	r5, r4, #127	; 0x7f
4001d55c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d620 <CyU3PUsbResetEp+0xd0>
4001d560:	e5d00008 	ldrb	r0, [r0, #8]
4001d564:	e3500000 	cmp	r0, #0
4001d568:	1a000001 	bne	4001d574 <CyU3PUsbResetEp+0x24>
4001d56c:	e3a00042 	mov	r0, #66	; 0x42
4001d570:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d574:	e355000f 	cmp	r5, #15
4001d578:	da000001 	ble	4001d584 <CyU3PUsbResetEp+0x34>
4001d57c:	e3a00040 	mov	r0, #64	; 0x40
4001d580:	eafffffa 	b	4001d570 <CyU3PUsbResetEp+0x20>
4001d584:	e3e01000 	mvn	r1, #0
4001d588:	e59f0094 	ldr	r0, [pc, #148]	; 4001d624 <CyU3PUsbResetEp+0xd4>
4001d58c:	ebffb2bc 	bl	4000a084 <_txe_mutex_get>
4001d590:	ebfffe2b 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001d594:	e3500003 	cmp	r0, #3
4001d598:	1a00001c 	bne	4001d610 <CyU3PUsbResetEp+0xc0>
4001d59c:	e59f0084 	ldr	r0, [pc, #132]	; 4001d628 <CyU3PUsbResetEp+0xd8>
4001d5a0:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d5a4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d5a8:	e59f1078 	ldr	r1, [pc, #120]	; 4001d628 <CyU3PUsbResetEp+0xd8>
4001d5ac:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d5b0:	e3140080 	tst	r4, #128	; 0x80
4001d5b4:	0a00000a 	beq	4001d5e4 <CyU3PUsbResetEp+0x94>
4001d5b8:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d5bc:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d5c0:	e3866011 	orr	r6, r6, #17
4001d5c4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d5c8:	e3a00002 	mov	r0, #2
4001d5cc:	ebffd84c 	bl	40013704 <CyU3PBusyWait>
4001d5d0:	e3c60010 	bic	r0, r6, #16
4001d5d4:	e3806001 	orr	r6, r0, #1
4001d5d8:	e59f004c 	ldr	r0, [pc, #76]	; 4001d62c <CyU3PUsbResetEp+0xdc>
4001d5dc:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d5e0:	ea00000a 	b	4001d610 <CyU3PUsbResetEp+0xc0>
4001d5e4:	e59f0044 	ldr	r0, [pc, #68]	; 4001d630 <CyU3PUsbResetEp+0xe0>
4001d5e8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d5ec:	e3806011 	orr	r6, r0, #17
4001d5f0:	e59f0038 	ldr	r0, [pc, #56]	; 4001d630 <CyU3PUsbResetEp+0xe0>
4001d5f4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d5f8:	e3a00002 	mov	r0, #2
4001d5fc:	ebffd840 	bl	40013704 <CyU3PBusyWait>
4001d600:	e3c60010 	bic	r0, r6, #16
4001d604:	e3806001 	orr	r6, r0, #1
4001d608:	e59f0020 	ldr	r0, [pc, #32]	; 4001d630 <CyU3PUsbResetEp+0xe0>
4001d60c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d610:	e59f000c 	ldr	r0, [pc, #12]	; 4001d624 <CyU3PUsbResetEp+0xd4>
4001d614:	ebffb2cf 	bl	4000a158 <_txe_mutex_put>
4001d618:	e3a00000 	mov	r0, #0
4001d61c:	eaffffd3 	b	4001d570 <CyU3PUsbResetEp+0x20>
4001d620:	400321c0 	.word	0x400321c0
4001d624:	40032360 	.word	0x40032360
4001d628:	e0033000 	.word	0xe0033000
4001d62c:	e0033500 	.word	0xe0033500
4001d630:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d634 <CyU3PUsbSendEP0Data>:
4001d634:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d638:	e1a04000 	mov	r4, r0
4001d63c:	e1a05001 	mov	r5, r1
4001d640:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d7f4 <CyU3PUsbSendEP0Data+0x1c0>
4001d644:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d7f8 <CyU3PUsbSendEP0Data+0x1c4>
4001d648:	e5d00008 	ldrb	r0, [r0, #8]
4001d64c:	e3500000 	cmp	r0, #0
4001d650:	1a000001 	bne	4001d65c <CyU3PUsbSendEP0Data+0x28>
4001d654:	e3a00042 	mov	r0, #66	; 0x42
4001d658:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d65c:	e3550000 	cmp	r5, #0
4001d660:	1a000001 	bne	4001d66c <CyU3PUsbSendEP0Data+0x38>
4001d664:	e3a00040 	mov	r0, #64	; 0x40
4001d668:	eafffffa 	b	4001d658 <CyU3PUsbSendEP0Data+0x24>
4001d66c:	e3e01000 	mvn	r1, #0
4001d670:	e59f0184 	ldr	r0, [pc, #388]	; 4001d7fc <CyU3PUsbSendEP0Data+0x1c8>
4001d674:	ebffb282 	bl	4000a084 <_txe_mutex_get>
4001d678:	e59f0180 	ldr	r0, [pc, #384]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d67c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d680:	e3c00008 	bic	r0, r0, #8
4001d684:	e59f1174 	ldr	r1, [pc, #372]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d688:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d68c:	e59f0164 	ldr	r0, [pc, #356]	; 4001d7f8 <CyU3PUsbSendEP0Data+0x1c4>
4001d690:	e5900018 	ldr	r0, [r0, #24]
4001d694:	e3500000 	cmp	r0, #0
4001d698:	1a000002 	bne	4001d6a8 <CyU3PUsbSendEP0Data+0x74>
4001d69c:	ebfffdf0 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d6a0:	e3500000 	cmp	r0, #0
4001d6a4:	0a000008 	beq	4001d6cc <CyU3PUsbSendEP0Data+0x98>
4001d6a8:	e59f0150 	ldr	r0, [pc, #336]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d6ac:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d6b0:	e3800008 	orr	r0, r0, #8
4001d6b4:	e59f1144 	ldr	r1, [pc, #324]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d6b8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d6bc:	e59f0138 	ldr	r0, [pc, #312]	; 4001d7fc <CyU3PUsbSendEP0Data+0x1c8>
4001d6c0:	ebffb2a4 	bl	4000a158 <_txe_mutex_put>
4001d6c4:	e3a00000 	mov	r0, #0
4001d6c8:	eaffffe2 	b	4001d658 <CyU3PUsbSendEP0Data+0x24>
4001d6cc:	e59f012c 	ldr	r0, [pc, #300]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d6d0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d6d4:	e3800008 	orr	r0, r0, #8
4001d6d8:	e59f1120 	ldr	r1, [pc, #288]	; 4001d800 <CyU3PUsbSendEP0Data+0x1cc>
4001d6dc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d6e0:	e1a00001 	mov	r0, r1
4001d6e4:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d6e8:	e1500004 	cmp	r0, r4
4001d6ec:	2a000003 	bcs	4001d700 <CyU3PUsbSendEP0Data+0xcc>
4001d6f0:	e1a00001 	mov	r0, r1
4001d6f4:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d6f8:	e1a04800 	lsl	r4, r0, #16
4001d6fc:	e1a04824 	lsr	r4, r4, #16
4001d700:	eb0003b8 	bl	4001e5e8 <GetUsbLinkActive>
4001d704:	e1cd40b4 	strh	r4, [sp, #4]
4001d708:	e284000f 	add	r0, r4, #15
4001d70c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d804 <CyU3PUsbSendEP0Data+0x1d0>
4001d710:	e0000001 	and	r0, r0, r1
4001d714:	e1cd00b6 	strh	r0, [sp, #6]
4001d718:	e58d5000 	str	r5, [sp]
4001d71c:	e3a00000 	mov	r0, #0
4001d720:	e1cd00b8 	strh	r0, [sp, #8]
4001d724:	e1a0100d 	mov	r1, sp
4001d728:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d808 <CyU3PUsbSendEP0Data+0x1d4>
4001d72c:	ebffe571 	bl	40016cf8 <CyU3PDmaChannelSetupSendBuffer>
4001d730:	e20060ff 	and	r6, r0, #255	; 0xff
4001d734:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d7fc <CyU3PUsbSendEP0Data+0x1c8>
4001d738:	ebffb286 	bl	4000a158 <_txe_mutex_put>
4001d73c:	e3560000 	cmp	r6, #0
4001d740:	1a000029 	bne	4001d7ec <CyU3PUsbSendEP0Data+0x1b8>
4001d744:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d7f8 <CyU3PUsbSendEP0Data+0x1c4>
4001d748:	e5900014 	ldr	r0, [r0, #20]
4001d74c:	e3500000 	cmp	r0, #0
4001d750:	0a000000 	beq	4001d758 <CyU3PUsbSendEP0Data+0x124>
4001d754:	ebfffc1d 	bl	4001c7d0 <CyU3PUsbAckSetup>
4001d758:	ea00000d 	b	4001d794 <CyU3PUsbSendEP0Data+0x160>
4001d75c:	e3a01064 	mov	r1, #100	; 0x64
4001d760:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d808 <CyU3PUsbSendEP0Data+0x1d4>
4001d764:	ebffe5f1 	bl	40016f30 <CyU3PDmaChannelWaitForCompletion>
4001d768:	e20060ff 	and	r6, r0, #255	; 0xff
4001d76c:	e3560045 	cmp	r6, #69	; 0x45
4001d770:	1a000006 	bne	4001d790 <CyU3PUsbSendEP0Data+0x15c>
4001d774:	ebfffdba 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d778:	e3500000 	cmp	r0, #0
4001d77c:	0a000001 	beq	4001d788 <CyU3PUsbSendEP0Data+0x154>
4001d780:	e3a00000 	mov	r0, #0
4001d784:	eaffffb3 	b	4001d658 <CyU3PUsbSendEP0Data+0x24>
4001d788:	e2477064 	sub	r7, r7, #100	; 0x64
4001d78c:	ea000000 	b	4001d794 <CyU3PUsbSendEP0Data+0x160>
4001d790:	ea000001 	b	4001d79c <CyU3PUsbSendEP0Data+0x168>
4001d794:	e3570000 	cmp	r7, #0
4001d798:	1affffef 	bne	4001d75c <CyU3PUsbSendEP0Data+0x128>
4001d79c:	e1a00000 	nop			; (mov r0, r0)
4001d7a0:	e3560000 	cmp	r6, #0
4001d7a4:	0a000010 	beq	4001d7ec <CyU3PUsbSendEP0Data+0x1b8>
4001d7a8:	e3e01000 	mvn	r1, #0
4001d7ac:	e59f0048 	ldr	r0, [pc, #72]	; 4001d7fc <CyU3PUsbSendEP0Data+0x1c8>
4001d7b0:	ebffb233 	bl	4000a084 <_txe_mutex_get>
4001d7b4:	e3a01001 	mov	r1, #1
4001d7b8:	e3a00080 	mov	r0, #128	; 0x80
4001d7bc:	eb000101 	bl	4001dbc8 <CyU3PUsbSetEpNak>
4001d7c0:	e3a00064 	mov	r0, #100	; 0x64
4001d7c4:	ebffd7ce 	bl	40013704 <CyU3PBusyWait>
4001d7c8:	e59f0038 	ldr	r0, [pc, #56]	; 4001d808 <CyU3PUsbSendEP0Data+0x1d4>
4001d7cc:	ebffe306 	bl	400163ec <CyU3PDmaChannelReset>
4001d7d0:	e3a00080 	mov	r0, #128	; 0x80
4001d7d4:	ebfffcf5 	bl	4001cbb0 <CyU3PUsbFlushEp>
4001d7d8:	e3a01000 	mov	r1, #0
4001d7dc:	e3a00080 	mov	r0, #128	; 0x80
4001d7e0:	eb0000f8 	bl	4001dbc8 <CyU3PUsbSetEpNak>
4001d7e4:	e59f0010 	ldr	r0, [pc, #16]	; 4001d7fc <CyU3PUsbSendEP0Data+0x1c8>
4001d7e8:	ebffb25a 	bl	4000a158 <_txe_mutex_put>
4001d7ec:	e1a00006 	mov	r0, r6
4001d7f0:	eaffff98 	b	4001d658 <CyU3PUsbSendEP0Data+0x24>
4001d7f4:	00001388 	.word	0x00001388
4001d7f8:	400321c0 	.word	0x400321c0
4001d7fc:	40032360 	.word	0x40032360
4001d800:	e0031000 	.word	0xe0031000
4001d804:	0000fff0 	.word	0x0000fff0
4001d808:	40031ef8 	.word	0x40031ef8

Disassembly of section i.CyU3PUsbSendErdy:

4001d80c <CyU3PUsbSendErdy>:
4001d80c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d810:	e1a04000 	mov	r4, r0
4001d814:	e1a05001 	mov	r5, r1
4001d818:	e1a0000d 	mov	r0, sp
4001d81c:	e3a02000 	mov	r2, #0
4001d820:	e1a03002 	mov	r3, r2
4001d824:	e1a06002 	mov	r6, r2
4001d828:	e880004c 	stm	r0, {r2, r3, r6}
4001d82c:	e204600f 	and	r6, r4, #15
4001d830:	e2047080 	and	r7, r4, #128	; 0x80
4001d834:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d8f0 <CyU3PUsbSendErdy+0xe4>
4001d838:	e5d00008 	ldrb	r0, [r0, #8]
4001d83c:	e3500000 	cmp	r0, #0
4001d840:	1a000001 	bne	4001d84c <CyU3PUsbSendErdy+0x40>
4001d844:	e3a00042 	mov	r0, #66	; 0x42
4001d848:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d84c:	ebfffd7c 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001d850:	e3500003 	cmp	r0, #3
4001d854:	1a000004 	bne	4001d86c <CyU3PUsbSendErdy+0x60>
4001d858:	e59f0094 	ldr	r0, [pc, #148]	; 4001d8f4 <CyU3PUsbSendErdy+0xe8>
4001d85c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d860:	e200003f 	and	r0, r0, #63	; 0x3f
4001d864:	e3500010 	cmp	r0, #16
4001d868:	0a000001 	beq	4001d874 <CyU3PUsbSendErdy+0x68>
4001d86c:	e3a000ff 	mov	r0, #255	; 0xff
4001d870:	eafffff4 	b	4001d848 <CyU3PUsbSendErdy+0x3c>
4001d874:	e204007f 	and	r0, r4, #127	; 0x7f
4001d878:	e350000f 	cmp	r0, #15
4001d87c:	da000001 	ble	4001d888 <CyU3PUsbSendErdy+0x7c>
4001d880:	e3a00040 	mov	r0, #64	; 0x40
4001d884:	eaffffef 	b	4001d848 <CyU3PUsbSendErdy+0x3c>
4001d888:	e59f0064 	ldr	r0, [pc, #100]	; 4001d8f4 <CyU3PUsbSendErdy+0xe8>
4001d88c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d890:	e3a01004 	mov	r1, #4
4001d894:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d898:	e58d0000 	str	r0, [sp]
4001d89c:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d8a0:	e3800003 	orr	r0, r0, #3
4001d8a4:	e1800406 	orr	r0, r0, r6, lsl #8
4001d8a8:	e58d0004 	str	r0, [sp, #4]
4001d8ac:	e3570000 	cmp	r7, #0
4001d8b0:	0a000005 	beq	4001d8cc <CyU3PUsbSendErdy+0xc0>
4001d8b4:	e59f003c 	ldr	r0, [pc, #60]	; 4001d8f8 <CyU3PUsbSendErdy+0xec>
4001d8b8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d8bc:	e3100008 	tst	r0, #8
4001d8c0:	0a000006 	beq	4001d8e0 <CyU3PUsbSendErdy+0xd4>
4001d8c4:	e58d5008 	str	r5, [sp, #8]
4001d8c8:	ea000004 	b	4001d8e0 <CyU3PUsbSendErdy+0xd4>
4001d8cc:	e59f0028 	ldr	r0, [pc, #40]	; 4001d8fc <CyU3PUsbSendErdy+0xf0>
4001d8d0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d8d4:	e3100008 	tst	r0, #8
4001d8d8:	0a000000 	beq	4001d8e0 <CyU3PUsbSendErdy+0xd4>
4001d8dc:	e58d5008 	str	r5, [sp, #8]
4001d8e0:	e1a0000d 	mov	r0, sp
4001d8e4:	eb00123c 	bl	400221dc <CyFx3Usb3SendTP>
4001d8e8:	e3a00000 	mov	r0, #0
4001d8ec:	eaffffd5 	b	4001d848 <CyU3PUsbSendErdy+0x3c>
4001d8f0:	400321c0 	.word	0x400321c0
4001d8f4:	e0033000 	.word	0xe0033000
4001d8f8:	e0033500 	.word	0xe0033500
4001d8fc:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d900 <CyU3PUsbSendNrdy>:
4001d900:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d904:	e1a04000 	mov	r4, r0
4001d908:	e1a05001 	mov	r5, r1
4001d90c:	e1a0000d 	mov	r0, sp
4001d910:	e3a02000 	mov	r2, #0
4001d914:	e1a03002 	mov	r3, r2
4001d918:	e1a06002 	mov	r6, r2
4001d91c:	e880004c 	stm	r0, {r2, r3, r6}
4001d920:	e204600f 	and	r6, r4, #15
4001d924:	e2047080 	and	r7, r4, #128	; 0x80
4001d928:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d9e0 <CyU3PUsbSendNrdy+0xe0>
4001d92c:	e5d00008 	ldrb	r0, [r0, #8]
4001d930:	e3500000 	cmp	r0, #0
4001d934:	1a000001 	bne	4001d940 <CyU3PUsbSendNrdy+0x40>
4001d938:	e3a00042 	mov	r0, #66	; 0x42
4001d93c:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d940:	ebfffd3f 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001d944:	e3500003 	cmp	r0, #3
4001d948:	1a000004 	bne	4001d960 <CyU3PUsbSendNrdy+0x60>
4001d94c:	e59f0090 	ldr	r0, [pc, #144]	; 4001d9e4 <CyU3PUsbSendNrdy+0xe4>
4001d950:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d954:	e200003f 	and	r0, r0, #63	; 0x3f
4001d958:	e3500010 	cmp	r0, #16
4001d95c:	0a000001 	beq	4001d968 <CyU3PUsbSendNrdy+0x68>
4001d960:	e3a000ff 	mov	r0, #255	; 0xff
4001d964:	eafffff4 	b	4001d93c <CyU3PUsbSendNrdy+0x3c>
4001d968:	e204007f 	and	r0, r4, #127	; 0x7f
4001d96c:	e350000f 	cmp	r0, #15
4001d970:	da000001 	ble	4001d97c <CyU3PUsbSendNrdy+0x7c>
4001d974:	e3a00040 	mov	r0, #64	; 0x40
4001d978:	eaffffef 	b	4001d93c <CyU3PUsbSendNrdy+0x3c>
4001d97c:	e59f0060 	ldr	r0, [pc, #96]	; 4001d9e4 <CyU3PUsbSendNrdy+0xe4>
4001d980:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d984:	e3a01004 	mov	r1, #4
4001d988:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d98c:	e58d0000 	str	r0, [sp]
4001d990:	e3870002 	orr	r0, r7, #2
4001d994:	e1800406 	orr	r0, r0, r6, lsl #8
4001d998:	e58d0004 	str	r0, [sp, #4]
4001d99c:	e3570000 	cmp	r7, #0
4001d9a0:	0a000005 	beq	4001d9bc <CyU3PUsbSendNrdy+0xbc>
4001d9a4:	e59f003c 	ldr	r0, [pc, #60]	; 4001d9e8 <CyU3PUsbSendNrdy+0xe8>
4001d9a8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d9ac:	e3100008 	tst	r0, #8
4001d9b0:	0a000006 	beq	4001d9d0 <CyU3PUsbSendNrdy+0xd0>
4001d9b4:	e58d5008 	str	r5, [sp, #8]
4001d9b8:	ea000004 	b	4001d9d0 <CyU3PUsbSendNrdy+0xd0>
4001d9bc:	e59f0028 	ldr	r0, [pc, #40]	; 4001d9ec <CyU3PUsbSendNrdy+0xec>
4001d9c0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d9c4:	e3100008 	tst	r0, #8
4001d9c8:	0a000000 	beq	4001d9d0 <CyU3PUsbSendNrdy+0xd0>
4001d9cc:	e58d5008 	str	r5, [sp, #8]
4001d9d0:	e1a0000d 	mov	r0, sp
4001d9d4:	eb001200 	bl	400221dc <CyFx3Usb3SendTP>
4001d9d8:	e3a00000 	mov	r0, #0
4001d9dc:	eaffffd6 	b	4001d93c <CyU3PUsbSendNrdy+0x3c>
4001d9e0:	400321c0 	.word	0x400321c0
4001d9e4:	e0033000 	.word	0xe0033000
4001d9e8:	e0033500 	.word	0xe0033500
4001d9ec:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d9f0 <CyU3PUsbSetDesc>:
4001d9f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d9f4:	e1a03000 	mov	r3, r0
4001d9f8:	e3a0c000 	mov	ip, #0
4001d9fc:	e59f01b8 	ldr	r0, [pc, #440]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001da00:	e5d00008 	ldrb	r0, [r0, #8]
4001da04:	e3500000 	cmp	r0, #0
4001da08:	1a000001 	bne	4001da14 <CyU3PUsbSetDesc+0x24>
4001da0c:	e3a00042 	mov	r0, #66	; 0x42
4001da10:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001da14:	e3520000 	cmp	r2, #0
4001da18:	1a000001 	bne	4001da24 <CyU3PUsbSetDesc+0x34>
4001da1c:	e3a00040 	mov	r0, #64	; 0x40
4001da20:	eafffffa 	b	4001da10 <CyU3PUsbSetDesc+0x20>
4001da24:	e3530009 	cmp	r3, #9
4001da28:	308ff103 	addcc	pc, pc, r3, lsl #2
4001da2c:	ea00004d 	b	4001db68 <CyU3PUsbSetDesc+0x178>
4001da30:	ea000007 	b	4001da54 <CyU3PUsbSetDesc+0x64>
4001da34:	ea00000a 	b	4001da64 <CyU3PUsbSetDesc+0x74>
4001da38:	ea000011 	b	4001da84 <CyU3PUsbSetDesc+0x94>
4001da3c:	ea000022 	b	4001dacc <CyU3PUsbSetDesc+0xdc>
4001da40:	ea00002f 	b	4001db04 <CyU3PUsbSetDesc+0x114>
4001da44:	ea00003c 	b	4001db3c <CyU3PUsbSetDesc+0x14c>
4001da48:	ea000011 	b	4001da94 <CyU3PUsbSetDesc+0xa4>
4001da4c:	ea000008 	b	4001da74 <CyU3PUsbSetDesc+0x84>
4001da50:	ea000040 	b	4001db58 <CyU3PUsbSetDesc+0x168>
4001da54:	e1a00000 	nop			; (mov r0, r0)
4001da58:	e59f0160 	ldr	r0, [pc, #352]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001da5c:	e5802004 	str	r2, [r0, #4]
4001da60:	ea000043 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001da64:	e1a00000 	nop			; (mov r0, r0)
4001da68:	e59f0150 	ldr	r0, [pc, #336]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001da6c:	e5802000 	str	r2, [r0]
4001da70:	ea00003f 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001da74:	e1a00000 	nop			; (mov r0, r0)
4001da78:	e59f0140 	ldr	r0, [pc, #320]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001da7c:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001da80:	ea00003b 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001da84:	e1a00000 	nop			; (mov r0, r0)
4001da88:	e59f0130 	ldr	r0, [pc, #304]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001da8c:	e5802008 	str	r2, [r0, #8]
4001da90:	ea000037 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001da94:	e1a00000 	nop			; (mov r0, r0)
4001da98:	e59f0120 	ldr	r0, [pc, #288]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001da9c:	e580201c 	str	r2, [r0, #28]
4001daa0:	e5d20007 	ldrb	r0, [r2, #7]
4001daa4:	e3100040 	tst	r0, #64	; 0x40
4001daa8:	0a000003 	beq	4001dabc <CyU3PUsbSetDesc+0xcc>
4001daac:	e3a00001 	mov	r0, #1
4001dab0:	e59fe104 	ldr	lr, [pc, #260]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001dab4:	e5ce0006 	strb	r0, [lr, #6]
4001dab8:	ea000002 	b	4001dac8 <CyU3PUsbSetDesc+0xd8>
4001dabc:	e3a00000 	mov	r0, #0
4001dac0:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001dac4:	e5ce0006 	strb	r0, [lr, #6]
4001dac8:	ea000029 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001dacc:	e1a00000 	nop			; (mov r0, r0)
4001dad0:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001dad4:	e5802018 	str	r2, [r0, #24]
4001dad8:	e5d20007 	ldrb	r0, [r2, #7]
4001dadc:	e3100040 	tst	r0, #64	; 0x40
4001dae0:	0a000003 	beq	4001daf4 <CyU3PUsbSetDesc+0x104>
4001dae4:	e3a00001 	mov	r0, #1
4001dae8:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001daec:	e5ce0006 	strb	r0, [lr, #6]
4001daf0:	ea000002 	b	4001db00 <CyU3PUsbSetDesc+0x110>
4001daf4:	e3a00000 	mov	r0, #0
4001daf8:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001dafc:	e5ce0006 	strb	r0, [lr, #6]
4001db00:	ea00001b 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001db04:	e1a00000 	nop			; (mov r0, r0)
4001db08:	e59f00b0 	ldr	r0, [pc, #176]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001db0c:	e5802014 	str	r2, [r0, #20]
4001db10:	e5d20007 	ldrb	r0, [r2, #7]
4001db14:	e3100040 	tst	r0, #64	; 0x40
4001db18:	0a000003 	beq	4001db2c <CyU3PUsbSetDesc+0x13c>
4001db1c:	e3a00001 	mov	r0, #1
4001db20:	e59fe094 	ldr	lr, [pc, #148]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001db24:	e5ce0006 	strb	r0, [lr, #6]
4001db28:	ea000002 	b	4001db38 <CyU3PUsbSetDesc+0x148>
4001db2c:	e3a00000 	mov	r0, #0
4001db30:	e59fe084 	ldr	lr, [pc, #132]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001db34:	e5ce0006 	strb	r0, [lr, #6]
4001db38:	ea00000d 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001db3c:	e1a00000 	nop			; (mov r0, r0)
4001db40:	e3510010 	cmp	r1, #16
4001db44:	da000000 	ble	4001db4c <CyU3PUsbSetDesc+0x15c>
4001db48:	e3a0c04b 	mov	ip, #75	; 0x4b
4001db4c:	e59f0070 	ldr	r0, [pc, #112]	; 4001dbc4 <CyU3PUsbSetDesc+0x1d4>
4001db50:	e7802101 	str	r2, [r0, r1, lsl #2]
4001db54:	ea000006 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001db58:	e1a00000 	nop			; (mov r0, r0)
4001db5c:	e59f005c 	ldr	r0, [pc, #92]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001db60:	e5802070 	str	r2, [r0, #112]	; 0x70
4001db64:	ea000002 	b	4001db74 <CyU3PUsbSetDesc+0x184>
4001db68:	e1a00000 	nop			; (mov r0, r0)
4001db6c:	e3a00050 	mov	r0, #80	; 0x50
4001db70:	eaffffa6 	b	4001da10 <CyU3PUsbSetDesc+0x20>
4001db74:	e1a00000 	nop			; (mov r0, r0)
4001db78:	e59f0040 	ldr	r0, [pc, #64]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001db7c:	e5900000 	ldr	r0, [r0]
4001db80:	e3500000 	cmp	r0, #0
4001db84:	0a00000a 	beq	4001dbb4 <CyU3PUsbSetDesc+0x1c4>
4001db88:	e59f0030 	ldr	r0, [pc, #48]	; 4001dbc0 <CyU3PUsbSetDesc+0x1d0>
4001db8c:	e5900020 	ldr	r0, [r0, #32]
4001db90:	e3500000 	cmp	r0, #0
4001db94:	0a000006 	beq	4001dbb4 <CyU3PUsbSetDesc+0x1c4>
4001db98:	e59f001c 	ldr	r0, [pc, #28]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001db9c:	e5d00008 	ldrb	r0, [r0, #8]
4001dba0:	e3500003 	cmp	r0, #3
4001dba4:	aa000002 	bge	4001dbb4 <CyU3PUsbSetDesc+0x1c4>
4001dba8:	e3a00003 	mov	r0, #3
4001dbac:	e59fe008 	ldr	lr, [pc, #8]	; 4001dbbc <CyU3PUsbSetDesc+0x1cc>
4001dbb0:	e5ce0008 	strb	r0, [lr, #8]
4001dbb4:	e1a0000c 	mov	r0, ip
4001dbb8:	eaffff94 	b	4001da10 <CyU3PUsbSetDesc+0x20>
4001dbbc:	400321c0 	.word	0x400321c0
4001dbc0:	40032418 	.word	0x40032418
4001dbc4:	40032438 	.word	0x40032438

Disassembly of section i.CyU3PUsbSetEpNak:

4001dbc8 <CyU3PUsbSetEpNak>:
4001dbc8:	e92d4070 	push	{r4, r5, r6, lr}
4001dbcc:	e1a04000 	mov	r4, r0
4001dbd0:	e1a06001 	mov	r6, r1
4001dbd4:	e59f0198 	ldr	r0, [pc, #408]	; 4001dd74 <CyU3PUsbSetEpNak+0x1ac>
4001dbd8:	e5d00008 	ldrb	r0, [r0, #8]
4001dbdc:	e3500000 	cmp	r0, #0
4001dbe0:	1a000001 	bne	4001dbec <CyU3PUsbSetEpNak+0x24>
4001dbe4:	e3a00042 	mov	r0, #66	; 0x42
4001dbe8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dbec:	e204007f 	and	r0, r4, #127	; 0x7f
4001dbf0:	e350000f 	cmp	r0, #15
4001dbf4:	da000001 	ble	4001dc00 <CyU3PUsbSetEpNak+0x38>
4001dbf8:	e3a00040 	mov	r0, #64	; 0x40
4001dbfc:	eafffff9 	b	4001dbe8 <CyU3PUsbSetEpNak+0x20>
4001dc00:	e3e01000 	mvn	r1, #0
4001dc04:	e59f016c 	ldr	r0, [pc, #364]	; 4001dd78 <CyU3PUsbSetEpNak+0x1b0>
4001dc08:	ebffb11d 	bl	4000a084 <_txe_mutex_get>
4001dc0c:	e3560000 	cmp	r6, #0
4001dc10:	0a000028 	beq	4001dcb8 <CyU3PUsbSetEpNak+0xf0>
4001dc14:	e3140080 	tst	r4, #128	; 0x80
4001dc18:	0a000012 	beq	4001dc68 <CyU3PUsbSetEpNak+0xa0>
4001dc1c:	e59f0150 	ldr	r0, [pc, #336]	; 4001dd74 <CyU3PUsbSetEpNak+0x1ac>
4001dc20:	e5d00009 	ldrb	r0, [r0, #9]
4001dc24:	e3500003 	cmp	r0, #3
4001dc28:	1a000006 	bne	4001dc48 <CyU3PUsbSetEpNak+0x80>
4001dc2c:	e59f0148 	ldr	r0, [pc, #328]	; 4001dd7c <CyU3PUsbSetEpNak+0x1b4>
4001dc30:	e204100f 	and	r1, r4, #15
4001dc34:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001dc38:	e3855003 	orr	r5, r5, #3
4001dc3c:	e204100f 	and	r1, r4, #15
4001dc40:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dc44:	ea000046 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dc48:	e59f0130 	ldr	r0, [pc, #304]	; 4001dd80 <CyU3PUsbSetEpNak+0x1b8>
4001dc4c:	e204100f 	and	r1, r4, #15
4001dc50:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dc54:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001dc58:	e59f1120 	ldr	r1, [pc, #288]	; 4001dd80 <CyU3PUsbSetEpNak+0x1b8>
4001dc5c:	e204200f 	and	r2, r4, #15
4001dc60:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dc64:	ea00003e 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dc68:	e59f0104 	ldr	r0, [pc, #260]	; 4001dd74 <CyU3PUsbSetEpNak+0x1ac>
4001dc6c:	e5d00009 	ldrb	r0, [r0, #9]
4001dc70:	e3500003 	cmp	r0, #3
4001dc74:	1a000007 	bne	4001dc98 <CyU3PUsbSetEpNak+0xd0>
4001dc78:	e59f0104 	ldr	r0, [pc, #260]	; 4001dd84 <CyU3PUsbSetEpNak+0x1bc>
4001dc7c:	e204100f 	and	r1, r4, #15
4001dc80:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dc84:	e3805003 	orr	r5, r0, #3
4001dc88:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dd84 <CyU3PUsbSetEpNak+0x1bc>
4001dc8c:	e204100f 	and	r1, r4, #15
4001dc90:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dc94:	ea000032 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dc98:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dd88 <CyU3PUsbSetEpNak+0x1c0>
4001dc9c:	e204100f 	and	r1, r4, #15
4001dca0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dca4:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001dca8:	e59f10d8 	ldr	r1, [pc, #216]	; 4001dd88 <CyU3PUsbSetEpNak+0x1c0>
4001dcac:	e204200f 	and	r2, r4, #15
4001dcb0:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dcb4:	ea00002a 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dcb8:	e3140080 	tst	r4, #128	; 0x80
4001dcbc:	0a000014 	beq	4001dd14 <CyU3PUsbSetEpNak+0x14c>
4001dcc0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001dd74 <CyU3PUsbSetEpNak+0x1ac>
4001dcc4:	e5d00009 	ldrb	r0, [r0, #9]
4001dcc8:	e3500003 	cmp	r0, #3
4001dccc:	1a000008 	bne	4001dcf4 <CyU3PUsbSetEpNak+0x12c>
4001dcd0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001dd7c <CyU3PUsbSetEpNak+0x1b4>
4001dcd4:	e204100f 	and	r1, r4, #15
4001dcd8:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001dcdc:	e3c50002 	bic	r0, r5, #2
4001dce0:	e3805001 	orr	r5, r0, #1
4001dce4:	e59f0090 	ldr	r0, [pc, #144]	; 4001dd7c <CyU3PUsbSetEpNak+0x1b4>
4001dce8:	e204100f 	and	r1, r4, #15
4001dcec:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dcf0:	ea00001b 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dcf4:	e59f0084 	ldr	r0, [pc, #132]	; 4001dd80 <CyU3PUsbSetEpNak+0x1b8>
4001dcf8:	e204100f 	and	r1, r4, #15
4001dcfc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dd00:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dd04:	e59f1074 	ldr	r1, [pc, #116]	; 4001dd80 <CyU3PUsbSetEpNak+0x1b8>
4001dd08:	e204200f 	and	r2, r4, #15
4001dd0c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dd10:	ea000013 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dd14:	e59f0058 	ldr	r0, [pc, #88]	; 4001dd74 <CyU3PUsbSetEpNak+0x1ac>
4001dd18:	e5d00009 	ldrb	r0, [r0, #9]
4001dd1c:	e3500003 	cmp	r0, #3
4001dd20:	1a000008 	bne	4001dd48 <CyU3PUsbSetEpNak+0x180>
4001dd24:	e59f0058 	ldr	r0, [pc, #88]	; 4001dd84 <CyU3PUsbSetEpNak+0x1bc>
4001dd28:	e204100f 	and	r1, r4, #15
4001dd2c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dd30:	e3c00002 	bic	r0, r0, #2
4001dd34:	e3805001 	orr	r5, r0, #1
4001dd38:	e59f0044 	ldr	r0, [pc, #68]	; 4001dd84 <CyU3PUsbSetEpNak+0x1bc>
4001dd3c:	e204100f 	and	r1, r4, #15
4001dd40:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dd44:	ea000006 	b	4001dd64 <CyU3PUsbSetEpNak+0x19c>
4001dd48:	e59f0038 	ldr	r0, [pc, #56]	; 4001dd88 <CyU3PUsbSetEpNak+0x1c0>
4001dd4c:	e204100f 	and	r1, r4, #15
4001dd50:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dd54:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dd58:	e59f1028 	ldr	r1, [pc, #40]	; 4001dd88 <CyU3PUsbSetEpNak+0x1c0>
4001dd5c:	e204200f 	and	r2, r4, #15
4001dd60:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dd64:	e59f000c 	ldr	r0, [pc, #12]	; 4001dd78 <CyU3PUsbSetEpNak+0x1b0>
4001dd68:	ebffb0fa 	bl	4000a158 <_txe_mutex_put>
4001dd6c:	e3a00000 	mov	r0, #0
4001dd70:	eaffff9c 	b	4001dbe8 <CyU3PUsbSetEpNak+0x20>
4001dd74:	400321c0 	.word	0x400321c0
4001dd78:	40032360 	.word	0x40032360
4001dd7c:	e0033500 	.word	0xe0033500
4001dd80:	e0031418 	.word	0xe0031418
4001dd84:	e0033600 	.word	0xe0033600
4001dd88:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001dd8c <CyU3PUsbSetLinkPowerState>:
4001dd8c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dd90:	e1a01000 	mov	r1, r0
4001dd94:	e3a030ff 	mov	r3, #255	; 0xff
4001dd98:	e59f0138 	ldr	r0, [pc, #312]	; 4001ded8 <CyU3PUsbSetLinkPowerState+0x14c>
4001dd9c:	e5d00008 	ldrb	r0, [r0, #8]
4001dda0:	e3500000 	cmp	r0, #0
4001dda4:	1a000001 	bne	4001ddb0 <CyU3PUsbSetLinkPowerState+0x24>
4001dda8:	e3a00042 	mov	r0, #66	; 0x42
4001ddac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001ddb0:	e59f0120 	ldr	r0, [pc, #288]	; 4001ded8 <CyU3PUsbSetLinkPowerState+0x14c>
4001ddb4:	e5d00008 	ldrb	r0, [r0, #8]
4001ddb8:	e3500005 	cmp	r0, #5
4001ddbc:	aa000001 	bge	4001ddc8 <CyU3PUsbSetLinkPowerState+0x3c>
4001ddc0:	e3a00044 	mov	r0, #68	; 0x44
4001ddc4:	eafffff8 	b	4001ddac <CyU3PUsbSetLinkPowerState+0x20>
4001ddc8:	ebfffc1d 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001ddcc:	e3500003 	cmp	r0, #3
4001ddd0:	0a000001 	beq	4001dddc <CyU3PUsbSetLinkPowerState+0x50>
4001ddd4:	e3a000ff 	mov	r0, #255	; 0xff
4001ddd8:	eafffff3 	b	4001ddac <CyU3PUsbSetLinkPowerState+0x20>
4001dddc:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001dde0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dde4:	e200203f 	and	r2, r0, #63	; 0x3f
4001dde8:	e3510000 	cmp	r1, #0
4001ddec:	0a000004 	beq	4001de04 <CyU3PUsbSetLinkPowerState+0x78>
4001ddf0:	e3510001 	cmp	r1, #1
4001ddf4:	0a000015 	beq	4001de50 <CyU3PUsbSetLinkPowerState+0xc4>
4001ddf8:	e3510002 	cmp	r1, #2
4001ddfc:	1a00002f 	bne	4001dec0 <CyU3PUsbSetLinkPowerState+0x134>
4001de00:	ea000020 	b	4001de88 <CyU3PUsbSetLinkPowerState+0xfc>
4001de04:	e1a00000 	nop			; (mov r0, r0)
4001de08:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de0c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001de10:	e3100c02 	tst	r0, #512	; 0x200
4001de14:	1a00000b 	bne	4001de48 <CyU3PUsbSetLinkPowerState+0xbc>
4001de18:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de1c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001de20:	e200203f 	and	r2, r0, #63	; 0x3f
4001de24:	e3520011 	cmp	r2, #17
4001de28:	ba000006 	blt	4001de48 <CyU3PUsbSetLinkPowerState+0xbc>
4001de2c:	e3520013 	cmp	r2, #19
4001de30:	ca000004 	bgt	4001de48 <CyU3PUsbSetLinkPowerState+0xbc>
4001de34:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001de3c:	e3800c02 	orr	r0, r0, #512	; 0x200
4001de40:	e59fc094 	ldr	ip, [pc, #148]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de44:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001de48:	e3a03000 	mov	r3, #0
4001de4c:	ea00001e 	b	4001decc <CyU3PUsbSetLinkPowerState+0x140>
4001de50:	e1a00000 	nop			; (mov r0, r0)
4001de54:	e3520010 	cmp	r2, #16
4001de58:	1a000009 	bne	4001de84 <CyU3PUsbSetLinkPowerState+0xf8>
4001de5c:	e59f0074 	ldr	r0, [pc, #116]	; 4001ded8 <CyU3PUsbSetLinkPowerState+0x14c>
4001de60:	e5d00006 	ldrb	r0, [r0, #6]
4001de64:	e3100004 	tst	r0, #4
4001de68:	0a000005 	beq	4001de84 <CyU3PUsbSetLinkPowerState+0xf8>
4001de6c:	e59f0068 	ldr	r0, [pc, #104]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de70:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001de74:	e3800001 	orr	r0, r0, #1
4001de78:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001de7c:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001de80:	e3a03000 	mov	r3, #0
4001de84:	ea000010 	b	4001decc <CyU3PUsbSetLinkPowerState+0x140>
4001de88:	e1a00000 	nop			; (mov r0, r0)
4001de8c:	e3520010 	cmp	r2, #16
4001de90:	1a000009 	bne	4001debc <CyU3PUsbSetLinkPowerState+0x130>
4001de94:	e59f003c 	ldr	r0, [pc, #60]	; 4001ded8 <CyU3PUsbSetLinkPowerState+0x14c>
4001de98:	e5d00006 	ldrb	r0, [r0, #6]
4001de9c:	e3100008 	tst	r0, #8
4001dea0:	0a000005 	beq	4001debc <CyU3PUsbSetLinkPowerState+0x130>
4001dea4:	e59f0030 	ldr	r0, [pc, #48]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001dea8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001deac:	e3800002 	orr	r0, r0, #2
4001deb0:	e59fc024 	ldr	ip, [pc, #36]	; 4001dedc <CyU3PUsbSetLinkPowerState+0x150>
4001deb4:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001deb8:	e3a03000 	mov	r3, #0
4001debc:	ea000002 	b	4001decc <CyU3PUsbSetLinkPowerState+0x140>
4001dec0:	e1a00000 	nop			; (mov r0, r0)
4001dec4:	e3a03040 	mov	r3, #64	; 0x40
4001dec8:	e1a00000 	nop			; (mov r0, r0)
4001decc:	e1a00000 	nop			; (mov r0, r0)
4001ded0:	e1a00003 	mov	r0, r3
4001ded4:	eaffffb4 	b	4001ddac <CyU3PUsbSetLinkPowerState+0x20>
4001ded8:	400321c0 	.word	0x400321c0
4001dedc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dee0 <CyU3PUsbStall>:
4001dee0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dee4:	e1a04000 	mov	r4, r0
4001dee8:	e1a05001 	mov	r5, r1
4001deec:	e1a06002 	mov	r6, r2
4001def0:	e204700f 	and	r7, r4, #15
4001def4:	e3a08000 	mov	r8, #0
4001def8:	e59f0344 	ldr	r0, [pc, #836]	; 4001e244 <CyU3PUsbStall+0x364>
4001defc:	e5d00008 	ldrb	r0, [r0, #8]
4001df00:	e3500000 	cmp	r0, #0
4001df04:	1a000001 	bne	4001df10 <CyU3PUsbStall+0x30>
4001df08:	e3a00042 	mov	r0, #66	; 0x42
4001df0c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001df10:	e204007f 	and	r0, r4, #127	; 0x7f
4001df14:	e350000f 	cmp	r0, #15
4001df18:	da000001 	ble	4001df24 <CyU3PUsbStall+0x44>
4001df1c:	e3a00040 	mov	r0, #64	; 0x40
4001df20:	eafffff9 	b	4001df0c <CyU3PUsbStall+0x2c>
4001df24:	e3570000 	cmp	r7, #0
4001df28:	1a000003 	bne	4001df3c <CyU3PUsbStall+0x5c>
4001df2c:	e3550000 	cmp	r5, #0
4001df30:	1a000001 	bne	4001df3c <CyU3PUsbStall+0x5c>
4001df34:	e3a00040 	mov	r0, #64	; 0x40
4001df38:	eafffff3 	b	4001df0c <CyU3PUsbStall+0x2c>
4001df3c:	e59f0300 	ldr	r0, [pc, #768]	; 4001e244 <CyU3PUsbStall+0x364>
4001df40:	e5d00009 	ldrb	r0, [r0, #9]
4001df44:	e3500000 	cmp	r0, #0
4001df48:	1a000001 	bne	4001df54 <CyU3PUsbStall+0x74>
4001df4c:	e3a00000 	mov	r0, #0
4001df50:	eaffffed 	b	4001df0c <CyU3PUsbStall+0x2c>
4001df54:	e3e01000 	mvn	r1, #0
4001df58:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e248 <CyU3PUsbStall+0x368>
4001df5c:	ebffb048 	bl	4000a084 <_txe_mutex_get>
4001df60:	e3570000 	cmp	r7, #0
4001df64:	1a000037 	bne	4001e048 <CyU3PUsbStall+0x168>
4001df68:	ebfffbbd 	bl	4001ce64 <CyU3PUsbIsNewCtrlRqtRecvd>
4001df6c:	e3500000 	cmp	r0, #0
4001df70:	0a000003 	beq	4001df84 <CyU3PUsbStall+0xa4>
4001df74:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e248 <CyU3PUsbStall+0x368>
4001df78:	ebffb076 	bl	4000a158 <_txe_mutex_put>
4001df7c:	e3a00000 	mov	r0, #0
4001df80:	eaffffe1 	b	4001df0c <CyU3PUsbStall+0x2c>
4001df84:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e244 <CyU3PUsbStall+0x364>
4001df88:	e5d00009 	ldrb	r0, [r0, #9]
4001df8c:	e3500003 	cmp	r0, #3
4001df90:	1a00001b 	bne	4001e004 <CyU3PUsbStall+0x124>
4001df94:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e24c <CyU3PUsbStall+0x36c>
4001df98:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001df9c:	e3800004 	orr	r0, r0, #4
4001dfa0:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e24c <CyU3PUsbStall+0x36c>
4001dfa4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001dfa8:	e1a00001 	mov	r0, r1
4001dfac:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dfb0:	e3800004 	orr	r0, r0, #4
4001dfb4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dfb8:	eb00104b 	bl	400220ec <CyU3PVicDisableAllInterrupts>
4001dfbc:	e1a0a000 	mov	sl, r0
4001dfc0:	e3a00001 	mov	r0, #1
4001dfc4:	ebffd5ce 	bl	40013704 <CyU3PBusyWait>
4001dfc8:	e59f027c 	ldr	r0, [pc, #636]	; 4001e24c <CyU3PUsbStall+0x36c>
4001dfcc:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dfd0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dfd4:	e59f1270 	ldr	r1, [pc, #624]	; 4001e24c <CyU3PUsbStall+0x36c>
4001dfd8:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dfdc:	e1a0000a 	mov	r0, sl
4001dfe0:	eb00104f 	bl	40022124 <CyU3PVicEnableInterrupts>
4001dfe4:	e3a00000 	mov	r0, #0
4001dfe8:	e59f1260 	ldr	r1, [pc, #608]	; 4001e250 <CyU3PUsbStall+0x370>
4001dfec:	e5810000 	str	r0, [r1]
4001dff0:	e59f125c 	ldr	r1, [pc, #604]	; 4001e254 <CyU3PUsbStall+0x374>
4001dff4:	e5810000 	str	r0, [r1]
4001dff8:	e59f0258 	ldr	r0, [pc, #600]	; 4001e258 <CyU3PUsbStall+0x378>
4001dffc:	ebffb302 	bl	4000ac0c <_txe_timer_deactivate>
4001e000:	ea00000c 	b	4001e038 <CyU3PUsbStall+0x158>
4001e004:	e59f0250 	ldr	r0, [pc, #592]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e008:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e00c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e010:	e59f1244 	ldr	r1, [pc, #580]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e014:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e018:	e1a00001 	mov	r0, r1
4001e01c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e020:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e024:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e028:	e1a00001 	mov	r0, r1
4001e02c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e030:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001e034:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e038:	e59f0208 	ldr	r0, [pc, #520]	; 4001e248 <CyU3PUsbStall+0x368>
4001e03c:	ebffb045 	bl	4000a158 <_txe_mutex_put>
4001e040:	e3a00000 	mov	r0, #0
4001e044:	eaffffb0 	b	4001df0c <CyU3PUsbStall+0x2c>
4001e048:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e244 <CyU3PUsbStall+0x364>
4001e04c:	e5d00009 	ldrb	r0, [r0, #9]
4001e050:	e3500003 	cmp	r0, #3
4001e054:	1a000033 	bne	4001e128 <CyU3PUsbStall+0x248>
4001e058:	e3140080 	tst	r4, #128	; 0x80
4001e05c:	0a000017 	beq	4001e0c0 <CyU3PUsbStall+0x1e0>
4001e060:	e3550000 	cmp	r5, #0
4001e064:	0a00000a 	beq	4001e094 <CyU3PUsbStall+0x1b4>
4001e068:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e260 <CyU3PUsbStall+0x380>
4001e06c:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e070:	e3899005 	orr	r9, r9, #5
4001e074:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e078:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001e07c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e080:	e1a01800 	lsl	r1, r0, #16
4001e084:	e1a01821 	lsr	r1, r1, #16
4001e088:	e1a00004 	mov	r0, r4
4001e08c:	ebfffdde 	bl	4001d80c <CyU3PUsbSendErdy>
4001e090:	ea000041 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e094:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e260 <CyU3PUsbStall+0x380>
4001e098:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e09c:	e3899011 	orr	r9, r9, #17
4001e0a0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e0a4:	e3a00001 	mov	r0, #1
4001e0a8:	ebffd595 	bl	40013704 <CyU3PBusyWait>
4001e0ac:	e3c90014 	bic	r0, r9, #20
4001e0b0:	e3809001 	orr	r9, r0, #1
4001e0b4:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e260 <CyU3PUsbStall+0x380>
4001e0b8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e0bc:	ea000036 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e0c0:	e3550000 	cmp	r5, #0
4001e0c4:	0a00000b 	beq	4001e0f8 <CyU3PUsbStall+0x218>
4001e0c8:	e59f0194 	ldr	r0, [pc, #404]	; 4001e264 <CyU3PUsbStall+0x384>
4001e0cc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e0d0:	e3809005 	orr	r9, r0, #5
4001e0d4:	e59f0188 	ldr	r0, [pc, #392]	; 4001e264 <CyU3PUsbStall+0x384>
4001e0d8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e0dc:	e28000c0 	add	r0, r0, #192	; 0xc0
4001e0e0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e0e4:	e1a01800 	lsl	r1, r0, #16
4001e0e8:	e1a01821 	lsr	r1, r1, #16
4001e0ec:	e1a00004 	mov	r0, r4
4001e0f0:	ebfffdc5 	bl	4001d80c <CyU3PUsbSendErdy>
4001e0f4:	ea000028 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e0f8:	e59f0164 	ldr	r0, [pc, #356]	; 4001e264 <CyU3PUsbStall+0x384>
4001e0fc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e100:	e3809011 	orr	r9, r0, #17
4001e104:	e59f0158 	ldr	r0, [pc, #344]	; 4001e264 <CyU3PUsbStall+0x384>
4001e108:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e10c:	e3a00001 	mov	r0, #1
4001e110:	ebffd57b 	bl	40013704 <CyU3PBusyWait>
4001e114:	e3c90014 	bic	r0, r9, #20
4001e118:	e3809001 	orr	r9, r0, #1
4001e11c:	e59f0140 	ldr	r0, [pc, #320]	; 4001e264 <CyU3PUsbStall+0x384>
4001e120:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e124:	ea00001c 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e128:	e3140080 	tst	r4, #128	; 0x80
4001e12c:	0a00000d 	beq	4001e168 <CyU3PUsbStall+0x288>
4001e130:	e3550000 	cmp	r5, #0
4001e134:	0a000005 	beq	4001e150 <CyU3PUsbStall+0x270>
4001e138:	e59f0128 	ldr	r0, [pc, #296]	; 4001e268 <CyU3PUsbStall+0x388>
4001e13c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e140:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e144:	e59f111c 	ldr	r1, [pc, #284]	; 4001e268 <CyU3PUsbStall+0x388>
4001e148:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e14c:	ea000012 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e150:	e59f0110 	ldr	r0, [pc, #272]	; 4001e268 <CyU3PUsbStall+0x388>
4001e154:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e158:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e15c:	e59f1104 	ldr	r1, [pc, #260]	; 4001e268 <CyU3PUsbStall+0x388>
4001e160:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e164:	ea00000c 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e168:	e3550000 	cmp	r5, #0
4001e16c:	0a000005 	beq	4001e188 <CyU3PUsbStall+0x2a8>
4001e170:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e26c <CyU3PUsbStall+0x38c>
4001e174:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e178:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e17c:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e26c <CyU3PUsbStall+0x38c>
4001e180:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e184:	ea000004 	b	4001e19c <CyU3PUsbStall+0x2bc>
4001e188:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e26c <CyU3PUsbStall+0x38c>
4001e18c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e190:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e194:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e26c <CyU3PUsbStall+0x38c>
4001e198:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e19c:	e3560000 	cmp	r6, #0
4001e1a0:	0a000023 	beq	4001e234 <CyU3PUsbStall+0x354>
4001e1a4:	e3550000 	cmp	r5, #0
4001e1a8:	1a000021 	bne	4001e234 <CyU3PUsbStall+0x354>
4001e1ac:	e59f0090 	ldr	r0, [pc, #144]	; 4001e244 <CyU3PUsbStall+0x364>
4001e1b0:	e5d00009 	ldrb	r0, [r0, #9]
4001e1b4:	e3500003 	cmp	r0, #3
4001e1b8:	1a00000b 	bne	4001e1ec <CyU3PUsbStall+0x30c>
4001e1bc:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e1c0:	e3140080 	tst	r4, #128	; 0x80
4001e1c4:	0a000000 	beq	4001e1cc <CyU3PUsbStall+0x2ec>
4001e1c8:	e3888010 	orr	r8, r8, #16
4001e1cc:	e59f0078 	ldr	r0, [pc, #120]	; 4001e24c <CyU3PUsbStall+0x36c>
4001e1d0:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e1d4:	e1a00000 	nop			; (mov r0, r0)
4001e1d8:	e59f006c 	ldr	r0, [pc, #108]	; 4001e24c <CyU3PUsbStall+0x36c>
4001e1dc:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e1e0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e1e4:	0afffffb 	beq	4001e1d8 <CyU3PUsbStall+0x2f8>
4001e1e8:	ea000011 	b	4001e234 <CyU3PUsbStall+0x354>
4001e1ec:	e3140080 	tst	r4, #128	; 0x80
4001e1f0:	0a000000 	beq	4001e1f8 <CyU3PUsbStall+0x318>
4001e1f4:	e3877010 	orr	r7, r7, #16
4001e1f8:	e59f005c 	ldr	r0, [pc, #92]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e1fc:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e200:	e1a00000 	nop			; (mov r0, r0)
4001e204:	e59f0050 	ldr	r0, [pc, #80]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e208:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e20c:	e3100c01 	tst	r0, #256	; 0x100
4001e210:	0afffffb 	beq	4001e204 <CyU3PUsbStall+0x324>
4001e214:	e3877020 	orr	r7, r7, #32
4001e218:	e59f003c 	ldr	r0, [pc, #60]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e21c:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e220:	e1a00000 	nop			; (mov r0, r0)
4001e224:	e59f0030 	ldr	r0, [pc, #48]	; 4001e25c <CyU3PUsbStall+0x37c>
4001e228:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e22c:	e3100c01 	tst	r0, #256	; 0x100
4001e230:	0afffffb 	beq	4001e224 <CyU3PUsbStall+0x344>
4001e234:	e59f000c 	ldr	r0, [pc, #12]	; 4001e248 <CyU3PUsbStall+0x368>
4001e238:	ebffafc6 	bl	4000a158 <_txe_mutex_put>
4001e23c:	e3a00000 	mov	r0, #0
4001e240:	eaffff31 	b	4001df0c <CyU3PUsbStall+0x2c>
4001e244:	400321c0 	.word	0x400321c0
4001e248:	40032360 	.word	0x40032360
4001e24c:	e0033000 	.word	0xe0033000
4001e250:	4003123c 	.word	0x4003123c
4001e254:	40031240 	.word	0x40031240
4001e258:	40032b20 	.word	0x40032b20
4001e25c:	e0031000 	.word	0xe0031000
4001e260:	e0033500 	.word	0xe0033500
4001e264:	e0033600 	.word	0xe0033600
4001e268:	e0031418 	.word	0xe0031418
4001e26c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e270 <CyU3PUsbStart>:
4001e270:	e92d4070 	push	{r4, r5, r6, lr}
4001e274:	e59f0324 	ldr	r0, [pc, #804]	; 4001e5a0 <CyU3PUsbStart+0x330>
4001e278:	e5900000 	ldr	r0, [r0]
4001e27c:	e3500000 	cmp	r0, #0
4001e280:	1a000001 	bne	4001e28c <CyU3PUsbStart+0x1c>
4001e284:	e3a00010 	mov	r0, #16
4001e288:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e28c:	e59f0310 	ldr	r0, [pc, #784]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e290:	e5d00008 	ldrb	r0, [r0, #8]
4001e294:	e3500000 	cmp	r0, #0
4001e298:	0a000001 	beq	4001e2a4 <CyU3PUsbStart+0x34>
4001e29c:	e3a00043 	mov	r0, #67	; 0x43
4001e2a0:	eafffff8 	b	4001e288 <CyU3PUsbStart+0x18>
4001e2a4:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e5a8 <CyU3PUsbStart+0x338>
4001e2a8:	e5900000 	ldr	r0, [r0]
4001e2ac:	e3500000 	cmp	r0, #0
4001e2b0:	0a00006b 	beq	4001e464 <CyU3PUsbStart+0x1f4>
4001e2b4:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e5ac <CyU3PUsbStart+0x33c>
4001e2b8:	eb00059e 	bl	4001f938 <CyU3PUibSocketInit>
4001e2bc:	ebfff98c 	bl	4001c8f4 <CyU3PUsbCreateDmaChannels>
4001e2c0:	e1a04000 	mov	r4, r0
4001e2c4:	e3540000 	cmp	r4, #0
4001e2c8:	0a000001 	beq	4001e2d4 <CyU3PUsbStart+0x64>
4001e2cc:	e1a00004 	mov	r0, r4
4001e2d0:	eaffffec 	b	4001e288 <CyU3PUsbStart+0x18>
4001e2d4:	e3a00001 	mov	r0, #1
4001e2d8:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e2dc:	e5c10008 	strb	r0, [r1, #8]
4001e2e0:	e5950004 	ldr	r0, [r5, #4]
4001e2e4:	e5c10009 	strb	r0, [r1, #9]
4001e2e8:	e1a00005 	mov	r0, r5
4001e2ec:	ebfffaef 	bl	4001ceb0 <CyU3PUsbLoadBootloaderDescs>
4001e2f0:	e1a04000 	mov	r4, r0
4001e2f4:	e3540000 	cmp	r4, #0
4001e2f8:	0a000001 	beq	4001e304 <CyU3PUsbStart+0x94>
4001e2fc:	e1a00004 	mov	r0, r4
4001e300:	eaffffe0 	b	4001e288 <CyU3PUsbStart+0x18>
4001e304:	e3a00006 	mov	r0, #6
4001e308:	e59f1294 	ldr	r1, [pc, #660]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e30c:	e5c10008 	strb	r0, [r1, #8]
4001e310:	e2810000 	add	r0, r1, #0
4001e314:	e5d00009 	ldrb	r0, [r0, #9]
4001e318:	e3500003 	cmp	r0, #3
4001e31c:	1a000002 	bne	4001e32c <CyU3PUsbStart+0xbc>
4001e320:	e3a00001 	mov	r0, #1
4001e324:	e59f1284 	ldr	r1, [pc, #644]	; 4001e5b0 <CyU3PUsbStart+0x340>
4001e328:	e5810000 	str	r0, [r1]
4001e32c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e330:	e59f127c 	ldr	r1, [pc, #636]	; 4001e5b4 <CyU3PUsbStart+0x344>
4001e334:	e1500001 	cmp	r0, r1
4001e338:	1a000015 	bne	4001e394 <CyU3PUsbStart+0x124>
4001e33c:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e340:	e59f1270 	ldr	r1, [pc, #624]	; 4001e5b8 <CyU3PUsbStart+0x348>
4001e344:	e1500001 	cmp	r0, r1
4001e348:	3a000007 	bcc	4001e36c <CyU3PUsbStart+0xfc>
4001e34c:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e350:	e3500000 	cmp	r0, #0
4001e354:	0a000001 	beq	4001e360 <CyU3PUsbStart+0xf0>
4001e358:	e3a00001 	mov	r0, #1
4001e35c:	ea000000 	b	4001e364 <CyU3PUsbStart+0xf4>
4001e360:	e3a00000 	mov	r0, #0
4001e364:	e59f1238 	ldr	r1, [pc, #568]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e368:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e36c:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e370:	e59f1244 	ldr	r1, [pc, #580]	; 4001e5bc <CyU3PUsbStart+0x34c>
4001e374:	e1500001 	cmp	r0, r1
4001e378:	3a000008 	bcc	4001e3a0 <CyU3PUsbStart+0x130>
4001e37c:	e59f023c 	ldr	r0, [pc, #572]	; 4001e5c0 <CyU3PUsbStart+0x350>
4001e380:	e5900000 	ldr	r0, [r0]
4001e384:	e3800002 	orr	r0, r0, #2
4001e388:	e59f1230 	ldr	r1, [pc, #560]	; 4001e5c0 <CyU3PUsbStart+0x350>
4001e38c:	e5810000 	str	r0, [r1]
4001e390:	ea000002 	b	4001e3a0 <CyU3PUsbStart+0x130>
4001e394:	e3a00001 	mov	r0, #1
4001e398:	e59f1204 	ldr	r1, [pc, #516]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e39c:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e3a0:	e3e00000 	mvn	r0, #0
4001e3a4:	e59f1218 	ldr	r1, [pc, #536]	; 4001e5c4 <CyU3PUsbStart+0x354>
4001e3a8:	e5810004 	str	r0, [r1, #4]
4001e3ac:	e59f0214 	ldr	r0, [pc, #532]	; 4001e5c8 <CyU3PUsbStart+0x358>
4001e3b0:	e5810008 	str	r0, [r1, #8]
4001e3b4:	e3e00000 	mvn	r0, #0
4001e3b8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e3bc:	e59f0208 	ldr	r0, [pc, #520]	; 4001e5cc <CyU3PUsbStart+0x35c>
4001e3c0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e3c4:	e3a00000 	mov	r0, #0
4001e3c8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e3cc:	e3e00000 	mvn	r0, #0
4001e3d0:	e0811680 	add	r1, r1, r0, lsl #13
4001e3d4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e3d8:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e5d0 <CyU3PUsbStart+0x360>
4001e3dc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e3e0:	e3e00000 	mvn	r0, #0
4001e3e4:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e3e8:	e3a00000 	mov	r0, #0
4001e3ec:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e3f0:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e3f4:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e3f8:	e5810004 	str	r0, [r1, #4]
4001e3fc:	e3a00008 	mov	r0, #8
4001e400:	eb000f42 	bl	40022110 <CyU3PVicEnableInt>
4001e404:	e3a00009 	mov	r0, #9
4001e408:	eb000f40 	bl	40022110 <CyU3PVicEnableInt>
4001e40c:	ebfffa8c 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001e410:	e1a06000 	mov	r6, r0
4001e414:	eb0006b5 	bl	4001fef0 <CyU3PUsbEpPrepare>
4001e418:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e5c0 <CyU3PUsbStart+0x350>
4001e41c:	e5900000 	ldr	r0, [r0]
4001e420:	e3100002 	tst	r0, #2
4001e424:	1a000003 	bne	4001e438 <CyU3PUsbStart+0x1c8>
4001e428:	e3e00000 	mvn	r0, #0
4001e42c:	e5850000 	str	r0, [r5]
4001e430:	e3a00000 	mov	r0, #0
4001e434:	e585000c 	str	r0, [r5, #12]
4001e438:	e3e00000 	mvn	r0, #0
4001e43c:	e59f1190 	ldr	r1, [pc, #400]	; 4001e5d4 <CyU3PUsbStart+0x364>
4001e440:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e444:	e3a00b01 	mov	r0, #1024	; 0x400
4001e448:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e44c:	e59f1150 	ldr	r1, [pc, #336]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e450:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e454:	e3a00015 	mov	r0, #21
4001e458:	eb000f2c 	bl	40022110 <CyU3PVicEnableInt>
4001e45c:	e3a000fe 	mov	r0, #254	; 0xfe
4001e460:	eaffff88 	b	4001e288 <CyU3PUsbStart+0x18>
4001e464:	e1a00000 	nop			; (mov r0, r0)
4001e468:	e59f0168 	ldr	r0, [pc, #360]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e46c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e470:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e474:	e59f115c 	ldr	r1, [pc, #348]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e478:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e47c:	e3a00002 	mov	r0, #2
4001e480:	ebffd49f 	bl	40013704 <CyU3PBusyWait>
4001e484:	e59f014c 	ldr	r0, [pc, #332]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e488:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e48c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e490:	e59f1140 	ldr	r1, [pc, #320]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e494:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e498:	e1a00001 	mov	r0, r1
4001e49c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e4a0:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e4a4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e4a8:	e1a00001 	mov	r0, r1
4001e4ac:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e4b0:	e3800008 	orr	r0, r0, #8
4001e4b4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e4b8:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e4bc:	e5900008 	ldr	r0, [r0, #8]
4001e4c0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e4c4:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e4c8:	e5810008 	str	r0, [r1, #8]
4001e4cc:	e3a00002 	mov	r0, #2
4001e4d0:	ebffd48b 	bl	40013704 <CyU3PBusyWait>
4001e4d4:	ebfff645 	bl	4001bdf0 <CyU3POtgIsDeviceMode>
4001e4d8:	e3500000 	cmp	r0, #0
4001e4dc:	0a000002 	beq	4001e4ec <CyU3PUsbStart+0x27c>
4001e4e0:	ebfffa5b 	bl	4001ce54 <CyU3PUsbHostIsStarted>
4001e4e4:	e3500000 	cmp	r0, #0
4001e4e8:	0a000001 	beq	4001e4f4 <CyU3PUsbStart+0x284>
4001e4ec:	e3a00047 	mov	r0, #71	; 0x47
4001e4f0:	eaffff64 	b	4001e288 <CyU3PUsbStart+0x18>
4001e4f4:	e3a01002 	mov	r1, #2
4001e4f8:	e1a00001 	mov	r0, r1
4001e4fc:	ebfff820 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001e500:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e5dc <CyU3PUsbStart+0x36c>
4001e504:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e5e0 <CyU3PUsbStart+0x370>
4001e508:	e5810000 	str	r0, [r1]
4001e50c:	ebfff633 	bl	4001bde0 <CyU3POtgGetMode>
4001e510:	e3500000 	cmp	r0, #0
4001e514:	1a000003 	bne	4001e528 <CyU3PUsbStart+0x2b8>
4001e518:	ebfffc09 	bl	4001d544 <CyU3PUsbPowerOn>
4001e51c:	e3a00000 	mov	r0, #0
4001e520:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e524:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e528:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e5e4 <CyU3PUsbStart+0x374>
4001e52c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e5d8 <CyU3PUsbStart+0x368>
4001e530:	e5810008 	str	r0, [r1, #8]
4001e534:	e00108c0 	and	r0, r1, r0, asr #17
4001e538:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e53c:	e3800008 	orr	r0, r0, #8
4001e540:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e544:	eb000662 	bl	4001fed4 <CyU3PUsbDescInit>
4001e548:	ebfff8e9 	bl	4001c8f4 <CyU3PUsbCreateDmaChannels>
4001e54c:	e1a04000 	mov	r4, r0
4001e550:	e3540000 	cmp	r4, #0
4001e554:	0a000001 	beq	4001e560 <CyU3PUsbStart+0x2f0>
4001e558:	e1a00004 	mov	r0, r4
4001e55c:	eaffff49 	b	4001e288 <CyU3PUsbStart+0x18>
4001e560:	e3a00001 	mov	r0, #1
4001e564:	e59f1038 	ldr	r1, [pc, #56]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e568:	e5c10008 	strb	r0, [r1, #8]
4001e56c:	e2810000 	add	r0, r1, #0
4001e570:	e5d00007 	ldrb	r0, [r0, #7]
4001e574:	e3500001 	cmp	r0, #1
4001e578:	1a000002 	bne	4001e588 <CyU3PUsbStart+0x318>
4001e57c:	e3a00003 	mov	r0, #3
4001e580:	e5c10008 	strb	r0, [r1, #8]
4001e584:	ea000002 	b	4001e594 <CyU3PUsbStart+0x324>
4001e588:	e3a00002 	mov	r0, #2
4001e58c:	e59f1010 	ldr	r1, [pc, #16]	; 4001e5a4 <CyU3PUsbStart+0x334>
4001e590:	e5c10008 	strb	r0, [r1, #8]
4001e594:	ebfff81b 	bl	4001c608 <CyU3PUibInit>
4001e598:	e1a00004 	mov	r0, r4
4001e59c:	eaffff39 	b	4001e288 <CyU3PUsbStart+0x18>
4001e5a0:	400311ec 	.word	0x400311ec
4001e5a4:	400321c0 	.word	0x400321c0
4001e5a8:	400310f4 	.word	0x400310f4
4001e5ac:	40002000 	.word	0x40002000
4001e5b0:	400311fc 	.word	0x400311fc
4001e5b4:	42335846 	.word	0x42335846
4001e5b8:	00010101 	.word	0x00010101
4001e5bc:	00010200 	.word	0x00010200
4001e5c0:	400311d0 	.word	0x400311d0
4001e5c4:	e0033000 	.word	0xe0033000
4001e5c8:	00038081 	.word	0x00038081
4001e5cc:	00004a3d 	.word	0x00004a3d
4001e5d0:	0000095c 	.word	0x0000095c
4001e5d4:	e0051000 	.word	0xe0051000
4001e5d8:	e0031000 	.word	0xe0031000
4001e5dc:	de001011 	.word	0xde001011
4001e5e0:	e0050000 	.word	0xe0050000
4001e5e4:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e5e8 <GetUsbLinkActive>:
4001e5e8:	e92d4010 	push	{r4, lr}
4001e5ec:	e59f0064 	ldr	r0, [pc, #100]	; 4001e658 <GetUsbLinkActive+0x70>
4001e5f0:	e5d00009 	ldrb	r0, [r0, #9]
4001e5f4:	e3500003 	cmp	r0, #3
4001e5f8:	1a000015 	bne	4001e654 <GetUsbLinkActive+0x6c>
4001e5fc:	e59f0058 	ldr	r0, [pc, #88]	; 4001e65c <GetUsbLinkActive+0x74>
4001e600:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e604:	e3c00004 	bic	r0, r0, #4
4001e608:	e59f104c 	ldr	r1, [pc, #76]	; 4001e65c <GetUsbLinkActive+0x74>
4001e60c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e610:	e1a00001 	mov	r0, r1
4001e614:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e618:	e3c00004 	bic	r0, r0, #4
4001e61c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e620:	e59f0030 	ldr	r0, [pc, #48]	; 4001e658 <GetUsbLinkActive+0x70>
4001e624:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e628:	e3500000 	cmp	r0, #0
4001e62c:	1a000008 	bne	4001e654 <GetUsbLinkActive+0x6c>
4001e630:	e1a00001 	mov	r0, r1
4001e634:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e638:	e200403f 	and	r4, r0, #63	; 0x3f
4001e63c:	e3540011 	cmp	r4, #17
4001e640:	0a000001 	beq	4001e64c <GetUsbLinkActive+0x64>
4001e644:	e3540012 	cmp	r4, #18
4001e648:	1a000001 	bne	4001e654 <GetUsbLinkActive+0x6c>
4001e64c:	e3a00000 	mov	r0, #0
4001e650:	ebfffdcd 	bl	4001dd8c <CyU3PUsbSetLinkPowerState>
4001e654:	e8bd8010 	pop	{r4, pc}
4001e658:	400321c0 	.word	0x400321c0
4001e65c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e660 <CyU3PHsGrantIntrHandler>:
4001e660:	e92d4010 	push	{r4, lr}
4001e664:	e59f005c 	ldr	r0, [pc, #92]	; 4001e6c8 <CyU3PHsGrantIntrHandler+0x68>
4001e668:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e66c:	e3100080 	tst	r0, #128	; 0x80
4001e670:	0a000013 	beq	4001e6c4 <CyU3PHsGrantIntrHandler+0x64>
4001e674:	e59f0050 	ldr	r0, [pc, #80]	; 4001e6cc <CyU3PHsGrantIntrHandler+0x6c>
4001e678:	e5900014 	ldr	r0, [r0, #20]
4001e67c:	e59f1048 	ldr	r1, [pc, #72]	; 4001e6cc <CyU3PHsGrantIntrHandler+0x6c>
4001e680:	e581000c 	str	r0, [r1, #12]
4001e684:	e2810000 	add	r0, r1, #0
4001e688:	e5900018 	ldr	r0, [r0, #24]
4001e68c:	e5810010 	str	r0, [r1, #16]
4001e690:	e59f0038 	ldr	r0, [pc, #56]	; 4001e6d0 <CyU3PHsGrantIntrHandler+0x70>
4001e694:	e5900000 	ldr	r0, [r0]
4001e698:	e3500000 	cmp	r0, #0
4001e69c:	0a000004 	beq	4001e6b4 <CyU3PHsGrantIntrHandler+0x54>
4001e6a0:	e3a01001 	mov	r1, #1
4001e6a4:	e3a00006 	mov	r0, #6
4001e6a8:	e59f2020 	ldr	r2, [pc, #32]	; 4001e6d0 <CyU3PHsGrantIntrHandler+0x70>
4001e6ac:	e5922000 	ldr	r2, [r2]
4001e6b0:	e12fff32 	blx	r2
4001e6b4:	e3a00002 	mov	r0, #2
4001e6b8:	e59f1014 	ldr	r1, [pc, #20]	; 4001e6d4 <CyU3PHsGrantIntrHandler+0x74>
4001e6bc:	e5c10009 	strb	r0, [r1, #9]
4001e6c0:	eb00060a 	bl	4001fef0 <CyU3PUsbEpPrepare>
4001e6c4:	e8bd8010 	pop	{r4, pc}
4001e6c8:	e0031000 	.word	0xe0031000
4001e6cc:	40032418 	.word	0x40032418
4001e6d0:	40031228 	.word	0x40031228
4001e6d4:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUibApplicationDefine:

4001e6d8 <CyU3PUibApplicationDefine>:
4001e6d8:	e92d4030 	push	{r4, r5, lr}
4001e6dc:	e24dd01c 	sub	sp, sp, #28
4001e6e0:	eb000178 	bl	4001ecc8 <CyU3PUibInitVars>
4001e6e4:	e3a00b01 	mov	r0, #1024	; 0x400
4001e6e8:	ebff93e1 	bl	40003674 <CyU3PMemAlloc>
4001e6ec:	e1a05000 	mov	r5, r0
4001e6f0:	e3550000 	cmp	r5, #0
4001e6f4:	0a00004f 	beq	4001e838 <CyU3PUibApplicationDefine+0x160>
4001e6f8:	e3a030a8 	mov	r3, #168	; 0xa8
4001e6fc:	e3a02000 	mov	r2, #0
4001e700:	e3a00004 	mov	r0, #4
4001e704:	e58d000c 	str	r0, [sp, #12]
4001e708:	e58d2010 	str	r2, [sp, #16]
4001e70c:	e58d2014 	str	r2, [sp, #20]
4001e710:	e58d3018 	str	r3, [sp, #24]
4001e714:	e3a02b01 	mov	r2, #1024	; 0x400
4001e718:	e3a03000 	mov	r3, #0
4001e71c:	e58d2004 	str	r2, [sp, #4]
4001e720:	e59f2118 	ldr	r2, [pc, #280]	; 4001e840 <CyU3PUibApplicationDefine+0x168>
4001e724:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e728:	e58d0008 	str	r0, [sp, #8]
4001e72c:	e59f0120 	ldr	r0, [pc, #288]	; 4001e854 <CyU3PUibApplicationDefine+0x17c>
4001e730:	e58d5000 	str	r5, [sp]
4001e734:	ebffaf95 	bl	4000a590 <_txe_thread_create>
4001e738:	e1a04000 	mov	r4, r0
4001e73c:	e3540000 	cmp	r4, #0
4001e740:	1a00003c 	bne	4001e838 <CyU3PUibApplicationDefine+0x160>
4001e744:	e3a00080 	mov	r0, #128	; 0x80
4001e748:	ebff93c9 	bl	40003674 <CyU3PMemAlloc>
4001e74c:	e1a05000 	mov	r5, r0
4001e750:	e3550000 	cmp	r5, #0
4001e754:	0a000009 	beq	4001e780 <CyU3PUibApplicationDefine+0xa8>
4001e758:	e3a0303c 	mov	r3, #60	; 0x3c
4001e75c:	e3a02080 	mov	r2, #128	; 0x80
4001e760:	e1cd20f0 	strd	r2, [sp]
4001e764:	e1a03005 	mov	r3, r5
4001e768:	e3a02004 	mov	r2, #4
4001e76c:	e3a01000 	mov	r1, #0
4001e770:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e858 <CyU3PUibApplicationDefine+0x180>
4001e774:	ebffae9f 	bl	4000a1f8 <_txe_queue_create>
4001e778:	e1a04000 	mov	r4, r0
4001e77c:	ea000000 	b	4001e784 <CyU3PUibApplicationDefine+0xac>
4001e780:	e3a04010 	mov	r4, #16
4001e784:	e3540000 	cmp	r4, #0
4001e788:	1a000004 	bne	4001e7a0 <CyU3PUibApplicationDefine+0xc8>
4001e78c:	e3a02028 	mov	r2, #40	; 0x28
4001e790:	e3a01000 	mov	r1, #0
4001e794:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e85c <CyU3PUibApplicationDefine+0x184>
4001e798:	ebffad01 	bl	40009ba4 <_txe_event_flags_create>
4001e79c:	e1a04000 	mov	r4, r0
4001e7a0:	e3540000 	cmp	r4, #0
4001e7a4:	1a000005 	bne	4001e7c0 <CyU3PUibApplicationDefine+0xe8>
4001e7a8:	e3a03038 	mov	r3, #56	; 0x38
4001e7ac:	e3a02000 	mov	r2, #0
4001e7b0:	e1a01002 	mov	r1, r2
4001e7b4:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e860 <CyU3PUibApplicationDefine+0x188>
4001e7b8:	ebffadb3 	bl	40009e8c <_txe_mutex_create>
4001e7bc:	e1a04000 	mov	r4, r0
4001e7c0:	e3540000 	cmp	r4, #0
4001e7c4:	1a00000a 	bne	4001e7f4 <CyU3PUibApplicationDefine+0x11c>
4001e7c8:	e3a0302c 	mov	r3, #44	; 0x2c
4001e7cc:	e3a02000 	mov	r2, #0
4001e7d0:	e3a00064 	mov	r0, #100	; 0x64
4001e7d4:	e88d0005 	stm	sp, {r0, r2}
4001e7d8:	e1cd20f8 	strd	r2, [sp, #8]
4001e7dc:	e1a03002 	mov	r3, r2
4001e7e0:	e59f207c 	ldr	r2, [pc, #124]	; 4001e864 <CyU3PUibApplicationDefine+0x18c>
4001e7e4:	e3a01000 	mov	r1, #0
4001e7e8:	e59f0078 	ldr	r0, [pc, #120]	; 4001e868 <CyU3PUibApplicationDefine+0x190>
4001e7ec:	ebffb094 	bl	4000aa44 <_txe_timer_create>
4001e7f0:	e1a04000 	mov	r4, r0
4001e7f4:	e3540000 	cmp	r4, #0
4001e7f8:	1a00000a 	bne	4001e828 <CyU3PUibApplicationDefine+0x150>
4001e7fc:	e3a0302c 	mov	r3, #44	; 0x2c
4001e800:	e3a02001 	mov	r2, #1
4001e804:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e808:	e58d1000 	str	r1, [sp]
4001e80c:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e810:	e3a03000 	mov	r3, #0
4001e814:	e59f2050 	ldr	r2, [pc, #80]	; 4001e86c <CyU3PUibApplicationDefine+0x194>
4001e818:	e1a01003 	mov	r1, r3
4001e81c:	e59f004c 	ldr	r0, [pc, #76]	; 4001e870 <CyU3PUibApplicationDefine+0x198>
4001e820:	ebffb087 	bl	4000aa44 <_txe_timer_create>
4001e824:	e1a04000 	mov	r4, r0
4001e828:	e3540000 	cmp	r4, #0
4001e82c:	1a000001 	bne	4001e838 <CyU3PUibApplicationDefine+0x160>
4001e830:	e59f001c 	ldr	r0, [pc, #28]	; 4001e854 <CyU3PUibApplicationDefine+0x17c>
4001e834:	ebffb040 	bl	4000a93c <_txe_thread_resume>
4001e838:	e28dd01c 	add	sp, sp, #28
4001e83c:	e8bd8030 	pop	{r4, r5, pc}
4001e840:	4001fa44 	.word	0x4001fa44
4001e844:	555f3430 	.word	0x555f3430
4001e848:	545f4249 	.word	0x545f4249
4001e84c:	41455248 	.word	0x41455248
4001e850:	00000044 	.word	0x00000044
4001e854:	40032254 	.word	0x40032254
4001e858:	400322fc 	.word	0x400322fc
4001e85c:	40032338 	.word	0x40032338
4001e860:	40032360 	.word	0x40032360
4001e864:	4001f9d4 	.word	0x4001f9d4
4001e868:	40032b20 	.word	0x40032b20
4001e86c:	4001ed80 	.word	0x4001ed80
4001e870:	40032b4c 	.word	0x40032b4c

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e874 <CyU3PUibDevCtrlEvtHandler>:
4001e874:	e92d4010 	push	{r4, lr}
4001e878:	e59f01c8 	ldr	r0, [pc, #456]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e87c:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e880:	e3140c01 	tst	r4, #256	; 0x100
4001e884:	0a000008 	beq	4001e8ac <CyU3PUibDevCtrlEvtHandler+0x38>
4001e888:	e3a00c01 	mov	r0, #256	; 0x100
4001e88c:	e59f11b4 	ldr	r1, [pc, #436]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e890:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e894:	eb000995 	bl	40020ef0 <CyU3PUsbResumeHandler>
4001e898:	e59f01a8 	ldr	r0, [pc, #424]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e89c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e8a0:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e8a4:	e59f119c 	ldr	r1, [pc, #412]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8a8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e8ac:	e3140004 	tst	r4, #4
4001e8b0:	0a000008 	beq	4001e8d8 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e8b4:	e3a00004 	mov	r0, #4
4001e8b8:	e59f1188 	ldr	r1, [pc, #392]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8bc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e8c0:	eb000d6c 	bl	40021e78 <CyU3PUsbSuspendHandler>
4001e8c4:	e59f017c 	ldr	r0, [pc, #380]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8c8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e8cc:	e3800004 	orr	r0, r0, #4
4001e8d0:	e59f1170 	ldr	r1, [pc, #368]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8d4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e8d8:	e3140008 	tst	r4, #8
4001e8dc:	0a000008 	beq	4001e904 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e8e0:	e3a00008 	mov	r0, #8
4001e8e4:	e59f115c 	ldr	r1, [pc, #348]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8e8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e8ec:	eb00092e 	bl	40020dac <CyU3PUsbResetHandler>
4001e8f0:	e59f0150 	ldr	r0, [pc, #336]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8f4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e8f8:	e3800008 	orr	r0, r0, #8
4001e8fc:	e59f1144 	ldr	r1, [pc, #324]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e900:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e904:	e3140010 	tst	r4, #16
4001e908:	0a000008 	beq	4001e930 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e90c:	e3a00010 	mov	r0, #16
4001e910:	e59f1130 	ldr	r1, [pc, #304]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e914:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e918:	ebffff50 	bl	4001e660 <CyU3PHsGrantIntrHandler>
4001e91c:	e59f0124 	ldr	r0, [pc, #292]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e920:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e924:	e3800010 	orr	r0, r0, #16
4001e928:	e59f1118 	ldr	r1, [pc, #280]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e92c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e930:	e3140040 	tst	r4, #64	; 0x40
4001e934:	0a000018 	beq	4001e99c <CyU3PUibDevCtrlEvtHandler+0x128>
4001e938:	e59f010c 	ldr	r0, [pc, #268]	; 4001ea4c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e93c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e940:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e944:	e59f1100 	ldr	r1, [pc, #256]	; 4001ea4c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e948:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e94c:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e950:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e954:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e958:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e95c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e960:	e1a00001 	mov	r0, r1
4001e964:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e968:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e96c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e970:	e3a00040 	mov	r0, #64	; 0x40
4001e974:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e978:	e3a00001 	mov	r0, #1
4001e97c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ea50 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e980:	e5810014 	str	r0, [r1, #20]
4001e984:	eb000b38 	bl	4002166c <CyU3PUsbSetupCommand>
4001e988:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e98c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e990:	e3800040 	orr	r0, r0, #64	; 0x40
4001e994:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e998:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e99c:	e3140080 	tst	r4, #128	; 0x80
4001e9a0:	0a000006 	beq	4001e9c0 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e9a4:	e3a00080 	mov	r0, #128	; 0x80
4001e9a8:	e59f1098 	ldr	r1, [pc, #152]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e9ac:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e9b0:	e1c10000 	bic	r0, r1, r0
4001e9b4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e9b8:	e3800080 	orr	r0, r0, #128	; 0x80
4001e9bc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e9c0:	e3140b02 	tst	r4, #2048	; 0x800
4001e9c4:	0a00001e 	beq	4001ea44 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e9c8:	e59f0080 	ldr	r0, [pc, #128]	; 4001ea50 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e9cc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e9d0:	e3500000 	cmp	r0, #0
4001e9d4:	1a000002 	bne	4001e9e4 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e9d8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e9dc:	e59f1068 	ldr	r1, [pc, #104]	; 4001ea4c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e9e0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e9e4:	e3a00b02 	mov	r0, #2048	; 0x800
4001e9e8:	e59f1058 	ldr	r1, [pc, #88]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e9ec:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e9f0:	e59f0058 	ldr	r0, [pc, #88]	; 4001ea50 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e9f4:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e9f8:	e3500000 	cmp	r0, #0
4001e9fc:	0a00000b 	beq	4001ea30 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001ea00:	e59f004c 	ldr	r0, [pc, #76]	; 4001ea54 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ea04:	e5900000 	ldr	r0, [r0]
4001ea08:	e3500000 	cmp	r0, #0
4001ea0c:	0a000004 	beq	4001ea24 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001ea10:	e3a01000 	mov	r1, #0
4001ea14:	e3a0000a 	mov	r0, #10
4001ea18:	e59f2034 	ldr	r2, [pc, #52]	; 4001ea54 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ea1c:	e5922000 	ldr	r2, [r2]
4001ea20:	e12fff32 	blx	r2
4001ea24:	e3a00000 	mov	r0, #0
4001ea28:	e59f1020 	ldr	r1, [pc, #32]	; 4001ea50 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ea2c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001ea30:	e59f0010 	ldr	r0, [pc, #16]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea34:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea38:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001ea3c:	e59f1004 	ldr	r1, [pc, #4]	; 4001ea48 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea40:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea44:	e8bd8010 	pop	{r4, pc}
4001ea48:	e0031000 	.word	0xe0031000
4001ea4c:	e0032000 	.word	0xe0032000
4001ea50:	400321c0 	.word	0x400321c0
4001ea54:	40031228 	.word	0x40031228

Disassembly of section i.CyU3PUibEPEvtHandler:

4001ea58 <CyU3PUibEPEvtHandler>:
4001ea58:	e92d4070 	push	{r4, r5, r6, lr}
4001ea5c:	e59f0244 	ldr	r0, [pc, #580]	; 4001eca8 <CyU3PUibEPEvtHandler+0x250>
4001ea60:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001ea64:	e59f123c 	ldr	r1, [pc, #572]	; 4001eca8 <CyU3PUibEPEvtHandler+0x250>
4001ea68:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001ea6c:	e0004001 	and	r4, r0, r1
4001ea70:	e59f0234 	ldr	r0, [pc, #564]	; 4001ecac <CyU3PUibEPEvtHandler+0x254>
4001ea74:	e5900000 	ldr	r0, [r0]
4001ea78:	e0044000 	and	r4, r4, r0
4001ea7c:	e3a05001 	mov	r5, #1
4001ea80:	ea000080 	b	4001ec88 <CyU3PUibEPEvtHandler+0x230>
4001ea84:	e3a00001 	mov	r0, #1
4001ea88:	e1140510 	tst	r4, r0, lsl r5
4001ea8c:	0a00003b 	beq	4001eb80 <CyU3PUibEPEvtHandler+0x128>
4001ea90:	e59f0218 	ldr	r0, [pc, #536]	; 4001ecb0 <CyU3PUibEPEvtHandler+0x258>
4001ea94:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ea98:	e59f0214 	ldr	r0, [pc, #532]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ea9c:	e5900000 	ldr	r0, [r0]
4001eaa0:	e3500000 	cmp	r0, #0
4001eaa4:	0a000033 	beq	4001eb78 <CyU3PUibEPEvtHandler+0x120>
4001eaa8:	e59f0208 	ldr	r0, [pc, #520]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001eaac:	e5900000 	ldr	r0, [r0]
4001eab0:	e3100001 	tst	r0, #1
4001eab4:	0a000008 	beq	4001eadc <CyU3PUibEPEvtHandler+0x84>
4001eab8:	e3160702 	tst	r6, #524288	; 0x80000
4001eabc:	0a000006 	beq	4001eadc <CyU3PUibEPEvtHandler+0x84>
4001eac0:	e3852080 	orr	r2, r5, #128	; 0x80
4001eac4:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001eac8:	e5d01009 	ldrb	r1, [r0, #9]
4001eacc:	e3a00001 	mov	r0, #1
4001ead0:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ead4:	e5933000 	ldr	r3, [r3]
4001ead8:	e12fff33 	blx	r3
4001eadc:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001eae0:	e5900000 	ldr	r0, [r0]
4001eae4:	e3100002 	tst	r0, #2
4001eae8:	0a000008 	beq	4001eb10 <CyU3PUibEPEvtHandler+0xb8>
4001eaec:	e3160602 	tst	r6, #2097152	; 0x200000
4001eaf0:	0a000006 	beq	4001eb10 <CyU3PUibEPEvtHandler+0xb8>
4001eaf4:	e3852080 	orr	r2, r5, #128	; 0x80
4001eaf8:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001eafc:	e5d01009 	ldrb	r1, [r0, #9]
4001eb00:	e3a00002 	mov	r0, #2
4001eb04:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001eb08:	e5933000 	ldr	r3, [r3]
4001eb0c:	e12fff33 	blx	r3
4001eb10:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001eb14:	e5900000 	ldr	r0, [r0]
4001eb18:	e3100004 	tst	r0, #4
4001eb1c:	0a000008 	beq	4001eb44 <CyU3PUibEPEvtHandler+0xec>
4001eb20:	e3160501 	tst	r6, #4194304	; 0x400000
4001eb24:	0a000006 	beq	4001eb44 <CyU3PUibEPEvtHandler+0xec>
4001eb28:	e3852080 	orr	r2, r5, #128	; 0x80
4001eb2c:	e59f0188 	ldr	r0, [pc, #392]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001eb30:	e5d01009 	ldrb	r1, [r0, #9]
4001eb34:	e3a00004 	mov	r0, #4
4001eb38:	e59f3174 	ldr	r3, [pc, #372]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001eb3c:	e5933000 	ldr	r3, [r3]
4001eb40:	e12fff33 	blx	r3
4001eb44:	e59f016c 	ldr	r0, [pc, #364]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001eb48:	e5900000 	ldr	r0, [r0]
4001eb4c:	e3100008 	tst	r0, #8
4001eb50:	0a000008 	beq	4001eb78 <CyU3PUibEPEvtHandler+0x120>
4001eb54:	e3160502 	tst	r6, #8388608	; 0x800000
4001eb58:	0a000006 	beq	4001eb78 <CyU3PUibEPEvtHandler+0x120>
4001eb5c:	e3852080 	orr	r2, r5, #128	; 0x80
4001eb60:	e59f0154 	ldr	r0, [pc, #340]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001eb64:	e5d01009 	ldrb	r1, [r0, #9]
4001eb68:	e3a00008 	mov	r0, #8
4001eb6c:	e59f3140 	ldr	r3, [pc, #320]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001eb70:	e5933000 	ldr	r3, [r3]
4001eb74:	e12fff33 	blx	r3
4001eb78:	e59f0130 	ldr	r0, [pc, #304]	; 4001ecb0 <CyU3PUibEPEvtHandler+0x258>
4001eb7c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001eb80:	e2850010 	add	r0, r5, #16
4001eb84:	e3a01001 	mov	r1, #1
4001eb88:	e1140011 	tst	r4, r1, lsl r0
4001eb8c:	0a00003b 	beq	4001ec80 <CyU3PUibEPEvtHandler+0x228>
4001eb90:	e59f0128 	ldr	r0, [pc, #296]	; 4001ecc0 <CyU3PUibEPEvtHandler+0x268>
4001eb94:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001eb98:	e59f0114 	ldr	r0, [pc, #276]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001eb9c:	e5900000 	ldr	r0, [r0]
4001eba0:	e3500000 	cmp	r0, #0
4001eba4:	0a000033 	beq	4001ec78 <CyU3PUibEPEvtHandler+0x220>
4001eba8:	e59f0108 	ldr	r0, [pc, #264]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001ebac:	e5900000 	ldr	r0, [r0]
4001ebb0:	e3100001 	tst	r0, #1
4001ebb4:	0a000008 	beq	4001ebdc <CyU3PUibEPEvtHandler+0x184>
4001ebb8:	e3160702 	tst	r6, #524288	; 0x80000
4001ebbc:	0a000006 	beq	4001ebdc <CyU3PUibEPEvtHandler+0x184>
4001ebc0:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001ebc4:	e5d01009 	ldrb	r1, [r0, #9]
4001ebc8:	e1a02005 	mov	r2, r5
4001ebcc:	e3a00001 	mov	r0, #1
4001ebd0:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ebd4:	e5933000 	ldr	r3, [r3]
4001ebd8:	e12fff33 	blx	r3
4001ebdc:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001ebe0:	e5900000 	ldr	r0, [r0]
4001ebe4:	e3100002 	tst	r0, #2
4001ebe8:	0a000008 	beq	4001ec10 <CyU3PUibEPEvtHandler+0x1b8>
4001ebec:	e3160602 	tst	r6, #2097152	; 0x200000
4001ebf0:	0a000006 	beq	4001ec10 <CyU3PUibEPEvtHandler+0x1b8>
4001ebf4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001ebf8:	e5d01009 	ldrb	r1, [r0, #9]
4001ebfc:	e1a02005 	mov	r2, r5
4001ec00:	e3a00002 	mov	r0, #2
4001ec04:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ec08:	e5933000 	ldr	r3, [r3]
4001ec0c:	e12fff33 	blx	r3
4001ec10:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001ec14:	e5900000 	ldr	r0, [r0]
4001ec18:	e3100004 	tst	r0, #4
4001ec1c:	0a000008 	beq	4001ec44 <CyU3PUibEPEvtHandler+0x1ec>
4001ec20:	e3160501 	tst	r6, #4194304	; 0x400000
4001ec24:	0a000006 	beq	4001ec44 <CyU3PUibEPEvtHandler+0x1ec>
4001ec28:	e59f008c 	ldr	r0, [pc, #140]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001ec2c:	e5d01009 	ldrb	r1, [r0, #9]
4001ec30:	e1a02005 	mov	r2, r5
4001ec34:	e3a00004 	mov	r0, #4
4001ec38:	e59f3074 	ldr	r3, [pc, #116]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ec3c:	e5933000 	ldr	r3, [r3]
4001ec40:	e12fff33 	blx	r3
4001ec44:	e59f006c 	ldr	r0, [pc, #108]	; 4001ecb8 <CyU3PUibEPEvtHandler+0x260>
4001ec48:	e5900000 	ldr	r0, [r0]
4001ec4c:	e3100008 	tst	r0, #8
4001ec50:	0a000008 	beq	4001ec78 <CyU3PUibEPEvtHandler+0x220>
4001ec54:	e3160502 	tst	r6, #8388608	; 0x800000
4001ec58:	0a000006 	beq	4001ec78 <CyU3PUibEPEvtHandler+0x220>
4001ec5c:	e59f0058 	ldr	r0, [pc, #88]	; 4001ecbc <CyU3PUibEPEvtHandler+0x264>
4001ec60:	e5d01009 	ldrb	r1, [r0, #9]
4001ec64:	e1a02005 	mov	r2, r5
4001ec68:	e3a00008 	mov	r0, #8
4001ec6c:	e59f3040 	ldr	r3, [pc, #64]	; 4001ecb4 <CyU3PUibEPEvtHandler+0x25c>
4001ec70:	e5933000 	ldr	r3, [r3]
4001ec74:	e12fff33 	blx	r3
4001ec78:	e59f0040 	ldr	r0, [pc, #64]	; 4001ecc0 <CyU3PUibEPEvtHandler+0x268>
4001ec7c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ec80:	e2850001 	add	r0, r5, #1
4001ec84:	e20050ff 	and	r5, r0, #255	; 0xff
4001ec88:	e3550010 	cmp	r5, #16
4001ec8c:	baffff7c 	blt	4001ea84 <CyU3PUibEPEvtHandler+0x2c>
4001ec90:	e59f002c 	ldr	r0, [pc, #44]	; 4001ecc4 <CyU3PUibEPEvtHandler+0x26c>
4001ec94:	e5900004 	ldr	r0, [r0, #4]
4001ec98:	e3800010 	orr	r0, r0, #16
4001ec9c:	e59f1020 	ldr	r1, [pc, #32]	; 4001ecc4 <CyU3PUibEPEvtHandler+0x26c>
4001eca0:	e5810004 	str	r0, [r1, #4]
4001eca4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001eca8:	e0031000 	.word	0xe0031000
4001ecac:	4003120c 	.word	0x4003120c
4001ecb0:	e0031418 	.word	0xe0031418
4001ecb4:	40031204 	.word	0x40031204
4001ecb8:	40031208 	.word	0x40031208
4001ecbc:	400321c0 	.word	0x400321c0
4001ecc0:	e0031498 	.word	0xe0031498
4001ecc4:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ecc8 <CyU3PUibInitVars>:
4001ecc8:	e92d4010 	push	{r4, lr}
4001eccc:	e3a0207c 	mov	r2, #124	; 0x7c
4001ecd0:	e3a01000 	mov	r1, #0
4001ecd4:	e59f0070 	ldr	r0, [pc, #112]	; 4001ed4c <CyU3PUibInitVars+0x84>
4001ecd8:	ebff9276 	bl	400036b8 <CyU3PMemSet>
4001ecdc:	e3a02074 	mov	r2, #116	; 0x74
4001ece0:	e3a01000 	mov	r1, #0
4001ece4:	e59f0064 	ldr	r0, [pc, #100]	; 4001ed50 <CyU3PUibInitVars+0x88>
4001ece8:	ebff9272 	bl	400036b8 <CyU3PMemSet>
4001ecec:	e3a00000 	mov	r0, #0
4001ecf0:	e59f105c 	ldr	r1, [pc, #92]	; 4001ed54 <CyU3PUibInitVars+0x8c>
4001ecf4:	e5810000 	str	r0, [r1]
4001ecf8:	e59f1058 	ldr	r1, [pc, #88]	; 4001ed58 <CyU3PUibInitVars+0x90>
4001ecfc:	e5810000 	str	r0, [r1]
4001ed00:	e59f1054 	ldr	r1, [pc, #84]	; 4001ed5c <CyU3PUibInitVars+0x94>
4001ed04:	e5810000 	str	r0, [r1]
4001ed08:	e59f1050 	ldr	r1, [pc, #80]	; 4001ed60 <CyU3PUibInitVars+0x98>
4001ed0c:	e5810000 	str	r0, [r1]
4001ed10:	e59f104c 	ldr	r1, [pc, #76]	; 4001ed64 <CyU3PUibInitVars+0x9c>
4001ed14:	e5810000 	str	r0, [r1]
4001ed18:	e59f1048 	ldr	r1, [pc, #72]	; 4001ed68 <CyU3PUibInitVars+0xa0>
4001ed1c:	e5810000 	str	r0, [r1]
4001ed20:	e59f1044 	ldr	r1, [pc, #68]	; 4001ed6c <CyU3PUibInitVars+0xa4>
4001ed24:	e5810000 	str	r0, [r1]
4001ed28:	e59f1040 	ldr	r1, [pc, #64]	; 4001ed70 <CyU3PUibInitVars+0xa8>
4001ed2c:	e5810000 	str	r0, [r1]
4001ed30:	e59f103c 	ldr	r1, [pc, #60]	; 4001ed74 <CyU3PUibInitVars+0xac>
4001ed34:	e5810000 	str	r0, [r1]
4001ed38:	e59f1038 	ldr	r1, [pc, #56]	; 4001ed78 <CyU3PUibInitVars+0xb0>
4001ed3c:	e5810000 	str	r0, [r1]
4001ed40:	e59f1034 	ldr	r1, [pc, #52]	; 4001ed7c <CyU3PUibInitVars+0xb4>
4001ed44:	e5810000 	str	r0, [r1]
4001ed48:	e8bd8010 	pop	{r4, pc}
4001ed4c:	400321c0 	.word	0x400321c0
4001ed50:	40032418 	.word	0x40032418
4001ed54:	400311ec 	.word	0x400311ec
4001ed58:	400311f0 	.word	0x400311f0
4001ed5c:	400311f4 	.word	0x400311f4
4001ed60:	40031240 	.word	0x40031240
4001ed64:	40031228 	.word	0x40031228
4001ed68:	4003122c 	.word	0x4003122c
4001ed6c:	40031230 	.word	0x40031230
4001ed70:	40031204 	.word	0x40031204
4001ed74:	40031208 	.word	0x40031208
4001ed78:	4003120c 	.word	0x4003120c
4001ed7c:	400311cc 	.word	0x400311cc

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ed80 <CyU3PUibLnkErrClrTimerCb>:
4001ed80:	e92d4010 	push	{r4, lr}
4001ed84:	e1a04000 	mov	r4, r0
4001ed88:	ebfff82d 	bl	4001ce44 <CyU3PUsbGetSpeed>
4001ed8c:	e3500003 	cmp	r0, #3
4001ed90:	1a000003 	bne	4001eda4 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ed94:	e59f000c 	ldr	r0, [pc, #12]	; 4001eda8 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ed98:	e5900014 	ldr	r0, [r0, #20]
4001ed9c:	e59f1008 	ldr	r1, [pc, #8]	; 4001edac <CyU3PUibLnkErrClrTimerCb+0x2c>
4001eda0:	e5810000 	str	r0, [r1]
4001eda4:	e8bd8010 	pop	{r4, pc}
4001eda8:	e0033000 	.word	0xe0033000
4001edac:	40031210 	.word	0x40031210

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001edb0 <CyU3PUibLnkIntrEvtHandler>:
4001edb0:	e92d4010 	push	{r4, lr}
4001edb4:	e59f008c 	ldr	r0, [pc, #140]	; 4001ee48 <CyU3PUibLnkIntrEvtHandler+0x98>
4001edb8:	e5904004 	ldr	r4, [r0, #4]
4001edbc:	e3140902 	tst	r4, #32768	; 0x8000
4001edc0:	0a00000b 	beq	4001edf4 <CyU3PUibLnkIntrEvtHandler+0x44>
4001edc4:	e59f0080 	ldr	r0, [pc, #128]	; 4001ee4c <CyU3PUibLnkIntrEvtHandler+0x9c>
4001edc8:	e5900000 	ldr	r0, [r0]
4001edcc:	e59f1074 	ldr	r1, [pc, #116]	; 4001ee48 <CyU3PUibLnkIntrEvtHandler+0x98>
4001edd0:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001edd4:	eb000859 	bl	40020f40 <CyU3PUsbSSConnecthandler>
4001edd8:	e3a00902 	mov	r0, #32768	; 0x8000
4001eddc:	e59f1064 	ldr	r1, [pc, #100]	; 4001ee48 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ede0:	e5810004 	str	r0, [r1, #4]
4001ede4:	e1c10000 	bic	r0, r1, r0
4001ede8:	e5900008 	ldr	r0, [r0, #8]
4001edec:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001edf0:	e5810008 	str	r0, [r1, #8]
4001edf4:	e3140801 	tst	r4, #65536	; 0x10000
4001edf8:	0a000007 	beq	4001ee1c <CyU3PUibLnkIntrEvtHandler+0x6c>
4001edfc:	eb0008cc 	bl	40021134 <CyU3PUsbSSDisConnecthandler>
4001ee00:	e3a00801 	mov	r0, #65536	; 0x10000
4001ee04:	e59f103c 	ldr	r1, [pc, #60]	; 4001ee48 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ee08:	e5810004 	str	r0, [r1, #4]
4001ee0c:	e1810000 	orr	r0, r1, r0
4001ee10:	e5900008 	ldr	r0, [r0, #8]
4001ee14:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ee18:	e5810008 	str	r0, [r1, #8]
4001ee1c:	e3140802 	tst	r4, #131072	; 0x20000
4001ee20:	0a000007 	beq	4001ee44 <CyU3PUibLnkIntrEvtHandler+0x94>
4001ee24:	eb000926 	bl	400212c4 <CyU3PUsbSSReset>
4001ee28:	e3a00802 	mov	r0, #131072	; 0x20000
4001ee2c:	e59f1014 	ldr	r1, [pc, #20]	; 4001ee48 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ee30:	e5810004 	str	r0, [r1, #4]
4001ee34:	e1810000 	orr	r0, r1, r0
4001ee38:	e5900008 	ldr	r0, [r0, #8]
4001ee3c:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001ee40:	e5810008 	str	r0, [r1, #8]
4001ee44:	e8bd8010 	pop	{r4, pc}
4001ee48:	e0033000 	.word	0xe0033000
4001ee4c:	40031218 	.word	0x40031218

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001ee50 <CyU3PUibProtEpIntrEvtHandler>:
4001ee50:	e92d4070 	push	{r4, r5, r6, lr}
4001ee54:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f210 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ee58:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001ee5c:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f210 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ee60:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001ee64:	e0005001 	and	r5, r0, r1
4001ee68:	e3a04001 	mov	r4, #1
4001ee6c:	ea0000df 	b	4001f1f0 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001ee70:	e3a00001 	mov	r0, #1
4001ee74:	e1150410 	tst	r5, r0, lsl r4
4001ee78:	0a000081 	beq	4001f084 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001ee7c:	e59f0390 	ldr	r0, [pc, #912]	; 4001f214 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ee80:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ee84:	e3160901 	tst	r6, #16384	; 0x4000
4001ee88:	0a00002a 	beq	4001ef38 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ee8c:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ee90:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ee94:	e3800002 	orr	r0, r0, #2
4001ee98:	e59f1374 	ldr	r1, [pc, #884]	; 4001f214 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ee9c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001eea0:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001eea4:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001eea8:	e1a01802 	lsl	r1, r2, #16
4001eeac:	e1a01821 	lsr	r1, r1, #16
4001eeb0:	e20420ff 	and	r2, r4, #255	; 0xff
4001eeb4:	e3820080 	orr	r0, r2, #128	; 0x80
4001eeb8:	ebfffa90 	bl	4001d900 <CyU3PUsbSendNrdy>
4001eebc:	e20410ff 	and	r1, r4, #255	; 0xff
4001eec0:	e3810080 	orr	r0, r1, #128	; 0x80
4001eec4:	ebfff9a1 	bl	4001d550 <CyU3PUsbResetEp>
4001eec8:	e3a0000a 	mov	r0, #10
4001eecc:	ebffd20c 	bl	40013704 <CyU3PBusyWait>
4001eed0:	e59f2340 	ldr	r2, [pc, #832]	; 4001f218 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001eed4:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001eed8:	e1a01802 	lsl	r1, r2, #16
4001eedc:	e1a01821 	lsr	r1, r1, #16
4001eee0:	e20420ff 	and	r2, r4, #255	; 0xff
4001eee4:	e3820080 	orr	r0, r2, #128	; 0x80
4001eee8:	ebfffa47 	bl	4001d80c <CyU3PUsbSendErdy>
4001eeec:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001eef0:	e59f131c 	ldr	r1, [pc, #796]	; 4001f214 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eef4:	e7810104 	str	r0, [r1, r4, lsl #2]
4001eef8:	e59f031c 	ldr	r0, [pc, #796]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eefc:	e5900000 	ldr	r0, [r0]
4001ef00:	e3100020 	tst	r0, #32
4001ef04:	0a00000b 	beq	4001ef38 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ef08:	e3a00001 	mov	r0, #1
4001ef0c:	e59f130c 	ldr	r1, [pc, #780]	; 4001f220 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ef10:	e5911000 	ldr	r1, [r1]
4001ef14:	e1110410 	tst	r1, r0, lsl r4
4001ef18:	0a000006 	beq	4001ef38 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ef1c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ef20:	e3802080 	orr	r2, r0, #128	; 0x80
4001ef24:	e3a01003 	mov	r1, #3
4001ef28:	e3a00020 	mov	r0, #32
4001ef2c:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef30:	e5933000 	ldr	r3, [r3]
4001ef34:	e12fff33 	blx	r3
4001ef38:	e3160801 	tst	r6, #65536	; 0x10000
4001ef3c:	0a000004 	beq	4001ef54 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ef40:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ef44:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ef48:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ef4c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f214 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ef50:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ef54:	e3a00001 	mov	r0, #1
4001ef58:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f220 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ef5c:	e5911000 	ldr	r1, [r1]
4001ef60:	e1110410 	tst	r1, r0, lsl r4
4001ef64:	0a000044 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ef68:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef6c:	e5900000 	ldr	r0, [r0]
4001ef70:	e3500000 	cmp	r0, #0
4001ef74:	0a000040 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ef78:	e59f029c 	ldr	r0, [pc, #668]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef7c:	e5900000 	ldr	r0, [r0]
4001ef80:	e3100001 	tst	r0, #1
4001ef84:	0a000008 	beq	4001efac <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ef88:	e3160b01 	tst	r6, #1024	; 0x400
4001ef8c:	0a000006 	beq	4001efac <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ef90:	e20400ff 	and	r0, r4, #255	; 0xff
4001ef94:	e3802080 	orr	r2, r0, #128	; 0x80
4001ef98:	e3a01003 	mov	r1, #3
4001ef9c:	e3a00001 	mov	r0, #1
4001efa0:	e59f327c 	ldr	r3, [pc, #636]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efa4:	e5933000 	ldr	r3, [r3]
4001efa8:	e12fff33 	blx	r3
4001efac:	e59f0268 	ldr	r0, [pc, #616]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001efb0:	e5900000 	ldr	r0, [r0]
4001efb4:	e3100002 	tst	r0, #2
4001efb8:	0a000008 	beq	4001efe0 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001efbc:	e3160a01 	tst	r6, #4096	; 0x1000
4001efc0:	0a000006 	beq	4001efe0 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001efc4:	e20400ff 	and	r0, r4, #255	; 0xff
4001efc8:	e3802080 	orr	r2, r0, #128	; 0x80
4001efcc:	e3a01003 	mov	r1, #3
4001efd0:	e3a00002 	mov	r0, #2
4001efd4:	e59f3248 	ldr	r3, [pc, #584]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efd8:	e5933000 	ldr	r3, [r3]
4001efdc:	e12fff33 	blx	r3
4001efe0:	e59f0234 	ldr	r0, [pc, #564]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001efe4:	e5900000 	ldr	r0, [r0]
4001efe8:	e3100004 	tst	r0, #4
4001efec:	0a000008 	beq	4001f014 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001eff0:	e3160a02 	tst	r6, #8192	; 0x2000
4001eff4:	0a000006 	beq	4001f014 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001eff8:	e20400ff 	and	r0, r4, #255	; 0xff
4001effc:	e3802080 	orr	r2, r0, #128	; 0x80
4001f000:	e3a01003 	mov	r1, #3
4001f004:	e3a00004 	mov	r0, #4
4001f008:	e59f3214 	ldr	r3, [pc, #532]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f00c:	e5933000 	ldr	r3, [r3]
4001f010:	e12fff33 	blx	r3
4001f014:	e59f0200 	ldr	r0, [pc, #512]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f018:	e5900000 	ldr	r0, [r0]
4001f01c:	e3100010 	tst	r0, #16
4001f020:	0a000008 	beq	4001f048 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f024:	e3160c02 	tst	r6, #512	; 0x200
4001f028:	0a000006 	beq	4001f048 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f02c:	e20400ff 	and	r0, r4, #255	; 0xff
4001f030:	e3802080 	orr	r2, r0, #128	; 0x80
4001f034:	e3a01003 	mov	r1, #3
4001f038:	e3a00010 	mov	r0, #16
4001f03c:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f040:	e5933000 	ldr	r3, [r3]
4001f044:	e12fff33 	blx	r3
4001f048:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f04c:	e5900000 	ldr	r0, [r0]
4001f050:	e3100040 	tst	r0, #64	; 0x40
4001f054:	0a000008 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f058:	e3160802 	tst	r6, #131072	; 0x20000
4001f05c:	0a000006 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f060:	e20400ff 	and	r0, r4, #255	; 0xff
4001f064:	e3802080 	orr	r2, r0, #128	; 0x80
4001f068:	e3a01003 	mov	r1, #3
4001f06c:	e3a00040 	mov	r0, #64	; 0x40
4001f070:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f074:	e5933000 	ldr	r3, [r3]
4001f078:	e12fff33 	blx	r3
4001f07c:	e59f0190 	ldr	r0, [pc, #400]	; 4001f214 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f080:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f084:	e2840010 	add	r0, r4, #16
4001f088:	e3a01001 	mov	r1, #1
4001f08c:	e1150011 	tst	r5, r1, lsl r0
4001f090:	0a000055 	beq	4001f1ec <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001f094:	e59f018c 	ldr	r0, [pc, #396]	; 4001f228 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f098:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f09c:	e2840010 	add	r0, r4, #16
4001f0a0:	e1a00011 	lsl	r0, r1, r0
4001f0a4:	e59f1174 	ldr	r1, [pc, #372]	; 4001f220 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f0a8:	e5911000 	ldr	r1, [r1]
4001f0ac:	e1100001 	tst	r0, r1
4001f0b0:	0a00004b 	beq	4001f1e4 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f0b4:	e59f0168 	ldr	r0, [pc, #360]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0b8:	e5900000 	ldr	r0, [r0]
4001f0bc:	e3500000 	cmp	r0, #0
4001f0c0:	0a000047 	beq	4001f1e4 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f0c4:	e59f0150 	ldr	r0, [pc, #336]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f0c8:	e5900000 	ldr	r0, [r0]
4001f0cc:	e3100001 	tst	r0, #1
4001f0d0:	0a000007 	beq	4001f0f4 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f0d4:	e3160b01 	tst	r6, #1024	; 0x400
4001f0d8:	0a000005 	beq	4001f0f4 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f0dc:	e20420ff 	and	r2, r4, #255	; 0xff
4001f0e0:	e3a01003 	mov	r1, #3
4001f0e4:	e3a00001 	mov	r0, #1
4001f0e8:	e59f3134 	ldr	r3, [pc, #308]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0ec:	e5933000 	ldr	r3, [r3]
4001f0f0:	e12fff33 	blx	r3
4001f0f4:	e59f0120 	ldr	r0, [pc, #288]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f0f8:	e5900000 	ldr	r0, [r0]
4001f0fc:	e3100002 	tst	r0, #2
4001f100:	0a000007 	beq	4001f124 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f104:	e3160a01 	tst	r6, #4096	; 0x1000
4001f108:	0a000005 	beq	4001f124 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f10c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f110:	e3a01003 	mov	r1, #3
4001f114:	e3a00002 	mov	r0, #2
4001f118:	e59f3104 	ldr	r3, [pc, #260]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f11c:	e5933000 	ldr	r3, [r3]
4001f120:	e12fff33 	blx	r3
4001f124:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f128:	e5900000 	ldr	r0, [r0]
4001f12c:	e3100004 	tst	r0, #4
4001f130:	0a000007 	beq	4001f154 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f134:	e3160a02 	tst	r6, #8192	; 0x2000
4001f138:	0a000005 	beq	4001f154 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f13c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f140:	e3a01003 	mov	r1, #3
4001f144:	e3a00004 	mov	r0, #4
4001f148:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f14c:	e5933000 	ldr	r3, [r3]
4001f150:	e12fff33 	blx	r3
4001f154:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f158:	e5900000 	ldr	r0, [r0]
4001f15c:	e3100010 	tst	r0, #16
4001f160:	0a000007 	beq	4001f184 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f164:	e3160c02 	tst	r6, #512	; 0x200
4001f168:	0a000005 	beq	4001f184 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f16c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f170:	e3a01003 	mov	r1, #3
4001f174:	e3a00010 	mov	r0, #16
4001f178:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f17c:	e5933000 	ldr	r3, [r3]
4001f180:	e12fff33 	blx	r3
4001f184:	e59f0090 	ldr	r0, [pc, #144]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f188:	e5900000 	ldr	r0, [r0]
4001f18c:	e3100040 	tst	r0, #64	; 0x40
4001f190:	0a000007 	beq	4001f1b4 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f194:	e3160802 	tst	r6, #131072	; 0x20000
4001f198:	0a000005 	beq	4001f1b4 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f19c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f1a0:	e3a01003 	mov	r1, #3
4001f1a4:	e3a00040 	mov	r0, #64	; 0x40
4001f1a8:	e59f3074 	ldr	r3, [pc, #116]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1ac:	e5933000 	ldr	r3, [r3]
4001f1b0:	e12fff33 	blx	r3
4001f1b4:	e59f0060 	ldr	r0, [pc, #96]	; 4001f21c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1b8:	e5900000 	ldr	r0, [r0]
4001f1bc:	e3100020 	tst	r0, #32
4001f1c0:	0a000007 	beq	4001f1e4 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f1c4:	e3160901 	tst	r6, #16384	; 0x4000
4001f1c8:	0a000005 	beq	4001f1e4 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f1cc:	e20420ff 	and	r2, r4, #255	; 0xff
4001f1d0:	e3a01003 	mov	r1, #3
4001f1d4:	e3a00020 	mov	r0, #32
4001f1d8:	e59f3044 	ldr	r3, [pc, #68]	; 4001f224 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1dc:	e5933000 	ldr	r3, [r3]
4001f1e0:	e12fff33 	blx	r3
4001f1e4:	e59f003c 	ldr	r0, [pc, #60]	; 4001f228 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f1e8:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f1ec:	e2844001 	add	r4, r4, #1
4001f1f0:	e3540010 	cmp	r4, #16
4001f1f4:	baffff1d 	blt	4001ee70 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f1f8:	e59f002c 	ldr	r0, [pc, #44]	; 4001f22c <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f1fc:	e5900004 	ldr	r0, [r0, #4]
4001f200:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f204:	e59f1020 	ldr	r1, [pc, #32]	; 4001f22c <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f208:	e5810004 	str	r0, [r1, #4]
4001f20c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f210:	e0033000 	.word	0xe0033000
4001f214:	e0033500 	.word	0xe0033500
4001f218:	e00335c0 	.word	0xe00335c0
4001f21c:	40031208 	.word	0x40031208
4001f220:	4003120c 	.word	0x4003120c
4001f224:	40031204 	.word	0x40031204
4001f228:	e0033600 	.word	0xe0033600
4001f22c:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f230 <CyU3PUibProtIntrEvtHandler>:
4001f230:	e92d4010 	push	{r4, lr}
4001f234:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f238:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f23c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f240:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f244:	e0004001 	and	r4, r0, r1
4001f248:	e3140c02 	tst	r4, #512	; 0x200
4001f24c:	0a000006 	beq	4001f26c <CyU3PUibProtIntrEvtHandler+0x3c>
4001f250:	e3a00c02 	mov	r0, #512	; 0x200
4001f254:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f258:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f25c:	e3a00001 	mov	r0, #1
4001f260:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f310 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f264:	e5810014 	str	r0, [r1, #20]
4001f268:	eb0008ff 	bl	4002166c <CyU3PUsbSetupCommand>
4001f26c:	e3140901 	tst	r4, #16384	; 0x4000
4001f270:	0a00000a 	beq	4001f2a0 <CyU3PUibProtIntrEvtHandler+0x70>
4001f274:	e59f0090 	ldr	r0, [pc, #144]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f278:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f27c:	e3c00004 	bic	r0, r0, #4
4001f280:	e59f1084 	ldr	r1, [pc, #132]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f284:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f288:	e1a00001 	mov	r0, r1
4001f28c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f290:	e3c00004 	bic	r0, r0, #4
4001f294:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f298:	e3a00901 	mov	r0, #16384	; 0x4000
4001f29c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f2a0:	e3140b02 	tst	r4, #2048	; 0x800
4001f2a4:	0a000012 	beq	4001f2f4 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f2a8:	e59f0060 	ldr	r0, [pc, #96]	; 4001f310 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f2ac:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f2b0:	e3500000 	cmp	r0, #0
4001f2b4:	0a00000b 	beq	4001f2e8 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f2b8:	e59f0054 	ldr	r0, [pc, #84]	; 4001f314 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f2bc:	e5900000 	ldr	r0, [r0]
4001f2c0:	e3500000 	cmp	r0, #0
4001f2c4:	0a000004 	beq	4001f2dc <CyU3PUibProtIntrEvtHandler+0xac>
4001f2c8:	e3a01000 	mov	r1, #0
4001f2cc:	e3a0000a 	mov	r0, #10
4001f2d0:	e59f203c 	ldr	r2, [pc, #60]	; 4001f314 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f2d4:	e5922000 	ldr	r2, [r2]
4001f2d8:	e12fff32 	blx	r2
4001f2dc:	e3a00000 	mov	r0, #0
4001f2e0:	e59f1028 	ldr	r1, [pc, #40]	; 4001f310 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f2e4:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f2e8:	e3a00b02 	mov	r0, #2048	; 0x800
4001f2ec:	e59f1018 	ldr	r1, [pc, #24]	; 4001f30c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f2f0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f2f4:	e59f001c 	ldr	r0, [pc, #28]	; 4001f318 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f2f8:	e5900004 	ldr	r0, [r0, #4]
4001f2fc:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f300:	e59f1010 	ldr	r1, [pc, #16]	; 4001f318 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f304:	e5810004 	str	r0, [r1, #4]
4001f308:	e8bd8010 	pop	{r4, pc}
4001f30c:	e0033000 	.word	0xe0033000
4001f310:	400321c0 	.word	0x400321c0
4001f314:	40031228 	.word	0x40031228
4001f318:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f31c <CyU3PUibSendDescr>:
4001f31c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f320:	e1a04000 	mov	r4, r0
4001f324:	e1a05001 	mov	r5, r1
4001f328:	e3a06000 	mov	r6, #0
4001f32c:	e3a07000 	mov	r7, #0
4001f330:	e3a08000 	mov	r8, #0
4001f334:	e3a09000 	mov	r9, #0
4001f338:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f924 <CyU3PUibSendDescr+0x608>
4001f33c:	e0000825 	and	r0, r0, r5, lsr #16
4001f340:	e58d0000 	str	r0, [sp]
4001f344:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f348:	e5d00009 	ldrb	r0, [r0, #9]
4001f34c:	e3500003 	cmp	r0, #3
4001f350:	1a000001 	bne	4001f35c <CyU3PUibSendDescr+0x40>
4001f354:	e3a00c02 	mov	r0, #512	; 0x200
4001f358:	ea000000 	b	4001f360 <CyU3PUibSendDescr+0x44>
4001f35c:	e3a00040 	mov	r0, #64	; 0x40
4001f360:	e1a0a800 	lsl	sl, r0, #16
4001f364:	e1a0a82a 	lsr	sl, sl, #16
4001f368:	e1a00c24 	lsr	r0, r4, #24
4001f36c:	e3500006 	cmp	r0, #6
4001f370:	0a0000b4 	beq	4001f648 <CyU3PUibSendDescr+0x32c>
4001f374:	ca000006 	bgt	4001f394 <CyU3PUibSendDescr+0x78>
4001f378:	e3500001 	cmp	r0, #1
4001f37c:	0a00000b 	beq	4001f3b0 <CyU3PUibSendDescr+0x94>
4001f380:	e3500002 	cmp	r0, #2
4001f384:	0a000020 	beq	4001f40c <CyU3PUibSendDescr+0xf0>
4001f388:	e3500003 	cmp	r0, #3
4001f38c:	1a00013b 	bne	4001f880 <CyU3PUibSendDescr+0x564>
4001f390:	ea00007b 	b	4001f584 <CyU3PUibSendDescr+0x268>
4001f394:	e3500007 	cmp	r0, #7
4001f398:	0a0000b8 	beq	4001f680 <CyU3PUibSendDescr+0x364>
4001f39c:	e3500009 	cmp	r0, #9
4001f3a0:	0a000122 	beq	4001f830 <CyU3PUibSendDescr+0x514>
4001f3a4:	e350000f 	cmp	r0, #15
4001f3a8:	1a000134 	bne	4001f880 <CyU3PUibSendDescr+0x564>
4001f3ac:	ea0000f6 	b	4001f78c <CyU3PUibSendDescr+0x470>
4001f3b0:	e1a00000 	nop			; (mov r0, r0)
4001f3b4:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f3b8:	e5d00009 	ldrb	r0, [r0, #9]
4001f3bc:	e3500003 	cmp	r0, #3
4001f3c0:	1a000008 	bne	4001f3e8 <CyU3PUibSendDescr+0xcc>
4001f3c4:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f3c8:	e5900004 	ldr	r0, [r0, #4]
4001f3cc:	e3500000 	cmp	r0, #0
4001f3d0:	0a00000c 	beq	4001f408 <CyU3PUibSendDescr+0xec>
4001f3d4:	e3a09001 	mov	r9, #1
4001f3d8:	e3a06012 	mov	r6, #18
4001f3dc:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f3e0:	e5908004 	ldr	r8, [r0, #4]
4001f3e4:	ea000007 	b	4001f408 <CyU3PUibSendDescr+0xec>
4001f3e8:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f3ec:	e5900000 	ldr	r0, [r0]
4001f3f0:	e3500000 	cmp	r0, #0
4001f3f4:	0a000003 	beq	4001f408 <CyU3PUibSendDescr+0xec>
4001f3f8:	e3a09001 	mov	r9, #1
4001f3fc:	e3a06012 	mov	r6, #18
4001f400:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f404:	e5908000 	ldr	r8, [r0]
4001f408:	ea000128 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f40c:	e1a00000 	nop			; (mov r0, r0)
4001f410:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f414:	e5d00009 	ldrb	r0, [r0, #9]
4001f418:	e3500002 	cmp	r0, #2
4001f41c:	1a00001a 	bne	4001f48c <CyU3PUibSendDescr+0x170>
4001f420:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f424:	e5900014 	ldr	r0, [r0, #20]
4001f428:	e3500000 	cmp	r0, #0
4001f42c:	0a00004f 	beq	4001f570 <CyU3PUibSendDescr+0x254>
4001f430:	e3a09001 	mov	r9, #1
4001f434:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f438:	e5908014 	ldr	r8, [r0, #20]
4001f43c:	e5900014 	ldr	r0, [r0, #20]
4001f440:	e5d00002 	ldrb	r0, [r0, #2]
4001f444:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f448:	e5911014 	ldr	r1, [r1, #20]
4001f44c:	e5d11003 	ldrb	r1, [r1, #3]
4001f450:	e1800401 	orr	r0, r0, r1, lsl #8
4001f454:	e1500825 	cmp	r0, r5, lsr #16
4001f458:	2a000007 	bcs	4001f47c <CyU3PUibSendDescr+0x160>
4001f45c:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f460:	e5900014 	ldr	r0, [r0, #20]
4001f464:	e5d00002 	ldrb	r0, [r0, #2]
4001f468:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f46c:	e5911014 	ldr	r1, [r1, #20]
4001f470:	e5d11003 	ldrb	r1, [r1, #3]
4001f474:	e1800401 	orr	r0, r0, r1, lsl #8
4001f478:	ea000000 	b	4001f480 <CyU3PUibSendDescr+0x164>
4001f47c:	e1a00825 	lsr	r0, r5, #16
4001f480:	e1a06800 	lsl	r6, r0, #16
4001f484:	e1a06826 	lsr	r6, r6, #16
4001f488:	ea000038 	b	4001f570 <CyU3PUibSendDescr+0x254>
4001f48c:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f490:	e5d00009 	ldrb	r0, [r0, #9]
4001f494:	e3500001 	cmp	r0, #1
4001f498:	1a00001a 	bne	4001f508 <CyU3PUibSendDescr+0x1ec>
4001f49c:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f4a0:	e5900018 	ldr	r0, [r0, #24]
4001f4a4:	e3500000 	cmp	r0, #0
4001f4a8:	0a000030 	beq	4001f570 <CyU3PUibSendDescr+0x254>
4001f4ac:	e3a09001 	mov	r9, #1
4001f4b0:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f4b4:	e5908018 	ldr	r8, [r0, #24]
4001f4b8:	e5900018 	ldr	r0, [r0, #24]
4001f4bc:	e5d00002 	ldrb	r0, [r0, #2]
4001f4c0:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f4c4:	e5911018 	ldr	r1, [r1, #24]
4001f4c8:	e5d11003 	ldrb	r1, [r1, #3]
4001f4cc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4d0:	e1500825 	cmp	r0, r5, lsr #16
4001f4d4:	2a000007 	bcs	4001f4f8 <CyU3PUibSendDescr+0x1dc>
4001f4d8:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f4dc:	e5900018 	ldr	r0, [r0, #24]
4001f4e0:	e5d00002 	ldrb	r0, [r0, #2]
4001f4e4:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f4e8:	e5911018 	ldr	r1, [r1, #24]
4001f4ec:	e5d11003 	ldrb	r1, [r1, #3]
4001f4f0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4f4:	ea000000 	b	4001f4fc <CyU3PUibSendDescr+0x1e0>
4001f4f8:	e1a00825 	lsr	r0, r5, #16
4001f4fc:	e1a06800 	lsl	r6, r0, #16
4001f500:	e1a06826 	lsr	r6, r6, #16
4001f504:	ea000019 	b	4001f570 <CyU3PUibSendDescr+0x254>
4001f508:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f50c:	e590001c 	ldr	r0, [r0, #28]
4001f510:	e3500000 	cmp	r0, #0
4001f514:	0a000015 	beq	4001f570 <CyU3PUibSendDescr+0x254>
4001f518:	e3a09001 	mov	r9, #1
4001f51c:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f520:	e590801c 	ldr	r8, [r0, #28]
4001f524:	e590001c 	ldr	r0, [r0, #28]
4001f528:	e5d00002 	ldrb	r0, [r0, #2]
4001f52c:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f530:	e591101c 	ldr	r1, [r1, #28]
4001f534:	e5d11003 	ldrb	r1, [r1, #3]
4001f538:	e1800401 	orr	r0, r0, r1, lsl #8
4001f53c:	e1500825 	cmp	r0, r5, lsr #16
4001f540:	2a000007 	bcs	4001f564 <CyU3PUibSendDescr+0x248>
4001f544:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f548:	e590001c 	ldr	r0, [r0, #28]
4001f54c:	e5d00002 	ldrb	r0, [r0, #2]
4001f550:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f554:	e591101c 	ldr	r1, [r1, #28]
4001f558:	e5d11003 	ldrb	r1, [r1, #3]
4001f55c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f560:	ea000000 	b	4001f568 <CyU3PUibSendDescr+0x24c>
4001f564:	e1a00825 	lsr	r0, r5, #16
4001f568:	e1a06800 	lsl	r6, r0, #16
4001f56c:	e1a06826 	lsr	r6, r6, #16
4001f570:	e3580000 	cmp	r8, #0
4001f574:	0a000001 	beq	4001f580 <CyU3PUibSendDescr+0x264>
4001f578:	e3a00002 	mov	r0, #2
4001f57c:	e5c80001 	strb	r0, [r8, #1]
4001f580:	ea0000ca 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f584:	e1a00000 	nop			; (mov r0, r0)
4001f588:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f58c:	e1a0b820 	lsr	fp, r0, #16
4001f590:	e35b0010 	cmp	fp, #16
4001f594:	ca000003 	bgt	4001f5a8 <CyU3PUibSendDescr+0x28c>
4001f598:	e59f0390 	ldr	r0, [pc, #912]	; 4001f930 <CyU3PUibSendDescr+0x614>
4001f59c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f5a0:	e3500000 	cmp	r0, #0
4001f5a4:	1a000013 	bne	4001f5f8 <CyU3PUibSendDescr+0x2dc>
4001f5a8:	e59f0378 	ldr	r0, [pc, #888]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f5ac:	e5d00007 	ldrb	r0, [r0, #7]
4001f5b0:	e3500001 	cmp	r0, #1
4001f5b4:	0a000022 	beq	4001f644 <CyU3PUibSendDescr+0x328>
4001f5b8:	e59f0374 	ldr	r0, [pc, #884]	; 4001f934 <CyU3PUibSendDescr+0x618>
4001f5bc:	e5900000 	ldr	r0, [r0]
4001f5c0:	e3500000 	cmp	r0, #0
4001f5c4:	0a00001e 	beq	4001f644 <CyU3PUibSendDescr+0x328>
4001f5c8:	e1a01005 	mov	r1, r5
4001f5cc:	e1a00004 	mov	r0, r4
4001f5d0:	e59f235c 	ldr	r2, [pc, #860]	; 4001f934 <CyU3PUibSendDescr+0x618>
4001f5d4:	e5922000 	ldr	r2, [r2]
4001f5d8:	e12fff32 	blx	r2
4001f5dc:	e1a09000 	mov	r9, r0
4001f5e0:	e3590000 	cmp	r9, #0
4001f5e4:	0a000016 	beq	4001f644 <CyU3PUibSendDescr+0x328>
4001f5e8:	e3a00001 	mov	r0, #1
4001f5ec:	e59f1334 	ldr	r1, [pc, #820]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f5f0:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f5f4:	ea000012 	b	4001f644 <CyU3PUibSendDescr+0x328>
4001f5f8:	e59f0330 	ldr	r0, [pc, #816]	; 4001f930 <CyU3PUibSendDescr+0x614>
4001f5fc:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f600:	e5d00000 	ldrb	r0, [r0]
4001f604:	e1500825 	cmp	r0, r5, lsr #16
4001f608:	2a000003 	bcs	4001f61c <CyU3PUibSendDescr+0x300>
4001f60c:	e59f031c 	ldr	r0, [pc, #796]	; 4001f930 <CyU3PUibSendDescr+0x614>
4001f610:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f614:	e5d00000 	ldrb	r0, [r0]
4001f618:	ea000000 	b	4001f620 <CyU3PUibSendDescr+0x304>
4001f61c:	e1a00825 	lsr	r0, r5, #16
4001f620:	e1a06800 	lsl	r6, r0, #16
4001f624:	e1a06826 	lsr	r6, r6, #16
4001f628:	e59f0300 	ldr	r0, [pc, #768]	; 4001f930 <CyU3PUibSendDescr+0x614>
4001f62c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f630:	e3500000 	cmp	r0, #0
4001f634:	0a000002 	beq	4001f644 <CyU3PUibSendDescr+0x328>
4001f638:	e3a09001 	mov	r9, #1
4001f63c:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f930 <CyU3PUibSendDescr+0x614>
4001f640:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f644:	ea000099 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f648:	e1a00000 	nop			; (mov r0, r0)
4001f64c:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f650:	e5900008 	ldr	r0, [r0, #8]
4001f654:	e3500000 	cmp	r0, #0
4001f658:	0a000007 	beq	4001f67c <CyU3PUibSendDescr+0x360>
4001f65c:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f660:	e5d00009 	ldrb	r0, [r0, #9]
4001f664:	e3500003 	cmp	r0, #3
4001f668:	0a000003 	beq	4001f67c <CyU3PUibSendDescr+0x360>
4001f66c:	e3a09001 	mov	r9, #1
4001f670:	e3a0600a 	mov	r6, #10
4001f674:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f678:	e5908008 	ldr	r8, [r0, #8]
4001f67c:	ea00008b 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f680:	e1a00000 	nop			; (mov r0, r0)
4001f684:	e59f029c 	ldr	r0, [pc, #668]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f688:	e5d00009 	ldrb	r0, [r0, #9]
4001f68c:	e3500002 	cmp	r0, #2
4001f690:	1a00001a 	bne	4001f700 <CyU3PUibSendDescr+0x3e4>
4001f694:	e59f0290 	ldr	r0, [pc, #656]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f698:	e5900018 	ldr	r0, [r0, #24]
4001f69c:	e3500000 	cmp	r0, #0
4001f6a0:	0a000034 	beq	4001f778 <CyU3PUibSendDescr+0x45c>
4001f6a4:	e3a09001 	mov	r9, #1
4001f6a8:	e59f027c 	ldr	r0, [pc, #636]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f6ac:	e5908018 	ldr	r8, [r0, #24]
4001f6b0:	e5900018 	ldr	r0, [r0, #24]
4001f6b4:	e5d00002 	ldrb	r0, [r0, #2]
4001f6b8:	e59f126c 	ldr	r1, [pc, #620]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f6bc:	e5911018 	ldr	r1, [r1, #24]
4001f6c0:	e5d11003 	ldrb	r1, [r1, #3]
4001f6c4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6c8:	e1500825 	cmp	r0, r5, lsr #16
4001f6cc:	2a000007 	bcs	4001f6f0 <CyU3PUibSendDescr+0x3d4>
4001f6d0:	e59f0254 	ldr	r0, [pc, #596]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f6d4:	e5900018 	ldr	r0, [r0, #24]
4001f6d8:	e5d00002 	ldrb	r0, [r0, #2]
4001f6dc:	e59f1248 	ldr	r1, [pc, #584]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f6e0:	e5911018 	ldr	r1, [r1, #24]
4001f6e4:	e5d11003 	ldrb	r1, [r1, #3]
4001f6e8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6ec:	ea000000 	b	4001f6f4 <CyU3PUibSendDescr+0x3d8>
4001f6f0:	e1a00825 	lsr	r0, r5, #16
4001f6f4:	e1a06800 	lsl	r6, r0, #16
4001f6f8:	e1a06826 	lsr	r6, r6, #16
4001f6fc:	ea00001d 	b	4001f778 <CyU3PUibSendDescr+0x45c>
4001f700:	e59f0220 	ldr	r0, [pc, #544]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f704:	e5d00009 	ldrb	r0, [r0, #9]
4001f708:	e3500001 	cmp	r0, #1
4001f70c:	1a000019 	bne	4001f778 <CyU3PUibSendDescr+0x45c>
4001f710:	e59f0214 	ldr	r0, [pc, #532]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f714:	e5900014 	ldr	r0, [r0, #20]
4001f718:	e3500000 	cmp	r0, #0
4001f71c:	0a000015 	beq	4001f778 <CyU3PUibSendDescr+0x45c>
4001f720:	e3a09001 	mov	r9, #1
4001f724:	e59f0200 	ldr	r0, [pc, #512]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f728:	e5908014 	ldr	r8, [r0, #20]
4001f72c:	e5900014 	ldr	r0, [r0, #20]
4001f730:	e5d00002 	ldrb	r0, [r0, #2]
4001f734:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f738:	e5911014 	ldr	r1, [r1, #20]
4001f73c:	e5d11003 	ldrb	r1, [r1, #3]
4001f740:	e1800401 	orr	r0, r0, r1, lsl #8
4001f744:	e1500825 	cmp	r0, r5, lsr #16
4001f748:	2a000007 	bcs	4001f76c <CyU3PUibSendDescr+0x450>
4001f74c:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f750:	e5900014 	ldr	r0, [r0, #20]
4001f754:	e5d00002 	ldrb	r0, [r0, #2]
4001f758:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f75c:	e5911014 	ldr	r1, [r1, #20]
4001f760:	e5d11003 	ldrb	r1, [r1, #3]
4001f764:	e1800401 	orr	r0, r0, r1, lsl #8
4001f768:	ea000000 	b	4001f770 <CyU3PUibSendDescr+0x454>
4001f76c:	e1a00825 	lsr	r0, r5, #16
4001f770:	e1a06800 	lsl	r6, r0, #16
4001f774:	e1a06826 	lsr	r6, r6, #16
4001f778:	e3580000 	cmp	r8, #0
4001f77c:	0a000001 	beq	4001f788 <CyU3PUibSendDescr+0x46c>
4001f780:	e3a00007 	mov	r0, #7
4001f784:	e5c80001 	strb	r0, [r8, #1]
4001f788:	ea000048 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f78c:	e1a00000 	nop			; (mov r0, r0)
4001f790:	e59f0194 	ldr	r0, [pc, #404]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f794:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f798:	e3500000 	cmp	r0, #0
4001f79c:	0a000022 	beq	4001f82c <CyU3PUibSendDescr+0x510>
4001f7a0:	e59f0180 	ldr	r0, [pc, #384]	; 4001f928 <CyU3PUibSendDescr+0x60c>
4001f7a4:	e5d00009 	ldrb	r0, [r0, #9]
4001f7a8:	e3500003 	cmp	r0, #3
4001f7ac:	0a000008 	beq	4001f7d4 <CyU3PUibSendDescr+0x4b8>
4001f7b0:	e59f0174 	ldr	r0, [pc, #372]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f7b4:	e5900000 	ldr	r0, [r0]
4001f7b8:	e3500000 	cmp	r0, #0
4001f7bc:	0a00001a 	beq	4001f82c <CyU3PUibSendDescr+0x510>
4001f7c0:	e59f0164 	ldr	r0, [pc, #356]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f7c4:	e5900000 	ldr	r0, [r0]
4001f7c8:	e5d00002 	ldrb	r0, [r0, #2]
4001f7cc:	e3500010 	cmp	r0, #16
4001f7d0:	1a000015 	bne	4001f82c <CyU3PUibSendDescr+0x510>
4001f7d4:	e3a09001 	mov	r9, #1
4001f7d8:	e59f014c 	ldr	r0, [pc, #332]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f7dc:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f7e0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f7e4:	e5d00002 	ldrb	r0, [r0, #2]
4001f7e8:	e59f113c 	ldr	r1, [pc, #316]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f7ec:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f7f0:	e5d11003 	ldrb	r1, [r1, #3]
4001f7f4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f7f8:	e1500825 	cmp	r0, r5, lsr #16
4001f7fc:	2a000007 	bcs	4001f820 <CyU3PUibSendDescr+0x504>
4001f800:	e59f0124 	ldr	r0, [pc, #292]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f804:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f808:	e5d00002 	ldrb	r0, [r0, #2]
4001f80c:	e59f1118 	ldr	r1, [pc, #280]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f810:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f814:	e5d11003 	ldrb	r1, [r1, #3]
4001f818:	e1800401 	orr	r0, r0, r1, lsl #8
4001f81c:	ea000000 	b	4001f824 <CyU3PUibSendDescr+0x508>
4001f820:	e1a00825 	lsr	r0, r5, #16
4001f824:	e1a06800 	lsl	r6, r0, #16
4001f828:	e1a06826 	lsr	r6, r6, #16
4001f82c:	ea00001f 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f830:	e1a00000 	nop			; (mov r0, r0)
4001f834:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f838:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f83c:	e3500000 	cmp	r0, #0
4001f840:	0a00000d 	beq	4001f87c <CyU3PUibSendDescr+0x560>
4001f844:	e3a09001 	mov	r9, #1
4001f848:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f84c:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f850:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f854:	e5d00000 	ldrb	r0, [r0]
4001f858:	e1500825 	cmp	r0, r5, lsr #16
4001f85c:	2a000003 	bcs	4001f870 <CyU3PUibSendDescr+0x554>
4001f860:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f92c <CyU3PUibSendDescr+0x610>
4001f864:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f868:	e5d00000 	ldrb	r0, [r0]
4001f86c:	ea000000 	b	4001f874 <CyU3PUibSendDescr+0x558>
4001f870:	e1a00825 	lsr	r0, r5, #16
4001f874:	e1a06800 	lsl	r6, r0, #16
4001f878:	e1a06826 	lsr	r6, r6, #16
4001f87c:	ea00000b 	b	4001f8b0 <CyU3PUibSendDescr+0x594>
4001f880:	e1a00000 	nop			; (mov r0, r0)
4001f884:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f934 <CyU3PUibSendDescr+0x618>
4001f888:	e5900000 	ldr	r0, [r0]
4001f88c:	e3500000 	cmp	r0, #0
4001f890:	0a000005 	beq	4001f8ac <CyU3PUibSendDescr+0x590>
4001f894:	e1a01005 	mov	r1, r5
4001f898:	e1a00004 	mov	r0, r4
4001f89c:	e59f2090 	ldr	r2, [pc, #144]	; 4001f934 <CyU3PUibSendDescr+0x618>
4001f8a0:	e5922000 	ldr	r2, [r2]
4001f8a4:	e12fff32 	blx	r2
4001f8a8:	e1a09000 	mov	r9, r0
4001f8ac:	e1a00000 	nop			; (mov r0, r0)
4001f8b0:	e1a00000 	nop			; (mov r0, r0)
4001f8b4:	e3590001 	cmp	r9, #1
4001f8b8:	1a000017 	bne	4001f91c <CyU3PUibSendDescr+0x600>
4001f8bc:	e3580000 	cmp	r8, #0
4001f8c0:	0a000015 	beq	4001f91c <CyU3PUibSendDescr+0x600>
4001f8c4:	e1a01008 	mov	r1, r8
4001f8c8:	e1a00006 	mov	r0, r6
4001f8cc:	ebfff758 	bl	4001d634 <CyU3PUsbSendEP0Data>
4001f8d0:	e1a07000 	mov	r7, r0
4001f8d4:	e3570000 	cmp	r7, #0
4001f8d8:	1a000009 	bne	4001f904 <CyU3PUibSendDescr+0x5e8>
4001f8dc:	e59d0000 	ldr	r0, [sp]
4001f8e0:	e1560000 	cmp	r6, r0
4001f8e4:	aa000006 	bge	4001f904 <CyU3PUibSendDescr+0x5e8>
4001f8e8:	e24a0001 	sub	r0, sl, #1
4001f8ec:	e1100006 	tst	r0, r6
4001f8f0:	1a000003 	bne	4001f904 <CyU3PUibSendDescr+0x5e8>
4001f8f4:	e1a01008 	mov	r1, r8
4001f8f8:	e3a00000 	mov	r0, #0
4001f8fc:	ebfff74c 	bl	4001d634 <CyU3PUsbSendEP0Data>
4001f900:	e1a07000 	mov	r7, r0
4001f904:	e3570000 	cmp	r7, #0
4001f908:	0a000003 	beq	4001f91c <CyU3PUibSendDescr+0x600>
4001f90c:	e3a02000 	mov	r2, #0
4001f910:	e3a01001 	mov	r1, #1
4001f914:	e1a00002 	mov	r0, r2
4001f918:	ebfff970 	bl	4001dee0 <CyU3PUsbStall>
4001f91c:	e1a00009 	mov	r0, r9
4001f920:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f924:	0000ffff 	.word	0x0000ffff
4001f928:	400321c0 	.word	0x400321c0
4001f92c:	40032418 	.word	0x40032418
4001f930:	40032438 	.word	0x40032438
4001f934:	4003122c 	.word	0x4003122c

Disassembly of section i.CyU3PUibSocketInit:

4001f938 <CyU3PUibSocketInit>:
4001f938:	e3a00000 	mov	r0, #0
4001f93c:	ea00000d 	b	4001f978 <CyU3PUibSocketInit+0x40>
4001f940:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f944:	e59f2080 	ldr	r2, [pc, #128]	; 4001f9cc <CyU3PUibSocketInit+0x94>
4001f948:	e0822380 	add	r2, r2, r0, lsl #7
4001f94c:	e582100c 	str	r1, [r2, #12]
4001f950:	e3e01000 	mvn	r1, #0
4001f954:	e59f2070 	ldr	r2, [pc, #112]	; 4001f9cc <CyU3PUibSocketInit+0x94>
4001f958:	e0822380 	add	r2, r2, r0, lsl #7
4001f95c:	e5821010 	str	r1, [r2, #16]
4001f960:	e3a01000 	mov	r1, #0
4001f964:	e59f2060 	ldr	r2, [pc, #96]	; 4001f9cc <CyU3PUibSocketInit+0x94>
4001f968:	e0822380 	add	r2, r2, r0, lsl #7
4001f96c:	e5821014 	str	r1, [r2, #20]
4001f970:	e2801001 	add	r1, r0, #1
4001f974:	e20100ff 	and	r0, r1, #255	; 0xff
4001f978:	e3500010 	cmp	r0, #16
4001f97c:	baffffef 	blt	4001f940 <CyU3PUibSocketInit+0x8>
4001f980:	e3a00000 	mov	r0, #0
4001f984:	ea00000d 	b	4001f9c0 <CyU3PUibSocketInit+0x88>
4001f988:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f98c:	e59f203c 	ldr	r2, [pc, #60]	; 4001f9d0 <CyU3PUibSocketInit+0x98>
4001f990:	e0822380 	add	r2, r2, r0, lsl #7
4001f994:	e582100c 	str	r1, [r2, #12]
4001f998:	e3e01000 	mvn	r1, #0
4001f99c:	e59f202c 	ldr	r2, [pc, #44]	; 4001f9d0 <CyU3PUibSocketInit+0x98>
4001f9a0:	e0822380 	add	r2, r2, r0, lsl #7
4001f9a4:	e5821010 	str	r1, [r2, #16]
4001f9a8:	e3a01000 	mov	r1, #0
4001f9ac:	e59f201c 	ldr	r2, [pc, #28]	; 4001f9d0 <CyU3PUibSocketInit+0x98>
4001f9b0:	e0822380 	add	r2, r2, r0, lsl #7
4001f9b4:	e5821014 	str	r1, [r2, #20]
4001f9b8:	e2801001 	add	r1, r0, #1
4001f9bc:	e20100ff 	and	r0, r1, #255	; 0xff
4001f9c0:	e3500010 	cmp	r0, #16
4001f9c4:	baffffef 	blt	4001f988 <CyU3PUibSocketInit+0x50>
4001f9c8:	e12fff1e 	bx	lr
4001f9cc:	e0038000 	.word	0xe0038000
4001f9d0:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f9d4 <CyU3PUibStatusTimerCb>:
4001f9d4:	e92d4010 	push	{r4, lr}
4001f9d8:	e1a04000 	mov	r4, r0
4001f9dc:	e59f0050 	ldr	r0, [pc, #80]	; 4001fa34 <CyU3PUibStatusTimerCb+0x60>
4001f9e0:	e5900000 	ldr	r0, [r0]
4001f9e4:	e3500000 	cmp	r0, #0
4001f9e8:	0a000010 	beq	4001fa30 <CyU3PUibStatusTimerCb+0x5c>
4001f9ec:	e59f0044 	ldr	r0, [pc, #68]	; 4001fa38 <CyU3PUibStatusTimerCb+0x64>
4001f9f0:	e5d00009 	ldrb	r0, [r0, #9]
4001f9f4:	e3500003 	cmp	r0, #3
4001f9f8:	1a00000c 	bne	4001fa30 <CyU3PUibStatusTimerCb+0x5c>
4001f9fc:	e59f0038 	ldr	r0, [pc, #56]	; 4001fa3c <CyU3PUibStatusTimerCb+0x68>
4001fa00:	e5900000 	ldr	r0, [r0]
4001fa04:	e3500000 	cmp	r0, #0
4001fa08:	0a000008 	beq	4001fa30 <CyU3PUibStatusTimerCb+0x5c>
4001fa0c:	e3a01000 	mov	r1, #0
4001fa10:	e1a00001 	mov	r0, r1
4001fa14:	ebfff77c 	bl	4001d80c <CyU3PUsbSendErdy>
4001fa18:	e3a02000 	mov	r2, #0
4001fa1c:	e3a01064 	mov	r1, #100	; 0x64
4001fa20:	e59f0018 	ldr	r0, [pc, #24]	; 4001fa40 <CyU3PUibStatusTimerCb+0x6c>
4001fa24:	ebffabe4 	bl	4000a9bc <_txe_timer_change>
4001fa28:	e59f0010 	ldr	r0, [pc, #16]	; 4001fa40 <CyU3PUibStatusTimerCb+0x6c>
4001fa2c:	ebffabd2 	bl	4000a97c <_txe_timer_activate>
4001fa30:	e8bd8010 	pop	{r4, pc}
4001fa34:	4003123c 	.word	0x4003123c
4001fa38:	400321c0 	.word	0x400321c0
4001fa3c:	40031240 	.word	0x40031240
4001fa40:	40032b20 	.word	0x40032b20

Disassembly of section i.CyU3PUibThreadEntry:

4001fa44 <CyU3PUibThreadEntry>:
4001fa44:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001fa48:	e3a05000 	mov	r5, #0
4001fa4c:	e59f505c 	ldr	r5, [pc, #92]	; 4001fab0 <CyU3PUibThreadEntry+0x6c>
4001fa50:	e3a00001 	mov	r0, #1
4001fa54:	e59f1058 	ldr	r1, [pc, #88]	; 4001fab4 <CyU3PUibThreadEntry+0x70>
4001fa58:	e5810000 	str	r0, [r1]
4001fa5c:	e3a02020 	mov	r2, #32
4001fa60:	e3a01000 	mov	r1, #0
4001fa64:	e59f004c 	ldr	r0, [pc, #76]	; 4001fab8 <CyU3PUibThreadEntry+0x74>
4001fa68:	ebff8f12 	bl	400036b8 <CyU3PMemSet>
4001fa6c:	ea00000e 	b	4001faac <CyU3PUibThreadEntry+0x68>
4001fa70:	e3e03000 	mvn	r3, #0
4001fa74:	e58d3000 	str	r3, [sp]
4001fa78:	e28d3004 	add	r3, sp, #4
4001fa7c:	e3a02001 	mov	r2, #1
4001fa80:	e1a01005 	mov	r1, r5
4001fa84:	e59f0030 	ldr	r0, [pc, #48]	; 4001fabc <CyU3PUibThreadEntry+0x78>
4001fa88:	ebffa8b5 	bl	40009d64 <_txe_event_flags_get>
4001fa8c:	e1a04000 	mov	r4, r0
4001fa90:	e3540000 	cmp	r4, #0
4001fa94:	0a000000 	beq	4001fa9c <CyU3PUibThreadEntry+0x58>
4001fa98:	ea000003 	b	4001faac <CyU3PUibThreadEntry+0x68>
4001fa9c:	e59d0004 	ldr	r0, [sp, #4]
4001faa0:	eb0002a1 	bl	4002052c <CyU3PUsbHandleEvents>
4001faa4:	ebffab97 	bl	4000a908 <_txe_thread_relinquish>
4001faa8:	e1a00000 	nop			; (mov r0, r0)
4001faac:	eaffffef 	b	4001fa70 <CyU3PUibThreadEntry+0x2c>
4001fab0:	073fbfe1 	.word	0x073fbfe1
4001fab4:	400311ec 	.word	0x400311ec
4001fab8:	40032b00 	.word	0x40032b00
4001fabc:	40032338 	.word	0x40032338

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001fac0 <CyU3PUibVbusChangeHandler>:
4001fac0:	e92d4010 	push	{r4, lr}
4001fac4:	e3a00000 	mov	r0, #0
4001fac8:	e59f114c 	ldr	r1, [pc, #332]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001facc:	e5810060 	str	r0, [r1, #96]	; 0x60
4001fad0:	e59f0148 	ldr	r0, [pc, #328]	; 4001fc20 <CyU3PUibVbusChangeHandler+0x160>
4001fad4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fad8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fadc:	e1100001 	tst	r0, r1
4001fae0:	0a00000b 	beq	4001fb14 <CyU3PUibVbusChangeHandler+0x54>
4001fae4:	e3a00002 	mov	r0, #2
4001fae8:	eb000051 	bl	4001fc34 <CyU3PUsbAddToEventLog>
4001faec:	e59f0130 	ldr	r0, [pc, #304]	; 4001fc24 <CyU3PUibVbusChangeHandler+0x164>
4001faf0:	e5900000 	ldr	r0, [r0]
4001faf4:	e3500000 	cmp	r0, #0
4001faf8:	0a000010 	beq	4001fb40 <CyU3PUibVbusChangeHandler+0x80>
4001fafc:	e3a01000 	mov	r1, #0
4001fb00:	e3a0000b 	mov	r0, #11
4001fb04:	e59f2118 	ldr	r2, [pc, #280]	; 4001fc24 <CyU3PUibVbusChangeHandler+0x164>
4001fb08:	e5922000 	ldr	r2, [r2]
4001fb0c:	e12fff32 	blx	r2
4001fb10:	ea00000a 	b	4001fb40 <CyU3PUibVbusChangeHandler+0x80>
4001fb14:	e3a00001 	mov	r0, #1
4001fb18:	eb000045 	bl	4001fc34 <CyU3PUsbAddToEventLog>
4001fb1c:	e59f0100 	ldr	r0, [pc, #256]	; 4001fc24 <CyU3PUibVbusChangeHandler+0x164>
4001fb20:	e5900000 	ldr	r0, [r0]
4001fb24:	e3500000 	cmp	r0, #0
4001fb28:	0a000004 	beq	4001fb40 <CyU3PUibVbusChangeHandler+0x80>
4001fb2c:	e3a01000 	mov	r1, #0
4001fb30:	e3a0000c 	mov	r0, #12
4001fb34:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fc24 <CyU3PUibVbusChangeHandler+0x164>
4001fb38:	e5922000 	ldr	r2, [r2]
4001fb3c:	e12fff32 	blx	r2
4001fb40:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fc20 <CyU3PUibVbusChangeHandler+0x160>
4001fb44:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fb48:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fb4c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fb50:	e1100001 	tst	r0, r1
4001fb54:	0a000022 	beq	4001fbe4 <CyU3PUibVbusChangeHandler+0x124>
4001fb58:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fb5c:	e5d00008 	ldrb	r0, [r0, #8]
4001fb60:	e3500005 	cmp	r0, #5
4001fb64:	ba000000 	blt	4001fb6c <CyU3PUibVbusChangeHandler+0xac>
4001fb68:	eb0008d6 	bl	40021ec8 <HandleVbusOffEvent>
4001fb6c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fb70:	e5d00008 	ldrb	r0, [r0, #8]
4001fb74:	e3500004 	cmp	r0, #4
4001fb78:	1a00001e 	bne	4001fbf8 <CyU3PUibVbusChangeHandler+0x138>
4001fb7c:	e59f0098 	ldr	r0, [pc, #152]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fb80:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fb84:	e59f1090 	ldr	r1, [pc, #144]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fb88:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fb8c:	e2810000 	add	r0, r1, #0
4001fb90:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fb94:	e3500000 	cmp	r0, #0
4001fb98:	0a00000a 	beq	4001fbc8 <CyU3PUibVbusChangeHandler+0x108>
4001fb9c:	e3a00000 	mov	r0, #0
4001fba0:	e59f1080 	ldr	r1, [pc, #128]	; 4001fc28 <CyU3PUibVbusChangeHandler+0x168>
4001fba4:	e5810014 	str	r0, [r1, #20]
4001fba8:	e59f107c 	ldr	r1, [pc, #124]	; 4001fc2c <CyU3PUibVbusChangeHandler+0x16c>
4001fbac:	e5810000 	str	r0, [r1]
4001fbb0:	e59f1078 	ldr	r1, [pc, #120]	; 4001fc30 <CyU3PUibVbusChangeHandler+0x170>
4001fbb4:	e5810000 	str	r0, [r1]
4001fbb8:	e59f105c 	ldr	r1, [pc, #92]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fbbc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fbc0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fbc4:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fbc8:	e59f104c 	ldr	r1, [pc, #76]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fbcc:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fbd0:	ebfff593 	bl	4001d224 <CyU3PUsbPhyEnable>
4001fbd4:	e3a00005 	mov	r0, #5
4001fbd8:	e59f103c 	ldr	r1, [pc, #60]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fbdc:	e5c10008 	strb	r0, [r1, #8]
4001fbe0:	ea000004 	b	4001fbf8 <CyU3PUibVbusChangeHandler+0x138>
4001fbe4:	e59f0030 	ldr	r0, [pc, #48]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fbe8:	e5d00008 	ldrb	r0, [r0, #8]
4001fbec:	e3500005 	cmp	r0, #5
4001fbf0:	ba000000 	blt	4001fbf8 <CyU3PUibVbusChangeHandler+0x138>
4001fbf4:	eb0008b3 	bl	40021ec8 <HandleVbusOffEvent>
4001fbf8:	ebfff0df 	bl	4001bf7c <CyU3POtgIsStarted>
4001fbfc:	e3500000 	cmp	r0, #0
4001fc00:	0a000000 	beq	4001fc08 <CyU3PUibVbusChangeHandler+0x148>
4001fc04:	ebfff4e3 	bl	4001cf98 <CyU3PUsbOtgVbusChangeHandler>
4001fc08:	e59f000c 	ldr	r0, [pc, #12]	; 4001fc1c <CyU3PUibVbusChangeHandler+0x15c>
4001fc0c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fc10:	e59f1008 	ldr	r1, [pc, #8]	; 4001fc20 <CyU3PUibVbusChangeHandler+0x160>
4001fc14:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fc18:	e8bd8010 	pop	{r4, pc}
4001fc1c:	400321c0 	.word	0x400321c0
4001fc20:	e0051000 	.word	0xe0051000
4001fc24:	40031228 	.word	0x40031228
4001fc28:	e0033000 	.word	0xe0033000
4001fc2c:	40031210 	.word	0x40031210
4001fc30:	40031214 	.word	0x40031214

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fc34 <CyU3PUsbAddToEventLog>:
4001fc34:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc94 <CyU3PUsbAddToEventLog+0x60>
4001fc38:	e5911000 	ldr	r1, [r1]
4001fc3c:	e3510000 	cmp	r1, #0
4001fc40:	0a000012 	beq	4001fc90 <CyU3PUsbAddToEventLog+0x5c>
4001fc44:	e59f104c 	ldr	r1, [pc, #76]	; 4001fc98 <CyU3PUsbAddToEventLog+0x64>
4001fc48:	e5911000 	ldr	r1, [r1]
4001fc4c:	e59f2044 	ldr	r2, [pc, #68]	; 4001fc98 <CyU3PUsbAddToEventLog+0x64>
4001fc50:	e5922000 	ldr	r2, [r2]
4001fc54:	e2822001 	add	r2, r2, #1
4001fc58:	e59f3038 	ldr	r3, [pc, #56]	; 4001fc98 <CyU3PUsbAddToEventLog+0x64>
4001fc5c:	e5832000 	str	r2, [r3]
4001fc60:	e59f202c 	ldr	r2, [pc, #44]	; 4001fc94 <CyU3PUsbAddToEventLog+0x60>
4001fc64:	e5922000 	ldr	r2, [r2]
4001fc68:	e7c20001 	strb	r0, [r2, r1]
4001fc6c:	e2831000 	add	r1, r3, #0
4001fc70:	e5911000 	ldr	r1, [r1]
4001fc74:	e59f2020 	ldr	r2, [pc, #32]	; 4001fc9c <CyU3PUsbAddToEventLog+0x68>
4001fc78:	e5922000 	ldr	r2, [r2]
4001fc7c:	e1510002 	cmp	r1, r2
4001fc80:	3a000002 	bcc	4001fc90 <CyU3PUsbAddToEventLog+0x5c>
4001fc84:	e3a01000 	mov	r1, #0
4001fc88:	e2832000 	add	r2, r3, #0
4001fc8c:	e5821000 	str	r1, [r2]
4001fc90:	e12fff1e 	bx	lr
4001fc94:	4003121c 	.word	0x4003121c
4001fc98:	40031220 	.word	0x40031220
4001fc9c:	40031224 	.word	0x40031224

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fca0 <CyU3PUsbCheckUsb3Disconnect>:
4001fca0:	e92d4070 	push	{r4, r5, r6, lr}
4001fca4:	e3a04e19 	mov	r4, #400	; 0x190
4001fca8:	e3a06002 	mov	r6, #2
4001fcac:	e59f01fc 	ldr	r0, [pc, #508]	; 4001feb0 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fcb0:	e1d000b0 	ldrh	r0, [r0]
4001fcb4:	e3500001 	cmp	r0, #1
4001fcb8:	da000008 	ble	4001fce0 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fcbc:	e59f01ec 	ldr	r0, [pc, #492]	; 4001feb0 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fcc0:	e1d010b0 	ldrh	r1, [r0]
4001fcc4:	e1a00004 	mov	r0, r4
4001fcc8:	ebffc39b 	bl	40010b3c <__aeabi_idivmod>
4001fccc:	e1a04800 	lsl	r4, r0, #16
4001fcd0:	e1a04824 	lsr	r4, r4, #16
4001fcd4:	e2840001 	add	r0, r4, #1
4001fcd8:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fcdc:	e3a06001 	mov	r6, #1
4001fce0:	e59f01cc 	ldr	r0, [pc, #460]	; 4001feb4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fce4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fce8:	e200503f 	and	r5, r0, #63	; 0x3f
4001fcec:	e3550010 	cmp	r5, #16
4001fcf0:	ba000004 	blt	4001fd08 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fcf4:	e3550017 	cmp	r5, #23
4001fcf8:	ca000002 	bgt	4001fd08 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fcfc:	e3a00000 	mov	r0, #0
4001fd00:	e59f11b0 	ldr	r1, [pc, #432]	; 4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fd04:	e5810000 	str	r0, [r1]
4001fd08:	e59f01a8 	ldr	r0, [pc, #424]	; 4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fd0c:	e5900000 	ldr	r0, [r0]
4001fd10:	e3500000 	cmp	r0, #0
4001fd14:	1a000000 	bne	4001fd1c <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fd18:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fd1c:	ea000010 	b	4001fd64 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fd20:	e1a00006 	mov	r0, r6
4001fd24:	ebffa346 	bl	40008a44 <_tx_thread_sleep>
4001fd28:	e59f0184 	ldr	r0, [pc, #388]	; 4001feb4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fd2c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fd30:	e200503f 	and	r5, r0, #63	; 0x3f
4001fd34:	e59f017c 	ldr	r0, [pc, #380]	; 4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fd38:	e5900000 	ldr	r0, [r0]
4001fd3c:	e3500000 	cmp	r0, #0
4001fd40:	0a000003 	beq	4001fd54 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fd44:	e3550010 	cmp	r5, #16
4001fd48:	ba000005 	blt	4001fd64 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fd4c:	e3550017 	cmp	r5, #23
4001fd50:	ca000003 	bgt	4001fd64 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fd54:	e3a00000 	mov	r0, #0
4001fd58:	e59f1158 	ldr	r1, [pc, #344]	; 4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fd5c:	e5810000 	str	r0, [r1]
4001fd60:	ea000004 	b	4001fd78 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fd64:	e1b00004 	movs	r0, r4
4001fd68:	e2441001 	sub	r1, r4, #1
4001fd6c:	e1a04801 	lsl	r4, r1, #16
4001fd70:	e1a04824 	lsr	r4, r4, #16
4001fd74:	1affffe9 	bne	4001fd20 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fd78:	e1a00000 	nop			; (mov r0, r0)
4001fd7c:	e59f0134 	ldr	r0, [pc, #308]	; 4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fd80:	e5900000 	ldr	r0, [r0]
4001fd84:	e3500000 	cmp	r0, #0
4001fd88:	0a000047 	beq	4001feac <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fd8c:	e59f0128 	ldr	r0, [pc, #296]	; 4001febc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fd90:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fd94:	e3100a02 	tst	r0, #8192	; 0x2000
4001fd98:	0a000020 	beq	4001fe20 <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fd9c:	e59f0118 	ldr	r0, [pc, #280]	; 4001febc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fda0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fda4:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fda8:	e59f110c 	ldr	r1, [pc, #268]	; 4001febc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fdac:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fdb0:	e3a00002 	mov	r0, #2
4001fdb4:	ebffce52 	bl	40013704 <CyU3PBusyWait>
4001fdb8:	e59f0100 	ldr	r0, [pc, #256]	; 4001fec0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fdbc:	e5900004 	ldr	r0, [r0, #4]
4001fdc0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fdc4:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fec0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fdc8:	e5810004 	str	r0, [r1, #4]
4001fdcc:	e3a00001 	mov	r0, #1
4001fdd0:	ebffce4b 	bl	40013704 <CyU3PBusyWait>
4001fdd4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001feb4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fdd8:	e590001c 	ldr	r0, [r0, #28]
4001fddc:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fde0:	e59f10cc 	ldr	r1, [pc, #204]	; 4001feb4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fde4:	e581001c 	str	r0, [r1, #28]
4001fde8:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fec4 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fdec:	e5900000 	ldr	r0, [r0]
4001fdf0:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fdf4:	e3a00001 	mov	r0, #1
4001fdf8:	ebffce41 	bl	40013704 <CyU3PBusyWait>
4001fdfc:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fec0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fe00:	e5900004 	ldr	r0, [r0, #4]
4001fe04:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fe08:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fec0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fe0c:	e5810004 	str	r0, [r1, #4]
4001fe10:	e3a01000 	mov	r1, #0
4001fe14:	e3a00002 	mov	r0, #2
4001fe18:	ebfff1d9 	bl	4001c584 <CyU3PSetUsbCoreClock>
4001fe1c:	ea000022 	b	4001feac <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fe20:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fec8 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fe24:	e5900000 	ldr	r0, [r0]
4001fe28:	e3500000 	cmp	r0, #0
4001fe2c:	0a000007 	beq	4001fe50 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fe30:	e3a00000 	mov	r0, #0
4001fe34:	e59f108c 	ldr	r1, [pc, #140]	; 4001fec8 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fe38:	e5810000 	str	r0, [r1]
4001fe3c:	e3a00001 	mov	r0, #1
4001fe40:	ebfff481 	bl	4001d04c <CyU3PUsbPhyDisable>
4001fe44:	e3a00001 	mov	r0, #1
4001fe48:	ebfff4f5 	bl	4001d224 <CyU3PUsbPhyEnable>
4001fe4c:	eaffffb1 	b	4001fd18 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fe50:	e59f0074 	ldr	r0, [pc, #116]	; 4001fecc <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fe54:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fe58:	e3500000 	cmp	r0, #0
4001fe5c:	0a000011 	beq	4001fea8 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fe60:	e3a00001 	mov	r0, #1
4001fe64:	ebfff478 	bl	4001d04c <CyU3PUsbPhyDisable>
4001fe68:	e3a00003 	mov	r0, #3
4001fe6c:	e59f1058 	ldr	r1, [pc, #88]	; 4001fecc <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fe70:	e5c10008 	strb	r0, [r1, #8]
4001fe74:	e3a00000 	mov	r0, #0
4001fe78:	e5c10009 	strb	r0, [r1, #9]
4001fe7c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fe80:	e59f0048 	ldr	r0, [pc, #72]	; 4001fed0 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fe84:	e5900000 	ldr	r0, [r0]
4001fe88:	e3500000 	cmp	r0, #0
4001fe8c:	0a000006 	beq	4001feac <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fe90:	e3a01000 	mov	r1, #0
4001fe94:	e3a00014 	mov	r0, #20
4001fe98:	e59f2030 	ldr	r2, [pc, #48]	; 4001fed0 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fe9c:	e5922000 	ldr	r2, [r2]
4001fea0:	e12fff32 	blx	r2
4001fea4:	ea000000 	b	4001feac <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fea8:	eb00008e 	bl	400200e8 <CyU3PUsbFallBackToUsb2>
4001feac:	eaffff99 	b	4001fd18 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001feb0:	40031244 	.word	0x40031244
4001feb4:	e0033000 	.word	0xe0033000
4001feb8:	400311f0 	.word	0x400311f0
4001febc:	e0031000 	.word	0xe0031000
4001fec0:	e0030000 	.word	0xe0030000
4001fec4:	400310e4 	.word	0x400310e4
4001fec8:	40031200 	.word	0x40031200
4001fecc:	400321c0 	.word	0x400321c0
4001fed0:	40031228 	.word	0x40031228

Disassembly of section i.CyU3PUsbDescInit:

4001fed4 <CyU3PUsbDescInit>:
4001fed4:	e92d4010 	push	{r4, lr}
4001fed8:	e3a02074 	mov	r2, #116	; 0x74
4001fedc:	e3a01000 	mov	r1, #0
4001fee0:	e59f0004 	ldr	r0, [pc, #4]	; 4001feec <CyU3PUsbDescInit+0x18>
4001fee4:	ebff8df3 	bl	400036b8 <CyU3PMemSet>
4001fee8:	e8bd8010 	pop	{r4, pc}
4001feec:	40032418 	.word	0x40032418

Disassembly of section i.CyU3PUsbEpPrepare:

4001fef0 <CyU3PUsbEpPrepare>:
4001fef0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fef4:	e1a04000 	mov	r4, r0
4001fef8:	e3a05001 	mov	r5, #1
4001fefc:	ea000061 	b	40020088 <CyU3PUsbEpPrepare+0x198>
4001ff00:	e59f01b8 	ldr	r0, [pc, #440]	; 400200c0 <CyU3PUsbEpPrepare+0x1d0>
4001ff04:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ff08:	e3100901 	tst	r0, #16384	; 0x4000
4001ff0c:	0a000029 	beq	4001ffb8 <CyU3PUsbEpPrepare+0xc8>
4001ff10:	e0850085 	add	r0, r5, r5, lsl #1
4001ff14:	e59f11a8 	ldr	r1, [pc, #424]	; 400200c4 <CyU3PUsbEpPrepare+0x1d4>
4001ff18:	e0810100 	add	r0, r1, r0, lsl #2
4001ff1c:	e1d070b0 	ldrh	r7, [r0]
4001ff20:	e59f0198 	ldr	r0, [pc, #408]	; 400200c0 <CyU3PUsbEpPrepare+0x1d0>
4001ff24:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ff28:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001ff2c:	e1a06520 	lsr	r6, r0, #10
4001ff30:	e2440001 	sub	r0, r4, #1
4001ff34:	e0800080 	add	r0, r0, r0, lsl #1
4001ff38:	e59f1188 	ldr	r1, [pc, #392]	; 400200c8 <CyU3PUsbEpPrepare+0x1d8>
4001ff3c:	e0810100 	add	r0, r1, r0, lsl #2
4001ff40:	e2461001 	sub	r1, r6, #1
4001ff44:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001ff48:	e1570008 	cmp	r7, r8
4001ff4c:	8a000001 	bhi	4001ff58 <CyU3PUsbEpPrepare+0x68>
4001ff50:	e3570000 	cmp	r7, #0
4001ff54:	1a000000 	bne	4001ff5c <CyU3PUsbEpPrepare+0x6c>
4001ff58:	e1a07008 	mov	r7, r8
4001ff5c:	e3540003 	cmp	r4, #3
4001ff60:	1a000005 	bne	4001ff7c <CyU3PUsbEpPrepare+0x8c>
4001ff64:	e59f0160 	ldr	r0, [pc, #352]	; 400200cc <CyU3PUsbEpPrepare+0x1dc>
4001ff68:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ff6c:	e3800001 	orr	r0, r0, #1
4001ff70:	e59f1154 	ldr	r1, [pc, #340]	; 400200cc <CyU3PUsbEpPrepare+0x1dc>
4001ff74:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ff78:	ea000008 	b	4001ffa0 <CyU3PUsbEpPrepare+0xb0>
4001ff7c:	e59f013c 	ldr	r0, [pc, #316]	; 400200c0 <CyU3PUsbEpPrepare+0x1d0>
4001ff80:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ff84:	e1a00520 	lsr	r0, r0, #10
4001ff88:	e1a00500 	lsl	r0, r0, #10
4001ff8c:	e1a01b07 	lsl	r1, r7, #22
4001ff90:	e1a01b21 	lsr	r1, r1, #22
4001ff94:	e1800001 	orr	r0, r0, r1
4001ff98:	e59f1120 	ldr	r1, [pc, #288]	; 400200c0 <CyU3PUsbEpPrepare+0x1d0>
4001ff9c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ffa0:	e59f0128 	ldr	r0, [pc, #296]	; 400200d0 <CyU3PUsbEpPrepare+0x1e0>
4001ffa4:	e7807105 	str	r7, [r0, r5, lsl #2]
4001ffa8:	e3850080 	orr	r0, r5, #128	; 0x80
4001ffac:	e3a02001 	mov	r2, #1
4001ffb0:	e3a01000 	mov	r1, #0
4001ffb4:	ebfff7c9 	bl	4001dee0 <CyU3PUsbStall>
4001ffb8:	e59f0114 	ldr	r0, [pc, #276]	; 400200d4 <CyU3PUsbEpPrepare+0x1e4>
4001ffbc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ffc0:	e3100901 	tst	r0, #16384	; 0x4000
4001ffc4:	0a00002d 	beq	40020080 <CyU3PUsbEpPrepare+0x190>
4001ffc8:	e0850085 	add	r0, r5, r5, lsl #1
4001ffcc:	e59f1104 	ldr	r1, [pc, #260]	; 400200d8 <CyU3PUsbEpPrepare+0x1e8>
4001ffd0:	e0810100 	add	r0, r1, r0, lsl #2
4001ffd4:	e1d070b0 	ldrh	r7, [r0]
4001ffd8:	e59f00f4 	ldr	r0, [pc, #244]	; 400200d4 <CyU3PUsbEpPrepare+0x1e4>
4001ffdc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ffe0:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001ffe4:	e1a06520 	lsr	r6, r0, #10
4001ffe8:	e2440001 	sub	r0, r4, #1
4001ffec:	e0800080 	add	r0, r0, r0, lsl #1
4001fff0:	e59f10d0 	ldr	r1, [pc, #208]	; 400200c8 <CyU3PUsbEpPrepare+0x1d8>
4001fff4:	e0810100 	add	r0, r1, r0, lsl #2
4001fff8:	e2461001 	sub	r1, r6, #1
4001fffc:	e7908101 	ldr	r8, [r0, r1, lsl #2]
40020000:	e1570008 	cmp	r7, r8
40020004:	8a000001 	bhi	40020010 <CyU3PUsbEpPrepare+0x120>
40020008:	e3570000 	cmp	r7, #0
4002000c:	1a000000 	bne	40020014 <CyU3PUsbEpPrepare+0x124>
40020010:	e1a07008 	mov	r7, r8
40020014:	e3540003 	cmp	r4, #3
40020018:	1a000005 	bne	40020034 <CyU3PUsbEpPrepare+0x144>
4002001c:	e59f00b8 	ldr	r0, [pc, #184]	; 400200dc <CyU3PUsbEpPrepare+0x1ec>
40020020:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020024:	e3800001 	orr	r0, r0, #1
40020028:	e59f10ac 	ldr	r1, [pc, #172]	; 400200dc <CyU3PUsbEpPrepare+0x1ec>
4002002c:	e7810105 	str	r0, [r1, r5, lsl #2]
40020030:	ea000008 	b	40020058 <CyU3PUsbEpPrepare+0x168>
40020034:	e59f0098 	ldr	r0, [pc, #152]	; 400200d4 <CyU3PUsbEpPrepare+0x1e4>
40020038:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002003c:	e1a00520 	lsr	r0, r0, #10
40020040:	e1a00500 	lsl	r0, r0, #10
40020044:	e1a01b07 	lsl	r1, r7, #22
40020048:	e1a01b21 	lsr	r1, r1, #22
4002004c:	e1800001 	orr	r0, r0, r1
40020050:	e59f107c 	ldr	r1, [pc, #124]	; 400200d4 <CyU3PUsbEpPrepare+0x1e4>
40020054:	e7810105 	str	r0, [r1, r5, lsl #2]
40020058:	e59f0080 	ldr	r0, [pc, #128]	; 400200e0 <CyU3PUsbEpPrepare+0x1f0>
4002005c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020060:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
40020064:	e1800007 	orr	r0, r0, r7
40020068:	e59f1070 	ldr	r1, [pc, #112]	; 400200e0 <CyU3PUsbEpPrepare+0x1f0>
4002006c:	e7810105 	str	r0, [r1, r5, lsl #2]
40020070:	e3a02001 	mov	r2, #1
40020074:	e3a01000 	mov	r1, #0
40020078:	e1a00005 	mov	r0, r5
4002007c:	ebfff797 	bl	4001dee0 <CyU3PUsbStall>
40020080:	e2850001 	add	r0, r5, #1
40020084:	e20050ff 	and	r5, r0, #255	; 0xff
40020088:	e3550010 	cmp	r5, #16
4002008c:	baffff9b 	blt	4001ff00 <CyU3PUsbEpPrepare+0x10>
40020090:	e3540003 	cmp	r4, #3
40020094:	1a000005 	bne	400200b0 <CyU3PUsbEpPrepare+0x1c0>
40020098:	e59f1044 	ldr	r1, [pc, #68]	; 400200e4 <CyU3PUsbEpPrepare+0x1f4>
4002009c:	e5911068 	ldr	r1, [r1, #104]	; 0x68
400200a0:	e3510000 	cmp	r1, #0
400200a4:	0a000001 	beq	400200b0 <CyU3PUsbEpPrepare+0x1c0>
400200a8:	e3a01001 	mov	r1, #1
400200ac:	ea000000 	b	400200b4 <CyU3PUsbEpPrepare+0x1c4>
400200b0:	e3a01000 	mov	r1, #0
400200b4:	e1a00001 	mov	r0, r1
400200b8:	eb000853 	bl	4002220c <CyFx3UsbDmaPrefetchEnable>
400200bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400200c0:	e0031418 	.word	0xe0031418
400200c4:	40032038 	.word	0x40032038
400200c8:	4001204c 	.word	0x4001204c
400200cc:	e0033500 	.word	0xe0033500
400200d0:	e0031c40 	.word	0xe0031c40
400200d4:	e0031498 	.word	0xe0031498
400200d8:	400320f8 	.word	0x400320f8
400200dc:	e0033600 	.word	0xe0033600
400200e0:	e0031c80 	.word	0xe0031c80
400200e4:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbFallBackToUsb2:

400200e8 <CyU3PUsbFallBackToUsb2>:
400200e8:	e92d4010 	push	{r4, lr}
400200ec:	e59f0234 	ldr	r0, [pc, #564]	; 40020328 <CyU3PUsbFallBackToUsb2+0x240>
400200f0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400200f4:	e3500000 	cmp	r0, #0
400200f8:	0a000006 	beq	40020118 <CyU3PUsbFallBackToUsb2+0x30>
400200fc:	e59f0228 	ldr	r0, [pc, #552]	; 4002032c <CyU3PUsbFallBackToUsb2+0x244>
40020100:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020104:	e59f121c 	ldr	r1, [pc, #540]	; 40020328 <CyU3PUsbFallBackToUsb2+0x240>
40020108:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002010c:	e1100001 	tst	r0, r1
40020110:	1a000000 	bne	40020118 <CyU3PUsbFallBackToUsb2+0x30>
40020114:	e8bd8010 	pop	{r4, pc}
40020118:	e3a00050 	mov	r0, #80	; 0x50
4002011c:	ebfffec4 	bl	4001fc34 <CyU3PUsbAddToEventLog>
40020120:	eb0007f1 	bl	400220ec <CyU3PVicDisableAllInterrupts>
40020124:	e1a04000 	mov	r4, r0
40020128:	e3a01000 	mov	r1, #0
4002012c:	e59f01fc 	ldr	r0, [pc, #508]	; 40020330 <CyU3PUsbFallBackToUsb2+0x248>
40020130:	eb000860 	bl	400222b8 <CyFx3UsbWritePhyReg>
40020134:	e1a00004 	mov	r0, r4
40020138:	eb0007f9 	bl	40022124 <CyU3PVicEnableInterrupts>
4002013c:	e3a00a01 	mov	r0, #4096	; 0x1000
40020140:	e59f11ec 	ldr	r1, [pc, #492]	; 40020334 <CyU3PUsbFallBackToUsb2+0x24c>
40020144:	e5810054 	str	r0, [r1, #84]	; 0x54
40020148:	e59f01d8 	ldr	r0, [pc, #472]	; 40020328 <CyU3PUsbFallBackToUsb2+0x240>
4002014c:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020150:	e2800001 	add	r0, r0, #1
40020154:	e59f11cc 	ldr	r1, [pc, #460]	; 40020328 <CyU3PUsbFallBackToUsb2+0x240>
40020158:	e5810058 	str	r0, [r1, #88]	; 0x58
4002015c:	e3a00000 	mov	r0, #0
40020160:	e59f11d0 	ldr	r1, [pc, #464]	; 40020338 <CyU3PUsbFallBackToUsb2+0x250>
40020164:	e5810000 	str	r0, [r1]
40020168:	e59f01cc 	ldr	r0, [pc, #460]	; 4002033c <CyU3PUsbFallBackToUsb2+0x254>
4002016c:	ebffaaa6 	bl	4000ac0c <_txe_timer_deactivate>
40020170:	e3a00002 	mov	r0, #2
40020174:	ebffcd62 	bl	40013704 <CyU3PBusyWait>
40020178:	e3a01002 	mov	r1, #2
4002017c:	e1a00001 	mov	r0, r1
40020180:	ebfff0ff 	bl	4001c584 <CyU3PSetUsbCoreClock>
40020184:	e3a00002 	mov	r0, #2
40020188:	ebffcd5d 	bl	40013704 <CyU3PBusyWait>
4002018c:	e59f01ac 	ldr	r0, [pc, #428]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
40020190:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020194:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020198:	e59f11a0 	ldr	r1, [pc, #416]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
4002019c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400201a0:	e3a00002 	mov	r0, #2
400201a4:	ebffcd56 	bl	40013704 <CyU3PBusyWait>
400201a8:	e59f0190 	ldr	r0, [pc, #400]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
400201ac:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400201b0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
400201b4:	e59f1184 	ldr	r1, [pc, #388]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
400201b8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400201bc:	e2410a01 	sub	r0, r1, #4096	; 0x1000
400201c0:	e5900004 	ldr	r0, [r0, #4]
400201c4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400201c8:	e2411a01 	sub	r1, r1, #4096	; 0x1000
400201cc:	e5810004 	str	r0, [r1, #4]
400201d0:	e2810a03 	add	r0, r1, #12288	; 0x3000
400201d4:	e590001c 	ldr	r0, [r0, #28]
400201d8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400201dc:	e2811a03 	add	r1, r1, #12288	; 0x3000
400201e0:	e581001c 	str	r0, [r1, #28]
400201e4:	e59f0158 	ldr	r0, [pc, #344]	; 40020344 <CyU3PUsbFallBackToUsb2+0x25c>
400201e8:	e5900000 	ldr	r0, [r0]
400201ec:	e581002c 	str	r0, [r1, #44]	; 0x2c
400201f0:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
400201f4:	e5900000 	ldr	r0, [r0]
400201f8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400201fc:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
40020200:	e5810000 	str	r0, [r1]
40020204:	e3a00005 	mov	r0, #5
40020208:	ebffcd3d 	bl	40013704 <CyU3PBusyWait>
4002020c:	e59f0134 	ldr	r0, [pc, #308]	; 40020348 <CyU3PUsbFallBackToUsb2+0x260>
40020210:	e5900000 	ldr	r0, [r0]
40020214:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40020218:	e59f1128 	ldr	r1, [pc, #296]	; 40020348 <CyU3PUsbFallBackToUsb2+0x260>
4002021c:	e5810000 	str	r0, [r1]
40020220:	e3a0000a 	mov	r0, #10
40020224:	ebffcd36 	bl	40013704 <CyU3PBusyWait>
40020228:	e3e00000 	mvn	r0, #0
4002022c:	e59f110c 	ldr	r1, [pc, #268]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
40020230:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020234:	e5810524 	str	r0, [r1, #1316]	; 0x524
40020238:	e5810810 	str	r0, [r1, #2064]	; 0x810
4002023c:	e59f0108 	ldr	r0, [pc, #264]	; 4002034c <CyU3PUsbFallBackToUsb2+0x264>
40020240:	ebffd869 	bl	400163ec <CyU3PDmaChannelReset>
40020244:	e59f0104 	ldr	r0, [pc, #260]	; 40020350 <CyU3PUsbFallBackToUsb2+0x268>
40020248:	ebffd867 	bl	400163ec <CyU3PDmaChannelReset>
4002024c:	e3a00000 	mov	r0, #0
40020250:	e59f10dc 	ldr	r1, [pc, #220]	; 40020334 <CyU3PUsbFallBackToUsb2+0x24c>
40020254:	e5810008 	str	r0, [r1, #8]
40020258:	e3e00000 	mvn	r0, #0
4002025c:	e5810004 	str	r0, [r1, #4]
40020260:	e3a00000 	mov	r0, #0
40020264:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020268:	e3e00000 	mvn	r0, #0
4002026c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020270:	e1c10820 	bic	r0, r1, r0, lsr #16
40020274:	e5900004 	ldr	r0, [r0, #4]
40020278:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4002027c:	e2411a03 	sub	r1, r1, #12288	; 0x3000
40020280:	e5810004 	str	r0, [r1, #4]
40020284:	e2810a01 	add	r0, r1, #4096	; 0x1000
40020288:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4002028c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020290:	e2811a01 	add	r1, r1, #4096	; 0x1000
40020294:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020298:	e1a00001 	mov	r0, r1
4002029c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
400202a0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
400202a4:	e5810498 	str	r0, [r1, #1176]	; 0x498
400202a8:	e3a00001 	mov	r0, #1
400202ac:	e59f1074 	ldr	r1, [pc, #116]	; 40020328 <CyU3PUsbFallBackToUsb2+0x240>
400202b0:	e5c10009 	strb	r0, [r1, #9]
400202b4:	e3a00000 	mov	r0, #0
400202b8:	e5810044 	str	r0, [r1, #68]	; 0x44
400202bc:	e3a00501 	mov	r0, #4194304	; 0x400000
400202c0:	e59f108c 	ldr	r1, [pc, #140]	; 40020354 <CyU3PUsbFallBackToUsb2+0x26c>
400202c4:	e5810074 	str	r0, [r1, #116]	; 0x74
400202c8:	e3a00002 	mov	r0, #2
400202cc:	ebffcd0c 	bl	40013704 <CyU3PBusyWait>
400202d0:	e59f0068 	ldr	r0, [pc, #104]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
400202d4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400202d8:	e3800a02 	orr	r0, r0, #8192	; 0x2000
400202dc:	e59f105c 	ldr	r1, [pc, #92]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
400202e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400202e4:	e3a00064 	mov	r0, #100	; 0x64
400202e8:	ebffcd05 	bl	40013704 <CyU3PBusyWait>
400202ec:	eb00079f 	bl	40022170 <CyFx3Usb2PhySetup>
400202f0:	e59f0060 	ldr	r0, [pc, #96]	; 40020358 <CyU3PUsbFallBackToUsb2+0x270>
400202f4:	e59f1044 	ldr	r1, [pc, #68]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
400202f8:	e5810008 	str	r0, [r1, #8]
400202fc:	e3a00050 	mov	r0, #80	; 0x50
40020300:	ebffccff 	bl	40013704 <CyU3PBusyWait>
40020304:	e3a01000 	mov	r1, #0
40020308:	e3a00002 	mov	r0, #2
4002030c:	ebfff09c 	bl	4001c584 <CyU3PSetUsbCoreClock>
40020310:	e59f0028 	ldr	r0, [pc, #40]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
40020314:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020318:	e3c00008 	bic	r0, r0, #8
4002031c:	e59f101c 	ldr	r1, [pc, #28]	; 40020340 <CyU3PUsbFallBackToUsb2+0x258>
40020320:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020324:	eaffff7a 	b	40020114 <CyU3PUsbFallBackToUsb2+0x2c>
40020328:	400321c0 	.word	0x400321c0
4002032c:	e0051000 	.word	0xe0051000
40020330:	00001005 	.word	0x00001005
40020334:	e0033000 	.word	0xe0033000
40020338:	4003123c 	.word	0x4003123c
4002033c:	40032b20 	.word	0x40032b20
40020340:	e0031000 	.word	0xe0031000
40020344:	400310e4 	.word	0x400310e4
40020348:	e0050000 	.word	0xe0050000
4002034c:	40031ef8 	.word	0x40031ef8
40020350:	40031f98 	.word	0x40031f98
40020354:	e0032000 	.word	0xe0032000
40020358:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

4002035c <CyU3PUsbGetEpStatus>:
4002035c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020360:	e1a04000 	mov	r4, r0
40020364:	e204600f 	and	r6, r4, #15
40020368:	e59f0090 	ldr	r0, [pc, #144]	; 40020400 <CyU3PUsbGetEpStatus+0xa4>
4002036c:	e5d00009 	ldrb	r0, [r0, #9]
40020370:	e3500003 	cmp	r0, #3
40020374:	1a00000b 	bne	400203a8 <CyU3PUsbGetEpStatus+0x4c>
40020378:	e3140080 	tst	r4, #128	; 0x80
4002037c:	0a000004 	beq	40020394 <CyU3PUsbGetEpStatus+0x38>
40020380:	e59f007c 	ldr	r0, [pc, #124]	; 40020404 <CyU3PUsbGetEpStatus+0xa8>
40020384:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020388:	e2000004 	and	r0, r0, #4
4002038c:	e58d0000 	str	r0, [sp]
40020390:	ea00000f 	b	400203d4 <CyU3PUsbGetEpStatus+0x78>
40020394:	e59f006c 	ldr	r0, [pc, #108]	; 40020408 <CyU3PUsbGetEpStatus+0xac>
40020398:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4002039c:	e2000004 	and	r0, r0, #4
400203a0:	e58d0000 	str	r0, [sp]
400203a4:	ea00000a 	b	400203d4 <CyU3PUsbGetEpStatus+0x78>
400203a8:	e3140080 	tst	r4, #128	; 0x80
400203ac:	0a000004 	beq	400203c4 <CyU3PUsbGetEpStatus+0x68>
400203b0:	e59f0054 	ldr	r0, [pc, #84]	; 4002040c <CyU3PUsbGetEpStatus+0xb0>
400203b4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400203b8:	e2000801 	and	r0, r0, #65536	; 0x10000
400203bc:	e58d0000 	str	r0, [sp]
400203c0:	ea000003 	b	400203d4 <CyU3PUsbGetEpStatus+0x78>
400203c4:	e59f0044 	ldr	r0, [pc, #68]	; 40020410 <CyU3PUsbGetEpStatus+0xb4>
400203c8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400203cc:	e2000801 	and	r0, r0, #65536	; 0x10000
400203d0:	e58d0000 	str	r0, [sp]
400203d4:	e59d0000 	ldr	r0, [sp]
400203d8:	e3500000 	cmp	r0, #0
400203dc:	0a000001 	beq	400203e8 <CyU3PUsbGetEpStatus+0x8c>
400203e0:	e3a00001 	mov	r0, #1
400203e4:	e58d0000 	str	r0, [sp]
400203e8:	e1a0100d 	mov	r1, sp
400203ec:	e3a00002 	mov	r0, #2
400203f0:	ebfff48f 	bl	4001d634 <CyU3PUsbSendEP0Data>
400203f4:	e1a05000 	mov	r5, r0
400203f8:	e1a00005 	mov	r0, r5
400203fc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020400:	400321c0 	.word	0x400321c0
40020404:	e0033500 	.word	0xe0033500
40020408:	e0033600 	.word	0xe0033600
4002040c:	e0031418 	.word	0xe0031418
40020410:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020414 <CyU3PUsbHandleClearFeature>:
40020414:	e92d4070 	push	{r4, r5, r6, lr}
40020418:	e1a04000 	mov	r4, r0
4002041c:	e3a05000 	mov	r5, #0
40020420:	e3540001 	cmp	r4, #1
40020424:	0a000006 	beq	40020444 <CyU3PUsbHandleClearFeature+0x30>
40020428:	e3540002 	cmp	r4, #2
4002042c:	0a00000b 	beq	40020460 <CyU3PUsbHandleClearFeature+0x4c>
40020430:	e3540030 	cmp	r4, #48	; 0x30
40020434:	0a00000f 	beq	40020478 <CyU3PUsbHandleClearFeature+0x64>
40020438:	e3540031 	cmp	r4, #49	; 0x31
4002043c:	1a00002d 	bne	400204f8 <CyU3PUsbHandleClearFeature+0xe4>
40020440:	ea00001c 	b	400204b8 <CyU3PUsbHandleClearFeature+0xa4>
40020444:	e1a00000 	nop			; (mov r0, r0)
40020448:	e59f00d8 	ldr	r0, [pc, #216]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
4002044c:	e5d00006 	ldrb	r0, [r0, #6]
40020450:	e3c00002 	bic	r0, r0, #2
40020454:	e59f10cc 	ldr	r1, [pc, #204]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
40020458:	e5c10006 	strb	r0, [r1, #6]
4002045c:	e1a00000 	nop			; (mov r0, r0)
40020460:	e59f00c0 	ldr	r0, [pc, #192]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
40020464:	e5d00009 	ldrb	r0, [r0, #9]
40020468:	e3500003 	cmp	r0, #3
4002046c:	0a000000 	beq	40020474 <CyU3PUsbHandleClearFeature+0x60>
40020470:	e3a05001 	mov	r5, #1
40020474:	ea000021 	b	40020500 <CyU3PUsbHandleClearFeature+0xec>
40020478:	e1a00000 	nop			; (mov r0, r0)
4002047c:	e59f00a4 	ldr	r0, [pc, #164]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
40020480:	e5d00009 	ldrb	r0, [r0, #9]
40020484:	e3500003 	cmp	r0, #3
40020488:	1a000009 	bne	400204b4 <CyU3PUsbHandleClearFeature+0xa0>
4002048c:	e59f0094 	ldr	r0, [pc, #148]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
40020490:	e5d00008 	ldrb	r0, [r0, #8]
40020494:	e3500006 	cmp	r0, #6
40020498:	1a000005 	bne	400204b4 <CyU3PUsbHandleClearFeature+0xa0>
4002049c:	e59f0084 	ldr	r0, [pc, #132]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204a0:	e5d00006 	ldrb	r0, [r0, #6]
400204a4:	e3c00004 	bic	r0, r0, #4
400204a8:	e59f1078 	ldr	r1, [pc, #120]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204ac:	e5c10006 	strb	r0, [r1, #6]
400204b0:	e3a05001 	mov	r5, #1
400204b4:	ea000011 	b	40020500 <CyU3PUsbHandleClearFeature+0xec>
400204b8:	e1a00000 	nop			; (mov r0, r0)
400204bc:	e59f0064 	ldr	r0, [pc, #100]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204c0:	e5d00009 	ldrb	r0, [r0, #9]
400204c4:	e3500003 	cmp	r0, #3
400204c8:	1a000009 	bne	400204f4 <CyU3PUsbHandleClearFeature+0xe0>
400204cc:	e59f0054 	ldr	r0, [pc, #84]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204d0:	e5d00008 	ldrb	r0, [r0, #8]
400204d4:	e3500006 	cmp	r0, #6
400204d8:	1a000005 	bne	400204f4 <CyU3PUsbHandleClearFeature+0xe0>
400204dc:	e59f0044 	ldr	r0, [pc, #68]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204e0:	e5d00006 	ldrb	r0, [r0, #6]
400204e4:	e3c00008 	bic	r0, r0, #8
400204e8:	e59f1038 	ldr	r1, [pc, #56]	; 40020528 <CyU3PUsbHandleClearFeature+0x114>
400204ec:	e5c10006 	strb	r0, [r1, #6]
400204f0:	e3a05001 	mov	r5, #1
400204f4:	ea000001 	b	40020500 <CyU3PUsbHandleClearFeature+0xec>
400204f8:	e1a00000 	nop			; (mov r0, r0)
400204fc:	e1a00000 	nop			; (mov r0, r0)
40020500:	e1a00000 	nop			; (mov r0, r0)
40020504:	e3550000 	cmp	r5, #0
40020508:	0a000001 	beq	40020514 <CyU3PUsbHandleClearFeature+0x100>
4002050c:	ebfff0af 	bl	4001c7d0 <CyU3PUsbAckSetup>
40020510:	ea000003 	b	40020524 <CyU3PUsbHandleClearFeature+0x110>
40020514:	e3a02000 	mov	r2, #0
40020518:	e3a01001 	mov	r1, #1
4002051c:	e1a00002 	mov	r0, r2
40020520:	ebfff66e 	bl	4001dee0 <CyU3PUsbStall>
40020524:	e8bd8070 	pop	{r4, r5, r6, pc}
40020528:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbHandleEvents:

4002052c <CyU3PUsbHandleEvents>:
4002052c:	e92d4070 	push	{r4, r5, r6, lr}
40020530:	e1a04000 	mov	r4, r0
40020534:	e3140040 	tst	r4, #64	; 0x40
40020538:	0a000000 	beq	40020540 <CyU3PUsbHandleEvents+0x14>
4002053c:	ebfff8cc 	bl	4001e874 <CyU3PUibDevCtrlEvtHandler>
40020540:	e3140020 	tst	r4, #32
40020544:	0a000000 	beq	4002054c <CyU3PUsbHandleEvents+0x20>
40020548:	ebfff942 	bl	4001ea58 <CyU3PUibEPEvtHandler>
4002054c:	e3140080 	tst	r4, #128	; 0x80
40020550:	0a000000 	beq	40020558 <CyU3PUsbHandleEvents+0x2c>
40020554:	ebfffa15 	bl	4001edb0 <CyU3PUibLnkIntrEvtHandler>
40020558:	e3140c01 	tst	r4, #256	; 0x100
4002055c:	0a000000 	beq	40020564 <CyU3PUsbHandleEvents+0x38>
40020560:	ebfffb32 	bl	4001f230 <CyU3PUibProtIntrEvtHandler>
40020564:	e3140c02 	tst	r4, #512	; 0x200
40020568:	0a000000 	beq	40020570 <CyU3PUsbHandleEvents+0x44>
4002056c:	ebfffa37 	bl	4001ee50 <CyU3PUibProtEpIntrEvtHandler>
40020570:	e3140b01 	tst	r4, #1024	; 0x400
40020574:	0a000006 	beq	40020594 <CyU3PUsbHandleEvents+0x68>
40020578:	e59f0378 	ldr	r0, [pc, #888]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
4002057c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020580:	e3500b02 	cmp	r0, #2048	; 0x800
40020584:	1a000001 	bne	40020590 <CyU3PUsbHandleEvents+0x64>
40020588:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002058c:	ebffa12c 	bl	40008a44 <_tx_thread_sleep>
40020590:	ebfffd4a 	bl	4001fac0 <CyU3PUibVbusChangeHandler>
40020594:	e3140b02 	tst	r4, #2048	; 0x800
40020598:	0a000000 	beq	400205a0 <CyU3PUsbHandleEvents+0x74>
4002059c:	eb0003ae 	bl	4002145c <CyU3PUsbSendCompliancePatterns>
400205a0:	e3140a01 	tst	r4, #4096	; 0x1000
400205a4:	0a00000c 	beq	400205dc <CyU3PUsbHandleEvents+0xb0>
400205a8:	e59f034c 	ldr	r0, [pc, #844]	; 400208fc <CyU3PUsbHandleEvents+0x3d0>
400205ac:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400205b0:	e3100902 	tst	r0, #32768	; 0x8000
400205b4:	0a000008 	beq	400205dc <CyU3PUsbHandleEvents+0xb0>
400205b8:	e3a00001 	mov	r0, #1
400205bc:	e59f133c 	ldr	r1, [pc, #828]	; 40020900 <CyU3PUsbHandleEvents+0x3d4>
400205c0:	e5810000 	str	r0, [r1]
400205c4:	e59f1338 	ldr	r1, [pc, #824]	; 40020904 <CyU3PUsbHandleEvents+0x3d8>
400205c8:	e5810000 	str	r0, [r1]
400205cc:	ebfffdb3 	bl	4001fca0 <CyU3PUsbCheckUsb3Disconnect>
400205d0:	e3a00000 	mov	r0, #0
400205d4:	e59f1328 	ldr	r1, [pc, #808]	; 40020904 <CyU3PUsbHandleEvents+0x3d8>
400205d8:	e5810000 	str	r0, [r1]
400205dc:	e3140301 	tst	r4, #67108864	; 0x4000000
400205e0:	0a000013 	beq	40020634 <CyU3PUsbHandleEvents+0x108>
400205e4:	e59f031c 	ldr	r0, [pc, #796]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
400205e8:	e5900000 	ldr	r0, [r0]
400205ec:	e3500000 	cmp	r0, #0
400205f0:	0a000008 	beq	40020618 <CyU3PUsbHandleEvents+0xec>
400205f4:	e59f0300 	ldr	r0, [pc, #768]	; 400208fc <CyU3PUsbHandleEvents+0x3d0>
400205f8:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
400205fc:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
40020600:	e3a02080 	mov	r2, #128	; 0x80
40020604:	e1821920 	orr	r1, r2, r0, lsr #18
40020608:	e3a00012 	mov	r0, #18
4002060c:	e59f22f4 	ldr	r2, [pc, #756]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
40020610:	e5922000 	ldr	r2, [r2]
40020614:	e12fff32 	blx	r2
40020618:	e3a00b02 	mov	r0, #2048	; 0x800
4002061c:	e59f12e8 	ldr	r1, [pc, #744]	; 4002090c <CyU3PUsbHandleEvents+0x3e0>
40020620:	e5810000 	str	r0, [r1]
40020624:	e1c10000 	bic	r0, r1, r0
40020628:	e5900004 	ldr	r0, [r0, #4]
4002062c:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020630:	e5810004 	str	r0, [r1, #4]
40020634:	e3140901 	tst	r4, #16384	; 0x4000
40020638:	0a000008 	beq	40020660 <CyU3PUsbHandleEvents+0x134>
4002063c:	e59f02c4 	ldr	r0, [pc, #708]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
40020640:	e5900000 	ldr	r0, [r0]
40020644:	e3500000 	cmp	r0, #0
40020648:	0a000004 	beq	40020660 <CyU3PUsbHandleEvents+0x134>
4002064c:	e3a01000 	mov	r1, #0
40020650:	e3a00003 	mov	r0, #3
40020654:	e59f22ac 	ldr	r2, [pc, #684]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
40020658:	e5922000 	ldr	r2, [r2]
4002065c:	e12fff32 	blx	r2
40020660:	e3140a02 	tst	r4, #8192	; 0x2000
40020664:	0a000008 	beq	4002068c <CyU3PUsbHandleEvents+0x160>
40020668:	e59f0298 	ldr	r0, [pc, #664]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
4002066c:	e5900000 	ldr	r0, [r0]
40020670:	e3500000 	cmp	r0, #0
40020674:	0a000004 	beq	4002068c <CyU3PUsbHandleEvents+0x160>
40020678:	e3a01000 	mov	r1, #0
4002067c:	e3a00002 	mov	r0, #2
40020680:	e59f2280 	ldr	r2, [pc, #640]	; 40020908 <CyU3PUsbHandleEvents+0x3dc>
40020684:	e5922000 	ldr	r2, [r2]
40020688:	e12fff32 	blx	r2
4002068c:	e3140902 	tst	r4, #32768	; 0x8000
40020690:	0a000022 	beq	40020720 <CyU3PUsbHandleEvents+0x1f4>
40020694:	e59f0274 	ldr	r0, [pc, #628]	; 40020910 <CyU3PUsbHandleEvents+0x3e4>
40020698:	e5900000 	ldr	r0, [r0]
4002069c:	e3500000 	cmp	r0, #0
400206a0:	0a00001e 	beq	40020720 <CyU3PUsbHandleEvents+0x1f4>
400206a4:	eb000690 	bl	400220ec <CyU3PVicDisableAllInterrupts>
400206a8:	e1a06000 	mov	r6, r0
400206ac:	e3a00001 	mov	r0, #1
400206b0:	ebffcc13 	bl	40013704 <CyU3PBusyWait>
400206b4:	e59f0258 	ldr	r0, [pc, #600]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
400206b8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400206bc:	e3c00803 	bic	r0, r0, #196608	; 0x30000
400206c0:	e59f124c 	ldr	r1, [pc, #588]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
400206c4:	e5810400 	str	r0, [r1, #1024]	; 0x400
400206c8:	e1a00006 	mov	r0, r6
400206cc:	eb000694 	bl	40022124 <CyU3PVicEnableInterrupts>
400206d0:	e3a00001 	mov	r0, #1
400206d4:	ebffa0da 	bl	40008a44 <_tx_thread_sleep>
400206d8:	e3a00000 	mov	r0, #0
400206dc:	e59f122c 	ldr	r1, [pc, #556]	; 40020910 <CyU3PUsbHandleEvents+0x3e4>
400206e0:	e5810000 	str	r0, [r1]
400206e4:	e59f0228 	ldr	r0, [pc, #552]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
400206e8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400206ec:	e3100c02 	tst	r0, #512	; 0x200
400206f0:	1a00000a 	bne	40020720 <CyU3PUsbHandleEvents+0x1f4>
400206f4:	e59f01fc 	ldr	r0, [pc, #508]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
400206f8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
400206fc:	e3500000 	cmp	r0, #0
40020700:	1a000006 	bne	40020720 <CyU3PUsbHandleEvents+0x1f4>
40020704:	e59f01ec 	ldr	r0, [pc, #492]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
40020708:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4002070c:	e3500000 	cmp	r0, #0
40020710:	1a000002 	bne	40020720 <CyU3PUsbHandleEvents+0x1f4>
40020714:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020718:	e59f11f4 	ldr	r1, [pc, #500]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
4002071c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020720:	e3140401 	tst	r4, #16777216	; 0x1000000
40020724:	0a000020 	beq	400207ac <CyU3PUsbHandleEvents+0x280>
40020728:	e59f01e4 	ldr	r0, [pc, #484]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
4002072c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020730:	e200503f 	and	r5, r0, #63	; 0x3f
40020734:	e3550011 	cmp	r5, #17
40020738:	0a000001 	beq	40020744 <CyU3PUsbHandleEvents+0x218>
4002073c:	e3550012 	cmp	r5, #18
40020740:	1a000018 	bne	400207a8 <CyU3PUsbHandleEvents+0x27c>
40020744:	e59f01cc 	ldr	r0, [pc, #460]	; 40020918 <CyU3PUsbHandleEvents+0x3ec>
40020748:	e5900000 	ldr	r0, [r0]
4002074c:	e3500000 	cmp	r0, #0
40020750:	0a000014 	beq	400207a8 <CyU3PUsbHandleEvents+0x27c>
40020754:	e3a00005 	mov	r0, #5
40020758:	ebffcbe9 	bl	40013704 <CyU3PBusyWait>
4002075c:	e59f01b0 	ldr	r0, [pc, #432]	; 40020914 <CyU3PUsbHandleEvents+0x3e8>
40020760:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020764:	e200503f 	and	r5, r0, #63	; 0x3f
40020768:	e3550011 	cmp	r5, #17
4002076c:	0a000001 	beq	40020778 <CyU3PUsbHandleEvents+0x24c>
40020770:	e3550012 	cmp	r5, #18
40020774:	1a000001 	bne	40020780 <CyU3PUsbHandleEvents+0x254>
40020778:	e3a00000 	mov	r0, #0
4002077c:	ebfff582 	bl	4001dd8c <CyU3PUsbSetLinkPowerState>
40020780:	e3a00001 	mov	r0, #1
40020784:	ebffa0ae 	bl	40008a44 <_tx_thread_sleep>
40020788:	e59f0188 	ldr	r0, [pc, #392]	; 40020918 <CyU3PUsbHandleEvents+0x3ec>
4002078c:	e5900000 	ldr	r0, [r0]
40020790:	e3500000 	cmp	r0, #0
40020794:	0a000003 	beq	400207a8 <CyU3PUsbHandleEvents+0x27c>
40020798:	e3a02000 	mov	r2, #0
4002079c:	e3a01401 	mov	r1, #16777216	; 0x1000000
400207a0:	e59f0174 	ldr	r0, [pc, #372]	; 4002091c <CyU3PUsbHandleEvents+0x3f0>
400207a4:	ebffa59e 	bl	40009e24 <_txe_event_flags_set>
400207a8:	e1a00000 	nop			; (mov r0, r0)
400207ac:	e3140402 	tst	r4, #33554432	; 0x2000000
400207b0:	0a000019 	beq	4002081c <CyU3PUsbHandleEvents+0x2f0>
400207b4:	e3a00052 	mov	r0, #82	; 0x52
400207b8:	ebfffd1d 	bl	4001fc34 <CyU3PUsbAddToEventLog>
400207bc:	e59f1134 	ldr	r1, [pc, #308]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
400207c0:	e5d11009 	ldrb	r1, [r1, #9]
400207c4:	e3510003 	cmp	r1, #3
400207c8:	1a000001 	bne	400207d4 <CyU3PUsbHandleEvents+0x2a8>
400207cc:	e3a01001 	mov	r1, #1
400207d0:	ea000000 	b	400207d8 <CyU3PUsbHandleEvents+0x2ac>
400207d4:	e3a01000 	mov	r1, #0
400207d8:	e1a00001 	mov	r0, r1
400207dc:	ebfff21a 	bl	4001d04c <CyU3PUsbPhyDisable>
400207e0:	e3a00001 	mov	r0, #1
400207e4:	ebffa096 	bl	40008a44 <_tx_thread_sleep>
400207e8:	e59f0108 	ldr	r0, [pc, #264]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
400207ec:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400207f0:	e3500000 	cmp	r0, #0
400207f4:	0a000005 	beq	40020810 <CyU3PUsbHandleEvents+0x2e4>
400207f8:	e59f0120 	ldr	r0, [pc, #288]	; 40020920 <CyU3PUsbHandleEvents+0x3f4>
400207fc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020800:	e59f10f0 	ldr	r1, [pc, #240]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
40020804:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020808:	e1100001 	tst	r0, r1
4002080c:	0a000002 	beq	4002081c <CyU3PUsbHandleEvents+0x2f0>
40020810:	e59f10e0 	ldr	r1, [pc, #224]	; 400208f8 <CyU3PUsbHandleEvents+0x3cc>
40020814:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020818:	ebfff281 	bl	4001d224 <CyU3PUsbPhyEnable>
4002081c:	e3140801 	tst	r4, #65536	; 0x10000
40020820:	0a000006 	beq	40020840 <CyU3PUsbHandleEvents+0x314>
40020824:	e59f00f8 	ldr	r0, [pc, #248]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
40020828:	e5900000 	ldr	r0, [r0]
4002082c:	e3500000 	cmp	r0, #0
40020830:	0a000002 	beq	40020840 <CyU3PUsbHandleEvents+0x314>
40020834:	e59f10e8 	ldr	r1, [pc, #232]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
40020838:	e5910000 	ldr	r0, [r1]
4002083c:	e12fff30 	blx	r0
40020840:	e3140802 	tst	r4, #131072	; 0x20000
40020844:	0a000006 	beq	40020864 <CyU3PUsbHandleEvents+0x338>
40020848:	e59f00d4 	ldr	r0, [pc, #212]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
4002084c:	e5900004 	ldr	r0, [r0, #4]
40020850:	e3500000 	cmp	r0, #0
40020854:	0a000002 	beq	40020864 <CyU3PUsbHandleEvents+0x338>
40020858:	e59f10c4 	ldr	r1, [pc, #196]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
4002085c:	e5910004 	ldr	r0, [r1, #4]
40020860:	e12fff30 	blx	r0
40020864:	e3140701 	tst	r4, #262144	; 0x40000
40020868:	0a000006 	beq	40020888 <CyU3PUsbHandleEvents+0x35c>
4002086c:	e59f00b0 	ldr	r0, [pc, #176]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
40020870:	e5900008 	ldr	r0, [r0, #8]
40020874:	e3500000 	cmp	r0, #0
40020878:	0a000002 	beq	40020888 <CyU3PUsbHandleEvents+0x35c>
4002087c:	e59f10a0 	ldr	r1, [pc, #160]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
40020880:	e5910008 	ldr	r0, [r1, #8]
40020884:	e12fff30 	blx	r0
40020888:	e3140702 	tst	r4, #524288	; 0x80000
4002088c:	0a000006 	beq	400208ac <CyU3PUsbHandleEvents+0x380>
40020890:	e59f008c 	ldr	r0, [pc, #140]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
40020894:	e590000c 	ldr	r0, [r0, #12]
40020898:	e3500000 	cmp	r0, #0
4002089c:	0a000002 	beq	400208ac <CyU3PUsbHandleEvents+0x380>
400208a0:	e59f107c 	ldr	r1, [pc, #124]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
400208a4:	e591000c 	ldr	r0, [r1, #12]
400208a8:	e12fff30 	blx	r0
400208ac:	e3140601 	tst	r4, #1048576	; 0x100000
400208b0:	0a000006 	beq	400208d0 <CyU3PUsbHandleEvents+0x3a4>
400208b4:	e59f0068 	ldr	r0, [pc, #104]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
400208b8:	e5900010 	ldr	r0, [r0, #16]
400208bc:	e3500000 	cmp	r0, #0
400208c0:	0a000002 	beq	400208d0 <CyU3PUsbHandleEvents+0x3a4>
400208c4:	e59f1058 	ldr	r1, [pc, #88]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
400208c8:	e5910010 	ldr	r0, [r1, #16]
400208cc:	e12fff30 	blx	r0
400208d0:	e3140602 	tst	r4, #2097152	; 0x200000
400208d4:	0a000006 	beq	400208f4 <CyU3PUsbHandleEvents+0x3c8>
400208d8:	e59f0044 	ldr	r0, [pc, #68]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
400208dc:	e5900014 	ldr	r0, [r0, #20]
400208e0:	e3500000 	cmp	r0, #0
400208e4:	0a000002 	beq	400208f4 <CyU3PUsbHandleEvents+0x3c8>
400208e8:	e59f1034 	ldr	r1, [pc, #52]	; 40020924 <CyU3PUsbHandleEvents+0x3f8>
400208ec:	e5910014 	ldr	r0, [r1, #20]
400208f0:	e12fff30 	blx	r0
400208f4:	e8bd8070 	pop	{r4, r5, r6, pc}
400208f8:	400321c0 	.word	0x400321c0
400208fc:	e0031000 	.word	0xe0031000
40020900:	400311f0 	.word	0x400311f0
40020904:	400311f4 	.word	0x400311f4
40020908:	40031228 	.word	0x40031228
4002090c:	e0030000 	.word	0xe0030000
40020910:	400311f8 	.word	0x400311f8
40020914:	e0033000 	.word	0xe0033000
40020918:	40031240 	.word	0x40031240
4002091c:	40032338 	.word	0x40032338
40020920:	e0051000 	.word	0xe0051000
40020924:	4003223c 	.word	0x4003223c

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020928 <CyU3PUsbHandleGetStatus>:
40020928:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002092c:	e1a04000 	mov	r4, r0
40020930:	e1a05001 	mov	r5, r1
40020934:	e3a07000 	mov	r7, #0
40020938:	e3a00000 	mov	r0, #0
4002093c:	e58d0000 	str	r0, [sp]
40020940:	e3540000 	cmp	r4, #0
40020944:	0a000004 	beq	4002095c <CyU3PUsbHandleGetStatus+0x34>
40020948:	e3540001 	cmp	r4, #1
4002094c:	0a00001e 	beq	400209cc <CyU3PUsbHandleGetStatus+0xa4>
40020950:	e3540002 	cmp	r4, #2
40020954:	1a00002b 	bne	40020a08 <CyU3PUsbHandleGetStatus+0xe0>
40020958:	ea000023 	b	400209ec <CyU3PUsbHandleGetStatus+0xc4>
4002095c:	e1a00000 	nop			; (mov r0, r0)
40020960:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020964:	1a00000d 	bne	400209a0 <CyU3PUsbHandleGetStatus+0x78>
40020968:	ebffed1c 	bl	4001bde0 <CyU3POtgGetMode>
4002096c:	e3500002 	cmp	r0, #2
40020970:	1a000008 	bne	40020998 <CyU3PUsbHandleGetStatus+0x70>
40020974:	e59f00a0 	ldr	r0, [pc, #160]	; 40020a1c <CyU3PUsbHandleGetStatus+0xf4>
40020978:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4002097c:	e3500000 	cmp	r0, #0
40020980:	0a000001 	beq	4002098c <CyU3PUsbHandleGetStatus+0x64>
40020984:	e3a00001 	mov	r0, #1
40020988:	ea000000 	b	40020990 <CyU3PUsbHandleGetStatus+0x68>
4002098c:	e3a00000 	mov	r0, #0
40020990:	e5cd0000 	strb	r0, [sp]
40020994:	ea00000b 	b	400209c8 <CyU3PUsbHandleGetStatus+0xa0>
40020998:	e3a00000 	mov	r0, #0
4002099c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400209a0:	e59f0074 	ldr	r0, [pc, #116]	; 40020a1c <CyU3PUsbHandleGetStatus+0xf4>
400209a4:	e5d00006 	ldrb	r0, [r0, #6]
400209a8:	e5cd0000 	strb	r0, [sp]
400209ac:	e59f0068 	ldr	r0, [pc, #104]	; 40020a1c <CyU3PUsbHandleGetStatus+0xf4>
400209b0:	e5d00009 	ldrb	r0, [r0, #9]
400209b4:	e3500003 	cmp	r0, #3
400209b8:	1a000002 	bne	400209c8 <CyU3PUsbHandleGetStatus+0xa0>
400209bc:	e5dd0000 	ldrb	r0, [sp]
400209c0:	e3c00002 	bic	r0, r0, #2
400209c4:	e5cd0000 	strb	r0, [sp]
400209c8:	e1a00000 	nop			; (mov r0, r0)
400209cc:	e1a0100d 	mov	r1, sp
400209d0:	e3a00002 	mov	r0, #2
400209d4:	ebfff316 	bl	4001d634 <CyU3PUsbSendEP0Data>
400209d8:	e1a06000 	mov	r6, r0
400209dc:	e3560000 	cmp	r6, #0
400209e0:	1a000000 	bne	400209e8 <CyU3PUsbHandleGetStatus+0xc0>
400209e4:	e3a07001 	mov	r7, #1
400209e8:	ea000008 	b	40020a10 <CyU3PUsbHandleGetStatus+0xe8>
400209ec:	e1a00000 	nop			; (mov r0, r0)
400209f0:	e20500ff 	and	r0, r5, #255	; 0xff
400209f4:	ebfffe58 	bl	4002035c <CyU3PUsbGetEpStatus>
400209f8:	e3500000 	cmp	r0, #0
400209fc:	1a000000 	bne	40020a04 <CyU3PUsbHandleGetStatus+0xdc>
40020a00:	e3a07001 	mov	r7, #1
40020a04:	ea000001 	b	40020a10 <CyU3PUsbHandleGetStatus+0xe8>
40020a08:	e1a00000 	nop			; (mov r0, r0)
40020a0c:	e1a00000 	nop			; (mov r0, r0)
40020a10:	e1a00000 	nop			; (mov r0, r0)
40020a14:	e1a00007 	mov	r0, r7
40020a18:	eaffffdf 	b	4002099c <CyU3PUsbHandleGetStatus+0x74>
40020a1c:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020a20 <CyU3PUsbHandleSetFeature>:
40020a20:	e92d4070 	push	{r4, r5, r6, lr}
40020a24:	e1a04000 	mov	r4, r0
40020a28:	e3a05000 	mov	r5, #0
40020a2c:	e3540001 	cmp	r4, #1
40020a30:	0a000006 	beq	40020a50 <CyU3PUsbHandleSetFeature+0x30>
40020a34:	e3540002 	cmp	r4, #2
40020a38:	0a00000b 	beq	40020a6c <CyU3PUsbHandleSetFeature+0x4c>
40020a3c:	e3540030 	cmp	r4, #48	; 0x30
40020a40:	0a00000e 	beq	40020a80 <CyU3PUsbHandleSetFeature+0x60>
40020a44:	e3540031 	cmp	r4, #49	; 0x31
40020a48:	1a00002a 	bne	40020af8 <CyU3PUsbHandleSetFeature+0xd8>
40020a4c:	ea00001a 	b	40020abc <CyU3PUsbHandleSetFeature+0x9c>
40020a50:	e1a00000 	nop			; (mov r0, r0)
40020a54:	e59f00cc 	ldr	r0, [pc, #204]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020a58:	e5d00006 	ldrb	r0, [r0, #6]
40020a5c:	e3800002 	orr	r0, r0, #2
40020a60:	e59f10c0 	ldr	r1, [pc, #192]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020a64:	e5c10006 	strb	r0, [r1, #6]
40020a68:	e1a00000 	nop			; (mov r0, r0)
40020a6c:	ebfff0f4 	bl	4001ce44 <CyU3PUsbGetSpeed>
40020a70:	e3500003 	cmp	r0, #3
40020a74:	0a000000 	beq	40020a7c <CyU3PUsbHandleSetFeature+0x5c>
40020a78:	e3a05001 	mov	r5, #1
40020a7c:	ea00001f 	b	40020b00 <CyU3PUsbHandleSetFeature+0xe0>
40020a80:	e1a00000 	nop			; (mov r0, r0)
40020a84:	ebfff0ee 	bl	4001ce44 <CyU3PUsbGetSpeed>
40020a88:	e3500003 	cmp	r0, #3
40020a8c:	1a000009 	bne	40020ab8 <CyU3PUsbHandleSetFeature+0x98>
40020a90:	e59f0090 	ldr	r0, [pc, #144]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020a94:	e5d00008 	ldrb	r0, [r0, #8]
40020a98:	e3500006 	cmp	r0, #6
40020a9c:	1a000005 	bne	40020ab8 <CyU3PUsbHandleSetFeature+0x98>
40020aa0:	e59f0080 	ldr	r0, [pc, #128]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020aa4:	e5d00006 	ldrb	r0, [r0, #6]
40020aa8:	e3800004 	orr	r0, r0, #4
40020aac:	e59f1074 	ldr	r1, [pc, #116]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020ab0:	e5c10006 	strb	r0, [r1, #6]
40020ab4:	e3a05001 	mov	r5, #1
40020ab8:	ea000010 	b	40020b00 <CyU3PUsbHandleSetFeature+0xe0>
40020abc:	e1a00000 	nop			; (mov r0, r0)
40020ac0:	ebfff0df 	bl	4001ce44 <CyU3PUsbGetSpeed>
40020ac4:	e3500003 	cmp	r0, #3
40020ac8:	1a000009 	bne	40020af4 <CyU3PUsbHandleSetFeature+0xd4>
40020acc:	e59f0054 	ldr	r0, [pc, #84]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020ad0:	e5d00008 	ldrb	r0, [r0, #8]
40020ad4:	e3500006 	cmp	r0, #6
40020ad8:	1a000005 	bne	40020af4 <CyU3PUsbHandleSetFeature+0xd4>
40020adc:	e59f0044 	ldr	r0, [pc, #68]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020ae0:	e5d00006 	ldrb	r0, [r0, #6]
40020ae4:	e3800008 	orr	r0, r0, #8
40020ae8:	e59f1038 	ldr	r1, [pc, #56]	; 40020b28 <CyU3PUsbHandleSetFeature+0x108>
40020aec:	e5c10006 	strb	r0, [r1, #6]
40020af0:	e3a05001 	mov	r5, #1
40020af4:	ea000001 	b	40020b00 <CyU3PUsbHandleSetFeature+0xe0>
40020af8:	e1a00000 	nop			; (mov r0, r0)
40020afc:	e1a00000 	nop			; (mov r0, r0)
40020b00:	e1a00000 	nop			; (mov r0, r0)
40020b04:	e3550000 	cmp	r5, #0
40020b08:	0a000001 	beq	40020b14 <CyU3PUsbHandleSetFeature+0xf4>
40020b0c:	ebffef2f 	bl	4001c7d0 <CyU3PUsbAckSetup>
40020b10:	ea000003 	b	40020b24 <CyU3PUsbHandleSetFeature+0x104>
40020b14:	e3a02000 	mov	r2, #0
40020b18:	e3a01001 	mov	r1, #1
40020b1c:	e1a00002 	mov	r0, r2
40020b20:	ebfff4ee 	bl	4001dee0 <CyU3PUsbStall>
40020b24:	e8bd8070 	pop	{r4, r5, r6, pc}
40020b28:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020b2c <CyU3PUsbReEnableUsb3>:
40020b2c:	e92d4010 	push	{r4, lr}
40020b30:	e3a00051 	mov	r0, #81	; 0x51
40020b34:	ebfffc3e 	bl	4001fc34 <CyU3PUsbAddToEventLog>
40020b38:	e59f018c 	ldr	r0, [pc, #396]	; 40020ccc <CyU3PUsbReEnableUsb3+0x1a0>
40020b3c:	e5900004 	ldr	r0, [r0, #4]
40020b40:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020b44:	e59f1180 	ldr	r1, [pc, #384]	; 40020ccc <CyU3PUsbReEnableUsb3+0x1a0>
40020b48:	e5810004 	str	r0, [r1, #4]
40020b4c:	e3e00000 	mvn	r0, #0
40020b50:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020b54:	e5810004 	str	r0, [r1, #4]
40020b58:	e59f0170 	ldr	r0, [pc, #368]	; 40020cd0 <CyU3PUsbReEnableUsb3+0x1a4>
40020b5c:	e5810008 	str	r0, [r1, #8]
40020b60:	e3e00000 	mvn	r0, #0
40020b64:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020b68:	e59f0164 	ldr	r0, [pc, #356]	; 40020cd4 <CyU3PUsbReEnableUsb3+0x1a8>
40020b6c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020b70:	e59f0160 	ldr	r0, [pc, #352]	; 40020cd8 <CyU3PUsbReEnableUsb3+0x1ac>
40020b74:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020b78:	e3500000 	cmp	r0, #0
40020b7c:	0a000003 	beq	40020b90 <CyU3PUsbReEnableUsb3+0x64>
40020b80:	e1a00001 	mov	r0, r1
40020b84:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020b88:	e3800c01 	orr	r0, r0, #256	; 0x100
40020b8c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020b90:	e3a00000 	mov	r0, #0
40020b94:	e59f113c 	ldr	r1, [pc, #316]	; 40020cd8 <CyU3PUsbReEnableUsb3+0x1ac>
40020b98:	e5810044 	str	r0, [r1, #68]	; 0x44
40020b9c:	e59f0138 	ldr	r0, [pc, #312]	; 40020cdc <CyU3PUsbReEnableUsb3+0x1b0>
40020ba0:	e5900000 	ldr	r0, [r0]
40020ba4:	e3500000 	cmp	r0, #0
40020ba8:	0a000003 	beq	40020bbc <CyU3PUsbReEnableUsb3+0x90>
40020bac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020bb0:	e59f1128 	ldr	r1, [pc, #296]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020bb4:	e5810050 	str	r0, [r1, #80]	; 0x50
40020bb8:	ea000002 	b	40020bc8 <CyU3PUsbReEnableUsb3+0x9c>
40020bbc:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020bc0:	e59f1118 	ldr	r1, [pc, #280]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020bc4:	e5810050 	str	r0, [r1, #80]	; 0x50
40020bc8:	eb000574 	bl	400221a0 <CyFx3Usb3LnkSetup>
40020bcc:	e59f0110 	ldr	r0, [pc, #272]	; 40020ce4 <CyU3PUsbReEnableUsb3+0x1b8>
40020bd0:	e59f1108 	ldr	r1, [pc, #264]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020bd4:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020bd8:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020bdc:	e1c10000 	bic	r0, r1, r0
40020be0:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020be4:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020be8:	e5810158 	str	r0, [r1, #344]	; 0x158
40020bec:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020bf0:	e581001c 	str	r0, [r1, #28]
40020bf4:	e3a01000 	mov	r1, #0
40020bf8:	e3a00001 	mov	r0, #1
40020bfc:	ebffee60 	bl	4001c584 <CyU3PSetUsbCoreClock>
40020c00:	e3a0000a 	mov	r0, #10
40020c04:	ebffcabe 	bl	40013704 <CyU3PBusyWait>
40020c08:	eb000537 	bl	400220ec <CyU3PVicDisableAllInterrupts>
40020c0c:	e1a04000 	mov	r4, r0
40020c10:	e3a00000 	mov	r0, #0
40020c14:	e59f10cc 	ldr	r1, [pc, #204]	; 40020ce8 <CyU3PUsbReEnableUsb3+0x1bc>
40020c18:	e5810000 	str	r0, [r1]
40020c1c:	e3a00a01 	mov	r0, #4096	; 0x1000
40020c20:	e59f10b8 	ldr	r1, [pc, #184]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020c24:	e5810054 	str	r0, [r1, #84]	; 0x54
40020c28:	e1c10080 	bic	r0, r1, r0, lsl #1
40020c2c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c30:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020c34:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020c38:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020c3c:	e3a00064 	mov	r0, #100	; 0x64
40020c40:	ebffcaaf 	bl	40013704 <CyU3PBusyWait>
40020c44:	e59f0094 	ldr	r0, [pc, #148]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020c48:	e5900000 	ldr	r0, [r0]
40020c4c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020c50:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020c54:	e59f1084 	ldr	r1, [pc, #132]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020c58:	e5810000 	str	r0, [r1]
40020c5c:	e59f0088 	ldr	r0, [pc, #136]	; 40020cec <CyU3PUsbReEnableUsb3+0x1c0>
40020c60:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020c64:	e3a01080 	mov	r1, #128	; 0x80
40020c68:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020c6c:	eb000591 	bl	400222b8 <CyFx3UsbWritePhyReg>
40020c70:	e3a01d06 	mov	r1, #384	; 0x180
40020c74:	e59f0074 	ldr	r0, [pc, #116]	; 40020cf0 <CyU3PUsbReEnableUsb3+0x1c4>
40020c78:	eb00058e 	bl	400222b8 <CyFx3UsbWritePhyReg>
40020c7c:	e3a01080 	mov	r1, #128	; 0x80
40020c80:	e59f006c 	ldr	r0, [pc, #108]	; 40020cf4 <CyU3PUsbReEnableUsb3+0x1c8>
40020c84:	eb00058b 	bl	400222b8 <CyFx3UsbWritePhyReg>
40020c88:	e59f003c 	ldr	r0, [pc, #60]	; 40020ccc <CyU3PUsbReEnableUsb3+0x1a0>
40020c8c:	e5900004 	ldr	r0, [r0, #4]
40020c90:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020c94:	e59f1030 	ldr	r1, [pc, #48]	; 40020ccc <CyU3PUsbReEnableUsb3+0x1a0>
40020c98:	e5810004 	str	r0, [r1, #4]
40020c9c:	e1a00004 	mov	r0, r4
40020ca0:	eb00051f 	bl	40022124 <CyU3PVicEnableInterrupts>
40020ca4:	e59f0034 	ldr	r0, [pc, #52]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020ca8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020cac:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020cb0:	e59f1028 	ldr	r1, [pc, #40]	; 40020ce0 <CyU3PUsbReEnableUsb3+0x1b4>
40020cb4:	e5810054 	str	r0, [r1, #84]	; 0x54
40020cb8:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020cbc:	e581001c 	str	r0, [r1, #28]
40020cc0:	e3a00064 	mov	r0, #100	; 0x64
40020cc4:	ebffca8e 	bl	40013704 <CyU3PBusyWait>
40020cc8:	e8bd8010 	pop	{r4, pc}
40020ccc:	e0030000 	.word	0xe0030000
40020cd0:	00038081 	.word	0x00038081
40020cd4:	00004a3d 	.word	0x00004a3d
40020cd8:	400321c0 	.word	0x400321c0
40020cdc:	400311cc 	.word	0x400311cc
40020ce0:	e0033000 	.word	0xe0033000
40020ce4:	00000908 	.word	0x00000908
40020ce8:	40031200 	.word	0x40031200
40020cec:	00310418 	.word	0x00310418
40020cf0:	00001006 	.word	0x00001006
40020cf4:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020cf8 <CyU3PUsbRegisterEventCallback>:
40020cf8:	e92d4010 	push	{r4, lr}
40020cfc:	e1a04000 	mov	r4, r0
40020d00:	e59f0038 	ldr	r0, [pc, #56]	; 40020d40 <CyU3PUsbRegisterEventCallback+0x48>
40020d04:	e5804000 	str	r4, [r0]
40020d08:	e59f0034 	ldr	r0, [pc, #52]	; 40020d44 <CyU3PUsbRegisterEventCallback+0x4c>
40020d0c:	e5d00008 	ldrb	r0, [r0, #8]
40020d10:	e3500000 	cmp	r0, #0
40020d14:	0a000008 	beq	40020d3c <CyU3PUsbRegisterEventCallback+0x44>
40020d18:	e59f0028 	ldr	r0, [pc, #40]	; 40020d48 <CyU3PUsbRegisterEventCallback+0x50>
40020d1c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020d20:	e59f101c 	ldr	r1, [pc, #28]	; 40020d44 <CyU3PUsbRegisterEventCallback+0x4c>
40020d24:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020d28:	e1100001 	tst	r0, r1
40020d2c:	0a000002 	beq	40020d3c <CyU3PUsbRegisterEventCallback+0x44>
40020d30:	e3a01000 	mov	r1, #0
40020d34:	e3a0000b 	mov	r0, #11
40020d38:	e12fff34 	blx	r4
40020d3c:	e8bd8010 	pop	{r4, pc}
40020d40:	40031228 	.word	0x40031228
40020d44:	400321c0 	.word	0x400321c0
40020d48:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020d4c <CyU3PUsbRegisterSetupCallback>:
40020d4c:	e59f2050 	ldr	r2, [pc, #80]	; 40020da4 <CyU3PUsbRegisterSetupCallback+0x58>
40020d50:	e5820000 	str	r0, [r2]
40020d54:	e3510001 	cmp	r1, #1
40020d58:	1a000003 	bne	40020d6c <CyU3PUsbRegisterSetupCallback+0x20>
40020d5c:	e3a02000 	mov	r2, #0
40020d60:	e59f3040 	ldr	r3, [pc, #64]	; 40020da8 <CyU3PUsbRegisterSetupCallback+0x5c>
40020d64:	e5c32007 	strb	r2, [r3, #7]
40020d68:	ea00000c 	b	40020da0 <CyU3PUsbRegisterSetupCallback+0x54>
40020d6c:	e3a02001 	mov	r2, #1
40020d70:	e59f3030 	ldr	r3, [pc, #48]	; 40020da8 <CyU3PUsbRegisterSetupCallback+0x5c>
40020d74:	e5c32007 	strb	r2, [r3, #7]
40020d78:	e2832000 	add	r2, r3, #0
40020d7c:	e5d22008 	ldrb	r2, [r2, #8]
40020d80:	e3520000 	cmp	r2, #0
40020d84:	da000005 	ble	40020da0 <CyU3PUsbRegisterSetupCallback+0x54>
40020d88:	e2832000 	add	r2, r3, #0
40020d8c:	e5d22008 	ldrb	r2, [r2, #8]
40020d90:	e3520003 	cmp	r2, #3
40020d94:	aa000001 	bge	40020da0 <CyU3PUsbRegisterSetupCallback+0x54>
40020d98:	e3a02003 	mov	r2, #3
40020d9c:	e5c32008 	strb	r2, [r3, #8]
40020da0:	e12fff1e 	bx	lr
40020da4:	4003122c 	.word	0x4003122c
40020da8:	400321c0 	.word	0x400321c0

Disassembly of section i.CyU3PUsbResetHandler:

40020dac <CyU3PUsbResetHandler>:
40020dac:	e92d4010 	push	{r4, lr}
40020db0:	e3a00001 	mov	r0, #1
40020db4:	e59f1124 	ldr	r1, [pc, #292]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020db8:	e5c10009 	strb	r0, [r1, #9]
40020dbc:	e59f0120 	ldr	r0, [pc, #288]	; 40020ee4 <CyU3PUsbResetHandler+0x138>
40020dc0:	e5900018 	ldr	r0, [r0, #24]
40020dc4:	e59f1118 	ldr	r1, [pc, #280]	; 40020ee4 <CyU3PUsbResetHandler+0x138>
40020dc8:	e581000c 	str	r0, [r1, #12]
40020dcc:	e2810000 	add	r0, r1, #0
40020dd0:	e5900014 	ldr	r0, [r0, #20]
40020dd4:	e5810010 	str	r0, [r1, #16]
40020dd8:	e59f0108 	ldr	r0, [pc, #264]	; 40020ee8 <CyU3PUsbResetHandler+0x13c>
40020ddc:	e5900000 	ldr	r0, [r0]
40020de0:	e3500000 	cmp	r0, #0
40020de4:	0a000010 	beq	40020e2c <CyU3PUsbResetHandler+0x80>
40020de8:	e59f00f0 	ldr	r0, [pc, #240]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020dec:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020df0:	e3500000 	cmp	r0, #0
40020df4:	1a000007 	bne	40020e18 <CyU3PUsbResetHandler+0x6c>
40020df8:	e3a01000 	mov	r1, #0
40020dfc:	e1a00001 	mov	r0, r1
40020e00:	e59f20e0 	ldr	r2, [pc, #224]	; 40020ee8 <CyU3PUsbResetHandler+0x13c>
40020e04:	e5922000 	ldr	r2, [r2]
40020e08:	e12fff32 	blx	r2
40020e0c:	e3a00001 	mov	r0, #1
40020e10:	e59f10c8 	ldr	r1, [pc, #200]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020e14:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020e18:	e3a01000 	mov	r1, #0
40020e1c:	e3a00004 	mov	r0, #4
40020e20:	e59f20c0 	ldr	r2, [pc, #192]	; 40020ee8 <CyU3PUsbResetHandler+0x13c>
40020e24:	e5922000 	ldr	r2, [r2]
40020e28:	e12fff32 	blx	r2
40020e2c:	e59f00b8 	ldr	r0, [pc, #184]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020e30:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020e34:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020e38:	e59f10ac 	ldr	r1, [pc, #172]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020e3c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020e40:	e3a00001 	mov	r0, #1
40020e44:	ebffca2e 	bl	40013704 <CyU3PBusyWait>
40020e48:	e59f009c 	ldr	r0, [pc, #156]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020e4c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020e50:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020e54:	e59f1090 	ldr	r1, [pc, #144]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020e58:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020e5c:	e3a00001 	mov	r0, #1
40020e60:	ebffca27 	bl	40013704 <CyU3PBusyWait>
40020e64:	e3a00040 	mov	r0, #64	; 0x40
40020e68:	e59f107c 	ldr	r1, [pc, #124]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020e6c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020e70:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020e74:	e1c10000 	bic	r0, r1, r0
40020e78:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020e7c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020e80:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020e84:	e1a00001 	mov	r0, r1
40020e88:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020e8c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020e90:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020e94:	e3a00001 	mov	r0, #1
40020e98:	ebfffc14 	bl	4001fef0 <CyU3PUsbEpPrepare>
40020e9c:	e59f003c 	ldr	r0, [pc, #60]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020ea0:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020ea4:	e3500000 	cmp	r0, #0
40020ea8:	0a00000b 	beq	40020edc <CyU3PUsbResetHandler+0x130>
40020eac:	e59f002c 	ldr	r0, [pc, #44]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020eb0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020eb4:	e3500003 	cmp	r0, #3
40020eb8:	3a000002 	bcc	40020ec8 <CyU3PUsbResetHandler+0x11c>
40020ebc:	e3a00000 	mov	r0, #0
40020ec0:	e59f1018 	ldr	r1, [pc, #24]	; 40020ee0 <CyU3PUsbResetHandler+0x134>
40020ec4:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020ec8:	e59f001c 	ldr	r0, [pc, #28]	; 40020eec <CyU3PUsbResetHandler+0x140>
40020ecc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ed0:	e3100901 	tst	r0, #16384	; 0x4000
40020ed4:	1a000000 	bne	40020edc <CyU3PUsbResetHandler+0x130>
40020ed8:	ebffff13 	bl	40020b2c <CyU3PUsbReEnableUsb3>
40020edc:	e8bd8010 	pop	{r4, pc}
40020ee0:	400321c0 	.word	0x400321c0
40020ee4:	40032418 	.word	0x40032418
40020ee8:	40031228 	.word	0x40031228
40020eec:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020ef0 <CyU3PUsbResumeHandler>:
40020ef0:	e92d4010 	push	{r4, lr}
40020ef4:	e59f003c 	ldr	r0, [pc, #60]	; 40020f38 <CyU3PUsbResumeHandler+0x48>
40020ef8:	e5d00008 	ldrb	r0, [r0, #8]
40020efc:	e3500005 	cmp	r0, #5
40020f00:	ba00000b 	blt	40020f34 <CyU3PUsbResumeHandler+0x44>
40020f04:	e59f0030 	ldr	r0, [pc, #48]	; 40020f3c <CyU3PUsbResumeHandler+0x4c>
40020f08:	e5900000 	ldr	r0, [r0]
40020f0c:	e3500000 	cmp	r0, #0
40020f10:	0a000004 	beq	40020f28 <CyU3PUsbResumeHandler+0x38>
40020f14:	e3a01000 	mov	r1, #0
40020f18:	e3a00003 	mov	r0, #3
40020f1c:	e59f2018 	ldr	r2, [pc, #24]	; 40020f3c <CyU3PUsbResumeHandler+0x4c>
40020f20:	e5922000 	ldr	r2, [r2]
40020f24:	e12fff32 	blx	r2
40020f28:	e3a00006 	mov	r0, #6
40020f2c:	e59f1004 	ldr	r1, [pc, #4]	; 40020f38 <CyU3PUsbResumeHandler+0x48>
40020f30:	e5c10008 	strb	r0, [r1, #8]
40020f34:	e8bd8010 	pop	{r4, pc}
40020f38:	400321c0 	.word	0x400321c0
40020f3c:	40031228 	.word	0x40031228

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020f40 <CyU3PUsbSSConnecthandler>:
40020f40:	e92d4010 	push	{r4, lr}
40020f44:	e59f01d4 	ldr	r0, [pc, #468]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40020f48:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020f4c:	e3100a02 	tst	r0, #8192	; 0x2000
40020f50:	0a00002b 	beq	40021004 <CyU3PUsbSSConnecthandler+0xc4>
40020f54:	e59f01c8 	ldr	r0, [pc, #456]	; 40021124 <CyU3PUsbSSConnecthandler+0x1e4>
40020f58:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020f5c:	e200403f 	and	r4, r0, #63	; 0x3f
40020f60:	ea000003 	b	40020f74 <CyU3PUsbSSConnecthandler+0x34>
40020f64:	ebffa667 	bl	4000a908 <_txe_thread_relinquish>
40020f68:	e59f01b4 	ldr	r0, [pc, #436]	; 40021124 <CyU3PUsbSSConnecthandler+0x1e4>
40020f6c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020f70:	e200403f 	and	r4, r0, #63	; 0x3f
40020f74:	e59f01a4 	ldr	r0, [pc, #420]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40020f78:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020f7c:	e3100901 	tst	r0, #16384	; 0x4000
40020f80:	0a000001 	beq	40020f8c <CyU3PUsbSSConnecthandler+0x4c>
40020f84:	e3540008 	cmp	r4, #8
40020f88:	0afffff5 	beq	40020f64 <CyU3PUsbSSConnecthandler+0x24>
40020f8c:	e3540017 	cmp	r4, #23
40020f90:	1a00000a 	bne	40020fc0 <CyU3PUsbSSConnecthandler+0x80>
40020f94:	e59f018c 	ldr	r0, [pc, #396]	; 40021128 <CyU3PUsbSSConnecthandler+0x1e8>
40020f98:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020f9c:	e3500000 	cmp	r0, #0
40020fa0:	1a000002 	bne	40020fb0 <CyU3PUsbSSConnecthandler+0x70>
40020fa4:	e3a00010 	mov	r0, #16
40020fa8:	ebfffb21 	bl	4001fc34 <CyU3PUsbAddToEventLog>
40020fac:	eb000060 	bl	40021134 <CyU3PUsbSSDisConnecthandler>
40020fb0:	e3a00003 	mov	r0, #3
40020fb4:	e59f116c 	ldr	r1, [pc, #364]	; 40021128 <CyU3PUsbSSConnecthandler+0x1e8>
40020fb8:	e5c10009 	strb	r0, [r1, #9]
40020fbc:	e8bd8010 	pop	{r4, pc}
40020fc0:	e59f0158 	ldr	r0, [pc, #344]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40020fc4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020fc8:	e3100901 	tst	r0, #16384	; 0x4000
40020fcc:	1a000000 	bne	40020fd4 <CyU3PUsbSSConnecthandler+0x94>
40020fd0:	eafffff9 	b	40020fbc <CyU3PUsbSSConnecthandler+0x7c>
40020fd4:	e59f0144 	ldr	r0, [pc, #324]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40020fd8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020fdc:	e3800008 	orr	r0, r0, #8
40020fe0:	e59f1138 	ldr	r1, [pc, #312]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40020fe4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020fe8:	e1a00001 	mov	r0, r1
40020fec:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ff0:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020ff4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ff8:	e1a00001 	mov	r0, r1
40020ffc:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40021000:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40021004:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40021008:	e59f111c 	ldr	r1, [pc, #284]	; 4002112c <CyU3PUsbSSConnecthandler+0x1ec>
4002100c:	e5810008 	str	r0, [r1, #8]
40021010:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40021014:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40021018:	e581001c 	str	r0, [r1, #28]
4002101c:	e3a00003 	mov	r0, #3
40021020:	e59f1100 	ldr	r1, [pc, #256]	; 40021128 <CyU3PUsbSSConnecthandler+0x1e8>
40021024:	e5c10009 	strb	r0, [r1, #9]
40021028:	e59f00f0 	ldr	r0, [pc, #240]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
4002102c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021030:	e3800902 	orr	r0, r0, #32768	; 0x8000
40021034:	e59f10e4 	ldr	r1, [pc, #228]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40021038:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002103c:	e1a00001 	mov	r0, r1
40021040:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021044:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021048:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
4002104c:	e3a00001 	mov	r0, #1
40021050:	ebffc9ab 	bl	40013704 <CyU3PBusyWait>
40021054:	e59f00c4 	ldr	r0, [pc, #196]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40021058:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002105c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021060:	e59f10b8 	ldr	r1, [pc, #184]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
40021064:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021068:	e3a00001 	mov	r0, #1
4002106c:	ebffc9a4 	bl	40013704 <CyU3PBusyWait>
40021070:	e3a00000 	mov	r0, #0
40021074:	ebffeecd 	bl	4001cbb0 <CyU3PUsbFlushEp>
40021078:	e3a00080 	mov	r0, #128	; 0x80
4002107c:	ebffeecb 	bl	4001cbb0 <CyU3PUsbFlushEp>
40021080:	e59f009c 	ldr	r0, [pc, #156]	; 40021124 <CyU3PUsbSSConnecthandler+0x1e4>
40021084:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021088:	e3800001 	orr	r0, r0, #1
4002108c:	e59f1090 	ldr	r1, [pc, #144]	; 40021124 <CyU3PUsbSSConnecthandler+0x1e4>
40021090:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021094:	e3a00c02 	mov	r0, #512	; 0x200
40021098:	e1c11200 	bic	r1, r1, r0, lsl #4
4002109c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210a0:	e1810200 	orr	r0, r1, r0, lsl #4
400210a4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400210a8:	e3800001 	orr	r0, r0, #1
400210ac:	e2811a02 	add	r1, r1, #8192	; 0x2000
400210b0:	e5810600 	str	r0, [r1, #1536]	; 0x600
400210b4:	e3a00c02 	mov	r0, #512	; 0x200
400210b8:	e1c11200 	bic	r1, r1, r0, lsl #4
400210bc:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210c0:	e3a00000 	mov	r0, #0
400210c4:	ebfff121 	bl	4001d550 <CyU3PUsbResetEp>
400210c8:	e3a00000 	mov	r0, #0
400210cc:	ebffeeb7 	bl	4001cbb0 <CyU3PUsbFlushEp>
400210d0:	e3a00080 	mov	r0, #128	; 0x80
400210d4:	ebfff11d 	bl	4001d550 <CyU3PUsbResetEp>
400210d8:	e3a00080 	mov	r0, #128	; 0x80
400210dc:	ebffeeb3 	bl	4001cbb0 <CyU3PUsbFlushEp>
400210e0:	e3a00c02 	mov	r0, #512	; 0x200
400210e4:	e59f1034 	ldr	r1, [pc, #52]	; 40021120 <CyU3PUsbSSConnecthandler+0x1e0>
400210e8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210ec:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210f0:	e59f0038 	ldr	r0, [pc, #56]	; 40021130 <CyU3PUsbSSConnecthandler+0x1f0>
400210f4:	e5900000 	ldr	r0, [r0]
400210f8:	e3500000 	cmp	r0, #0
400210fc:	0a000004 	beq	40021114 <CyU3PUsbSSConnecthandler+0x1d4>
40021100:	e3a01001 	mov	r1, #1
40021104:	e3a00000 	mov	r0, #0
40021108:	e59f2020 	ldr	r2, [pc, #32]	; 40021130 <CyU3PUsbSSConnecthandler+0x1f0>
4002110c:	e5922000 	ldr	r2, [r2]
40021110:	e12fff32 	blx	r2
40021114:	e3a00003 	mov	r0, #3
40021118:	ebfffb74 	bl	4001fef0 <CyU3PUsbEpPrepare>
4002111c:	eaffffa6 	b	40020fbc <CyU3PUsbSSConnecthandler+0x7c>
40021120:	e0031000 	.word	0xe0031000
40021124:	e0033000 	.word	0xe0033000
40021128:	400321c0 	.word	0x400321c0
4002112c:	e0052000 	.word	0xe0052000
40021130:	40031228 	.word	0x40031228

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40021134 <CyU3PUsbSSDisConnecthandler>:
40021134:	e92d4010 	push	{r4, lr}
40021138:	e59f0164 	ldr	r0, [pc, #356]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
4002113c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021140:	e3500000 	cmp	r0, #0
40021144:	0a000005 	beq	40021160 <CyU3PUsbSSDisConnecthandler+0x2c>
40021148:	e59f0158 	ldr	r0, [pc, #344]	; 400212a8 <CyU3PUsbSSDisConnecthandler+0x174>
4002114c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021150:	e59f114c 	ldr	r1, [pc, #332]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
40021154:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021158:	e1100001 	tst	r0, r1
4002115c:	0a00004e 	beq	4002129c <CyU3PUsbSSDisConnecthandler+0x168>
40021160:	e59f013c 	ldr	r0, [pc, #316]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
40021164:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021168:	e2800001 	add	r0, r0, #1
4002116c:	e59f1130 	ldr	r1, [pc, #304]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
40021170:	e5810058 	str	r0, [r1, #88]	; 0x58
40021174:	e59f0130 	ldr	r0, [pc, #304]	; 400212ac <CyU3PUsbSSDisConnecthandler+0x178>
40021178:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002117c:	e3100a02 	tst	r0, #8192	; 0x2000
40021180:	0a000020 	beq	40021208 <CyU3PUsbSSDisConnecthandler+0xd4>
40021184:	e59f0120 	ldr	r0, [pc, #288]	; 400212ac <CyU3PUsbSSDisConnecthandler+0x178>
40021188:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002118c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021190:	e59f1114 	ldr	r1, [pc, #276]	; 400212ac <CyU3PUsbSSDisConnecthandler+0x178>
40021194:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021198:	e3a00002 	mov	r0, #2
4002119c:	ebffc958 	bl	40013704 <CyU3PBusyWait>
400211a0:	e59f0108 	ldr	r0, [pc, #264]	; 400212b0 <CyU3PUsbSSDisConnecthandler+0x17c>
400211a4:	e5900004 	ldr	r0, [r0, #4]
400211a8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400211ac:	e59f10fc 	ldr	r1, [pc, #252]	; 400212b0 <CyU3PUsbSSDisConnecthandler+0x17c>
400211b0:	e5810004 	str	r0, [r1, #4]
400211b4:	e3a00001 	mov	r0, #1
400211b8:	ebffc951 	bl	40013704 <CyU3PBusyWait>
400211bc:	e59f00f0 	ldr	r0, [pc, #240]	; 400212b4 <CyU3PUsbSSDisConnecthandler+0x180>
400211c0:	e590001c 	ldr	r0, [r0, #28]
400211c4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400211c8:	e59f10e4 	ldr	r1, [pc, #228]	; 400212b4 <CyU3PUsbSSDisConnecthandler+0x180>
400211cc:	e581001c 	str	r0, [r1, #28]
400211d0:	e59f00e0 	ldr	r0, [pc, #224]	; 400212b8 <CyU3PUsbSSDisConnecthandler+0x184>
400211d4:	e5900000 	ldr	r0, [r0]
400211d8:	e581002c 	str	r0, [r1, #44]	; 0x2c
400211dc:	e3a00001 	mov	r0, #1
400211e0:	ebffc947 	bl	40013704 <CyU3PBusyWait>
400211e4:	e59f00c4 	ldr	r0, [pc, #196]	; 400212b0 <CyU3PUsbSSDisConnecthandler+0x17c>
400211e8:	e5900004 	ldr	r0, [r0, #4]
400211ec:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400211f0:	e59f10b8 	ldr	r1, [pc, #184]	; 400212b0 <CyU3PUsbSSDisConnecthandler+0x17c>
400211f4:	e5810004 	str	r0, [r1, #4]
400211f8:	e3a01000 	mov	r1, #0
400211fc:	e3a00002 	mov	r0, #2
40021200:	ebffecdf 	bl	4001c584 <CyU3PSetUsbCoreClock>
40021204:	ea000025 	b	400212a0 <CyU3PUsbSSDisConnecthandler+0x16c>
40021208:	e3a00001 	mov	r0, #1
4002120c:	e59f1090 	ldr	r1, [pc, #144]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
40021210:	e5c10009 	strb	r0, [r1, #9]
40021214:	ebffef8c 	bl	4001d04c <CyU3PUsbPhyDisable>
40021218:	e59f0084 	ldr	r0, [pc, #132]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
4002121c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40021220:	e3500000 	cmp	r0, #0
40021224:	0a000019 	beq	40021290 <CyU3PUsbSSDisConnecthandler+0x15c>
40021228:	e59f008c 	ldr	r0, [pc, #140]	; 400212bc <CyU3PUsbSSDisConnecthandler+0x188>
4002122c:	e5900000 	ldr	r0, [r0]
40021230:	e3500000 	cmp	r0, #0
40021234:	0a000005 	beq	40021250 <CyU3PUsbSSDisConnecthandler+0x11c>
40021238:	e3a00000 	mov	r0, #0
4002123c:	e59f1078 	ldr	r1, [pc, #120]	; 400212bc <CyU3PUsbSSDisConnecthandler+0x188>
40021240:	e5810000 	str	r0, [r1]
40021244:	e3a00001 	mov	r0, #1
40021248:	ebffeff5 	bl	4001d224 <CyU3PUsbPhyEnable>
4002124c:	ea000013 	b	400212a0 <CyU3PUsbSSDisConnecthandler+0x16c>
40021250:	e3a00003 	mov	r0, #3
40021254:	e59f1048 	ldr	r1, [pc, #72]	; 400212a4 <CyU3PUsbSSDisConnecthandler+0x170>
40021258:	e5c10008 	strb	r0, [r1, #8]
4002125c:	e3a00000 	mov	r0, #0
40021260:	e5c10009 	strb	r0, [r1, #9]
40021264:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021268:	e59f0050 	ldr	r0, [pc, #80]	; 400212c0 <CyU3PUsbSSDisConnecthandler+0x18c>
4002126c:	e5900000 	ldr	r0, [r0]
40021270:	e3500000 	cmp	r0, #0
40021274:	0a000009 	beq	400212a0 <CyU3PUsbSSDisConnecthandler+0x16c>
40021278:	e3a01000 	mov	r1, #0
4002127c:	e3a00014 	mov	r0, #20
40021280:	e59f2038 	ldr	r2, [pc, #56]	; 400212c0 <CyU3PUsbSSDisConnecthandler+0x18c>
40021284:	e5922000 	ldr	r2, [r2]
40021288:	e12fff32 	blx	r2
4002128c:	ea000003 	b	400212a0 <CyU3PUsbSSDisConnecthandler+0x16c>
40021290:	e3a00000 	mov	r0, #0
40021294:	ebffefe2 	bl	4001d224 <CyU3PUsbPhyEnable>
40021298:	ea000000 	b	400212a0 <CyU3PUsbSSDisConnecthandler+0x16c>
4002129c:	ebfffa07 	bl	4001fac0 <CyU3PUibVbusChangeHandler>
400212a0:	e8bd8010 	pop	{r4, pc}
400212a4:	400321c0 	.word	0x400321c0
400212a8:	e0051000 	.word	0xe0051000
400212ac:	e0031000 	.word	0xe0031000
400212b0:	e0030000 	.word	0xe0030000
400212b4:	e0033000 	.word	0xe0033000
400212b8:	400310e4 	.word	0x400310e4
400212bc:	40031200 	.word	0x40031200
400212c0:	40031228 	.word	0x40031228

Disassembly of section i.CyU3PUsbSSReset:

400212c4 <CyU3PUsbSSReset>:
400212c4:	e92d4010 	push	{r4, lr}
400212c8:	e3a04000 	mov	r4, #0
400212cc:	e59f0170 	ldr	r0, [pc, #368]	; 40021444 <CyU3PUsbSSReset+0x180>
400212d0:	e5d00009 	ldrb	r0, [r0, #9]
400212d4:	e3500003 	cmp	r0, #3
400212d8:	0a000000 	beq	400212e0 <CyU3PUsbSSReset+0x1c>
400212dc:	e8bd8010 	pop	{r4, pc}
400212e0:	e59f0160 	ldr	r0, [pc, #352]	; 40021448 <CyU3PUsbSSReset+0x184>
400212e4:	e5900000 	ldr	r0, [r0]
400212e8:	e3500000 	cmp	r0, #0
400212ec:	0a000004 	beq	40021304 <CyU3PUsbSSReset+0x40>
400212f0:	e3a01001 	mov	r1, #1
400212f4:	e3a00004 	mov	r0, #4
400212f8:	e59f2148 	ldr	r2, [pc, #328]	; 40021448 <CyU3PUsbSSReset+0x184>
400212fc:	e5922000 	ldr	r2, [r2]
40021300:	e12fff32 	blx	r2
40021304:	e59f0140 	ldr	r0, [pc, #320]	; 4002144c <CyU3PUsbSSReset+0x188>
40021308:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002130c:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021310:	e59f1134 	ldr	r1, [pc, #308]	; 4002144c <CyU3PUsbSSReset+0x188>
40021314:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021318:	e3a00001 	mov	r0, #1
4002131c:	ebffc8f8 	bl	40013704 <CyU3PBusyWait>
40021320:	e59f0124 	ldr	r0, [pc, #292]	; 4002144c <CyU3PUsbSSReset+0x188>
40021324:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021328:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
4002132c:	e59f1118 	ldr	r1, [pc, #280]	; 4002144c <CyU3PUsbSSReset+0x188>
40021330:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021334:	e3a00001 	mov	r0, #1
40021338:	ebffc8f1 	bl	40013704 <CyU3PBusyWait>
4002133c:	e3a00000 	mov	r0, #0
40021340:	ebffee1a 	bl	4001cbb0 <CyU3PUsbFlushEp>
40021344:	e3a00080 	mov	r0, #128	; 0x80
40021348:	ebffee18 	bl	4001cbb0 <CyU3PUsbFlushEp>
4002134c:	e59f00fc 	ldr	r0, [pc, #252]	; 40021450 <CyU3PUsbSSReset+0x18c>
40021350:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021354:	e3800001 	orr	r0, r0, #1
40021358:	e59f10f0 	ldr	r1, [pc, #240]	; 40021450 <CyU3PUsbSSReset+0x18c>
4002135c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021360:	e3a00c02 	mov	r0, #512	; 0x200
40021364:	e1c11200 	bic	r1, r1, r0, lsl #4
40021368:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002136c:	e1810200 	orr	r0, r1, r0, lsl #4
40021370:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021374:	e3800001 	orr	r0, r0, #1
40021378:	e2811a02 	add	r1, r1, #8192	; 0x2000
4002137c:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021380:	e3a00c02 	mov	r0, #512	; 0x200
40021384:	e1c11200 	bic	r1, r1, r0, lsl #4
40021388:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002138c:	e3a00000 	mov	r0, #0
40021390:	ebfff06e 	bl	4001d550 <CyU3PUsbResetEp>
40021394:	e3a00000 	mov	r0, #0
40021398:	ebffee04 	bl	4001cbb0 <CyU3PUsbFlushEp>
4002139c:	e3a00080 	mov	r0, #128	; 0x80
400213a0:	ebfff06a 	bl	4001d550 <CyU3PUsbResetEp>
400213a4:	e3a00080 	mov	r0, #128	; 0x80
400213a8:	ebffee00 	bl	4001cbb0 <CyU3PUsbFlushEp>
400213ac:	e3a00c02 	mov	r0, #512	; 0x200
400213b0:	e59f1094 	ldr	r1, [pc, #148]	; 4002144c <CyU3PUsbSSReset+0x188>
400213b4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400213b8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400213bc:	e3a04001 	mov	r4, #1
400213c0:	ea000019 	b	4002142c <CyU3PUsbSSReset+0x168>
400213c4:	e0840084 	add	r0, r4, r4, lsl #1
400213c8:	e59f1084 	ldr	r1, [pc, #132]	; 40021454 <CyU3PUsbSSReset+0x190>
400213cc:	e0810100 	add	r0, r1, r0, lsl #2
400213d0:	e5900004 	ldr	r0, [r0, #4]
400213d4:	e3500001 	cmp	r0, #1
400213d8:	1a000005 	bne	400213f4 <CyU3PUsbSSReset+0x130>
400213dc:	e3840080 	orr	r0, r4, #128	; 0x80
400213e0:	ebffedf2 	bl	4001cbb0 <CyU3PUsbFlushEp>
400213e4:	e3840080 	orr	r0, r4, #128	; 0x80
400213e8:	e3a02001 	mov	r2, #1
400213ec:	e3a01000 	mov	r1, #0
400213f0:	ebfff2ba 	bl	4001dee0 <CyU3PUsbStall>
400213f4:	e0840084 	add	r0, r4, r4, lsl #1
400213f8:	e59f1058 	ldr	r1, [pc, #88]	; 40021458 <CyU3PUsbSSReset+0x194>
400213fc:	e0810100 	add	r0, r1, r0, lsl #2
40021400:	e5900004 	ldr	r0, [r0, #4]
40021404:	e3500001 	cmp	r0, #1
40021408:	1a000005 	bne	40021424 <CyU3PUsbSSReset+0x160>
4002140c:	e1a00004 	mov	r0, r4
40021410:	ebffede6 	bl	4001cbb0 <CyU3PUsbFlushEp>
40021414:	e3a02001 	mov	r2, #1
40021418:	e3a01000 	mov	r1, #0
4002141c:	e1a00004 	mov	r0, r4
40021420:	ebfff2ae 	bl	4001dee0 <CyU3PUsbStall>
40021424:	e2840001 	add	r0, r4, #1
40021428:	e20040ff 	and	r4, r0, #255	; 0xff
4002142c:	e3540010 	cmp	r4, #16
40021430:	baffffe3 	blt	400213c4 <CyU3PUsbSSReset+0x100>
40021434:	e3a00005 	mov	r0, #5
40021438:	e59f1004 	ldr	r1, [pc, #4]	; 40021444 <CyU3PUsbSSReset+0x180>
4002143c:	e5c10008 	strb	r0, [r1, #8]
40021440:	eaffffa5 	b	400212dc <CyU3PUsbSSReset+0x18>
40021444:	400321c0 	.word	0x400321c0
40021448:	40031228 	.word	0x40031228
4002144c:	e0031000 	.word	0xe0031000
40021450:	e0033000 	.word	0xe0033000
40021454:	40032038 	.word	0x40032038
40021458:	400320f8 	.word	0x400320f8

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

4002145c <CyU3PUsbSendCompliancePatterns>:
4002145c:	e92d4070 	push	{r4, r5, r6, lr}
40021460:	e3a04001 	mov	r4, #1
40021464:	e59f01ec 	ldr	r0, [pc, #492]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021468:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002146c:	e200503f 	and	r5, r0, #63	; 0x3f
40021470:	e3550017 	cmp	r5, #23
40021474:	0a000000 	beq	4002147c <CyU3PUsbSendCompliancePatterns+0x20>
40021478:	e8bd8070 	pop	{r4, r5, r6, pc}
4002147c:	e3a00003 	mov	r0, #3
40021480:	e59f11d4 	ldr	r1, [pc, #468]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
40021484:	e5c10009 	strb	r0, [r1, #9]
40021488:	e3a00001 	mov	r0, #1
4002148c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021490:	e3a00000 	mov	r0, #0
40021494:	e5810060 	str	r0, [r1, #96]	; 0x60
40021498:	e3a00d57 	mov	r0, #5568	; 0x15c0
4002149c:	e59f11b4 	ldr	r1, [pc, #436]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400214a0:	e5810054 	str	r0, [r1, #84]	; 0x54
400214a4:	e59f01b4 	ldr	r0, [pc, #436]	; 40021660 <CyU3PUsbSendCompliancePatterns+0x204>
400214a8:	e5900000 	ldr	r0, [r0]
400214ac:	e3500000 	cmp	r0, #0
400214b0:	0a000004 	beq	400214c8 <CyU3PUsbSendCompliancePatterns+0x6c>
400214b4:	e3a01000 	mov	r1, #0
400214b8:	e3a00015 	mov	r0, #21
400214bc:	e59f219c 	ldr	r2, [pc, #412]	; 40021660 <CyU3PUsbSendCompliancePatterns+0x204>
400214c0:	e5922000 	ldr	r2, [r2]
400214c4:	e12fff32 	blx	r2
400214c8:	e1a00000 	nop			; (mov r0, r0)
400214cc:	e59f0184 	ldr	r0, [pc, #388]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400214d0:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400214d4:	e3100002 	tst	r0, #2
400214d8:	0a000031 	beq	400215a4 <CyU3PUsbSendCompliancePatterns+0x148>
400214dc:	e59f0180 	ldr	r0, [pc, #384]	; 40021664 <CyU3PUsbSendCompliancePatterns+0x208>
400214e0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400214e4:	e59f116c 	ldr	r1, [pc, #364]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400214e8:	e5810138 	str	r0, [r1, #312]	; 0x138
400214ec:	e3a00001 	mov	r0, #1
400214f0:	ebff9d53 	bl	40008a44 <_tx_thread_sleep>
400214f4:	e59f015c 	ldr	r0, [pc, #348]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400214f8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400214fc:	e3c00002 	bic	r0, r0, #2
40021500:	e59f1150 	ldr	r1, [pc, #336]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021504:	e5810064 	str	r0, [r1, #100]	; 0x64
40021508:	e3540004 	cmp	r4, #4
4002150c:	1a000020 	bne	40021594 <CyU3PUsbSendCompliancePatterns+0x138>
40021510:	ea00000d 	b	4002154c <CyU3PUsbSendCompliancePatterns+0xf0>
40021514:	e59f013c 	ldr	r0, [pc, #316]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021518:	e590001c 	ldr	r0, [r0, #28]
4002151c:	e3800008 	orr	r0, r0, #8
40021520:	e59f1130 	ldr	r1, [pc, #304]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021524:	e581001c 	str	r0, [r1, #28]
40021528:	e3a0000a 	mov	r0, #10
4002152c:	ebffc874 	bl	40013704 <CyU3PBusyWait>
40021530:	e59f0120 	ldr	r0, [pc, #288]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021534:	e590001c 	ldr	r0, [r0, #28]
40021538:	e3c00008 	bic	r0, r0, #8
4002153c:	e59f1114 	ldr	r1, [pc, #276]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021540:	e581001c 	str	r0, [r1, #28]
40021544:	e3a0001e 	mov	r0, #30
40021548:	ebffc86d 	bl	40013704 <CyU3PBusyWait>
4002154c:	e59f0104 	ldr	r0, [pc, #260]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021550:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021554:	e3100006 	tst	r0, #6
40021558:	1a00000d 	bne	40021594 <CyU3PUsbSendCompliancePatterns+0x138>
4002155c:	e59f00f8 	ldr	r0, [pc, #248]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
40021560:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021564:	e3500000 	cmp	r0, #0
40021568:	0a000005 	beq	40021584 <CyU3PUsbSendCompliancePatterns+0x128>
4002156c:	e59f00f4 	ldr	r0, [pc, #244]	; 40021668 <CyU3PUsbSendCompliancePatterns+0x20c>
40021570:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021574:	e59f10e0 	ldr	r1, [pc, #224]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
40021578:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002157c:	e1100001 	tst	r0, r1
40021580:	0a000003 	beq	40021594 <CyU3PUsbSendCompliancePatterns+0x138>
40021584:	e59f00d0 	ldr	r0, [pc, #208]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
40021588:	e5900060 	ldr	r0, [r0, #96]	; 0x60
4002158c:	e3500000 	cmp	r0, #0
40021590:	0affffdf 	beq	40021514 <CyU3PUsbSendCompliancePatterns+0xb8>
40021594:	e3a01009 	mov	r1, #9
40021598:	e2840001 	add	r0, r4, #1
4002159c:	ebffbd66 	bl	40010b3c <__aeabi_idivmod>
400215a0:	e20140ff 	and	r4, r1, #255	; 0xff
400215a4:	e59f00ac 	ldr	r0, [pc, #172]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400215a8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400215ac:	e3100004 	tst	r0, #4
400215b0:	1a00000d 	bne	400215ec <CyU3PUsbSendCompliancePatterns+0x190>
400215b4:	e59f00a0 	ldr	r0, [pc, #160]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
400215b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400215bc:	e3500000 	cmp	r0, #0
400215c0:	0a000005 	beq	400215dc <CyU3PUsbSendCompliancePatterns+0x180>
400215c4:	e59f009c 	ldr	r0, [pc, #156]	; 40021668 <CyU3PUsbSendCompliancePatterns+0x20c>
400215c8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400215cc:	e59f1088 	ldr	r1, [pc, #136]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
400215d0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400215d4:	e1100001 	tst	r0, r1
400215d8:	0a000003 	beq	400215ec <CyU3PUsbSendCompliancePatterns+0x190>
400215dc:	e59f0078 	ldr	r0, [pc, #120]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
400215e0:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400215e4:	e3500001 	cmp	r0, #1
400215e8:	1a000009 	bne	40021614 <CyU3PUsbSendCompliancePatterns+0x1b8>
400215ec:	e59f0064 	ldr	r0, [pc, #100]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400215f0:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400215f4:	e3c00004 	bic	r0, r0, #4
400215f8:	e59f1058 	ldr	r1, [pc, #88]	; 40021658 <CyU3PUsbSendCompliancePatterns+0x1fc>
400215fc:	e5810064 	str	r0, [r1, #100]	; 0x64
40021600:	e3a00c06 	mov	r0, #1536	; 0x600
40021604:	e5810138 	str	r0, [r1, #312]	; 0x138
40021608:	e3a00000 	mov	r0, #0
4002160c:	e5810054 	str	r0, [r1, #84]	; 0x54
40021610:	ea000002 	b	40021620 <CyU3PUsbSendCompliancePatterns+0x1c4>
40021614:	e3a00001 	mov	r0, #1
40021618:	ebff9d09 	bl	40008a44 <_tx_thread_sleep>
4002161c:	eaffffaa 	b	400214cc <CyU3PUsbSendCompliancePatterns+0x70>
40021620:	e1a00000 	nop			; (mov r0, r0)
40021624:	e59f0034 	ldr	r0, [pc, #52]	; 40021660 <CyU3PUsbSendCompliancePatterns+0x204>
40021628:	e5900000 	ldr	r0, [r0]
4002162c:	e3500000 	cmp	r0, #0
40021630:	0a000004 	beq	40021648 <CyU3PUsbSendCompliancePatterns+0x1ec>
40021634:	e3a01000 	mov	r1, #0
40021638:	e3a00016 	mov	r0, #22
4002163c:	e59f201c 	ldr	r2, [pc, #28]	; 40021660 <CyU3PUsbSendCompliancePatterns+0x204>
40021640:	e5922000 	ldr	r2, [r2]
40021644:	e12fff32 	blx	r2
40021648:	e3a00000 	mov	r0, #0
4002164c:	e59f1008 	ldr	r1, [pc, #8]	; 4002165c <CyU3PUsbSendCompliancePatterns+0x200>
40021650:	e5810064 	str	r0, [r1, #100]	; 0x64
40021654:	eaffff87 	b	40021478 <CyU3PUsbSendCompliancePatterns+0x1c>
40021658:	e0033000 	.word	0xe0033000
4002165c:	400321c0 	.word	0x400321c0
40021660:	40031228 	.word	0x40031228
40021664:	40012070 	.word	0x40012070
40021668:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

4002166c <CyU3PUsbSetupCommand>:
4002166c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021670:	e3a06000 	mov	r6, #0
40021674:	e3a07000 	mov	r7, #0
40021678:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
4002167c:	e5d00009 	ldrb	r0, [r0, #9]
40021680:	e3500003 	cmp	r0, #3
40021684:	1a00001a 	bne	400216f4 <CyU3PUsbSetupCommand+0x88>
40021688:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021e44 <CyU3PUsbSetupCommand+0x7d8>
4002168c:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
40021690:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
40021694:	e3a00001 	mov	r0, #1
40021698:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
4002169c:	e5810050 	str	r0, [r1, #80]	; 0x50
400216a0:	e3a00000 	mov	r0, #0
400216a4:	e59f179c 	ldr	r1, [pc, #1948]	; 40021e48 <CyU3PUsbSetupCommand+0x7dc>
400216a8:	e5810000 	str	r0, [r1]
400216ac:	e59f0798 	ldr	r0, [pc, #1944]	; 40021e4c <CyU3PUsbSetupCommand+0x7e0>
400216b0:	ebffa555 	bl	4000ac0c <_txe_timer_deactivate>
400216b4:	e3a00b02 	mov	r0, #2048	; 0x800
400216b8:	e59f1784 	ldr	r1, [pc, #1924]	; 40021e44 <CyU3PUsbSetupCommand+0x7d8>
400216bc:	e5810404 	str	r0, [r1, #1028]	; 0x404
400216c0:	e1c10000 	bic	r0, r1, r0
400216c4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400216c8:	e200603f 	and	r6, r0, #63	; 0x3f
400216cc:	e3560011 	cmp	r6, #17
400216d0:	0a000001 	beq	400216dc <CyU3PUsbSetupCommand+0x70>
400216d4:	e3560012 	cmp	r6, #18
400216d8:	1a000003 	bne	400216ec <CyU3PUsbSetupCommand+0x80>
400216dc:	e3a02000 	mov	r2, #0
400216e0:	e3a01401 	mov	r1, #16777216	; 0x1000000
400216e4:	e59f0764 	ldr	r0, [pc, #1892]	; 40021e50 <CyU3PUsbSetupCommand+0x7e4>
400216e8:	ebffa1cd 	bl	40009e24 <_txe_event_flags_set>
400216ec:	e3a06000 	mov	r6, #0
400216f0:	ea00000d 	b	4002172c <CyU3PUsbSetupCommand+0xc0>
400216f4:	e59f0744 	ldr	r0, [pc, #1860]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
400216f8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
400216fc:	e3500000 	cmp	r0, #0
40021700:	0a000006 	beq	40021720 <CyU3PUsbSetupCommand+0xb4>
40021704:	e59f0734 	ldr	r0, [pc, #1844]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021708:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4002170c:	e3500003 	cmp	r0, #3
40021710:	2a000002 	bcs	40021720 <CyU3PUsbSetupCommand+0xb4>
40021714:	e3a00001 	mov	r0, #1
40021718:	e59f1720 	ldr	r1, [pc, #1824]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
4002171c:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021720:	e59f072c 	ldr	r0, [pc, #1836]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
40021724:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021728:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
4002172c:	e3a01064 	mov	r1, #100	; 0x64
40021730:	e59f0720 	ldr	r0, [pc, #1824]	; 40021e58 <CyU3PUsbSetupCommand+0x7ec>
40021734:	ebffd5fd 	bl	40016f30 <CyU3PDmaChannelWaitForCompletion>
40021738:	e1a06000 	mov	r6, r0
4002173c:	e3560000 	cmp	r6, #0
40021740:	0a00000b 	beq	40021774 <CyU3PUsbSetupCommand+0x108>
40021744:	e3560042 	cmp	r6, #66	; 0x42
40021748:	0a000009 	beq	40021774 <CyU3PUsbSetupCommand+0x108>
4002174c:	e3a01001 	mov	r1, #1
40021750:	e3a00000 	mov	r0, #0
40021754:	ebfff11b 	bl	4001dbc8 <CyU3PUsbSetEpNak>
40021758:	e3a00064 	mov	r0, #100	; 0x64
4002175c:	ebffc7e8 	bl	40013704 <CyU3PBusyWait>
40021760:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021e58 <CyU3PUsbSetupCommand+0x7ec>
40021764:	ebffd320 	bl	400163ec <CyU3PDmaChannelReset>
40021768:	e3a01000 	mov	r1, #0
4002176c:	e1a00001 	mov	r0, r1
40021770:	ebfff114 	bl	4001dbc8 <CyU3PUsbSetEpNak>
40021774:	e3a01064 	mov	r1, #100	; 0x64
40021778:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021e5c <CyU3PUsbSetupCommand+0x7f0>
4002177c:	ebffd5eb 	bl	40016f30 <CyU3PDmaChannelWaitForCompletion>
40021780:	e1a06000 	mov	r6, r0
40021784:	e3560000 	cmp	r6, #0
40021788:	0a00000d 	beq	400217c4 <CyU3PUsbSetupCommand+0x158>
4002178c:	e3560042 	cmp	r6, #66	; 0x42
40021790:	0a00000b 	beq	400217c4 <CyU3PUsbSetupCommand+0x158>
40021794:	e3a01001 	mov	r1, #1
40021798:	e3a00080 	mov	r0, #128	; 0x80
4002179c:	ebfff109 	bl	4001dbc8 <CyU3PUsbSetEpNak>
400217a0:	e3a00064 	mov	r0, #100	; 0x64
400217a4:	ebffc7d6 	bl	40013704 <CyU3PBusyWait>
400217a8:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021e5c <CyU3PUsbSetupCommand+0x7f0>
400217ac:	ebffd30e 	bl	400163ec <CyU3PDmaChannelReset>
400217b0:	e3a00080 	mov	r0, #128	; 0x80
400217b4:	ebffecfd 	bl	4001cbb0 <CyU3PUsbFlushEp>
400217b8:	e3a01000 	mov	r1, #0
400217bc:	e3a00080 	mov	r0, #128	; 0x80
400217c0:	ebfff100 	bl	4001dbc8 <CyU3PUsbSetEpNak>
400217c4:	e3a06000 	mov	r6, #0
400217c8:	e20490ff 	and	r9, r4, #255	; 0xff
400217cc:	e209a060 	and	sl, r9, #96	; 0x60
400217d0:	e2090003 	and	r0, r9, #3
400217d4:	e58d0008 	str	r0, [sp, #8]
400217d8:	e2040cff 	and	r0, r4, #65280	; 0xff00
400217dc:	e1a08420 	lsr	r8, r0, #8
400217e0:	e59f0678 	ldr	r0, [pc, #1656]	; 40021e60 <CyU3PUsbSetupCommand+0x7f4>
400217e4:	e000b824 	and	fp, r0, r4, lsr #16
400217e8:	e0050000 	and	r0, r5, r0
400217ec:	e58d0004 	str	r0, [sp, #4]
400217f0:	e59f0668 	ldr	r0, [pc, #1640]	; 40021e60 <CyU3PUsbSetupCommand+0x7f4>
400217f4:	e0000825 	and	r0, r0, r5, lsr #16
400217f8:	e58d0000 	str	r0, [sp]
400217fc:	e3140080 	tst	r4, #128	; 0x80
40021800:	0a000003 	beq	40021814 <CyU3PUsbSetupCommand+0x1a8>
40021804:	e59d0000 	ldr	r0, [sp]
40021808:	e59f1644 	ldr	r1, [pc, #1604]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
4002180c:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021810:	ea000002 	b	40021820 <CyU3PUsbSetupCommand+0x1b4>
40021814:	e59d0000 	ldr	r0, [sp]
40021818:	e59f1634 	ldr	r1, [pc, #1588]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
4002181c:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
40021820:	e3a00000 	mov	r0, #0
40021824:	e59f1614 	ldr	r1, [pc, #1556]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021828:	e5810040 	str	r0, [r1, #64]	; 0x40
4002182c:	e59f0620 	ldr	r0, [pc, #1568]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
40021830:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021834:	e3c00008 	bic	r0, r0, #8
40021838:	e59f1614 	ldr	r1, [pc, #1556]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
4002183c:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021840:	e3a00000 	mov	r0, #0
40021844:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021848:	e5810018 	str	r0, [r1, #24]
4002184c:	e5810070 	str	r0, [r1, #112]	; 0x70
40021850:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
40021854:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021858:	e3800008 	orr	r0, r0, #8
4002185c:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021e54 <CyU3PUsbSetupCommand+0x7e8>
40021860:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021864:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021868:	e5d00007 	ldrb	r0, [r0, #7]
4002186c:	e3500001 	cmp	r0, #1
40021870:	0a000001 	beq	4002187c <CyU3PUsbSetupCommand+0x210>
40021874:	e35a0000 	cmp	sl, #0
40021878:	0a000024 	beq	40021910 <CyU3PUsbSetupCommand+0x2a4>
4002187c:	e35a0000 	cmp	sl, #0
40021880:	1a000012 	bne	400218d0 <CyU3PUsbSetupCommand+0x264>
40021884:	e3580009 	cmp	r8, #9
40021888:	1a000010 	bne	400218d0 <CyU3PUsbSetupCommand+0x264>
4002188c:	e35b0001 	cmp	fp, #1
40021890:	1a00000b 	bne	400218c4 <CyU3PUsbSetupCommand+0x258>
40021894:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021898:	e5d10009 	ldrb	r0, [r1, #9]
4002189c:	ebfff993 	bl	4001fef0 <CyU3PUsbEpPrepare>
400218a0:	e3a00006 	mov	r0, #6
400218a4:	e59f1594 	ldr	r1, [pc, #1428]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
400218a8:	e5c10008 	strb	r0, [r1, #8]
400218ac:	e5c1b00c 	strb	fp, [r1, #12]
400218b0:	e2810000 	add	r0, r1, #0
400218b4:	e5d00006 	ldrb	r0, [r0, #6]
400218b8:	e2000001 	and	r0, r0, #1
400218bc:	e5c10006 	strb	r0, [r1, #6]
400218c0:	ea000002 	b	400218d0 <CyU3PUsbSetupCommand+0x264>
400218c4:	e3a00005 	mov	r0, #5
400218c8:	e59f1570 	ldr	r1, [pc, #1392]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
400218cc:	e5c10008 	strb	r0, [r1, #8]
400218d0:	e59f058c 	ldr	r0, [pc, #1420]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
400218d4:	e5900000 	ldr	r0, [r0]
400218d8:	e3500000 	cmp	r0, #0
400218dc:	0a000005 	beq	400218f8 <CyU3PUsbSetupCommand+0x28c>
400218e0:	e1a01005 	mov	r1, r5
400218e4:	e1a00004 	mov	r0, r4
400218e8:	e59f2574 	ldr	r2, [pc, #1396]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
400218ec:	e5922000 	ldr	r2, [r2]
400218f0:	e12fff32 	blx	r2
400218f4:	e1a07000 	mov	r7, r0
400218f8:	e3570001 	cmp	r7, #1
400218fc:	1a000003 	bne	40021910 <CyU3PUsbSetupCommand+0x2a4>
40021900:	e3a00001 	mov	r0, #1
40021904:	e59f1534 	ldr	r1, [pc, #1332]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021908:	e5810040 	str	r0, [r1, #64]	; 0x40
4002190c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021910:	e35a0000 	cmp	sl, #0
40021914:	1a000140 	bne	40021e1c <CyU3PUsbSetupCommand+0x7b0>
40021918:	e3580009 	cmp	r8, #9
4002191c:	0a0000b1 	beq	40021be8 <CyU3PUsbSetupCommand+0x57c>
40021920:	ca00000b 	bgt	40021954 <CyU3PUsbSetupCommand+0x2e8>
40021924:	e3580009 	cmp	r8, #9
40021928:	308ff108 	addcc	pc, pc, r8, lsl #2
4002192c:	ea000137 	b	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021930:	ea000014 	b	40021988 <CyU3PUsbSetupCommand+0x31c>
40021934:	ea000029 	b	400219e0 <CyU3PUsbSetupCommand+0x374>
40021938:	ea000134 	b	40021e10 <CyU3PUsbSetupCommand+0x7a4>
4002193c:	ea000057 	b	40021aa0 <CyU3PUsbSetupCommand+0x434>
40021940:	ea000132 	b	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021944:	ea000131 	b	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021948:	ea000099 	b	40021bb4 <CyU3PUsbSetupCommand+0x548>
4002194c:	ea00012f 	b	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021950:	ea00009d 	b	40021bcc <CyU3PUsbSetupCommand+0x560>
40021954:	e358000c 	cmp	r8, #12
40021958:	0a0000fb 	beq	40021d4c <CyU3PUsbSetupCommand+0x6e0>
4002195c:	ca000004 	bgt	40021974 <CyU3PUsbSetupCommand+0x308>
40021960:	e358000a 	cmp	r8, #10
40021964:	0a0000c5 	beq	40021c80 <CyU3PUsbSetupCommand+0x614>
40021968:	e358000b 	cmp	r8, #11
4002196c:	1a000127 	bne	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021970:	ea0000d6 	b	40021cd0 <CyU3PUsbSetupCommand+0x664>
40021974:	e3580030 	cmp	r8, #48	; 0x30
40021978:	0a0000f7 	beq	40021d5c <CyU3PUsbSetupCommand+0x6f0>
4002197c:	e3580031 	cmp	r8, #49	; 0x31
40021980:	1a000122 	bne	40021e10 <CyU3PUsbSetupCommand+0x7a4>
40021984:	ea000114 	b	40021ddc <CyU3PUsbSetupCommand+0x770>
40021988:	e1a00000 	nop			; (mov r0, r0)
4002198c:	e59d0008 	ldr	r0, [sp, #8]
40021990:	e3500001 	cmp	r0, #1
40021994:	1a00000c 	bne	400219cc <CyU3PUsbSetupCommand+0x360>
40021998:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
4002199c:	e5900000 	ldr	r0, [r0]
400219a0:	e3500000 	cmp	r0, #0
400219a4:	0a000008 	beq	400219cc <CyU3PUsbSetupCommand+0x360>
400219a8:	e1a01005 	mov	r1, r5
400219ac:	e1a00004 	mov	r0, r4
400219b0:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
400219b4:	e5922000 	ldr	r2, [r2]
400219b8:	e12fff32 	blx	r2
400219bc:	e1a07000 	mov	r7, r0
400219c0:	e3570000 	cmp	r7, #0
400219c4:	0a000000 	beq	400219cc <CyU3PUsbSetupCommand+0x360>
400219c8:	ea000112 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
400219cc:	e59d0008 	ldr	r0, [sp, #8]
400219d0:	e59d1004 	ldr	r1, [sp, #4]
400219d4:	ebfffbd3 	bl	40020928 <CyU3PUsbHandleGetStatus>
400219d8:	e1a07000 	mov	r7, r0
400219dc:	ea00010d 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
400219e0:	e1a00000 	nop			; (mov r0, r0)
400219e4:	e59d0008 	ldr	r0, [sp, #8]
400219e8:	e3500000 	cmp	r0, #0
400219ec:	1a000002 	bne	400219fc <CyU3PUsbSetupCommand+0x390>
400219f0:	e20b00ff 	and	r0, fp, #255	; 0xff
400219f4:	ebfffa86 	bl	40020414 <CyU3PUsbHandleClearFeature>
400219f8:	eaffffc3 	b	4002190c <CyU3PUsbSetupCommand+0x2a0>
400219fc:	e3a07000 	mov	r7, #0
40021a00:	e59f0438 	ldr	r0, [pc, #1080]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021a04:	e5d00007 	ldrb	r0, [r0, #7]
40021a08:	e3500000 	cmp	r0, #0
40021a0c:	1a00000e 	bne	40021a4c <CyU3PUsbSetupCommand+0x3e0>
40021a10:	e59f044c 	ldr	r0, [pc, #1100]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021a14:	e5900000 	ldr	r0, [r0]
40021a18:	e3500000 	cmp	r0, #0
40021a1c:	0a00000a 	beq	40021a4c <CyU3PUsbSetupCommand+0x3e0>
40021a20:	e1a01005 	mov	r1, r5
40021a24:	e1a00004 	mov	r0, r4
40021a28:	e59f2434 	ldr	r2, [pc, #1076]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021a2c:	e5922000 	ldr	r2, [r2]
40021a30:	e12fff32 	blx	r2
40021a34:	e1a07000 	mov	r7, r0
40021a38:	e3570000 	cmp	r7, #0
40021a3c:	0a000002 	beq	40021a4c <CyU3PUsbSetupCommand+0x3e0>
40021a40:	e3a00001 	mov	r0, #1
40021a44:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021a48:	e5810040 	str	r0, [r1, #64]	; 0x40
40021a4c:	e3570000 	cmp	r7, #0
40021a50:	1a000011 	bne	40021a9c <CyU3PUsbSetupCommand+0x430>
40021a54:	e59d0008 	ldr	r0, [sp, #8]
40021a58:	e3500002 	cmp	r0, #2
40021a5c:	1a00000e 	bne	40021a9c <CyU3PUsbSetupCommand+0x430>
40021a60:	e35b0000 	cmp	fp, #0
40021a64:	1a00000c 	bne	40021a9c <CyU3PUsbSetupCommand+0x430>
40021a68:	e59d1004 	ldr	r1, [sp, #4]
40021a6c:	e20100ff 	and	r0, r1, #255	; 0xff
40021a70:	e3a02001 	mov	r2, #1
40021a74:	e3a01000 	mov	r1, #0
40021a78:	ebfff118 	bl	4001dee0 <CyU3PUsbStall>
40021a7c:	e3500000 	cmp	r0, #0
40021a80:	1a000005 	bne	40021a9c <CyU3PUsbSetupCommand+0x430>
40021a84:	e59d1004 	ldr	r1, [sp, #4]
40021a88:	e20100ff 	and	r0, r1, #255	; 0xff
40021a8c:	ebffeeaf 	bl	4001d550 <CyU3PUsbResetEp>
40021a90:	ebffeb4e 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021a94:	e3a07001 	mov	r7, #1
40021a98:	ea0000de 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021a9c:	ea0000dd 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021aa0:	e1a00000 	nop			; (mov r0, r0)
40021aa4:	e59d0008 	ldr	r0, [sp, #8]
40021aa8:	e3500000 	cmp	r0, #0
40021aac:	1a00001b 	bne	40021b20 <CyU3PUsbSetupCommand+0x4b4>
40021ab0:	e35b0003 	cmp	fp, #3
40021ab4:	0a000004 	beq	40021acc <CyU3PUsbSetupCommand+0x460>
40021ab8:	e35b0004 	cmp	fp, #4
40021abc:	0a000002 	beq	40021acc <CyU3PUsbSetupCommand+0x460>
40021ac0:	e20b00ff 	and	r0, fp, #255	; 0xff
40021ac4:	ebfffbd5 	bl	40020a20 <CyU3PUsbHandleSetFeature>
40021ac8:	eaffff8f 	b	4002190c <CyU3PUsbSetupCommand+0x2a0>
40021acc:	e59f036c 	ldr	r0, [pc, #876]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021ad0:	e5d00007 	ldrb	r0, [r0, #7]
40021ad4:	e3500000 	cmp	r0, #0
40021ad8:	1a00000f 	bne	40021b1c <CyU3PUsbSetupCommand+0x4b0>
40021adc:	e59f0380 	ldr	r0, [pc, #896]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021ae0:	e5900000 	ldr	r0, [r0]
40021ae4:	e3500000 	cmp	r0, #0
40021ae8:	0a00000b 	beq	40021b1c <CyU3PUsbSetupCommand+0x4b0>
40021aec:	e1a01005 	mov	r1, r5
40021af0:	e1a00004 	mov	r0, r4
40021af4:	e59f2368 	ldr	r2, [pc, #872]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021af8:	e5922000 	ldr	r2, [r2]
40021afc:	e12fff32 	blx	r2
40021b00:	e1a07000 	mov	r7, r0
40021b04:	e3570000 	cmp	r7, #0
40021b08:	0a000003 	beq	40021b1c <CyU3PUsbSetupCommand+0x4b0>
40021b0c:	e3a00001 	mov	r0, #1
40021b10:	e59f1328 	ldr	r1, [pc, #808]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021b14:	e5810040 	str	r0, [r1, #64]	; 0x40
40021b18:	eaffff7b 	b	4002190c <CyU3PUsbSetupCommand+0x2a0>
40021b1c:	ea0000bd 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021b20:	e3a07000 	mov	r7, #0
40021b24:	e59f0314 	ldr	r0, [pc, #788]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021b28:	e5d00007 	ldrb	r0, [r0, #7]
40021b2c:	e3500000 	cmp	r0, #0
40021b30:	1a00000e 	bne	40021b70 <CyU3PUsbSetupCommand+0x504>
40021b34:	e59f0328 	ldr	r0, [pc, #808]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021b38:	e5900000 	ldr	r0, [r0]
40021b3c:	e3500000 	cmp	r0, #0
40021b40:	0a00000a 	beq	40021b70 <CyU3PUsbSetupCommand+0x504>
40021b44:	e1a01005 	mov	r1, r5
40021b48:	e1a00004 	mov	r0, r4
40021b4c:	e59f2310 	ldr	r2, [pc, #784]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021b50:	e5922000 	ldr	r2, [r2]
40021b54:	e12fff32 	blx	r2
40021b58:	e1a07000 	mov	r7, r0
40021b5c:	e3570000 	cmp	r7, #0
40021b60:	0a000002 	beq	40021b70 <CyU3PUsbSetupCommand+0x504>
40021b64:	e3a00001 	mov	r0, #1
40021b68:	e59f12d0 	ldr	r1, [pc, #720]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021b6c:	e5810040 	str	r0, [r1, #64]	; 0x40
40021b70:	e3570000 	cmp	r7, #0
40021b74:	1a00000d 	bne	40021bb0 <CyU3PUsbSetupCommand+0x544>
40021b78:	e59d0008 	ldr	r0, [sp, #8]
40021b7c:	e3500002 	cmp	r0, #2
40021b80:	1a00000a 	bne	40021bb0 <CyU3PUsbSetupCommand+0x544>
40021b84:	e35b0000 	cmp	fp, #0
40021b88:	1a000008 	bne	40021bb0 <CyU3PUsbSetupCommand+0x544>
40021b8c:	e59d1004 	ldr	r1, [sp, #4]
40021b90:	e20100ff 	and	r0, r1, #255	; 0xff
40021b94:	e3a02000 	mov	r2, #0
40021b98:	e3a01001 	mov	r1, #1
40021b9c:	ebfff0cf 	bl	4001dee0 <CyU3PUsbStall>
40021ba0:	e3500000 	cmp	r0, #0
40021ba4:	1a000001 	bne	40021bb0 <CyU3PUsbSetupCommand+0x544>
40021ba8:	ebffeb08 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021bac:	e3a07001 	mov	r7, #1
40021bb0:	ea000098 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021bb4:	e1a00000 	nop			; (mov r0, r0)
40021bb8:	e1a01005 	mov	r1, r5
40021bbc:	e1a00004 	mov	r0, r4
40021bc0:	ebfff5d5 	bl	4001f31c <CyU3PUibSendDescr>
40021bc4:	e1a07000 	mov	r7, r0
40021bc8:	ea000092 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021bcc:	e1a00000 	nop			; (mov r0, r0)
40021bd0:	e3a07001 	mov	r7, #1
40021bd4:	e59f128c 	ldr	r1, [pc, #652]	; 40021e68 <CyU3PUsbSetupCommand+0x7fc>
40021bd8:	e3a00001 	mov	r0, #1
40021bdc:	ebffee94 	bl	4001d634 <CyU3PUsbSendEP0Data>
40021be0:	e1a06000 	mov	r6, r0
40021be4:	ea00008b 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021be8:	e1a00000 	nop			; (mov r0, r0)
40021bec:	e3a07001 	mov	r7, #1
40021bf0:	e35b0000 	cmp	fp, #0
40021bf4:	0a000005 	beq	40021c10 <CyU3PUsbSetupCommand+0x5a4>
40021bf8:	e35b0001 	cmp	fp, #1
40021bfc:	1a00001a 	bne	40021c6c <CyU3PUsbSetupCommand+0x600>
40021c00:	e59f1238 	ldr	r1, [pc, #568]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021c04:	e5d10009 	ldrb	r0, [r1, #9]
40021c08:	ebfff8b8 	bl	4001fef0 <CyU3PUsbEpPrepare>
40021c0c:	e1a00000 	nop			; (mov r0, r0)
40021c10:	e35b0000 	cmp	fp, #0
40021c14:	1a000001 	bne	40021c20 <CyU3PUsbSetupCommand+0x5b4>
40021c18:	e3a00005 	mov	r0, #5
40021c1c:	ea000000 	b	40021c24 <CyU3PUsbSetupCommand+0x5b8>
40021c20:	e3a00006 	mov	r0, #6
40021c24:	e59f1214 	ldr	r1, [pc, #532]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021c28:	e5c10008 	strb	r0, [r1, #8]
40021c2c:	e5c1b00c 	strb	fp, [r1, #12]
40021c30:	e2810000 	add	r0, r1, #0
40021c34:	e5d00006 	ldrb	r0, [r0, #6]
40021c38:	e2000001 	and	r0, r0, #1
40021c3c:	e5c10006 	strb	r0, [r1, #6]
40021c40:	e59f0224 	ldr	r0, [pc, #548]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021c44:	e5900000 	ldr	r0, [r0]
40021c48:	e3500000 	cmp	r0, #0
40021c4c:	0a000004 	beq	40021c64 <CyU3PUsbSetupCommand+0x5f8>
40021c50:	e1a0100b 	mov	r1, fp
40021c54:	e3a00005 	mov	r0, #5
40021c58:	e59f220c 	ldr	r2, [pc, #524]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021c5c:	e5922000 	ldr	r2, [r2]
40021c60:	e12fff32 	blx	r2
40021c64:	ebffead9 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021c68:	ea000002 	b	40021c78 <CyU3PUsbSetupCommand+0x60c>
40021c6c:	e1a00000 	nop			; (mov r0, r0)
40021c70:	e3a06040 	mov	r6, #64	; 0x40
40021c74:	e1a00000 	nop			; (mov r0, r0)
40021c78:	e1a00000 	nop			; (mov r0, r0)
40021c7c:	ea000065 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021c80:	e1a00000 	nop			; (mov r0, r0)
40021c84:	e59f01d8 	ldr	r0, [pc, #472]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021c88:	e5900000 	ldr	r0, [r0]
40021c8c:	e3500000 	cmp	r0, #0
40021c90:	0a000008 	beq	40021cb8 <CyU3PUsbSetupCommand+0x64c>
40021c94:	e1a01005 	mov	r1, r5
40021c98:	e1a00004 	mov	r0, r4
40021c9c:	e59f21c0 	ldr	r2, [pc, #448]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021ca0:	e5922000 	ldr	r2, [r2]
40021ca4:	e12fff32 	blx	r2
40021ca8:	e1a07000 	mov	r7, r0
40021cac:	e3570000 	cmp	r7, #0
40021cb0:	0a000000 	beq	40021cb8 <CyU3PUsbSetupCommand+0x64c>
40021cb4:	ea000057 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021cb8:	e3a07001 	mov	r7, #1
40021cbc:	e59f11ac 	ldr	r1, [pc, #428]	; 40021e70 <CyU3PUsbSetupCommand+0x804>
40021cc0:	e3a00001 	mov	r0, #1
40021cc4:	ebffee5a 	bl	4001d634 <CyU3PUsbSendEP0Data>
40021cc8:	e1a06000 	mov	r6, r0
40021ccc:	ea000051 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021cd0:	e1a00000 	nop			; (mov r0, r0)
40021cd4:	e59f0188 	ldr	r0, [pc, #392]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021cd8:	e5900000 	ldr	r0, [r0]
40021cdc:	e3500000 	cmp	r0, #0
40021ce0:	0a000008 	beq	40021d08 <CyU3PUsbSetupCommand+0x69c>
40021ce4:	e1a01005 	mov	r1, r5
40021ce8:	e1a00004 	mov	r0, r4
40021cec:	e59f2170 	ldr	r2, [pc, #368]	; 40021e64 <CyU3PUsbSetupCommand+0x7f8>
40021cf0:	e5922000 	ldr	r2, [r2]
40021cf4:	e12fff32 	blx	r2
40021cf8:	e1a07000 	mov	r7, r0
40021cfc:	e3570000 	cmp	r7, #0
40021d00:	0a000000 	beq	40021d08 <CyU3PUsbSetupCommand+0x69c>
40021d04:	ea000043 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021d08:	e59f1130 	ldr	r1, [pc, #304]	; 40021e40 <CyU3PUsbSetupCommand+0x7d4>
40021d0c:	e5c1b00d 	strb	fp, [r1, #13]
40021d10:	e59f0154 	ldr	r0, [pc, #340]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021d14:	e5900000 	ldr	r0, [r0]
40021d18:	e3500000 	cmp	r0, #0
40021d1c:	0a000007 	beq	40021d40 <CyU3PUsbSetupCommand+0x6d4>
40021d20:	e20b00ff 	and	r0, fp, #255	; 0xff
40021d24:	e59d2004 	ldr	r2, [sp, #4]
40021d28:	e1800402 	orr	r0, r0, r2, lsl #8
40021d2c:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021d30:	e3a00007 	mov	r0, #7
40021d34:	e59f2130 	ldr	r2, [pc, #304]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021d38:	e5922000 	ldr	r2, [r2]
40021d3c:	e12fff32 	blx	r2
40021d40:	e3a07001 	mov	r7, #1
40021d44:	ebffeaa1 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021d48:	ea000032 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021d4c:	e1a00000 	nop			; (mov r0, r0)
40021d50:	e3a07001 	mov	r7, #1
40021d54:	ebffea9d 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021d58:	ea00002e 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021d5c:	e1a00000 	nop			; (mov r0, r0)
40021d60:	ebffec37 	bl	4001ce44 <CyU3PUsbGetSpeed>
40021d64:	e3500003 	cmp	r0, #3
40021d68:	1a000019 	bne	40021dd4 <CyU3PUsbSetupCommand+0x768>
40021d6c:	e35b0000 	cmp	fp, #0
40021d70:	1a000017 	bne	40021dd4 <CyU3PUsbSetupCommand+0x768>
40021d74:	e59d0004 	ldr	r0, [sp, #4]
40021d78:	e3500000 	cmp	r0, #0
40021d7c:	1a000014 	bne	40021dd4 <CyU3PUsbSetupCommand+0x768>
40021d80:	e59d0000 	ldr	r0, [sp]
40021d84:	e3500006 	cmp	r0, #6
40021d88:	1a000011 	bne	40021dd4 <CyU3PUsbSetupCommand+0x768>
40021d8c:	e3a07001 	mov	r7, #1
40021d90:	e3a02000 	mov	r2, #0
40021d94:	e59f10d8 	ldr	r1, [pc, #216]	; 40021e74 <CyU3PUsbSetupCommand+0x808>
40021d98:	e3a00020 	mov	r0, #32
40021d9c:	ebffebb6 	bl	4001cc7c <CyU3PUsbGetEP0Data>
40021da0:	e1a06000 	mov	r6, r0
40021da4:	e59f00c0 	ldr	r0, [pc, #192]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021da8:	e5900000 	ldr	r0, [r0]
40021dac:	e3500000 	cmp	r0, #0
40021db0:	0a000008 	beq	40021dd8 <CyU3PUsbSetupCommand+0x76c>
40021db4:	e3560000 	cmp	r6, #0
40021db8:	1a000006 	bne	40021dd8 <CyU3PUsbSetupCommand+0x76c>
40021dbc:	e3a01000 	mov	r1, #0
40021dc0:	e3a00008 	mov	r0, #8
40021dc4:	e59f20a0 	ldr	r2, [pc, #160]	; 40021e6c <CyU3PUsbSetupCommand+0x800>
40021dc8:	e5922000 	ldr	r2, [r2]
40021dcc:	e12fff32 	blx	r2
40021dd0:	ea000000 	b	40021dd8 <CyU3PUsbSetupCommand+0x76c>
40021dd4:	e3a07000 	mov	r7, #0
40021dd8:	ea00000e 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021ddc:	e1a00000 	nop			; (mov r0, r0)
40021de0:	ebffec17 	bl	4001ce44 <CyU3PUsbGetSpeed>
40021de4:	e3500003 	cmp	r0, #3
40021de8:	1a000007 	bne	40021e0c <CyU3PUsbSetupCommand+0x7a0>
40021dec:	e59d0004 	ldr	r0, [sp, #4]
40021df0:	e3500000 	cmp	r0, #0
40021df4:	1a000004 	bne	40021e0c <CyU3PUsbSetupCommand+0x7a0>
40021df8:	e59d0000 	ldr	r0, [sp]
40021dfc:	e3500000 	cmp	r0, #0
40021e00:	1a000001 	bne	40021e0c <CyU3PUsbSetupCommand+0x7a0>
40021e04:	e3a07001 	mov	r7, #1
40021e08:	ebffea70 	bl	4001c7d0 <CyU3PUsbAckSetup>
40021e0c:	ea000001 	b	40021e18 <CyU3PUsbSetupCommand+0x7ac>
40021e10:	e1a00000 	nop			; (mov r0, r0)
40021e14:	e1a00000 	nop			; (mov r0, r0)
40021e18:	e1a00000 	nop			; (mov r0, r0)
40021e1c:	e3570001 	cmp	r7, #1
40021e20:	1a000001 	bne	40021e2c <CyU3PUsbSetupCommand+0x7c0>
40021e24:	e3560000 	cmp	r6, #0
40021e28:	0a000003 	beq	40021e3c <CyU3PUsbSetupCommand+0x7d0>
40021e2c:	e3a02000 	mov	r2, #0
40021e30:	e3a01001 	mov	r1, #1
40021e34:	e1a00002 	mov	r0, r2
40021e38:	ebfff028 	bl	4001dee0 <CyU3PUsbStall>
40021e3c:	eafffeb2 	b	4002190c <CyU3PUsbSetupCommand+0x2a0>
40021e40:	400321c0 	.word	0x400321c0
40021e44:	e0033000 	.word	0xe0033000
40021e48:	4003123c 	.word	0x4003123c
40021e4c:	40032b20 	.word	0x40032b20
40021e50:	40032338 	.word	0x40032338
40021e54:	e0031000 	.word	0xe0031000
40021e58:	40031f98 	.word	0x40031f98
40021e5c:	40031ef8 	.word	0x40031ef8
40021e60:	0000ffff 	.word	0x0000ffff
40021e64:	4003122c 	.word	0x4003122c
40021e68:	400321cc 	.word	0x400321cc
40021e6c:	40031228 	.word	0x40031228
40021e70:	400321cd 	.word	0x400321cd
40021e74:	40032b00 	.word	0x40032b00

Disassembly of section i.CyU3PUsbSuspendHandler:

40021e78 <CyU3PUsbSuspendHandler>:
40021e78:	e92d4010 	push	{r4, lr}
40021e7c:	e59f003c 	ldr	r0, [pc, #60]	; 40021ec0 <CyU3PUsbSuspendHandler+0x48>
40021e80:	e5d00008 	ldrb	r0, [r0, #8]
40021e84:	e3500005 	cmp	r0, #5
40021e88:	ba00000b 	blt	40021ebc <CyU3PUsbSuspendHandler+0x44>
40021e8c:	e59f0030 	ldr	r0, [pc, #48]	; 40021ec4 <CyU3PUsbSuspendHandler+0x4c>
40021e90:	e5900000 	ldr	r0, [r0]
40021e94:	e3500000 	cmp	r0, #0
40021e98:	0a000004 	beq	40021eb0 <CyU3PUsbSuspendHandler+0x38>
40021e9c:	e3a01000 	mov	r1, #0
40021ea0:	e3a00002 	mov	r0, #2
40021ea4:	e59f2018 	ldr	r2, [pc, #24]	; 40021ec4 <CyU3PUsbSuspendHandler+0x4c>
40021ea8:	e5922000 	ldr	r2, [r2]
40021eac:	e12fff32 	blx	r2
40021eb0:	e3a00005 	mov	r0, #5
40021eb4:	e59f1004 	ldr	r1, [pc, #4]	; 40021ec0 <CyU3PUsbSuspendHandler+0x48>
40021eb8:	e5c10008 	strb	r0, [r1, #8]
40021ebc:	e8bd8010 	pop	{r4, pc}
40021ec0:	400321c0 	.word	0x400321c0
40021ec4:	40031228 	.word	0x40031228

Disassembly of section i.HandleVbusOffEvent:

40021ec8 <HandleVbusOffEvent>:
40021ec8:	e92d4010 	push	{r4, lr}
40021ecc:	e59f00e0 	ldr	r0, [pc, #224]	; 40021fb4 <HandleVbusOffEvent+0xec>
40021ed0:	e5d00009 	ldrb	r0, [r0, #9]
40021ed4:	e3500003 	cmp	r0, #3
40021ed8:	1a000002 	bne	40021ee8 <HandleVbusOffEvent+0x20>
40021edc:	e3a00001 	mov	r0, #1
40021ee0:	ebffec59 	bl	4001d04c <CyU3PUsbPhyDisable>
40021ee4:	ea000022 	b	40021f74 <HandleVbusOffEvent+0xac>
40021ee8:	e59f00c8 	ldr	r0, [pc, #200]	; 40021fb8 <HandleVbusOffEvent+0xf0>
40021eec:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021ef0:	e3100901 	tst	r0, #16384	; 0x4000
40021ef4:	0a00001c 	beq	40021f6c <HandleVbusOffEvent+0xa4>
40021ef8:	e59f00b8 	ldr	r0, [pc, #184]	; 40021fb8 <HandleVbusOffEvent+0xf0>
40021efc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021f00:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021f04:	e59f10ac 	ldr	r1, [pc, #172]	; 40021fb8 <HandleVbusOffEvent+0xf0>
40021f08:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021f0c:	e3a00002 	mov	r0, #2
40021f10:	ebffc5fb 	bl	40013704 <CyU3PBusyWait>
40021f14:	e59f00a0 	ldr	r0, [pc, #160]	; 40021fbc <HandleVbusOffEvent+0xf4>
40021f18:	e5900004 	ldr	r0, [r0, #4]
40021f1c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021f20:	e59f1094 	ldr	r1, [pc, #148]	; 40021fbc <HandleVbusOffEvent+0xf4>
40021f24:	e5810004 	str	r0, [r1, #4]
40021f28:	e3a00001 	mov	r0, #1
40021f2c:	ebffc5f4 	bl	40013704 <CyU3PBusyWait>
40021f30:	e59f0088 	ldr	r0, [pc, #136]	; 40021fc0 <HandleVbusOffEvent+0xf8>
40021f34:	e590001c 	ldr	r0, [r0, #28]
40021f38:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021f3c:	e59f107c 	ldr	r1, [pc, #124]	; 40021fc0 <HandleVbusOffEvent+0xf8>
40021f40:	e581001c 	str	r0, [r1, #28]
40021f44:	e59f0078 	ldr	r0, [pc, #120]	; 40021fc4 <HandleVbusOffEvent+0xfc>
40021f48:	e5900000 	ldr	r0, [r0]
40021f4c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021f50:	e3a00001 	mov	r0, #1
40021f54:	ebffc5ea 	bl	40013704 <CyU3PBusyWait>
40021f58:	e59f005c 	ldr	r0, [pc, #92]	; 40021fbc <HandleVbusOffEvent+0xf4>
40021f5c:	e5900004 	ldr	r0, [r0, #4]
40021f60:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021f64:	e59f1050 	ldr	r1, [pc, #80]	; 40021fbc <HandleVbusOffEvent+0xf4>
40021f68:	e5810004 	str	r0, [r1, #4]
40021f6c:	e3a00000 	mov	r0, #0
40021f70:	ebffec35 	bl	4001d04c <CyU3PUsbPhyDisable>
40021f74:	e3a01000 	mov	r1, #0
40021f78:	e3a00001 	mov	r0, #1
40021f7c:	e59f2044 	ldr	r2, [pc, #68]	; 40021fc8 <HandleVbusOffEvent+0x100>
40021f80:	e5922000 	ldr	r2, [r2]
40021f84:	e12fff32 	blx	r2
40021f88:	e3a00000 	mov	r0, #0
40021f8c:	e59f1020 	ldr	r1, [pc, #32]	; 40021fb4 <HandleVbusOffEvent+0xec>
40021f90:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021f94:	e3a00004 	mov	r0, #4
40021f98:	e5c10008 	strb	r0, [r1, #8]
40021f9c:	e3a00000 	mov	r0, #0
40021fa0:	e5c10009 	strb	r0, [r1, #9]
40021fa4:	e5810054 	str	r0, [r1, #84]	; 0x54
40021fa8:	e5810058 	str	r0, [r1, #88]	; 0x58
40021fac:	e5810048 	str	r0, [r1, #72]	; 0x48
40021fb0:	e8bd8010 	pop	{r4, pc}
40021fb4:	400321c0 	.word	0x400321c0
40021fb8:	e0031000 	.word	0xe0031000
40021fbc:	e0030000 	.word	0xe0030000
40021fc0:	e0033000 	.word	0xe0033000
40021fc4:	400310e4 	.word	0x400310e4
40021fc8:	40031228 	.word	0x40031228

Disassembly of section i.CyU3POsTimerInit:

40021fcc <CyU3POsTimerInit>:
40021fcc:	e92d4070 	push	{r4, r5, r6, lr}
40021fd0:	e1a04000 	mov	r4, r0
40021fd4:	e3a00004 	mov	r0, #4
40021fd8:	eb000047 	bl	400220fc <CyU3PVicDisableInt>
40021fdc:	e59f00f0 	ldr	r0, [pc, #240]	; 400220d4 <CyU3POsTimerInit+0x108>
40021fe0:	e5905014 	ldr	r5, [r0, #20]
40021fe4:	e3a00064 	mov	r0, #100	; 0x64
40021fe8:	ebffc5c5 	bl	40013704 <CyU3PBusyWait>
40021fec:	e3850c03 	orr	r0, r5, #768	; 0x300
40021ff0:	e59f10dc 	ldr	r1, [pc, #220]	; 400220d4 <CyU3POsTimerInit+0x108>
40021ff4:	e5810014 	str	r0, [r1, #20]
40021ff8:	e3a00064 	mov	r0, #100	; 0x64
40021ffc:	ebffc5c0 	bl	40013704 <CyU3PBusyWait>
40022000:	e59f00cc 	ldr	r0, [pc, #204]	; 400220d4 <CyU3POsTimerInit+0x108>
40022004:	e5905014 	ldr	r5, [r0, #20]
40022008:	e3540000 	cmp	r4, #0
4002200c:	0a000001 	beq	40022018 <CyU3POsTimerInit+0x4c>
40022010:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40022014:	da000006 	ble	40022034 <CyU3POsTimerInit+0x68>
40022018:	e3a00001 	mov	r0, #1
4002201c:	e59f10b4 	ldr	r1, [pc, #180]	; 400220d8 <CyU3POsTimerInit+0x10c>
40022020:	e1c100b0 	strh	r0, [r1]
40022024:	e3a00020 	mov	r0, #32
40022028:	e59f10ac 	ldr	r1, [pc, #172]	; 400220dc <CyU3POsTimerInit+0x110>
4002202c:	e5810000 	str	r0, [r1]
40022030:	ea000004 	b	40022048 <CyU3POsTimerInit+0x7c>
40022034:	e59f009c 	ldr	r0, [pc, #156]	; 400220d8 <CyU3POsTimerInit+0x10c>
40022038:	e1c040b0 	strh	r4, [r0]
4002203c:	e1a00284 	lsl	r0, r4, #5
40022040:	e59f1094 	ldr	r1, [pc, #148]	; 400220dc <CyU3POsTimerInit+0x110>
40022044:	e5810000 	str	r0, [r1]
40022048:	e59f008c 	ldr	r0, [pc, #140]	; 400220dc <CyU3POsTimerInit+0x110>
4002204c:	e5900000 	ldr	r0, [r0]
40022050:	e2400007 	sub	r0, r0, #7
40022054:	e59f1080 	ldr	r1, [pc, #128]	; 400220dc <CyU3POsTimerInit+0x110>
40022058:	e5810000 	str	r0, [r1]
4002205c:	e3a06000 	mov	r6, #0
40022060:	ea000001 	b	4002206c <CyU3POsTimerInit+0xa0>
40022064:	e2860001 	add	r0, r6, #1
40022068:	e20060ff 	and	r6, r0, #255	; 0xff
4002206c:	e3a00001 	mov	r0, #1
40022070:	e1a00610 	lsl	r0, r0, r6
40022074:	e59f1060 	ldr	r1, [pc, #96]	; 400220dc <CyU3POsTimerInit+0x110>
40022078:	e5911000 	ldr	r1, [r1]
4002207c:	e1500001 	cmp	r0, r1
40022080:	9afffff7 	bls	40022064 <CyU3POsTimerInit+0x98>
40022084:	e59f0050 	ldr	r0, [pc, #80]	; 400220dc <CyU3POsTimerInit+0x110>
40022088:	e5900000 	ldr	r0, [r0]
4002208c:	e59f1040 	ldr	r1, [pc, #64]	; 400220d4 <CyU3POsTimerInit+0x108>
40022090:	e581001c 	str	r0, [r1, #28]
40022094:	e3a00064 	mov	r0, #100	; 0x64
40022098:	ebffc599 	bl	40013704 <CyU3PBusyWait>
4002209c:	e3a00004 	mov	r0, #4
400220a0:	eb00001a 	bl	40022110 <CyU3PVicEnableInt>
400220a4:	e59f0028 	ldr	r0, [pc, #40]	; 400220d4 <CyU3POsTimerInit+0x108>
400220a8:	e5900014 	ldr	r0, [r0, #20]
400220ac:	e3c05c03 	bic	r5, r0, #768	; 0x300
400220b0:	e3a00b01 	mov	r0, #1024	; 0x400
400220b4:	e1800586 	orr	r0, r0, r6, lsl #11
400220b8:	e1855000 	orr	r5, r5, r0
400220bc:	e3855c01 	orr	r5, r5, #256	; 0x100
400220c0:	e3a00064 	mov	r0, #100	; 0x64
400220c4:	ebffc58e 	bl	40013704 <CyU3PBusyWait>
400220c8:	e59f0004 	ldr	r0, [pc, #4]	; 400220d4 <CyU3POsTimerInit+0x108>
400220cc:	e5805014 	str	r5, [r0, #20]
400220d0:	e8bd8070 	pop	{r4, r5, r6, pc}
400220d4:	e0050000 	.word	0xe0050000
400220d8:	40031244 	.word	0x40031244
400220dc:	40031248 	.word	0x40031248

Disassembly of section i.CyU3PVicClearInt:

400220e0 <CyU3PVicClearInt>:
400220e0:	e3a00000 	mov	r0, #0
400220e4:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
400220e8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

400220ec <CyU3PVicDisableAllInterrupts>:
400220ec:	e3a01000 	mov	r1, #0
400220f0:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
400220f4:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400220f8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

400220fc <CyU3PVicDisableInt>:
400220fc:	e3a01001 	mov	r1, #1
40022100:	e1a01011 	lsl	r1, r1, r0
40022104:	e3a02000 	mov	r2, #0
40022108:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
4002210c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40022110 <CyU3PVicEnableInt>:
40022110:	e3a01001 	mov	r1, #1
40022114:	e1a01011 	lsl	r1, r1, r0
40022118:	e3a02000 	mov	r2, #0
4002211c:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40022120:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40022124 <CyU3PVicEnableInterrupts>:
40022124:	e3a01000 	mov	r1, #0
40022128:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
4002212c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40022130 <CyU3PVicInit>:
40022130:	e92d4010 	push	{r4, lr}
40022134:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40022138:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
4002213c:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40022140:	e3e00000 	mvn	r0, #0
40022144:	e3a01000 	mov	r1, #0
40022148:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
4002214c:	e3a00000 	mov	r0, #0
40022150:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40022154:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40022158:	ebffffe0 	bl	400220e0 <CyU3PVicClearInt>
4002215c:	eb000001 	bl	40022168 <__CyU3PVicSetupIntVectors_veneer>
40022160:	e8bd8010 	pop	{r4, pc}
40022164:	00000000 	andeq	r0, r0, r0

40022168 <__CyU3PVicSetupIntVectors_veneer>:
40022168:	e51ff004 	ldr	pc, [pc, #-4]	; 4002216c <__CyU3PVicSetupIntVectors_veneer+0x4>
4002216c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40022170 <CyFx3Usb2PhySetup>:
40022170:	e59f0008 	ldr	r0, [pc, #8]	; 40022180 <CyFx3Usb2PhySetup+0x10>
40022174:	e59f1008 	ldr	r1, [pc, #8]	; 40022184 <CyFx3Usb2PhySetup+0x14>
40022178:	e581000c 	str	r0, [r1, #12]
4002217c:	e12fff1e 	bx	lr
40022180:	00d4a480 	.word	0x00d4a480
40022184:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40022188 <CyFx3Usb3LnkRelaxHpTimeout>:
40022188:	e59f0008 	ldr	r0, [pc, #8]	; 40022198 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
4002218c:	e59f1008 	ldr	r1, [pc, #8]	; 4002219c <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40022190:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40022194:	e12fff1e 	bx	lr
40022198:	000009c4 	.word	0x000009c4
4002219c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

400221a0 <CyFx3Usb3LnkSetup>:
400221a0:	e59f1024 	ldr	r1, [pc, #36]	; 400221cc <CyFx3Usb3LnkSetup+0x2c>
400221a4:	e59f0024 	ldr	r0, [pc, #36]	; 400221d0 <CyFx3Usb3LnkSetup+0x30>
400221a8:	e580109c 	str	r1, [r0, #156]	; 0x9c
400221ac:	e5801080 	str	r1, [r0, #128]	; 0x80
400221b0:	e59f101c 	ldr	r1, [pc, #28]	; 400221d4 <CyFx3Usb3LnkSetup+0x34>
400221b4:	e5801084 	str	r1, [r0, #132]	; 0x84
400221b8:	e59f1018 	ldr	r1, [pc, #24]	; 400221d8 <CyFx3Usb3LnkSetup+0x38>
400221bc:	e58010c4 	str	r1, [r0, #196]	; 0xc4
400221c0:	e3a0107d 	mov	r1, #125	; 0x7d
400221c4:	e5801078 	str	r1, [r0, #120]	; 0x78
400221c8:	e12fff1e 	bx	lr
400221cc:	00002710 	.word	0x00002710
400221d0:	e0033000 	.word	0xe0033000
400221d4:	00fa004b 	.word	0x00fa004b
400221d8:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

400221dc <CyFx3Usb3SendTP>:
400221dc:	e5902000 	ldr	r2, [r0]
400221e0:	e59f1020 	ldr	r1, [pc, #32]	; 40022208 <CyFx3Usb3SendTP+0x2c>
400221e4:	e5812450 	str	r2, [r1, #1104]	; 0x450
400221e8:	e5902004 	ldr	r2, [r0, #4]
400221ec:	e5812454 	str	r2, [r1, #1108]	; 0x454
400221f0:	e5900008 	ldr	r0, [r0, #8]
400221f4:	e5810458 	str	r0, [r1, #1112]	; 0x458
400221f8:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
400221fc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022200:	e5810460 	str	r0, [r1, #1120]	; 0x460
40022204:	e12fff1e 	bx	lr
40022208:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

4002220c <CyFx3UsbDmaPrefetchEnable>:
4002220c:	e3500000 	cmp	r0, #0
40022210:	e59f001c 	ldr	r0, [pc, #28]	; 40022234 <CyFx3UsbDmaPrefetchEnable+0x28>
40022214:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40022218:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
4002221c:	12811a09 	addne	r1, r1, #36864	; 0x9000
40022220:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40022224:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40022228:	e1811002 	orr	r1, r1, r2
4002222c:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40022230:	e12fff1e 	bx	lr
40022234:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40022238 <CyFx3UsbPowerOn>:
40022238:	e92d4010 	push	{r4, lr}
4002223c:	e59f406c 	ldr	r4, [pc, #108]	; 400222b0 <CyFx3UsbPowerOn+0x78>
40022240:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022244:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022248:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
4002224c:	e3a0000a 	mov	r0, #10
40022250:	ebffca78 	bl	40014c38 <CyFx3BusyWait>
40022254:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022258:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002225c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40022260:	e3a00064 	mov	r0, #100	; 0x64
40022264:	ebffca73 	bl	40014c38 <CyFx3BusyWait>
40022268:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
4002226c:	e3100001 	tst	r0, #1
40022270:	0afffffc 	beq	40022268 <CyFx3UsbPowerOn+0x30>
40022274:	ebffca65 	bl	40014c10 <CyFx3DevIsUsb3Supported>
40022278:	e59f4034 	ldr	r4, [pc, #52]	; 400222b4 <CyFx3UsbPowerOn+0x7c>
4002227c:	e3500000 	cmp	r0, #0
40022280:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40022284:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022288:	03a0000a 	moveq	r0, #10
4002228c:	0bffca69 	bleq	40014c38 <CyFx3BusyWait>
40022290:	ebffca40 	bl	40014b98 <CyFx3DevIsOtgSupported>
40022294:	e3500000 	cmp	r0, #0
40022298:	18bd8010 	popne	{r4, pc}
4002229c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400222a0:	e584080c 	str	r0, [r4, #2060]	; 0x80c
400222a4:	e8bd4010 	pop	{r4, lr}
400222a8:	e3a0000a 	mov	r0, #10
400222ac:	eaffca61 	b	40014c38 <CyFx3BusyWait>
400222b0:	e0037000 	.word	0xe0037000
400222b4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

400222b8 <CyFx3UsbWritePhyReg>:
400222b8:	e59f2084 	ldr	r2, [pc, #132]	; 40022344 <CyFx3UsbWritePhyReg+0x8c>
400222bc:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
400222c0:	e3120901 	tst	r2, #16384	; 0x4000
400222c4:	012fff1e 	bxeq	lr
400222c8:	e59f2078 	ldr	r2, [pc, #120]	; 40022348 <CyFx3UsbWritePhyReg+0x90>
400222cc:	e5820024 	str	r0, [r2, #36]	; 0x24
400222d0:	e3803801 	orr	r3, r0, #65536	; 0x10000
400222d4:	e5823024 	str	r3, [r2, #36]	; 0x24
400222d8:	e5923028 	ldr	r3, [r2, #40]	; 0x28
400222dc:	e3130801 	tst	r3, #65536	; 0x10000
400222e0:	0afffffc 	beq	400222d8 <CyFx3UsbWritePhyReg+0x20>
400222e4:	e5820024 	str	r0, [r2, #36]	; 0x24
400222e8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400222ec:	e3100801 	tst	r0, #65536	; 0x10000
400222f0:	1afffffc 	bne	400222e8 <CyFx3UsbWritePhyReg+0x30>
400222f4:	e5821024 	str	r1, [r2, #36]	; 0x24
400222f8:	e3810802 	orr	r0, r1, #131072	; 0x20000
400222fc:	e5820024 	str	r0, [r2, #36]	; 0x24
40022300:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022304:	e3100801 	tst	r0, #65536	; 0x10000
40022308:	0afffffc 	beq	40022300 <CyFx3UsbWritePhyReg+0x48>
4002230c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022310:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022314:	e3100801 	tst	r0, #65536	; 0x10000
40022318:	1afffffc 	bne	40022310 <CyFx3UsbWritePhyReg+0x58>
4002231c:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022320:	e5820024 	str	r0, [r2, #36]	; 0x24
40022324:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022328:	e3100801 	tst	r0, #65536	; 0x10000
4002232c:	0afffffc 	beq	40022324 <CyFx3UsbWritePhyReg+0x6c>
40022330:	e5821024 	str	r1, [r2, #36]	; 0x24
40022334:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022338:	e3100801 	tst	r0, #65536	; 0x10000
4002233c:	1afffffc 	bne	40022334 <CyFx3UsbWritePhyReg+0x7c>
40022340:	e12fff1e 	bx	lr
40022344:	e0031000 	.word	0xe0031000
40022348:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002234c <CyU3PDmaDscrChainCreate>:
4002234c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022350:	e24dd018 	sub	sp, sp, #24
40022354:	e1a04000 	mov	r4, r0
40022358:	e1a05001 	mov	r5, r1
4002235c:	e1a06002 	mov	r6, r2
40022360:	e1a07003 	mov	r7, r3
40022364:	e3a0a000 	mov	sl, #0
40022368:	eb0000a6 	bl	40022608 <CyU3PDmaDscrGetFreeCount>
4002236c:	e1500005 	cmp	r0, r5
40022370:	aa000002 	bge	40022380 <CyU3PDmaDscrChainCreate+0x34>
40022374:	e3a00010 	mov	r0, #16
40022378:	e28dd018 	add	sp, sp, #24
4002237c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022380:	e3540000 	cmp	r4, #0
40022384:	1a000001 	bne	40022390 <CyU3PDmaDscrChainCreate+0x44>
40022388:	e3a00040 	mov	r0, #64	; 0x40
4002238c:	eafffff9 	b	40022378 <CyU3PDmaDscrChainCreate+0x2c>
40022390:	e3550000 	cmp	r5, #0
40022394:	1a000001 	bne	400223a0 <CyU3PDmaDscrChainCreate+0x54>
40022398:	e3a00040 	mov	r0, #64	; 0x40
4002239c:	eafffff5 	b	40022378 <CyU3PDmaDscrChainCreate+0x2c>
400223a0:	e1a09005 	mov	r9, r5
400223a4:	e1a00004 	mov	r0, r4
400223a8:	eb00005e 	bl	40022528 <CyU3PDmaDscrGet>
400223ac:	e1d480b0 	ldrh	r8, [r4]
400223b0:	ea000029 	b	4002245c <CyU3PDmaDscrChainCreate+0x110>
400223b4:	e3590000 	cmp	r9, #0
400223b8:	0a000002 	beq	400223c8 <CyU3PDmaDscrChainCreate+0x7c>
400223bc:	e28d0014 	add	r0, sp, #20
400223c0:	eb000058 	bl	40022528 <CyU3PDmaDscrGet>
400223c4:	ea000001 	b	400223d0 <CyU3PDmaDscrChainCreate+0x84>
400223c8:	e1d400b0 	ldrh	r0, [r4]
400223cc:	e58d0014 	str	r0, [sp, #20]
400223d0:	e3560000 	cmp	r6, #0
400223d4:	0a000015 	beq	40022430 <CyU3PDmaDscrChainCreate+0xe4>
400223d8:	e35a0000 	cmp	sl, #0
400223dc:	1a000013 	bne	40022430 <CyU3PDmaDscrChainCreate+0xe4>
400223e0:	e1a00006 	mov	r0, r6
400223e4:	ebff865f 	bl	40003d68 <CyU3PDmaBufferAlloc>
400223e8:	e58d0004 	str	r0, [sp, #4]
400223ec:	e59f00a0 	ldr	r0, [pc, #160]	; 40022494 <CyU3PDmaDscrChainCreate+0x148>
400223f0:	e0000006 	and	r0, r0, r6
400223f4:	e58d0010 	str	r0, [sp, #16]
400223f8:	e59d0004 	ldr	r0, [sp, #4]
400223fc:	e3500000 	cmp	r0, #0
40022400:	1a000000 	bne	40022408 <CyU3PDmaDscrChainCreate+0xbc>
40022404:	e3a0a010 	mov	sl, #16
40022408:	e59d0004 	ldr	r0, [sp, #4]
4002240c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022410:	3a000004 	bcc	40022428 <CyU3PDmaDscrChainCreate+0xdc>
40022414:	e59d0004 	ldr	r0, [sp, #4]
40022418:	e0800006 	add	r0, r0, r6
4002241c:	e59f1074 	ldr	r1, [pc, #116]	; 40022498 <CyU3PDmaDscrChainCreate+0x14c>
40022420:	e1500001 	cmp	r0, r1
40022424:	3a000004 	bcc	4002243c <CyU3PDmaDscrChainCreate+0xf0>
40022428:	e3a0a010 	mov	sl, #16
4002242c:	ea000002 	b	4002243c <CyU3PDmaDscrChainCreate+0xf0>
40022430:	e3a00000 	mov	r0, #0
40022434:	e58d0004 	str	r0, [sp, #4]
40022438:	e58d0010 	str	r0, [sp, #16]
4002243c:	e58d7008 	str	r7, [sp, #8]
40022440:	e1dd01b4 	ldrh	r0, [sp, #20]
40022444:	e1800800 	orr	r0, r0, r0, lsl #16
40022448:	e58d000c 	str	r0, [sp, #12]
4002244c:	e28d1004 	add	r1, sp, #4
40022450:	e1a00008 	mov	r0, r8
40022454:	eb0000c6 	bl	40022774 <CyU3PDmaDscrSetConfig>
40022458:	e1dd81b4 	ldrh	r8, [sp, #20]
4002245c:	e1b00009 	movs	r0, r9
40022460:	e2491001 	sub	r1, r9, #1
40022464:	e1a09801 	lsl	r9, r1, #16
40022468:	e1a09829 	lsr	r9, r9, #16
4002246c:	1affffd0 	bne	400223b4 <CyU3PDmaDscrChainCreate+0x68>
40022470:	e35a0000 	cmp	sl, #0
40022474:	0a000004 	beq	4002248c <CyU3PDmaDscrChainCreate+0x140>
40022478:	e1d400b0 	ldrh	r0, [r4]
4002247c:	e3a03001 	mov	r3, #1
40022480:	e1a02003 	mov	r2, r3
40022484:	e1a01005 	mov	r1, r5
40022488:	eb000003 	bl	4002249c <CyU3PDmaDscrChainDestroy>
4002248c:	e1a0000a 	mov	r0, sl
40022490:	eaffffb8 	b	40022378 <CyU3PDmaDscrChainCreate+0x2c>
40022494:	0000fff0 	.word	0x0000fff0
40022498:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

4002249c <CyU3PDmaDscrChainDestroy>:
4002249c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400224a0:	e1a04000 	mov	r4, r0
400224a4:	e1a05001 	mov	r5, r1
400224a8:	e1a06002 	mov	r6, r2
400224ac:	e1a07003 	mov	r7, r3
400224b0:	ea000015 	b	4002250c <CyU3PDmaDscrChainDestroy+0x70>
400224b4:	e1a0100d 	mov	r1, sp
400224b8:	e1a00004 	mov	r0, r4
400224bc:	eb000091 	bl	40022708 <CyU3PDmaDscrGetConfig>
400224c0:	e3570000 	cmp	r7, #0
400224c4:	0a000004 	beq	400224dc <CyU3PDmaDscrChainDestroy+0x40>
400224c8:	e59d0000 	ldr	r0, [sp]
400224cc:	e3500000 	cmp	r0, #0
400224d0:	0a000001 	beq	400224dc <CyU3PDmaDscrChainDestroy+0x40>
400224d4:	e59d0000 	ldr	r0, [sp]
400224d8:	ebff8685 	bl	40003ef4 <CyU3PDmaBufferFree>
400224dc:	e3560000 	cmp	r6, #0
400224e0:	0a000003 	beq	400224f4 <CyU3PDmaDscrChainDestroy+0x58>
400224e4:	e59d0008 	ldr	r0, [sp, #8]
400224e8:	e59f1034 	ldr	r1, [pc, #52]	; 40022524 <CyU3PDmaDscrChainDestroy+0x88>
400224ec:	e0018820 	and	r8, r1, r0, lsr #16
400224f0:	ea000002 	b	40022500 <CyU3PDmaDscrChainDestroy+0x64>
400224f4:	e59d0008 	ldr	r0, [sp, #8]
400224f8:	e1a08800 	lsl	r8, r0, #16
400224fc:	e1a08828 	lsr	r8, r8, #16
40022500:	e1a00004 	mov	r0, r4
40022504:	eb000058 	bl	4002266c <CyU3PDmaDscrPut>
40022508:	e1a04008 	mov	r4, r8
4002250c:	e1b00005 	movs	r0, r5
40022510:	e2451001 	sub	r1, r5, #1
40022514:	e1a05801 	lsl	r5, r1, #16
40022518:	e1a05825 	lsr	r5, r5, #16
4002251c:	1affffe4 	bne	400224b4 <CyU3PDmaDscrChainDestroy+0x18>
40022520:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40022524:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022528 <CyU3PDmaDscrGet>:
40022528:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002252c:	e1a04000 	mov	r4, r0
40022530:	e3a08000 	mov	r8, #0
40022534:	e3540000 	cmp	r4, #0
40022538:	1a000001 	bne	40022544 <CyU3PDmaDscrGet+0x1c>
4002253c:	e3a00040 	mov	r0, #64	; 0x40
40022540:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022544:	e3e01000 	mvn	r1, #0
40022548:	e59f00ac 	ldr	r0, [pc, #172]	; 400225fc <CyU3PDmaDscrGet+0xd4>
4002254c:	ebff9ecc 	bl	4000a084 <_txe_mutex_get>
40022550:	e59f00a8 	ldr	r0, [pc, #168]	; 40022600 <CyU3PDmaDscrGet+0xd8>
40022554:	e1d000b0 	ldrh	r0, [r0]
40022558:	e3500000 	cmp	r0, #0
4002255c:	0a000022 	beq	400225ec <CyU3PDmaDscrGet+0xc4>
40022560:	e3a06000 	mov	r6, #0
40022564:	ea00001e 	b	400225e4 <CyU3PDmaDscrGet+0xbc>
40022568:	e59f0094 	ldr	r0, [pc, #148]	; 40022604 <CyU3PDmaDscrGet+0xdc>
4002256c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022570:	e3750001 	cmn	r5, #1
40022574:	0a000017 	beq	400225d8 <CyU3PDmaDscrGet+0xb0>
40022578:	e3a07001 	mov	r7, #1
4002257c:	ea000012 	b	400225cc <CyU3PDmaDscrGet+0xa4>
40022580:	e1150007 	tst	r5, r7
40022584:	1a00000d 	bne	400225c0 <CyU3PDmaDscrGet+0x98>
40022588:	e1850007 	orr	r0, r5, r7
4002258c:	e59f1070 	ldr	r1, [pc, #112]	; 40022604 <CyU3PDmaDscrGet+0xdc>
40022590:	e7810106 	str	r0, [r1, r6, lsl #2]
40022594:	e2410004 	sub	r0, r1, #4
40022598:	e1c080b2 	strh	r8, [r0, #2]
4002259c:	e1d000b0 	ldrh	r0, [r0]
400225a0:	e2400001 	sub	r0, r0, #1
400225a4:	e2411004 	sub	r1, r1, #4
400225a8:	e1c100b0 	strh	r0, [r1]
400225ac:	e1c480b0 	strh	r8, [r4]
400225b0:	e2810044 	add	r0, r1, #68	; 0x44
400225b4:	ebff9ee7 	bl	4000a158 <_txe_mutex_put>
400225b8:	e3a00000 	mov	r0, #0
400225bc:	eaffffdf 	b	40022540 <CyU3PDmaDscrGet+0x18>
400225c0:	e1a07087 	lsl	r7, r7, #1
400225c4:	e2880001 	add	r0, r8, #1
400225c8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400225cc:	e3570000 	cmp	r7, #0
400225d0:	1affffea 	bne	40022580 <CyU3PDmaDscrGet+0x58>
400225d4:	ea000001 	b	400225e0 <CyU3PDmaDscrGet+0xb8>
400225d8:	e2880020 	add	r0, r8, #32
400225dc:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400225e0:	e2866001 	add	r6, r6, #1
400225e4:	e3560010 	cmp	r6, #16
400225e8:	3affffde 	bcc	40022568 <CyU3PDmaDscrGet+0x40>
400225ec:	e59f0008 	ldr	r0, [pc, #8]	; 400225fc <CyU3PDmaDscrGet+0xd4>
400225f0:	ebff9ed8 	bl	4000a158 <_txe_mutex_put>
400225f4:	e3a0004a 	mov	r0, #74	; 0x4a
400225f8:	eaffffd0 	b	40022540 <CyU3PDmaDscrGet+0x18>
400225fc:	40032bbc 	.word	0x40032bbc
40022600:	40032b78 	.word	0x40032b78
40022604:	40032b7c 	.word	0x40032b7c

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022608 <CyU3PDmaDscrGetFreeCount>:
40022608:	e59f0004 	ldr	r0, [pc, #4]	; 40022614 <CyU3PDmaDscrGetFreeCount+0xc>
4002260c:	e1d000b0 	ldrh	r0, [r0]
40022610:	e12fff1e 	bx	lr
40022614:	40032b78 	.word	0x40032b78

Disassembly of section i.CyU3PDmaDscrListCreate:

40022618 <CyU3PDmaDscrListCreate>:
40022618:	e92d4010 	push	{r4, lr}
4002261c:	e3a02040 	mov	r2, #64	; 0x40
40022620:	e3a01000 	mov	r1, #0
40022624:	e59f0034 	ldr	r0, [pc, #52]	; 40022660 <CyU3PDmaDscrListCreate+0x48>
40022628:	ebff8422 	bl	400036b8 <CyU3PMemSet>
4002262c:	e3a00001 	mov	r0, #1
40022630:	e59f102c 	ldr	r1, [pc, #44]	; 40022664 <CyU3PDmaDscrListCreate+0x4c>
40022634:	e5810004 	str	r0, [r1, #4]
40022638:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
4002263c:	e1c100b0 	strh	r0, [r1]
40022640:	e3a00001 	mov	r0, #1
40022644:	e1c100b2 	strh	r0, [r1, #2]
40022648:	e3a03038 	mov	r3, #56	; 0x38
4002264c:	e3a02000 	mov	r2, #0
40022650:	e1a01002 	mov	r1, r2
40022654:	e59f000c 	ldr	r0, [pc, #12]	; 40022668 <CyU3PDmaDscrListCreate+0x50>
40022658:	ebff9e0b 	bl	40009e8c <_txe_mutex_create>
4002265c:	e8bd8010 	pop	{r4, pc}
40022660:	40032b7c 	.word	0x40032b7c
40022664:	40032b78 	.word	0x40032b78
40022668:	40032bbc 	.word	0x40032bbc

Disassembly of section i.CyU3PDmaDscrPut:

4002266c <CyU3PDmaDscrPut>:
4002266c:	e92d4070 	push	{r4, r5, r6, lr}
40022670:	e1a04000 	mov	r4, r0
40022674:	e3540c02 	cmp	r4, #512	; 0x200
40022678:	aa000001 	bge	40022684 <CyU3PDmaDscrPut+0x18>
4002267c:	e3540000 	cmp	r4, #0
40022680:	1a000001 	bne	4002268c <CyU3PDmaDscrPut+0x20>
40022684:	e3a00040 	mov	r0, #64	; 0x40
40022688:	e8bd8070 	pop	{r4, r5, r6, pc}
4002268c:	e3e01000 	mvn	r1, #0
40022690:	e59f0064 	ldr	r0, [pc, #100]	; 400226fc <CyU3PDmaDscrPut+0x90>
40022694:	ebff9e7a 	bl	4000a084 <_txe_mutex_get>
40022698:	e1a00004 	mov	r0, r4
4002269c:	e1a01fc4 	asr	r1, r4, #31
400226a0:	e0841da1 	add	r1, r4, r1, lsr #27
400226a4:	e1a062c1 	asr	r6, r1, #5
400226a8:	e59f0050 	ldr	r0, [pc, #80]	; 40022700 <CyU3PDmaDscrPut+0x94>
400226ac:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400226b0:	e1a00004 	mov	r0, r4
400226b4:	e1a01fc4 	asr	r1, r4, #31
400226b8:	e0841da1 	add	r1, r4, r1, lsr #27
400226bc:	e1a012c1 	asr	r1, r1, #5
400226c0:	e0441281 	sub	r1, r4, r1, lsl #5
400226c4:	e3a02001 	mov	r2, #1
400226c8:	e1c55112 	bic	r5, r5, r2, lsl r1
400226cc:	e59f002c 	ldr	r0, [pc, #44]	; 40022700 <CyU3PDmaDscrPut+0x94>
400226d0:	e7805106 	str	r5, [r0, r6, lsl #2]
400226d4:	e2400004 	sub	r0, r0, #4
400226d8:	e1d000b0 	ldrh	r0, [r0]
400226dc:	e2800001 	add	r0, r0, #1
400226e0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400226e4:	e59f1018 	ldr	r1, [pc, #24]	; 40022704 <CyU3PDmaDscrPut+0x98>
400226e8:	e1c100b0 	strh	r0, [r1]
400226ec:	e2810044 	add	r0, r1, #68	; 0x44
400226f0:	ebff9e98 	bl	4000a158 <_txe_mutex_put>
400226f4:	e3a00000 	mov	r0, #0
400226f8:	eaffffe2 	b	40022688 <CyU3PDmaDscrPut+0x1c>
400226fc:	40032bbc 	.word	0x40032bbc
40022700:	40032b7c 	.word	0x40032b7c
40022704:	40032b78 	.word	0x40032b78

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022708 <CyU3PDmaDscrGetConfig>:
40022708:	e92d4070 	push	{r4, r5, r6, lr}
4002270c:	e1a05000 	mov	r5, r0
40022710:	e1a04001 	mov	r4, r1
40022714:	e3550c02 	cmp	r5, #512	; 0x200
40022718:	aa000001 	bge	40022724 <CyU3PDmaDscrGetConfig+0x1c>
4002271c:	e3550000 	cmp	r5, #0
40022720:	1a000001 	bne	4002272c <CyU3PDmaDscrGetConfig+0x24>
40022724:	e3a00040 	mov	r0, #64	; 0x40
40022728:	e8bd8070 	pop	{r4, r5, r6, pc}
4002272c:	e3540000 	cmp	r4, #0
40022730:	1a000001 	bne	4002273c <CyU3PDmaDscrGetConfig+0x34>
40022734:	e3a00040 	mov	r0, #64	; 0x40
40022738:	eafffffa 	b	40022728 <CyU3PDmaDscrGetConfig+0x20>
4002273c:	e59f102c 	ldr	r1, [pc, #44]	; 40022770 <CyU3PDmaDscrGetConfig+0x68>
40022740:	e5911000 	ldr	r1, [r1]
40022744:	e0810205 	add	r0, r1, r5, lsl #4
40022748:	e3a01010 	mov	r1, #16
4002274c:	ebffbea5 	bl	400121e8 <CyU3PSysClearDRegion>
40022750:	ebffc119 	bl	40012bbc <CyU3PSysBarrierSync>
40022754:	e59f0014 	ldr	r0, [pc, #20]	; 40022770 <CyU3PDmaDscrGetConfig+0x68>
40022758:	e5900000 	ldr	r0, [r0]
4002275c:	e0800205 	add	r0, r0, r5, lsl #4
40022760:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022764:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022768:	e3a00000 	mov	r0, #0
4002276c:	eaffffed 	b	40022728 <CyU3PDmaDscrGetConfig+0x20>
40022770:	4003124c 	.word	0x4003124c

Disassembly of section i.CyU3PDmaDscrSetConfig:

40022774 <CyU3PDmaDscrSetConfig>:
40022774:	e92d4070 	push	{r4, r5, r6, lr}
40022778:	e1a04000 	mov	r4, r0
4002277c:	e1a05001 	mov	r5, r1
40022780:	e3540c02 	cmp	r4, #512	; 0x200
40022784:	aa000001 	bge	40022790 <CyU3PDmaDscrSetConfig+0x1c>
40022788:	e3540000 	cmp	r4, #0
4002278c:	1a000001 	bne	40022798 <CyU3PDmaDscrSetConfig+0x24>
40022790:	e3a00040 	mov	r0, #64	; 0x40
40022794:	e8bd8070 	pop	{r4, r5, r6, pc}
40022798:	e3550000 	cmp	r5, #0
4002279c:	1a000001 	bne	400227a8 <CyU3PDmaDscrSetConfig+0x34>
400227a0:	e3a00040 	mov	r0, #64	; 0x40
400227a4:	eafffffa 	b	40022794 <CyU3PDmaDscrSetConfig+0x20>
400227a8:	e59f002c 	ldr	r0, [pc, #44]	; 400227dc <CyU3PDmaDscrSetConfig+0x68>
400227ac:	e5900000 	ldr	r0, [r0]
400227b0:	e0800204 	add	r0, r0, r4, lsl #4
400227b4:	e895004e 	ldm	r5, {r1, r2, r3, r6}
400227b8:	e880004e 	stm	r0, {r1, r2, r3, r6}
400227bc:	e59f1018 	ldr	r1, [pc, #24]	; 400227dc <CyU3PDmaDscrSetConfig+0x68>
400227c0:	e5911000 	ldr	r1, [r1]
400227c4:	e0810204 	add	r0, r1, r4, lsl #4
400227c8:	e3a01010 	mov	r1, #16
400227cc:	ebffbe85 	bl	400121e8 <CyU3PSysClearDRegion>
400227d0:	ebffc0f9 	bl	40012bbc <CyU3PSysBarrierSync>
400227d4:	e3a00000 	mov	r0, #0
400227d8:	eaffffed 	b	40022794 <CyU3PDmaDscrSetConfig+0x20>
400227dc:	4003124c 	.word	0x4003124c

Disassembly of section i.CyU3PDmaIntHandler:

400227e0 <CyU3PDmaIntHandler>:
400227e0:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400227e4:	e1a04000 	mov	r4, r0
400227e8:	e1a05001 	mov	r5, r1
400227ec:	e204003f 	and	r0, r4, #63	; 0x3f
400227f0:	e1857400 	orr	r7, r5, r0, lsl #8
400227f4:	e59f0150 	ldr	r0, [pc, #336]	; 4002294c <CyU3PDmaIntHandler+0x16c>
400227f8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400227fc:	e0800385 	add	r0, r0, r5, lsl #7
40022800:	e5900010 	ldr	r0, [r0, #16]
40022804:	e59f1140 	ldr	r1, [pc, #320]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022808:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002280c:	e0811385 	add	r1, r1, r5, lsl #7
40022810:	e5911014 	ldr	r1, [r1, #20]
40022814:	e0009001 	and	r9, r0, r1
40022818:	e59f0130 	ldr	r0, [pc, #304]	; 40022950 <CyU3PDmaIntHandler+0x170>
4002281c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022820:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022824:	e3560000 	cmp	r6, #0
40022828:	0a000038 	beq	40022910 <CyU3PDmaIntHandler+0x130>
4002282c:	e1a00000 	nop			; (mov r0, r0)
40022830:	e59f0114 	ldr	r0, [pc, #276]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022834:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022838:	e0800385 	add	r0, r0, r5, lsl #7
4002283c:	e5900010 	ldr	r0, [r0, #16]
40022840:	e59f1104 	ldr	r1, [pc, #260]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022844:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022848:	e0811385 	add	r1, r1, r5, lsl #7
4002284c:	e5911014 	ldr	r1, [r1, #20]
40022850:	e0000001 	and	r0, r0, r1
40022854:	e1899000 	orr	r9, r9, r0
40022858:	e2098e12 	and	r8, r9, #288	; 0x120
4002285c:	e59f00e8 	ldr	r0, [pc, #232]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022860:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022864:	e0800385 	add	r0, r0, r5, lsl #7
40022868:	e5900014 	ldr	r0, [r0, #20]
4002286c:	e1c00008 	bic	r0, r0, r8
40022870:	e59f10d4 	ldr	r1, [pc, #212]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022874:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022878:	e0811385 	add	r1, r1, r5, lsl #7
4002287c:	e5810014 	str	r0, [r1, #20]
40022880:	e1c90008 	bic	r0, r9, r8
40022884:	e59f10c0 	ldr	r1, [pc, #192]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022888:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002288c:	e0811385 	add	r1, r1, r5, lsl #7
40022890:	e5810010 	str	r0, [r1, #16]
40022894:	e59f00b0 	ldr	r0, [pc, #176]	; 4002294c <CyU3PDmaIntHandler+0x16c>
40022898:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002289c:	e7900385 	ldr	r0, [r0, r5, lsl #7]
400228a0:	e1a00800 	lsl	r0, r0, #16
400228a4:	e1a00820 	lsr	r0, r0, #16
400228a8:	e58d000c 	str	r0, [sp, #12]
400228ac:	e59f0098 	ldr	r0, [pc, #152]	; 4002294c <CyU3PDmaIntHandler+0x16c>
400228b0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400228b4:	e0800385 	add	r0, r0, r5, lsl #7
400228b8:	e5900010 	ldr	r0, [r0, #16]
400228bc:	e59f1088 	ldr	r1, [pc, #136]	; 4002294c <CyU3PDmaIntHandler+0x16c>
400228c0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400228c4:	e0811385 	add	r1, r1, r5, lsl #7
400228c8:	e5911014 	ldr	r1, [r1, #20]
400228cc:	e0008001 	and	r8, r0, r1
400228d0:	e3580000 	cmp	r8, #0
400228d4:	1affffd5 	bne	40022830 <CyU3PDmaIntHandler+0x50>
400228d8:	e3a00901 	mov	r0, #16384	; 0x4000
400228dc:	e58d0000 	str	r0, [sp]
400228e0:	e59d0000 	ldr	r0, [sp]
400228e4:	e58d0000 	str	r0, [sp]
400228e8:	e59d0000 	ldr	r0, [sp]
400228ec:	e1800807 	orr	r0, r0, r7, lsl #16
400228f0:	e58d0000 	str	r0, [sp]
400228f4:	e58d6004 	str	r6, [sp, #4]
400228f8:	e58d9008 	str	r9, [sp, #8]
400228fc:	e3a02000 	mov	r2, #0
40022900:	e1a01002 	mov	r1, r2
40022904:	e1a0000d 	mov	r0, sp
40022908:	ebffe060 	bl	4001aa90 <CyU3PDmaMsgSend>
4002290c:	ea00000d 	b	40022948 <CyU3PDmaIntHandler+0x168>
40022910:	e59f003c 	ldr	r0, [pc, #60]	; 40022954 <CyU3PDmaIntHandler+0x174>
40022914:	e5900000 	ldr	r0, [r0]
40022918:	e3500000 	cmp	r0, #0
4002291c:	0a000005 	beq	40022938 <CyU3PDmaIntHandler+0x158>
40022920:	e1a01009 	mov	r1, r9
40022924:	e1a00007 	mov	r0, r7
40022928:	e59f2024 	ldr	r2, [pc, #36]	; 40022954 <CyU3PDmaIntHandler+0x174>
4002292c:	e5922000 	ldr	r2, [r2]
40022930:	e12fff32 	blx	r2
40022934:	ea000003 	b	40022948 <CyU3PDmaIntHandler+0x168>
40022938:	e59f000c 	ldr	r0, [pc, #12]	; 4002294c <CyU3PDmaIntHandler+0x16c>
4002293c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022940:	e0800385 	add	r0, r0, r5, lsl #7
40022944:	e5809010 	str	r9, [r0, #16]
40022948:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4002294c:	40031164 	.word	0x40031164
40022950:	4003118c 	.word	0x4003118c
40022954:	40031160 	.word	0x40031160

Disassembly of section i.CyU3PGpioInit:

40022958 <CyU3PGpioInit>:
40022958:	e92d4070 	push	{r4, r5, r6, lr}
4002295c:	e1a04000 	mov	r4, r0
40022960:	e1a06001 	mov	r6, r1
40022964:	e59f00fc 	ldr	r0, [pc, #252]	; 40022a68 <CyU3PGpioInit+0x110>
40022968:	e5900000 	ldr	r0, [r0]
4002296c:	e3500000 	cmp	r0, #0
40022970:	0a000001 	beq	4002297c <CyU3PGpioInit+0x24>
40022974:	e3a00043 	mov	r0, #67	; 0x43
40022978:	e8bd8070 	pop	{r4, r5, r6, pc}
4002297c:	e3540000 	cmp	r4, #0
40022980:	1a000001 	bne	4002298c <CyU3PGpioInit+0x34>
40022984:	e3a00041 	mov	r0, #65	; 0x41
40022988:	eafffffa 	b	40022978 <CyU3PGpioInit+0x20>
4002298c:	e1a00006 	mov	r0, r6
40022990:	eb00013b 	bl	40022e84 <CyU3PRegisterGpioCallBack>
40022994:	ebffc552 	bl	40013ee4 <CyU3PLppGpioBlockIsOn>
40022998:	e3500000 	cmp	r0, #0
4002299c:	0a000003 	beq	400229b0 <CyU3PGpioInit+0x58>
400229a0:	e59f00c4 	ldr	r0, [pc, #196]	; 40022a6c <CyU3PGpioInit+0x114>
400229a4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400229a8:	e3100001 	tst	r0, #1
400229ac:	1a000020 	bne	40022a34 <CyU3PGpioInit+0xdc>
400229b0:	e1a00004 	mov	r0, r4
400229b4:	ebffc4a8 	bl	40013c5c <CyU3PGpioSetClock>
400229b8:	e1a05000 	mov	r5, r0
400229bc:	e3550000 	cmp	r5, #0
400229c0:	0a000001 	beq	400229cc <CyU3PGpioInit+0x74>
400229c4:	e1a00005 	mov	r0, r5
400229c8:	eaffffea 	b	40022978 <CyU3PGpioInit+0x20>
400229cc:	e59f109c 	ldr	r1, [pc, #156]	; 40022a70 <CyU3PGpioInit+0x118>
400229d0:	e3a00004 	mov	r0, #4
400229d4:	ebffc546 	bl	40013ef4 <CyU3PLppInit>
400229d8:	e1a05000 	mov	r5, r0
400229dc:	e3550000 	cmp	r5, #0
400229e0:	0a000001 	beq	400229ec <CyU3PGpioInit+0x94>
400229e4:	e1a00005 	mov	r0, r5
400229e8:	eaffffe2 	b	40022978 <CyU3PGpioInit+0x20>
400229ec:	e59f0078 	ldr	r0, [pc, #120]	; 40022a6c <CyU3PGpioInit+0x114>
400229f0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400229f4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400229f8:	e59f106c 	ldr	r1, [pc, #108]	; 40022a6c <CyU3PGpioInit+0x114>
400229fc:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022a00:	e3a0000a 	mov	r0, #10
40022a04:	ebffc33e 	bl	40013704 <CyU3PBusyWait>
40022a08:	e59f005c 	ldr	r0, [pc, #92]	; 40022a6c <CyU3PGpioInit+0x114>
40022a0c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022a10:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022a14:	e59f1050 	ldr	r1, [pc, #80]	; 40022a6c <CyU3PGpioInit+0x114>
40022a18:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022a1c:	e1a00000 	nop			; (mov r0, r0)
40022a20:	e59f0044 	ldr	r0, [pc, #68]	; 40022a6c <CyU3PGpioInit+0x114>
40022a24:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022a28:	e3100001 	tst	r0, #1
40022a2c:	0afffffb 	beq	40022a20 <CyU3PGpioInit+0xc8>
40022a30:	ea000007 	b	40022a54 <CyU3PGpioInit+0xfc>
40022a34:	e59f1034 	ldr	r1, [pc, #52]	; 40022a70 <CyU3PGpioInit+0x118>
40022a38:	e3a00004 	mov	r0, #4
40022a3c:	ebffc52c 	bl	40013ef4 <CyU3PLppInit>
40022a40:	e1a05000 	mov	r5, r0
40022a44:	e3550000 	cmp	r5, #0
40022a48:	0a000001 	beq	40022a54 <CyU3PGpioInit+0xfc>
40022a4c:	e1a00005 	mov	r0, r5
40022a50:	eaffffc8 	b	40022978 <CyU3PGpioInit+0x20>
40022a54:	e3a00001 	mov	r0, #1
40022a58:	e59f1008 	ldr	r1, [pc, #8]	; 40022a68 <CyU3PGpioInit+0x110>
40022a5c:	e5810000 	str	r0, [r1]
40022a60:	e3a00000 	mov	r0, #0
40022a64:	eaffffc3 	b	40022978 <CyU3PGpioInit+0x20>
40022a68:	40031364 	.word	0x40031364
40022a6c:	e0001000 	.word	0xe0001000
40022a70:	40022a74 	.word	0x40022a74

Disassembly of section i.CyU3PGpioInt_Handler:

40022a74 <CyU3PGpioInt_Handler>:
40022a74:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022a78:	e3a06000 	mov	r6, #0
40022a7c:	e3a05000 	mov	r5, #0
40022a80:	e3a04001 	mov	r4, #1
40022a84:	ea000029 	b	40022b30 <CyU3PGpioInt_Handler+0xbc>
40022a88:	e59f0198 	ldr	r0, [pc, #408]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022a8c:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022a90:	e1100004 	tst	r0, r4
40022a94:	0a000021 	beq	40022b20 <CyU3PGpioInt_Handler+0xac>
40022a98:	e59f0188 	ldr	r0, [pc, #392]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022a9c:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022aa0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022aa4:	e59f117c 	ldr	r1, [pc, #380]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022aa8:	e7810205 	str	r0, [r1, r5, lsl #4]
40022aac:	e59f0178 	ldr	r0, [pc, #376]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022ab0:	e5900000 	ldr	r0, [r0]
40022ab4:	e3500000 	cmp	r0, #0
40022ab8:	0a000018 	beq	40022b20 <CyU3PGpioInt_Handler+0xac>
40022abc:	e1a06005 	mov	r6, r5
40022ac0:	e1a07005 	mov	r7, r5
40022ac4:	ea00000e 	b	40022b04 <CyU3PGpioInt_Handler+0x90>
40022ac8:	e1a00007 	mov	r0, r7
40022acc:	ebffc098 	bl	40012d34 <CyU3PIsGpioComplexIOConfigured>
40022ad0:	e3500000 	cmp	r0, #0
40022ad4:	0a000001 	beq	40022ae0 <CyU3PGpioInt_Handler+0x6c>
40022ad8:	e1a06007 	mov	r6, r7
40022adc:	ea00000a 	b	40022b0c <CyU3PGpioInt_Handler+0x98>
40022ae0:	e2870020 	add	r0, r7, #32
40022ae4:	ebffc092 	bl	40012d34 <CyU3PIsGpioComplexIOConfigured>
40022ae8:	e3500000 	cmp	r0, #0
40022aec:	0a000002 	beq	40022afc <CyU3PGpioInt_Handler+0x88>
40022af0:	e2870020 	add	r0, r7, #32
40022af4:	e20060ff 	and	r6, r0, #255	; 0xff
40022af8:	ea000003 	b	40022b0c <CyU3PGpioInt_Handler+0x98>
40022afc:	e2870008 	add	r0, r7, #8
40022b00:	e20070ff 	and	r7, r0, #255	; 0xff
40022b04:	e3570020 	cmp	r7, #32
40022b08:	baffffee 	blt	40022ac8 <CyU3PGpioInt_Handler+0x54>
40022b0c:	e1a00000 	nop			; (mov r0, r0)
40022b10:	e1a00006 	mov	r0, r6
40022b14:	e59f1110 	ldr	r1, [pc, #272]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022b18:	e5911000 	ldr	r1, [r1]
40022b1c:	e12fff31 	blx	r1
40022b20:	e59f0108 	ldr	r0, [pc, #264]	; 40022c30 <CyU3PGpioInt_Handler+0x1bc>
40022b24:	e0004084 	and	r4, r0, r4, lsl #1
40022b28:	e2850001 	add	r0, r5, #1
40022b2c:	e20050ff 	and	r5, r0, #255	; 0xff
40022b30:	e3540080 	cmp	r4, #128	; 0x80
40022b34:	9affffd3 	bls	40022a88 <CyU3PGpioInt_Handler+0x14>
40022b38:	e59f00e8 	ldr	r0, [pc, #232]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022b3c:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022b40:	e3500000 	cmp	r0, #0
40022b44:	0a000017 	beq	40022ba8 <CyU3PGpioInt_Handler+0x134>
40022b48:	e3a05000 	mov	r5, #0
40022b4c:	ea000013 	b	40022ba0 <CyU3PGpioInt_Handler+0x12c>
40022b50:	e59f00d0 	ldr	r0, [pc, #208]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022b54:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022b58:	e3a01001 	mov	r1, #1
40022b5c:	e1100511 	tst	r0, r1, lsl r5
40022b60:	0a00000c 	beq	40022b98 <CyU3PGpioInt_Handler+0x124>
40022b64:	e59f00c8 	ldr	r0, [pc, #200]	; 40022c34 <CyU3PGpioInt_Handler+0x1c0>
40022b68:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022b6c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022b70:	e59f10bc 	ldr	r1, [pc, #188]	; 40022c34 <CyU3PGpioInt_Handler+0x1c0>
40022b74:	e7810105 	str	r0, [r1, r5, lsl #2]
40022b78:	e59f00ac 	ldr	r0, [pc, #172]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022b7c:	e5900000 	ldr	r0, [r0]
40022b80:	e3500000 	cmp	r0, #0
40022b84:	0a000003 	beq	40022b98 <CyU3PGpioInt_Handler+0x124>
40022b88:	e1a00005 	mov	r0, r5
40022b8c:	e59f1098 	ldr	r1, [pc, #152]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022b90:	e5911000 	ldr	r1, [r1]
40022b94:	e12fff31 	blx	r1
40022b98:	e2850001 	add	r0, r5, #1
40022b9c:	e20050ff 	and	r5, r0, #255	; 0xff
40022ba0:	e3550020 	cmp	r5, #32
40022ba4:	baffffe9 	blt	40022b50 <CyU3PGpioInt_Handler+0xdc>
40022ba8:	e59f0078 	ldr	r0, [pc, #120]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022bac:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022bb0:	e3500000 	cmp	r0, #0
40022bb4:	0a00001a 	beq	40022c24 <CyU3PGpioInt_Handler+0x1b0>
40022bb8:	e3a05000 	mov	r5, #0
40022bbc:	ea000016 	b	40022c1c <CyU3PGpioInt_Handler+0x1a8>
40022bc0:	e59f0060 	ldr	r0, [pc, #96]	; 40022c28 <CyU3PGpioInt_Handler+0x1b4>
40022bc4:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022bc8:	e3a01001 	mov	r1, #1
40022bcc:	e1100511 	tst	r0, r1, lsl r5
40022bd0:	0a00000f 	beq	40022c14 <CyU3PGpioInt_Handler+0x1a0>
40022bd4:	e59f0058 	ldr	r0, [pc, #88]	; 40022c34 <CyU3PGpioInt_Handler+0x1c0>
40022bd8:	e2851020 	add	r1, r5, #32
40022bdc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022be0:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022be4:	e59f0048 	ldr	r0, [pc, #72]	; 40022c34 <CyU3PGpioInt_Handler+0x1c0>
40022be8:	e2852020 	add	r2, r5, #32
40022bec:	e7801102 	str	r1, [r0, r2, lsl #2]
40022bf0:	e59f0034 	ldr	r0, [pc, #52]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022bf4:	e5900000 	ldr	r0, [r0]
40022bf8:	e3500000 	cmp	r0, #0
40022bfc:	0a000004 	beq	40022c14 <CyU3PGpioInt_Handler+0x1a0>
40022c00:	e2851020 	add	r1, r5, #32
40022c04:	e20100ff 	and	r0, r1, #255	; 0xff
40022c08:	e59f101c 	ldr	r1, [pc, #28]	; 40022c2c <CyU3PGpioInt_Handler+0x1b8>
40022c0c:	e5911000 	ldr	r1, [r1]
40022c10:	e12fff31 	blx	r1
40022c14:	e2850001 	add	r0, r5, #1
40022c18:	e20050ff 	and	r5, r0, #255	; 0xff
40022c1c:	e3550020 	cmp	r5, #32
40022c20:	baffffe6 	blt	40022bc0 <CyU3PGpioInt_Handler+0x14c>
40022c24:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022c28:	e0001000 	.word	0xe0001000
40022c2c:	40031368 	.word	0x40031368
40022c30:	0000ffff 	.word	0x0000ffff
40022c34:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022c38 <CyU3PGpioSetSimpleConfig>:
40022c38:	e92d4070 	push	{r4, r5, r6, lr}
40022c3c:	e1a04000 	mov	r4, r0
40022c40:	e1a05001 	mov	r5, r1
40022c44:	e3a06000 	mov	r6, #0
40022c48:	e59f00d0 	ldr	r0, [pc, #208]	; 40022d20 <CyU3PGpioSetSimpleConfig+0xe8>
40022c4c:	e5900000 	ldr	r0, [r0]
40022c50:	e3500000 	cmp	r0, #0
40022c54:	1a000001 	bne	40022c60 <CyU3PGpioSetSimpleConfig+0x28>
40022c58:	e3a00042 	mov	r0, #66	; 0x42
40022c5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022c60:	e1a00004 	mov	r0, r4
40022c64:	ebffc03e 	bl	40012d64 <CyU3PIsGpioValid>
40022c68:	e3500000 	cmp	r0, #0
40022c6c:	1a000001 	bne	40022c78 <CyU3PGpioSetSimpleConfig+0x40>
40022c70:	e3a00040 	mov	r0, #64	; 0x40
40022c74:	eafffff8 	b	40022c5c <CyU3PGpioSetSimpleConfig+0x24>
40022c78:	e3550000 	cmp	r5, #0
40022c7c:	1a000001 	bne	40022c88 <CyU3PGpioSetSimpleConfig+0x50>
40022c80:	e3a00041 	mov	r0, #65	; 0x41
40022c84:	eafffff4 	b	40022c5c <CyU3PGpioSetSimpleConfig+0x24>
40022c88:	e5d50010 	ldrb	r0, [r5, #16]
40022c8c:	e3500005 	cmp	r0, #5
40022c90:	da000001 	ble	40022c9c <CyU3PGpioSetSimpleConfig+0x64>
40022c94:	e3a00040 	mov	r0, #64	; 0x40
40022c98:	eaffffef 	b	40022c5c <CyU3PGpioSetSimpleConfig+0x24>
40022c9c:	e1a00004 	mov	r0, r4
40022ca0:	ebffc029 	bl	40012d4c <CyU3PIsGpioSimpleIOConfigured>
40022ca4:	e3500000 	cmp	r0, #0
40022ca8:	1a000001 	bne	40022cb4 <CyU3PGpioSetSimpleConfig+0x7c>
40022cac:	e3a00044 	mov	r0, #68	; 0x44
40022cb0:	eaffffe9 	b	40022c5c <CyU3PGpioSetSimpleConfig+0x24>
40022cb4:	e595000c 	ldr	r0, [r5, #12]
40022cb8:	e3500000 	cmp	r0, #0
40022cbc:	0a000000 	beq	40022cc4 <CyU3PGpioSetSimpleConfig+0x8c>
40022cc0:	e3866040 	orr	r6, r6, #64	; 0x40
40022cc4:	e5950004 	ldr	r0, [r5, #4]
40022cc8:	e3500000 	cmp	r0, #0
40022ccc:	0a000000 	beq	40022cd4 <CyU3PGpioSetSimpleConfig+0x9c>
40022cd0:	e3866010 	orr	r6, r6, #16
40022cd4:	e5950008 	ldr	r0, [r5, #8]
40022cd8:	e3500000 	cmp	r0, #0
40022cdc:	0a000000 	beq	40022ce4 <CyU3PGpioSetSimpleConfig+0xac>
40022ce0:	e3866020 	orr	r6, r6, #32
40022ce4:	e5950000 	ldr	r0, [r5]
40022ce8:	e3500000 	cmp	r0, #0
40022cec:	0a000000 	beq	40022cf4 <CyU3PGpioSetSimpleConfig+0xbc>
40022cf0:	e3866001 	orr	r6, r6, #1
40022cf4:	e5d50010 	ldrb	r0, [r5, #16]
40022cf8:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022cfc:	e0010c00 	and	r0, r1, r0, lsl #24
40022d00:	e1866000 	orr	r6, r6, r0
40022d04:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022d08:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022d0c:	e59f0010 	ldr	r0, [pc, #16]	; 40022d24 <CyU3PGpioSetSimpleConfig+0xec>
40022d10:	e7806104 	str	r6, [r0, r4, lsl #2]
40022d14:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022d18:	e3a00000 	mov	r0, #0
40022d1c:	eaffffce 	b	40022c5c <CyU3PGpioSetSimpleConfig+0x24>
40022d20:	40031364 	.word	0x40031364
40022d24:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022d28 <CyU3PGpioSetValue>:
40022d28:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022d2c:	e1a04000 	mov	r4, r0
40022d30:	e1a05001 	mov	r5, r1
40022d34:	e59f00b8 	ldr	r0, [pc, #184]	; 40022df4 <CyU3PGpioSetValue+0xcc>
40022d38:	e5900000 	ldr	r0, [r0]
40022d3c:	e3500000 	cmp	r0, #0
40022d40:	1a000001 	bne	40022d4c <CyU3PGpioSetValue+0x24>
40022d44:	e3a00042 	mov	r0, #66	; 0x42
40022d48:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022d4c:	e1a00004 	mov	r0, r4
40022d50:	ebffc003 	bl	40012d64 <CyU3PIsGpioValid>
40022d54:	e3500000 	cmp	r0, #0
40022d58:	1a000001 	bne	40022d64 <CyU3PGpioSetValue+0x3c>
40022d5c:	e3a00040 	mov	r0, #64	; 0x40
40022d60:	eafffff8 	b	40022d48 <CyU3PGpioSetValue+0x20>
40022d64:	e1a00004 	mov	r0, r4
40022d68:	ebffbff7 	bl	40012d4c <CyU3PIsGpioSimpleIOConfigured>
40022d6c:	e3500000 	cmp	r0, #0
40022d70:	0a000002 	beq	40022d80 <CyU3PGpioSetValue+0x58>
40022d74:	e59f007c 	ldr	r0, [pc, #124]	; 40022df8 <CyU3PGpioSetValue+0xd0>
40022d78:	e0807104 	add	r7, r0, r4, lsl #2
40022d7c:	ea00000d 	b	40022db8 <CyU3PGpioSetValue+0x90>
40022d80:	e1a00004 	mov	r0, r4
40022d84:	ebffbfea 	bl	40012d34 <CyU3PIsGpioComplexIOConfigured>
40022d88:	e3500000 	cmp	r0, #0
40022d8c:	0a000007 	beq	40022db0 <CyU3PGpioSetValue+0x88>
40022d90:	e1a00004 	mov	r0, r4
40022d94:	e1a01fc4 	asr	r1, r4, #31
40022d98:	e0841ea1 	add	r1, r4, r1, lsr #29
40022d9c:	e1a011c1 	asr	r1, r1, #3
40022da0:	e0441181 	sub	r1, r4, r1, lsl #3
40022da4:	e59f2050 	ldr	r2, [pc, #80]	; 40022dfc <CyU3PGpioSetValue+0xd4>
40022da8:	e0827201 	add	r7, r2, r1, lsl #4
40022dac:	ea000001 	b	40022db8 <CyU3PGpioSetValue+0x90>
40022db0:	e3a00044 	mov	r0, #68	; 0x44
40022db4:	eaffffe3 	b	40022d48 <CyU3PGpioSetValue+0x20>
40022db8:	e5970000 	ldr	r0, [r7]
40022dbc:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022dc0:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022dc4:	1a000001 	bne	40022dd0 <CyU3PGpioSetValue+0xa8>
40022dc8:	e3a00044 	mov	r0, #68	; 0x44
40022dcc:	eaffffdd 	b	40022d48 <CyU3PGpioSetValue+0x20>
40022dd0:	e3550000 	cmp	r5, #0
40022dd4:	0a000001 	beq	40022de0 <CyU3PGpioSetValue+0xb8>
40022dd8:	e3866001 	orr	r6, r6, #1
40022ddc:	ea000000 	b	40022de4 <CyU3PGpioSetValue+0xbc>
40022de0:	e3c66001 	bic	r6, r6, #1
40022de4:	e5876000 	str	r6, [r7]
40022de8:	e5976000 	ldr	r6, [r7]
40022dec:	e3a00000 	mov	r0, #0
40022df0:	eaffffd4 	b	40022d48 <CyU3PGpioSetValue+0x20>
40022df4:	40031364 	.word	0x40031364
40022df8:	e0001100 	.word	0xe0001100
40022dfc:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022e00 <CyU3PGpioSimpleGetValue>:
40022e00:	e92d4070 	push	{r4, r5, r6, lr}
40022e04:	e1a04000 	mov	r4, r0
40022e08:	e1a06001 	mov	r6, r1
40022e0c:	e59f0068 	ldr	r0, [pc, #104]	; 40022e7c <CyU3PGpioSimpleGetValue+0x7c>
40022e10:	e5900000 	ldr	r0, [r0]
40022e14:	e3500000 	cmp	r0, #0
40022e18:	1a000001 	bne	40022e24 <CyU3PGpioSimpleGetValue+0x24>
40022e1c:	e3a00042 	mov	r0, #66	; 0x42
40022e20:	e8bd8070 	pop	{r4, r5, r6, pc}
40022e24:	e1a00004 	mov	r0, r4
40022e28:	ebffbfcd 	bl	40012d64 <CyU3PIsGpioValid>
40022e2c:	e3500000 	cmp	r0, #0
40022e30:	1a000001 	bne	40022e3c <CyU3PGpioSimpleGetValue+0x3c>
40022e34:	e3a00040 	mov	r0, #64	; 0x40
40022e38:	eafffff8 	b	40022e20 <CyU3PGpioSimpleGetValue+0x20>
40022e3c:	e3560000 	cmp	r6, #0
40022e40:	1a000001 	bne	40022e4c <CyU3PGpioSimpleGetValue+0x4c>
40022e44:	e3a00041 	mov	r0, #65	; 0x41
40022e48:	eafffff4 	b	40022e20 <CyU3PGpioSimpleGetValue+0x20>
40022e4c:	e59f002c 	ldr	r0, [pc, #44]	; 40022e80 <CyU3PGpioSimpleGetValue+0x80>
40022e50:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022e54:	e3150040 	tst	r5, #64	; 0x40
40022e58:	0a000003 	beq	40022e6c <CyU3PGpioSimpleGetValue+0x6c>
40022e5c:	e2050002 	and	r0, r5, #2
40022e60:	e1a000a0 	lsr	r0, r0, #1
40022e64:	e5860000 	str	r0, [r6]
40022e68:	ea000001 	b	40022e74 <CyU3PGpioSimpleGetValue+0x74>
40022e6c:	e2050001 	and	r0, r5, #1
40022e70:	e5860000 	str	r0, [r6]
40022e74:	e3a00000 	mov	r0, #0
40022e78:	eaffffe8 	b	40022e20 <CyU3PGpioSimpleGetValue+0x20>
40022e7c:	40031364 	.word	0x40031364
40022e80:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022e84 <CyU3PRegisterGpioCallBack>:
40022e84:	e59f1004 	ldr	r1, [pc, #4]	; 40022e90 <CyU3PRegisterGpioCallBack+0xc>
40022e88:	e5810000 	str	r0, [r1]
40022e8c:	e12fff1e 	bx	lr
40022e90:	40031368 	.word	0x40031368

Disassembly of section i.CyU3PRegisterUartCallBack:

40022e94 <CyU3PRegisterUartCallBack>:
40022e94:	e59f1004 	ldr	r1, [pc, #4]	; 40022ea0 <CyU3PRegisterUartCallBack+0xc>
40022e98:	e5810000 	str	r0, [r1]
40022e9c:	e12fff1e 	bx	lr
40022ea0:	40031378 	.word	0x40031378

Disassembly of section i.CyU3PUartGetLock:

40022ea4 <CyU3PUartGetLock>:
40022ea4:	e92d4010 	push	{r4, lr}
40022ea8:	e3a04000 	mov	r4, #0
40022eac:	e59f0044 	ldr	r0, [pc, #68]	; 40022ef8 <CyU3PUartGetLock+0x54>
40022eb0:	e5900000 	ldr	r0, [r0]
40022eb4:	e3500000 	cmp	r0, #0
40022eb8:	1a000001 	bne	40022ec4 <CyU3PUartGetLock+0x20>
40022ebc:	e3a00044 	mov	r0, #68	; 0x44
40022ec0:	e8bd8010 	pop	{r4, pc}
40022ec4:	ebff9659 	bl	40008830 <_tx_thread_identify>
40022ec8:	e3500000 	cmp	r0, #0
40022ecc:	0a000000 	beq	40022ed4 <CyU3PUartGetLock+0x30>
40022ed0:	e3e04000 	mvn	r4, #0
40022ed4:	e1a01004 	mov	r1, r4
40022ed8:	e59f001c 	ldr	r0, [pc, #28]	; 40022efc <CyU3PUartGetLock+0x58>
40022edc:	ebff9c68 	bl	4000a084 <_txe_mutex_get>
40022ee0:	e3500000 	cmp	r0, #0
40022ee4:	0a000001 	beq	40022ef0 <CyU3PUartGetLock+0x4c>
40022ee8:	e3a0001d 	mov	r0, #29
40022eec:	eafffff3 	b	40022ec0 <CyU3PUartGetLock+0x1c>
40022ef0:	e3a00000 	mov	r0, #0
40022ef4:	eafffff1 	b	40022ec0 <CyU3PUartGetLock+0x1c>
40022ef8:	40031374 	.word	0x40031374
40022efc:	4003329c 	.word	0x4003329c

Disassembly of section i.CyU3PUartInit:

40022f00 <CyU3PUartInit>:
40022f00:	e92d4010 	push	{r4, lr}
40022f04:	e3a00003 	mov	r0, #3
40022f08:	ebffbf9c 	bl	40012d80 <CyU3PIsLppIOConfigured>
40022f0c:	e3500000 	cmp	r0, #0
40022f10:	1a000001 	bne	40022f1c <CyU3PUartInit+0x1c>
40022f14:	e3a00044 	mov	r0, #68	; 0x44
40022f18:	e8bd8010 	pop	{r4, pc}
40022f1c:	e59f00b8 	ldr	r0, [pc, #184]	; 40022fdc <CyU3PUartInit+0xdc>
40022f20:	e5900000 	ldr	r0, [r0]
40022f24:	e3500000 	cmp	r0, #0
40022f28:	0a000001 	beq	40022f34 <CyU3PUartInit+0x34>
40022f2c:	e3a00043 	mov	r0, #67	; 0x43
40022f30:	eafffff8 	b	40022f18 <CyU3PUartInit+0x18>
40022f34:	e3a03038 	mov	r3, #56	; 0x38
40022f38:	e3a02000 	mov	r2, #0
40022f3c:	e1a01002 	mov	r1, r2
40022f40:	e59f0098 	ldr	r0, [pc, #152]	; 40022fe0 <CyU3PUartInit+0xe0>
40022f44:	ebff9bd0 	bl	40009e8c <_txe_mutex_create>
40022f48:	e3a00d96 	mov	r0, #9600	; 0x2580
40022f4c:	ebffc506 	bl	4001436c <CyU3PUartSetClock>
40022f50:	e1a04000 	mov	r4, r0
40022f54:	e3540000 	cmp	r4, #0
40022f58:	0a000001 	beq	40022f64 <CyU3PUartInit+0x64>
40022f5c:	e1a00004 	mov	r0, r4
40022f60:	eaffffec 	b	40022f18 <CyU3PUartInit+0x18>
40022f64:	e59f1078 	ldr	r1, [pc, #120]	; 40022fe4 <CyU3PUartInit+0xe4>
40022f68:	e3a00003 	mov	r0, #3
40022f6c:	ebffc3e0 	bl	40013ef4 <CyU3PLppInit>
40022f70:	e1a04000 	mov	r4, r0
40022f74:	e3540000 	cmp	r4, #0
40022f78:	0a000001 	beq	40022f84 <CyU3PUartInit+0x84>
40022f7c:	e1a00004 	mov	r0, r4
40022f80:	eaffffe4 	b	40022f18 <CyU3PUartInit+0x18>
40022f84:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022f88:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022f8c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022f90:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022f94:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022f98:	e3a0000a 	mov	r0, #10
40022f9c:	ebffc1d8 	bl	40013704 <CyU3PBusyWait>
40022fa0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022fa4:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022fa8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022fac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fb0:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022fb4:	e1a00000 	nop			; (mov r0, r0)
40022fb8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022fbc:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022fc0:	e3100001 	tst	r0, #1
40022fc4:	0afffffb 	beq	40022fb8 <CyU3PUartInit+0xb8>
40022fc8:	e3a00001 	mov	r0, #1
40022fcc:	e59f1008 	ldr	r1, [pc, #8]	; 40022fdc <CyU3PUartInit+0xdc>
40022fd0:	e5810000 	str	r0, [r1]
40022fd4:	e3a00000 	mov	r0, #0
40022fd8:	eaffffce 	b	40022f18 <CyU3PUartInit+0x18>
40022fdc:	40031374 	.word	0x40031374
40022fe0:	4003329c 	.word	0x4003329c
40022fe4:	40022fe8 	.word	0x40022fe8

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022fe8 <CyU3PUartInt_ThreadHandler>:
40022fe8:	e92d4070 	push	{r4, r5, r6, lr}
40022fec:	ebffffac 	bl	40022ea4 <CyU3PUartGetLock>
40022ff0:	e1a05000 	mov	r5, r0
40022ff4:	e3550000 	cmp	r5, #0
40022ff8:	0a000000 	beq	40023000 <CyU3PUartInt_ThreadHandler+0x18>
40022ffc:	e8bd8070 	pop	{r4, r5, r6, pc}
40023000:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023004:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40023008:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002300c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40023010:	e0004001 	and	r4, r0, r1
40023014:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023018:	e5804808 	str	r4, [r0, #2056]	; 0x808
4002301c:	e59f0078 	ldr	r0, [pc, #120]	; 4002309c <CyU3PUartInt_ThreadHandler+0xb4>
40023020:	e5900000 	ldr	r0, [r0]
40023024:	e3500000 	cmp	r0, #0
40023028:	1a000001 	bne	40023034 <CyU3PUartInt_ThreadHandler+0x4c>
4002302c:	eb00001b 	bl	400230a0 <CyU3PUartReleaseLock>
40023030:	eafffff1 	b	40022ffc <CyU3PUartInt_ThreadHandler+0x14>
40023034:	e3140001 	tst	r4, #1
40023038:	0a000004 	beq	40023050 <CyU3PUartInt_ThreadHandler+0x68>
4002303c:	e3a01000 	mov	r1, #0
40023040:	e1a00001 	mov	r0, r1
40023044:	e59f2050 	ldr	r2, [pc, #80]	; 4002309c <CyU3PUartInt_ThreadHandler+0xb4>
40023048:	e5922000 	ldr	r2, [r2]
4002304c:	e12fff32 	blx	r2
40023050:	e3140008 	tst	r4, #8
40023054:	0a000004 	beq	4002306c <CyU3PUartInt_ThreadHandler+0x84>
40023058:	e3a01000 	mov	r1, #0
4002305c:	e3a00001 	mov	r0, #1
40023060:	e59f2034 	ldr	r2, [pc, #52]	; 4002309c <CyU3PUartInt_ThreadHandler+0xb4>
40023064:	e5922000 	ldr	r2, [r2]
40023068:	e12fff32 	blx	r2
4002306c:	e3140c02 	tst	r4, #512	; 0x200
40023070:	0a000007 	beq	40023094 <CyU3PUartInt_ThreadHandler+0xac>
40023074:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023078:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
4002307c:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023080:	e1a01c20 	lsr	r1, r0, #24
40023084:	e3a00002 	mov	r0, #2
40023088:	e59f200c 	ldr	r2, [pc, #12]	; 4002309c <CyU3PUartInt_ThreadHandler+0xb4>
4002308c:	e5922000 	ldr	r2, [r2]
40023090:	e12fff32 	blx	r2
40023094:	eb000001 	bl	400230a0 <CyU3PUartReleaseLock>
40023098:	eaffffd7 	b	40022ffc <CyU3PUartInt_ThreadHandler+0x14>
4002309c:	40031378 	.word	0x40031378

Disassembly of section i.CyU3PUartReleaseLock:

400230a0 <CyU3PUartReleaseLock>:
400230a0:	e92d4010 	push	{r4, lr}
400230a4:	e59f0030 	ldr	r0, [pc, #48]	; 400230dc <CyU3PUartReleaseLock+0x3c>
400230a8:	e5900000 	ldr	r0, [r0]
400230ac:	e3500000 	cmp	r0, #0
400230b0:	1a000001 	bne	400230bc <CyU3PUartReleaseLock+0x1c>
400230b4:	e3a00044 	mov	r0, #68	; 0x44
400230b8:	e8bd8010 	pop	{r4, pc}
400230bc:	e59f001c 	ldr	r0, [pc, #28]	; 400230e0 <CyU3PUartReleaseLock+0x40>
400230c0:	ebff9c24 	bl	4000a158 <_txe_mutex_put>
400230c4:	e3500000 	cmp	r0, #0
400230c8:	0a000001 	beq	400230d4 <CyU3PUartReleaseLock+0x34>
400230cc:	e3a0001d 	mov	r0, #29
400230d0:	eafffff8 	b	400230b8 <CyU3PUartReleaseLock+0x18>
400230d4:	e3a00000 	mov	r0, #0
400230d8:	eafffff6 	b	400230b8 <CyU3PUartReleaseLock+0x18>
400230dc:	40031374 	.word	0x40031374
400230e0:	4003329c 	.word	0x4003329c

Disassembly of section i.CyU3PUartSetConfig:

400230e4 <CyU3PUartSetConfig>:
400230e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400230e8:	e1a04000 	mov	r4, r0
400230ec:	e1a05001 	mov	r5, r1
400230f0:	e3a07000 	mov	r7, #0
400230f4:	e59f01f0 	ldr	r0, [pc, #496]	; 400232ec <CyU3PUartSetConfig+0x208>
400230f8:	e5900000 	ldr	r0, [r0]
400230fc:	e3500000 	cmp	r0, #0
40023100:	1a000001 	bne	4002310c <CyU3PUartSetConfig+0x28>
40023104:	e3a00042 	mov	r0, #66	; 0x42
40023108:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002310c:	e3540000 	cmp	r4, #0
40023110:	1a000001 	bne	4002311c <CyU3PUartSetConfig+0x38>
40023114:	e3a00041 	mov	r0, #65	; 0x41
40023118:	eafffffa 	b	40023108 <CyU3PUartSetConfig+0x24>
4002311c:	e5940004 	ldr	r0, [r4, #4]
40023120:	e5941000 	ldr	r1, [r4]
40023124:	e1900001 	orrs	r0, r0, r1
40023128:	1a000001 	bne	40023134 <CyU3PUartSetConfig+0x50>
4002312c:	e3a00040 	mov	r0, #64	; 0x40
40023130:	eafffff4 	b	40023108 <CyU3PUartSetConfig+0x24>
40023134:	e5d40015 	ldrb	r0, [r4, #21]
40023138:	e3500003 	cmp	r0, #3
4002313c:	ba000001 	blt	40023148 <CyU3PUartSetConfig+0x64>
40023140:	e3a00040 	mov	r0, #64	; 0x40
40023144:	eaffffef 	b	40023108 <CyU3PUartSetConfig+0x24>
40023148:	e5d40014 	ldrb	r0, [r4, #20]
4002314c:	e3500001 	cmp	r0, #1
40023150:	0a000004 	beq	40023168 <CyU3PUartSetConfig+0x84>
40023154:	e5d40014 	ldrb	r0, [r4, #20]
40023158:	e3500002 	cmp	r0, #2
4002315c:	0a000001 	beq	40023168 <CyU3PUartSetConfig+0x84>
40023160:	e3a00040 	mov	r0, #64	; 0x40
40023164:	eaffffe7 	b	40023108 <CyU3PUartSetConfig+0x24>
40023168:	e594000c 	ldr	r0, [r4, #12]
4002316c:	e3500000 	cmp	r0, #0
40023170:	1a000003 	bne	40023184 <CyU3PUartSetConfig+0xa0>
40023174:	e3550000 	cmp	r5, #0
40023178:	0a000001 	beq	40023184 <CyU3PUartSetConfig+0xa0>
4002317c:	e3a00040 	mov	r0, #64	; 0x40
40023180:	eaffffe0 	b	40023108 <CyU3PUartSetConfig+0x24>
40023184:	ebffff46 	bl	40022ea4 <CyU3PUartGetLock>
40023188:	e1a06000 	mov	r6, r0
4002318c:	e3560000 	cmp	r6, #0
40023190:	0a000001 	beq	4002319c <CyU3PUartSetConfig+0xb8>
40023194:	e3a0001d 	mov	r0, #29
40023198:	eaffffda 	b	40023108 <CyU3PUartSetConfig+0x24>
4002319c:	e5940010 	ldr	r0, [r4, #16]
400231a0:	ebffc471 	bl	4001436c <CyU3PUartSetClock>
400231a4:	e1a06000 	mov	r6, r0
400231a8:	e3560000 	cmp	r6, #0
400231ac:	0a000002 	beq	400231bc <CyU3PUartSetConfig+0xd8>
400231b0:	ebffffba 	bl	400230a0 <CyU3PUartReleaseLock>
400231b4:	e1a00006 	mov	r0, r6
400231b8:	eaffffd2 	b	40023108 <CyU3PUartSetConfig+0x24>
400231bc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
400231c4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400231c8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231cc:	e5810800 	str	r0, [r1, #2048]	; 0x800
400231d0:	e5940004 	ldr	r0, [r4, #4]
400231d4:	e3500000 	cmp	r0, #0
400231d8:	0a000001 	beq	400231e4 <CyU3PUartSetConfig+0x100>
400231dc:	e3877a01 	orr	r7, r7, #4096	; 0x1000
400231e0:	e3877001 	orr	r7, r7, #1
400231e4:	e5940000 	ldr	r0, [r4]
400231e8:	e3500000 	cmp	r0, #0
400231ec:	0a000000 	beq	400231f4 <CyU3PUartSetConfig+0x110>
400231f0:	e3877002 	orr	r7, r7, #2
400231f4:	e5940008 	ldr	r0, [r4, #8]
400231f8:	e3500000 	cmp	r0, #0
400231fc:	0a000000 	beq	40023204 <CyU3PUartSetConfig+0x120>
40023200:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40023204:	e594000c 	ldr	r0, [r4, #12]
40023208:	e3500000 	cmp	r0, #0
4002320c:	0a000004 	beq	40023224 <CyU3PUartSetConfig+0x140>
40023210:	e3877b01 	orr	r7, r7, #1024	; 0x400
40023214:	e3a00001 	mov	r0, #1
40023218:	e59f10d0 	ldr	r1, [pc, #208]	; 400232f0 <CyU3PUartSetConfig+0x20c>
4002321c:	e5810000 	str	r0, [r1]
40023220:	ea000002 	b	40023230 <CyU3PUartSetConfig+0x14c>
40023224:	e3a00000 	mov	r0, #0
40023228:	e59f10c0 	ldr	r1, [pc, #192]	; 400232f0 <CyU3PUartSetConfig+0x20c>
4002322c:	e5810000 	str	r0, [r1]
40023230:	e5d40014 	ldrb	r0, [r4, #20]
40023234:	e3a01c03 	mov	r1, #768	; 0x300
40023238:	e0010400 	and	r0, r1, r0, lsl #8
4002323c:	e1877000 	orr	r7, r7, r0
40023240:	e5d40015 	ldrb	r0, [r4, #21]
40023244:	e3500001 	cmp	r0, #1
40023248:	0a000002 	beq	40023258 <CyU3PUartSetConfig+0x174>
4002324c:	e3500002 	cmp	r0, #2
40023250:	1a000006 	bne	40023270 <CyU3PUartSetConfig+0x18c>
40023254:	ea000002 	b	40023264 <CyU3PUartSetConfig+0x180>
40023258:	e1a00000 	nop			; (mov r0, r0)
4002325c:	e3877008 	orr	r7, r7, #8
40023260:	ea000004 	b	40023278 <CyU3PUartSetConfig+0x194>
40023264:	e1a00000 	nop			; (mov r0, r0)
40023268:	e3877018 	orr	r7, r7, #24
4002326c:	ea000001 	b	40023278 <CyU3PUartSetConfig+0x194>
40023270:	e1a00000 	nop			; (mov r0, r0)
40023274:	e1a00000 	nop			; (mov r0, r0)
40023278:	e1a00000 	nop			; (mov r0, r0)
4002327c:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023280:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023284:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023288:	e59f0064 	ldr	r0, [pc, #100]	; 400232f4 <CyU3PUartSetConfig+0x210>
4002328c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023290:	e5810818 	str	r0, [r1, #2072]	; 0x818
40023294:	e1a00005 	mov	r0, r5
40023298:	ebfffefd 	bl	40022e94 <CyU3PRegisterUartCallBack>
4002329c:	e3550000 	cmp	r5, #0
400232a0:	0a000003 	beq	400232b4 <CyU3PUartSetConfig+0x1d0>
400232a4:	e59f004c 	ldr	r0, [pc, #76]	; 400232f8 <CyU3PUartSetConfig+0x214>
400232a8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232ac:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400232b0:	ea000002 	b	400232c0 <CyU3PUartSetConfig+0x1dc>
400232b4:	e3a00000 	mov	r0, #0
400232b8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232bc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400232c0:	e3a00001 	mov	r0, #1
400232c4:	e59f1030 	ldr	r1, [pc, #48]	; 400232fc <CyU3PUartSetConfig+0x218>
400232c8:	e5810000 	str	r0, [r1]
400232cc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232d0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
400232d4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400232d8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232dc:	e5810800 	str	r0, [r1, #2048]	; 0x800
400232e0:	ebffff6e 	bl	400230a0 <CyU3PUartReleaseLock>
400232e4:	e3a00000 	mov	r0, #0
400232e8:	eaffff86 	b	40023108 <CyU3PUartSetConfig+0x24>
400232ec:	40031374 	.word	0x40031374
400232f0:	4003136c 	.word	0x4003136c
400232f4:	00000603 	.word	0x00000603
400232f8:	00000309 	.word	0x00000309
400232fc:	40031370 	.word	0x40031370

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023300 <CyU3PUartTxSetBlockXfer>:
40023300:	e92d4070 	push	{r4, r5, r6, lr}
40023304:	e1a05000 	mov	r5, r0
40023308:	e59f003c 	ldr	r0, [pc, #60]	; 4002334c <CyU3PUartTxSetBlockXfer+0x4c>
4002330c:	e5900000 	ldr	r0, [r0]
40023310:	e3500000 	cmp	r0, #0
40023314:	1a000001 	bne	40023320 <CyU3PUartTxSetBlockXfer+0x20>
40023318:	e3a00044 	mov	r0, #68	; 0x44
4002331c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023320:	ebfffedf 	bl	40022ea4 <CyU3PUartGetLock>
40023324:	e1a04000 	mov	r4, r0
40023328:	e3540000 	cmp	r4, #0
4002332c:	0a000001 	beq	40023338 <CyU3PUartTxSetBlockXfer+0x38>
40023330:	e1a00004 	mov	r0, r4
40023334:	eafffff8 	b	4002331c <CyU3PUartTxSetBlockXfer+0x1c>
40023338:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002333c:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023340:	ebffff56 	bl	400230a0 <CyU3PUartReleaseLock>
40023344:	e3a00000 	mov	r0, #0
40023348:	eafffff3 	b	4002331c <CyU3PUartTxSetBlockXfer+0x1c>
4002334c:	4003136c 	.word	0x4003136c

Disassembly of section i.CyU3PI2cErrorRecovery:

40023350 <CyU3PI2cErrorRecovery>:
40023350:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023354:	e1a04000 	mov	r4, r0
40023358:	e3a07000 	mov	r7, #0
4002335c:	e3a08000 	mov	r8, #0
40023360:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023364:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023368:	e59f1164 	ldr	r1, [pc, #356]	; 400234d4 <CyU3PI2cErrorRecovery+0x184>
4002336c:	e5810000 	str	r0, [r1]
40023370:	e59f5160 	ldr	r5, [pc, #352]	; 400234d8 <CyU3PI2cErrorRecovery+0x188>
40023374:	e1a00000 	nop			; (mov r0, r0)
40023378:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002337c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023380:	e3100201 	tst	r0, #268435456	; 0x10000000
40023384:	0a000002 	beq	40023394 <CyU3PI2cErrorRecovery+0x44>
40023388:	e1b00005 	movs	r0, r5
4002338c:	e2455001 	sub	r5, r5, #1
40023390:	1afffff8 	bne	40023378 <CyU3PI2cErrorRecovery+0x28>
40023394:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023398:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
4002339c:	e3a00000 	mov	r0, #0
400233a0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400233a4:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400233a8:	e3e00000 	mvn	r0, #0
400233ac:	e5810408 	str	r0, [r1, #1032]	; 0x408
400233b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400233b4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400233b8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400233bc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400233c0:	e3a00005 	mov	r0, #5
400233c4:	ebffc0ce 	bl	40013704 <CyU3PBusyWait>
400233c8:	e3540000 	cmp	r4, #0
400233cc:	0a000032 	beq	4002349c <CyU3PI2cErrorRecovery+0x14c>
400233d0:	e3a00000 	mov	r0, #0
400233d4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400233d8:	e5810438 	str	r0, [r1, #1080]	; 0x438
400233dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400233e0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400233e4:	e3100008 	tst	r0, #8
400233e8:	1a000000 	bne	400233f0 <CyU3PI2cErrorRecovery+0xa0>
400233ec:	e3a07101 	mov	r7, #1073741824	; 0x40000000
400233f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400233f4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400233f8:	e3100002 	tst	r0, #2
400233fc:	0a000000 	beq	40023404 <CyU3PI2cErrorRecovery+0xb4>
40023400:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023404:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023408:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002340c:	e1800007 	orr	r0, r0, r7
40023410:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023414:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023418:	e1e05741 	mvn	r5, r1, asr #14
4002341c:	ea000004 	b	40023434 <CyU3PI2cErrorRecovery+0xe4>
40023420:	e1b00005 	movs	r0, r5
40023424:	e2455001 	sub	r5, r5, #1
40023428:	1a000001 	bne	40023434 <CyU3PI2cErrorRecovery+0xe4>
4002342c:	e3a08054 	mov	r8, #84	; 0x54
40023430:	ea000003 	b	40023444 <CyU3PI2cErrorRecovery+0xf4>
40023434:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023438:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002343c:	e3100008 	tst	r0, #8
40023440:	0afffff6 	beq	40023420 <CyU3PI2cErrorRecovery+0xd0>
40023444:	e1a00000 	nop			; (mov r0, r0)
40023448:	e3580000 	cmp	r8, #0
4002344c:	1a00000b 	bne	40023480 <CyU3PI2cErrorRecovery+0x130>
40023450:	e59f5080 	ldr	r5, [pc, #128]	; 400234d8 <CyU3PI2cErrorRecovery+0x188>
40023454:	ea000004 	b	4002346c <CyU3PI2cErrorRecovery+0x11c>
40023458:	e1b00005 	movs	r0, r5
4002345c:	e2455001 	sub	r5, r5, #1
40023460:	1a000001 	bne	4002346c <CyU3PI2cErrorRecovery+0x11c>
40023464:	e3a08054 	mov	r8, #84	; 0x54
40023468:	ea000003 	b	4002347c <CyU3PI2cErrorRecovery+0x12c>
4002346c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023470:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023474:	e3100002 	tst	r0, #2
40023478:	1afffff6 	bne	40023458 <CyU3PI2cErrorRecovery+0x108>
4002347c:	e1a00000 	nop			; (mov r0, r0)
40023480:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023484:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023488:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
4002348c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023490:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023494:	e3a00001 	mov	r0, #1
40023498:	ebffc099 	bl	40013704 <CyU3PBusyWait>
4002349c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234a0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400234a4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400234a8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400234ac:	e5810400 	str	r0, [r1, #1024]	; 0x400
400234b0:	e3a00005 	mov	r0, #5
400234b4:	ebffc092 	bl	40013704 <CyU3PBusyWait>
400234b8:	e3e00000 	mvn	r0, #0
400234bc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400234c0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400234c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234c8:	e580640c 	str	r6, [r0, #1036]	; 0x40c
400234cc:	e1a00008 	mov	r0, r8
400234d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400234d4:	4003138c 	.word	0x4003138c
400234d8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

400234dc <CyU3PI2cGetLock>:
400234dc:	e92d4010 	push	{r4, lr}
400234e0:	e3a04000 	mov	r4, #0
400234e4:	e59f0044 	ldr	r0, [pc, #68]	; 40023530 <CyU3PI2cGetLock+0x54>
400234e8:	e5900000 	ldr	r0, [r0]
400234ec:	e3500000 	cmp	r0, #0
400234f0:	1a000001 	bne	400234fc <CyU3PI2cGetLock+0x20>
400234f4:	e3a00044 	mov	r0, #68	; 0x44
400234f8:	e8bd8010 	pop	{r4, pc}
400234fc:	ebff94cb 	bl	40008830 <_tx_thread_identify>
40023500:	e3500000 	cmp	r0, #0
40023504:	0a000000 	beq	4002350c <CyU3PI2cGetLock+0x30>
40023508:	e3e04000 	mvn	r4, #0
4002350c:	e1a01004 	mov	r1, r4
40023510:	e59f001c 	ldr	r0, [pc, #28]	; 40023534 <CyU3PI2cGetLock+0x58>
40023514:	ebff9ada 	bl	4000a084 <_txe_mutex_get>
40023518:	e3500000 	cmp	r0, #0
4002351c:	0a000001 	beq	40023528 <CyU3PI2cGetLock+0x4c>
40023520:	e3a0001d 	mov	r0, #29
40023524:	eafffff3 	b	400234f8 <CyU3PI2cGetLock+0x1c>
40023528:	e3a00000 	mov	r0, #0
4002352c:	eafffff1 	b	400234f8 <CyU3PI2cGetLock+0x1c>
40023530:	40031384 	.word	0x40031384
40023534:	400332d4 	.word	0x400332d4

Disassembly of section i.CyU3PI2cInit:

40023538 <CyU3PI2cInit>:
40023538:	e92d4010 	push	{r4, lr}
4002353c:	e3a00000 	mov	r0, #0
40023540:	ebffbe0e 	bl	40012d80 <CyU3PIsLppIOConfigured>
40023544:	e3500000 	cmp	r0, #0
40023548:	1a000001 	bne	40023554 <CyU3PI2cInit+0x1c>
4002354c:	e3a00044 	mov	r0, #68	; 0x44
40023550:	e8bd8010 	pop	{r4, pc}
40023554:	e59f00bc 	ldr	r0, [pc, #188]	; 40023618 <CyU3PI2cInit+0xe0>
40023558:	e5900000 	ldr	r0, [r0]
4002355c:	e3500000 	cmp	r0, #0
40023560:	0a000001 	beq	4002356c <CyU3PI2cInit+0x34>
40023564:	e3a00043 	mov	r0, #67	; 0x43
40023568:	eafffff8 	b	40023550 <CyU3PI2cInit+0x18>
4002356c:	e59f00a8 	ldr	r0, [pc, #168]	; 4002361c <CyU3PI2cInit+0xe4>
40023570:	ebffc1f8 	bl	40013d58 <CyU3PI2cSetClock>
40023574:	e1a04000 	mov	r4, r0
40023578:	e3540000 	cmp	r4, #0
4002357c:	0a000001 	beq	40023588 <CyU3PI2cInit+0x50>
40023580:	e1a00004 	mov	r0, r4
40023584:	eafffff1 	b	40023550 <CyU3PI2cInit+0x18>
40023588:	e59f1090 	ldr	r1, [pc, #144]	; 40023620 <CyU3PI2cInit+0xe8>
4002358c:	e3a00000 	mov	r0, #0
40023590:	ebffc257 	bl	40013ef4 <CyU3PLppInit>
40023594:	e1a04000 	mov	r4, r0
40023598:	e3540000 	cmp	r4, #0
4002359c:	0a000001 	beq	400235a8 <CyU3PI2cInit+0x70>
400235a0:	e1a00004 	mov	r0, r4
400235a4:	eaffffe9 	b	40023550 <CyU3PI2cInit+0x18>
400235a8:	e3a03038 	mov	r3, #56	; 0x38
400235ac:	e3a02000 	mov	r2, #0
400235b0:	e1a01002 	mov	r1, r2
400235b4:	e59f0068 	ldr	r0, [pc, #104]	; 40023624 <CyU3PI2cInit+0xec>
400235b8:	ebff9a33 	bl	40009e8c <_txe_mutex_create>
400235bc:	e3a00000 	mov	r0, #0
400235c0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400235c4:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400235c8:	e3a0000a 	mov	r0, #10
400235cc:	ebffc04c 	bl	40013704 <CyU3PBusyWait>
400235d0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235d4:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400235d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400235dc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400235e0:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400235e4:	e1a00000 	nop			; (mov r0, r0)
400235e8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235ec:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400235f0:	e3100001 	tst	r0, #1
400235f4:	0afffffb 	beq	400235e8 <CyU3PI2cInit+0xb0>
400235f8:	e3a00000 	mov	r0, #0
400235fc:	e59f1024 	ldr	r1, [pc, #36]	; 40023628 <CyU3PI2cInit+0xf0>
40023600:	e5810000 	str	r0, [r1]
40023604:	e3a00001 	mov	r0, #1
40023608:	e2411008 	sub	r1, r1, #8
4002360c:	e5810000 	str	r0, [r1]
40023610:	e3a00000 	mov	r0, #0
40023614:	eaffffcd 	b	40023550 <CyU3PI2cInit+0x18>
40023618:	40031384 	.word	0x40031384
4002361c:	000186a0 	.word	0x000186a0
40023620:	4002362c 	.word	0x4002362c
40023624:	400332d4 	.word	0x400332d4
40023628:	4003138c 	.word	0x4003138c

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

4002362c <CyU3PI2cInt_ThreadHandler>:
4002362c:	e92d4070 	push	{r4, r5, r6, lr}
40023630:	ebffffa9 	bl	400234dc <CyU3PI2cGetLock>
40023634:	e1a05000 	mov	r5, r0
40023638:	e3550000 	cmp	r5, #0
4002363c:	0a000000 	beq	40023644 <CyU3PI2cInt_ThreadHandler+0x18>
40023640:	e8bd8070 	pop	{r4, r5, r6, pc}
40023644:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023648:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002364c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023650:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023654:	e0004001 	and	r4, r0, r1
40023658:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002365c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023660:	e59f00b0 	ldr	r0, [pc, #176]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
40023664:	e5900000 	ldr	r0, [r0]
40023668:	e3500000 	cmp	r0, #0
4002366c:	1a000001 	bne	40023678 <CyU3PI2cInt_ThreadHandler+0x4c>
40023670:	eb000098 	bl	400238d8 <CyU3PI2cReleaseLock>
40023674:	eafffff1 	b	40023640 <CyU3PI2cInt_ThreadHandler+0x14>
40023678:	e3140001 	tst	r4, #1
4002367c:	0a000004 	beq	40023694 <CyU3PI2cInt_ThreadHandler+0x68>
40023680:	e3a01000 	mov	r1, #0
40023684:	e1a00001 	mov	r0, r1
40023688:	e59f2088 	ldr	r2, [pc, #136]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
4002368c:	e5922000 	ldr	r2, [r2]
40023690:	e12fff32 	blx	r2
40023694:	e3140008 	tst	r4, #8
40023698:	0a000004 	beq	400236b0 <CyU3PI2cInt_ThreadHandler+0x84>
4002369c:	e3a01000 	mov	r1, #0
400236a0:	e3a00001 	mov	r0, #1
400236a4:	e59f206c 	ldr	r2, [pc, #108]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
400236a8:	e5922000 	ldr	r2, [r2]
400236ac:	e12fff32 	blx	r2
400236b0:	e3140040 	tst	r4, #64	; 0x40
400236b4:	0a000004 	beq	400236cc <CyU3PI2cInt_ThreadHandler+0xa0>
400236b8:	e3a01000 	mov	r1, #0
400236bc:	e3a00002 	mov	r0, #2
400236c0:	e59f2050 	ldr	r2, [pc, #80]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
400236c4:	e5922000 	ldr	r2, [r2]
400236c8:	e12fff32 	blx	r2
400236cc:	e3140080 	tst	r4, #128	; 0x80
400236d0:	0a000004 	beq	400236e8 <CyU3PI2cInt_ThreadHandler+0xbc>
400236d4:	e3a01000 	mov	r1, #0
400236d8:	e3a00003 	mov	r0, #3
400236dc:	e59f2034 	ldr	r2, [pc, #52]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
400236e0:	e5922000 	ldr	r2, [r2]
400236e4:	e12fff32 	blx	r2
400236e8:	e3140c01 	tst	r4, #256	; 0x100
400236ec:	0a000007 	beq	40023710 <CyU3PI2cInt_ThreadHandler+0xe4>
400236f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236f4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236f8:	e200040f 	and	r0, r0, #251658240	; 0xf000000
400236fc:	e1a01c20 	lsr	r1, r0, #24
40023700:	e3a00004 	mov	r0, #4
40023704:	e59f200c 	ldr	r2, [pc, #12]	; 40023718 <CyU3PI2cInt_ThreadHandler+0xec>
40023708:	e5922000 	ldr	r2, [r2]
4002370c:	e12fff32 	blx	r2
40023710:	eb000070 	bl	400238d8 <CyU3PI2cReleaseLock>
40023714:	eaffffc9 	b	40023640 <CyU3PI2cInt_ThreadHandler+0x14>
40023718:	40031388 	.word	0x40031388

Disassembly of section i.CyU3PI2cReceiveBytes:

4002371c <CyU3PI2cReceiveBytes>:
4002371c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023720:	e1a04000 	mov	r4, r0
40023724:	e1a05001 	mov	r5, r1
40023728:	e1a06002 	mov	r6, r2
4002372c:	e1a07003 	mov	r7, r3
40023730:	e59f0194 	ldr	r0, [pc, #404]	; 400238cc <CyU3PI2cReceiveBytes+0x1b0>
40023734:	e5900000 	ldr	r0, [r0]
40023738:	e3500000 	cmp	r0, #0
4002373c:	1a000001 	bne	40023748 <CyU3PI2cReceiveBytes+0x2c>
40023740:	e3a00044 	mov	r0, #68	; 0x44
40023744:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023748:	e59f0180 	ldr	r0, [pc, #384]	; 400238d0 <CyU3PI2cReceiveBytes+0x1b4>
4002374c:	e5900000 	ldr	r0, [r0]
40023750:	e3500000 	cmp	r0, #0
40023754:	0a000001 	beq	40023760 <CyU3PI2cReceiveBytes+0x44>
40023758:	e3a00044 	mov	r0, #68	; 0x44
4002375c:	eafffff8 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
40023760:	e3550000 	cmp	r5, #0
40023764:	0a000001 	beq	40023770 <CyU3PI2cReceiveBytes+0x54>
40023768:	e3540000 	cmp	r4, #0
4002376c:	1a000001 	bne	40023778 <CyU3PI2cReceiveBytes+0x5c>
40023770:	e3a00041 	mov	r0, #65	; 0x41
40023774:	eafffff2 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
40023778:	e5d40008 	ldrb	r0, [r4, #8]
4002377c:	e3500000 	cmp	r0, #0
40023780:	0a000002 	beq	40023790 <CyU3PI2cReceiveBytes+0x74>
40023784:	e5d40008 	ldrb	r0, [r4, #8]
40023788:	e3500008 	cmp	r0, #8
4002378c:	da000001 	ble	40023798 <CyU3PI2cReceiveBytes+0x7c>
40023790:	e3a00040 	mov	r0, #64	; 0x40
40023794:	eaffffea 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
40023798:	e3560000 	cmp	r6, #0
4002379c:	1a000001 	bne	400237a8 <CyU3PI2cReceiveBytes+0x8c>
400237a0:	e3a00000 	mov	r0, #0
400237a4:	eaffffe6 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
400237a8:	ebffff4b 	bl	400234dc <CyU3PI2cGetLock>
400237ac:	e1a08000 	mov	r8, r0
400237b0:	e3580000 	cmp	r8, #0
400237b4:	0a000001 	beq	400237c0 <CyU3PI2cReceiveBytes+0xa4>
400237b8:	e1a00008 	mov	r0, r8
400237bc:	eaffffe0 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
400237c0:	e3a0bd07 	mov	fp, #448	; 0x1c0
400237c4:	e1a00000 	nop			; (mov r0, r0)
400237c8:	e3a02001 	mov	r2, #1
400237cc:	e1a01006 	mov	r1, r6
400237d0:	e1a00004 	mov	r0, r4
400237d4:	eb000166 	bl	40023d74 <MyI2cSendCommand>
400237d8:	e1a08000 	mov	r8, r0
400237dc:	e3580000 	cmp	r8, #0
400237e0:	0a000000 	beq	400237e8 <CyU3PI2cReceiveBytes+0xcc>
400237e4:	ea00002a 	b	40023894 <CyU3PI2cReceiveBytes+0x178>
400237e8:	e3a0a000 	mov	sl, #0
400237ec:	ea000020 	b	40023874 <CyU3PI2cReceiveBytes+0x158>
400237f0:	e59f00dc 	ldr	r0, [pc, #220]	; 400238d4 <CyU3PI2cReceiveBytes+0x1b8>
400237f4:	e58d0000 	str	r0, [sp]
400237f8:	ea000006 	b	40023818 <CyU3PI2cReceiveBytes+0xfc>
400237fc:	e59d0000 	ldr	r0, [sp]
40023800:	e2401001 	sub	r1, r0, #1
40023804:	e3500000 	cmp	r0, #0
40023808:	e58d1000 	str	r1, [sp]
4002380c:	1a000001 	bne	40023818 <CyU3PI2cReceiveBytes+0xfc>
40023810:	e3a08055 	mov	r8, #85	; 0x55
40023814:	ea000004 	b	4002382c <CyU3PI2cReceiveBytes+0x110>
40023818:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002381c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023820:	e38b1002 	orr	r1, fp, #2
40023824:	e1100001 	tst	r0, r1
40023828:	0afffff3 	beq	400237fc <CyU3PI2cReceiveBytes+0xe0>
4002382c:	e1a00000 	nop			; (mov r0, r0)
40023830:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023834:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023838:	e110000b 	tst	r0, fp
4002383c:	0a000000 	beq	40023844 <CyU3PI2cReceiveBytes+0x128>
40023840:	e3a0804a 	mov	r8, #74	; 0x4a
40023844:	e3580000 	cmp	r8, #0
40023848:	0a000005 	beq	40023864 <CyU3PI2cReceiveBytes+0x148>
4002384c:	e3a00001 	mov	r0, #1
40023850:	ebfffebe 	bl	40023350 <CyU3PI2cErrorRecovery>
40023854:	e3500000 	cmp	r0, #0
40023858:	0a000000 	beq	40023860 <CyU3PI2cReceiveBytes+0x144>
4002385c:	e3a08054 	mov	r8, #84	; 0x54
40023860:	ea000005 	b	4002387c <CyU3PI2cReceiveBytes+0x160>
40023864:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023868:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
4002386c:	e7c5000a 	strb	r0, [r5, sl]
40023870:	e28aa001 	add	sl, sl, #1
40023874:	e15a0006 	cmp	sl, r6
40023878:	3affffdc 	bcc	400237f0 <CyU3PI2cReceiveBytes+0xd4>
4002387c:	e1a00000 	nop			; (mov r0, r0)
40023880:	e3580000 	cmp	r8, #0
40023884:	0a000002 	beq	40023894 <CyU3PI2cReceiveBytes+0x178>
40023888:	e1b00007 	movs	r0, r7
4002388c:	e2477001 	sub	r7, r7, #1
40023890:	1affffcc 	bne	400237c8 <CyU3PI2cReceiveBytes+0xac>
40023894:	e1a00000 	nop			; (mov r0, r0)
40023898:	e358004a 	cmp	r8, #74	; 0x4a
4002389c:	1a000007 	bne	400238c0 <CyU3PI2cReceiveBytes+0x1a4>
400238a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238a4:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
400238a8:	e3190040 	tst	r9, #64	; 0x40
400238ac:	0a000000 	beq	400238b4 <CyU3PI2cReceiveBytes+0x198>
400238b0:	e3a08045 	mov	r8, #69	; 0x45
400238b4:	e3190080 	tst	r9, #128	; 0x80
400238b8:	0a000000 	beq	400238c0 <CyU3PI2cReceiveBytes+0x1a4>
400238bc:	e3a08055 	mov	r8, #85	; 0x55
400238c0:	eb000004 	bl	400238d8 <CyU3PI2cReleaseLock>
400238c4:	e1a00008 	mov	r0, r8
400238c8:	eaffff9d 	b	40023744 <CyU3PI2cReceiveBytes+0x28>
400238cc:	40031380 	.word	0x40031380
400238d0:	4003137c 	.word	0x4003137c
400238d4:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

400238d8 <CyU3PI2cReleaseLock>:
400238d8:	e92d4010 	push	{r4, lr}
400238dc:	e59f0030 	ldr	r0, [pc, #48]	; 40023914 <CyU3PI2cReleaseLock+0x3c>
400238e0:	e5900000 	ldr	r0, [r0]
400238e4:	e3500000 	cmp	r0, #0
400238e8:	1a000001 	bne	400238f4 <CyU3PI2cReleaseLock+0x1c>
400238ec:	e3a00044 	mov	r0, #68	; 0x44
400238f0:	e8bd8010 	pop	{r4, pc}
400238f4:	e59f001c 	ldr	r0, [pc, #28]	; 40023918 <CyU3PI2cReleaseLock+0x40>
400238f8:	ebff9a16 	bl	4000a158 <_txe_mutex_put>
400238fc:	e3500000 	cmp	r0, #0
40023900:	0a000001 	beq	4002390c <CyU3PI2cReleaseLock+0x34>
40023904:	e3a0001d 	mov	r0, #29
40023908:	eafffff8 	b	400238f0 <CyU3PI2cReleaseLock+0x18>
4002390c:	e3a00000 	mov	r0, #0
40023910:	eafffff6 	b	400238f0 <CyU3PI2cReleaseLock+0x18>
40023914:	40031384 	.word	0x40031384
40023918:	400332d4 	.word	0x400332d4

Disassembly of section i.CyU3PI2cSetConfig:

4002391c <CyU3PI2cSetConfig>:
4002391c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023920:	e1a04000 	mov	r4, r0
40023924:	e1a05001 	mov	r5, r1
40023928:	e59f01e0 	ldr	r0, [pc, #480]	; 40023b10 <CyU3PI2cSetConfig+0x1f4>
4002392c:	e5900000 	ldr	r0, [r0]
40023930:	e3500000 	cmp	r0, #0
40023934:	1a000001 	bne	40023940 <CyU3PI2cSetConfig+0x24>
40023938:	e3a00042 	mov	r0, #66	; 0x42
4002393c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023940:	e3540000 	cmp	r4, #0
40023944:	1a000001 	bne	40023950 <CyU3PI2cSetConfig+0x34>
40023948:	e3a00041 	mov	r0, #65	; 0x41
4002394c:	eafffffa 	b	4002393c <CyU3PI2cSetConfig+0x20>
40023950:	e5940004 	ldr	r0, [r4, #4]
40023954:	e3500000 	cmp	r0, #0
40023958:	1a000003 	bne	4002396c <CyU3PI2cSetConfig+0x50>
4002395c:	e3550000 	cmp	r5, #0
40023960:	0a000001 	beq	4002396c <CyU3PI2cSetConfig+0x50>
40023964:	e3a00040 	mov	r0, #64	; 0x40
40023968:	eafffff3 	b	4002393c <CyU3PI2cSetConfig+0x20>
4002396c:	ebfffeda 	bl	400234dc <CyU3PI2cGetLock>
40023970:	e1a06000 	mov	r6, r0
40023974:	e3560000 	cmp	r6, #0
40023978:	0a000001 	beq	40023984 <CyU3PI2cSetConfig+0x68>
4002397c:	e1a00006 	mov	r0, r6
40023980:	eaffffed 	b	4002393c <CyU3PI2cSetConfig+0x20>
40023984:	e3a00000 	mov	r0, #0
40023988:	e59f1184 	ldr	r1, [pc, #388]	; 40023b14 <CyU3PI2cSetConfig+0x1f8>
4002398c:	e5810000 	str	r0, [r1]
40023990:	e5940000 	ldr	r0, [r4]
40023994:	ebffc0ef 	bl	40013d58 <CyU3PI2cSetClock>
40023998:	e1a06000 	mov	r6, r0
4002399c:	e3560000 	cmp	r6, #0
400239a0:	1a00000e 	bne	400239e0 <CyU3PI2cSetConfig+0xc4>
400239a4:	e3a00206 	mov	r0, #1610612736	; 0x60000000
400239a8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400239ac:	e5810400 	str	r0, [r1, #1024]	; 0x400
400239b0:	e1e07741 	mvn	r7, r1, asr #14
400239b4:	ea000004 	b	400239cc <CyU3PI2cSetConfig+0xb0>
400239b8:	e1b00007 	movs	r0, r7
400239bc:	e2477001 	sub	r7, r7, #1
400239c0:	1a000001 	bne	400239cc <CyU3PI2cSetConfig+0xb0>
400239c4:	e3a06054 	mov	r6, #84	; 0x54
400239c8:	ea000003 	b	400239dc <CyU3PI2cSetConfig+0xc0>
400239cc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239d0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239d4:	e3100008 	tst	r0, #8
400239d8:	0afffff6 	beq	400239b8 <CyU3PI2cSetConfig+0x9c>
400239dc:	e1a00000 	nop			; (mov r0, r0)
400239e0:	e3560000 	cmp	r6, #0
400239e4:	1a00000b 	bne	40023a18 <CyU3PI2cSetConfig+0xfc>
400239e8:	e59f7128 	ldr	r7, [pc, #296]	; 40023b18 <CyU3PI2cSetConfig+0x1fc>
400239ec:	ea000004 	b	40023a04 <CyU3PI2cSetConfig+0xe8>
400239f0:	e1b00007 	movs	r0, r7
400239f4:	e2477001 	sub	r7, r7, #1
400239f8:	1a000001 	bne	40023a04 <CyU3PI2cSetConfig+0xe8>
400239fc:	e3a06054 	mov	r6, #84	; 0x54
40023a00:	ea000003 	b	40023a14 <CyU3PI2cSetConfig+0xf8>
40023a04:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a08:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a0c:	e3100002 	tst	r0, #2
40023a10:	1afffff6 	bne	400239f0 <CyU3PI2cSetConfig+0xd4>
40023a14:	e1a00000 	nop			; (mov r0, r0)
40023a18:	e3560000 	cmp	r6, #0
40023a1c:	0a000002 	beq	40023a2c <CyU3PI2cSetConfig+0x110>
40023a20:	ebffffac 	bl	400238d8 <CyU3PI2cReleaseLock>
40023a24:	e1a00006 	mov	r0, r6
40023a28:	eaffffc3 	b	4002393c <CyU3PI2cSetConfig+0x20>
40023a2c:	e3a00000 	mov	r0, #0
40023a30:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023a34:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023a38:	e3a06000 	mov	r6, #0
40023a3c:	e5940000 	ldr	r0, [r4]
40023a40:	e59f10d4 	ldr	r1, [pc, #212]	; 40023b1c <CyU3PI2cSetConfig+0x200>
40023a44:	e1500001 	cmp	r0, r1
40023a48:	8a000000 	bhi	40023a50 <CyU3PI2cSetConfig+0x134>
40023a4c:	e3a06004 	mov	r6, #4
40023a50:	e5940004 	ldr	r0, [r4, #4]
40023a54:	e3500000 	cmp	r0, #0
40023a58:	0a000007 	beq	40023a7c <CyU3PI2cSetConfig+0x160>
40023a5c:	e3866001 	orr	r6, r6, #1
40023a60:	e3a00001 	mov	r0, #1
40023a64:	e59f10b4 	ldr	r1, [pc, #180]	; 40023b20 <CyU3PI2cSetConfig+0x204>
40023a68:	e5810000 	str	r0, [r1]
40023a6c:	e1d400bc 	ldrh	r0, [r4, #12]
40023a70:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023a74:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023a78:	ea000005 	b	40023a94 <CyU3PI2cSetConfig+0x178>
40023a7c:	e3a00000 	mov	r0, #0
40023a80:	e59f1098 	ldr	r1, [pc, #152]	; 40023b20 <CyU3PI2cSetConfig+0x204>
40023a84:	e5810000 	str	r0, [r1]
40023a88:	e59f0094 	ldr	r0, [pc, #148]	; 40023b24 <CyU3PI2cSetConfig+0x208>
40023a8c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023a90:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023a94:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a98:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023a9c:	e59f0084 	ldr	r0, [pc, #132]	; 40023b28 <CyU3PI2cSetConfig+0x20c>
40023aa0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023aa4:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023aa8:	e5940008 	ldr	r0, [r4, #8]
40023aac:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023ab0:	e3e00000 	mvn	r0, #0
40023ab4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023ab8:	e1a00005 	mov	r0, r5
40023abc:	eb0000a8 	bl	40023d64 <CyU3PRegisterI2cCallBack>
40023ac0:	e3550000 	cmp	r5, #0
40023ac4:	0a000003 	beq	40023ad8 <CyU3PI2cSetConfig+0x1bc>
40023ac8:	e59f005c 	ldr	r0, [pc, #92]	; 40023b2c <CyU3PI2cSetConfig+0x210>
40023acc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ad0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023ad4:	ea000002 	b	40023ae4 <CyU3PI2cSetConfig+0x1c8>
40023ad8:	e3a00000 	mov	r0, #0
40023adc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ae0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023ae4:	e3a00001 	mov	r0, #1
40023ae8:	e59f1040 	ldr	r1, [pc, #64]	; 40023b30 <CyU3PI2cSetConfig+0x214>
40023aec:	e5810000 	str	r0, [r1]
40023af0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023af4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023af8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023afc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b00:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023b04:	ebffff73 	bl	400238d8 <CyU3PI2cReleaseLock>
40023b08:	e3a00000 	mov	r0, #0
40023b0c:	eaffff8a 	b	4002393c <CyU3PI2cSetConfig+0x20>
40023b10:	40031384 	.word	0x40031384
40023b14:	4003138c 	.word	0x4003138c
40023b18:	00007fff 	.word	0x00007fff
40023b1c:	000186a0 	.word	0x000186a0
40023b20:	4003137c 	.word	0x4003137c
40023b24:	0000ffff 	.word	0x0000ffff
40023b28:	00000502 	.word	0x00000502
40023b2c:	000001c9 	.word	0x000001c9
40023b30:	40031380 	.word	0x40031380

Disassembly of section i.CyU3PI2cTransmitBytes:

40023b34 <CyU3PI2cTransmitBytes>:
40023b34:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023b38:	e1a04000 	mov	r4, r0
40023b3c:	e1a05001 	mov	r5, r1
40023b40:	e1a06002 	mov	r6, r2
40023b44:	e59f020c 	ldr	r0, [pc, #524]	; 40023d58 <CyU3PI2cTransmitBytes+0x224>
40023b48:	e5900000 	ldr	r0, [r0]
40023b4c:	e3500000 	cmp	r0, #0
40023b50:	1a000002 	bne	40023b60 <CyU3PI2cTransmitBytes+0x2c>
40023b54:	e3a00044 	mov	r0, #68	; 0x44
40023b58:	e28dd010 	add	sp, sp, #16
40023b5c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023b60:	e59f01f4 	ldr	r0, [pc, #500]	; 40023d5c <CyU3PI2cTransmitBytes+0x228>
40023b64:	e5900000 	ldr	r0, [r0]
40023b68:	e3500000 	cmp	r0, #0
40023b6c:	0a000001 	beq	40023b78 <CyU3PI2cTransmitBytes+0x44>
40023b70:	e3a00044 	mov	r0, #68	; 0x44
40023b74:	eafffff7 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023b78:	e3550000 	cmp	r5, #0
40023b7c:	0a000001 	beq	40023b88 <CyU3PI2cTransmitBytes+0x54>
40023b80:	e3540000 	cmp	r4, #0
40023b84:	1a000001 	bne	40023b90 <CyU3PI2cTransmitBytes+0x5c>
40023b88:	e3a00041 	mov	r0, #65	; 0x41
40023b8c:	eafffff1 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023b90:	e5d40008 	ldrb	r0, [r4, #8]
40023b94:	e3500000 	cmp	r0, #0
40023b98:	0a000002 	beq	40023ba8 <CyU3PI2cTransmitBytes+0x74>
40023b9c:	e5d40008 	ldrb	r0, [r4, #8]
40023ba0:	e3500008 	cmp	r0, #8
40023ba4:	da000001 	ble	40023bb0 <CyU3PI2cTransmitBytes+0x7c>
40023ba8:	e3a00040 	mov	r0, #64	; 0x40
40023bac:	eaffffe9 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023bb0:	e3560000 	cmp	r6, #0
40023bb4:	1a000001 	bne	40023bc0 <CyU3PI2cTransmitBytes+0x8c>
40023bb8:	e3a00000 	mov	r0, #0
40023bbc:	eaffffe5 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023bc0:	ebfffe45 	bl	400234dc <CyU3PI2cGetLock>
40023bc4:	e1a07000 	mov	r7, r0
40023bc8:	e3570000 	cmp	r7, #0
40023bcc:	0a000001 	beq	40023bd8 <CyU3PI2cTransmitBytes+0xa4>
40023bd0:	e1a00007 	mov	r0, r7
40023bd4:	eaffffdf 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023bd8:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023bdc:	e1a00000 	nop			; (mov r0, r0)
40023be0:	e3a07000 	mov	r7, #0
40023be4:	e5d50000 	ldrb	r0, [r5]
40023be8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bec:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023bf0:	e3a02000 	mov	r2, #0
40023bf4:	e1a01006 	mov	r1, r6
40023bf8:	e1a00004 	mov	r0, r4
40023bfc:	eb00005c 	bl	40023d74 <MyI2cSendCommand>
40023c00:	e1a07000 	mov	r7, r0
40023c04:	e3570000 	cmp	r7, #0
40023c08:	0a000000 	beq	40023c10 <CyU3PI2cTransmitBytes+0xdc>
40023c0c:	ea000043 	b	40023d20 <CyU3PI2cTransmitBytes+0x1ec>
40023c10:	e3a08001 	mov	r8, #1
40023c14:	ea000018 	b	40023c7c <CyU3PI2cTransmitBytes+0x148>
40023c18:	e59f9140 	ldr	r9, [pc, #320]	; 40023d60 <CyU3PI2cTransmitBytes+0x22c>
40023c1c:	ea000004 	b	40023c34 <CyU3PI2cTransmitBytes+0x100>
40023c20:	e1b00009 	movs	r0, r9
40023c24:	e2499001 	sub	r9, r9, #1
40023c28:	1a000001 	bne	40023c34 <CyU3PI2cTransmitBytes+0x100>
40023c2c:	e3a07055 	mov	r7, #85	; 0x55
40023c30:	ea000004 	b	40023c48 <CyU3PI2cTransmitBytes+0x114>
40023c34:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c38:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c3c:	e38a1010 	orr	r1, sl, #16
40023c40:	e1100001 	tst	r0, r1
40023c44:	0afffff5 	beq	40023c20 <CyU3PI2cTransmitBytes+0xec>
40023c48:	e1a00000 	nop			; (mov r0, r0)
40023c4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c50:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c54:	e110000a 	tst	r0, sl
40023c58:	0a000000 	beq	40023c60 <CyU3PI2cTransmitBytes+0x12c>
40023c5c:	e3a0704a 	mov	r7, #74	; 0x4a
40023c60:	e3570000 	cmp	r7, #0
40023c64:	0a000000 	beq	40023c6c <CyU3PI2cTransmitBytes+0x138>
40023c68:	ea000005 	b	40023c84 <CyU3PI2cTransmitBytes+0x150>
40023c6c:	e7d50008 	ldrb	r0, [r5, r8]
40023c70:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c74:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023c78:	e2888001 	add	r8, r8, #1
40023c7c:	e1580006 	cmp	r8, r6
40023c80:	3affffe4 	bcc	40023c18 <CyU3PI2cTransmitBytes+0xe4>
40023c84:	e1a00000 	nop			; (mov r0, r0)
40023c88:	e1560008 	cmp	r6, r8
40023c8c:	1a000013 	bne	40023ce0 <CyU3PI2cTransmitBytes+0x1ac>
40023c90:	e3570000 	cmp	r7, #0
40023c94:	1a000011 	bne	40023ce0 <CyU3PI2cTransmitBytes+0x1ac>
40023c98:	e59f90c0 	ldr	r9, [pc, #192]	; 40023d60 <CyU3PI2cTransmitBytes+0x22c>
40023c9c:	ea000004 	b	40023cb4 <CyU3PI2cTransmitBytes+0x180>
40023ca0:	e1b00009 	movs	r0, r9
40023ca4:	e2499001 	sub	r9, r9, #1
40023ca8:	1a000001 	bne	40023cb4 <CyU3PI2cTransmitBytes+0x180>
40023cac:	e3a07055 	mov	r7, #85	; 0x55
40023cb0:	ea000004 	b	40023cc8 <CyU3PI2cTransmitBytes+0x194>
40023cb4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023cb8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023cbc:	e38a1008 	orr	r1, sl, #8
40023cc0:	e1100001 	tst	r0, r1
40023cc4:	0afffff5 	beq	40023ca0 <CyU3PI2cTransmitBytes+0x16c>
40023cc8:	e1a00000 	nop			; (mov r0, r0)
40023ccc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023cd0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023cd4:	e110000a 	tst	r0, sl
40023cd8:	0a000000 	beq	40023ce0 <CyU3PI2cTransmitBytes+0x1ac>
40023cdc:	e3a0704a 	mov	r7, #74	; 0x4a
40023ce0:	e3570000 	cmp	r7, #0
40023ce4:	0a000006 	beq	40023d04 <CyU3PI2cTransmitBytes+0x1d0>
40023ce8:	e3a00001 	mov	r0, #1
40023cec:	ebfffd97 	bl	40023350 <CyU3PI2cErrorRecovery>
40023cf0:	e3500000 	cmp	r0, #0
40023cf4:	0a000002 	beq	40023d04 <CyU3PI2cTransmitBytes+0x1d0>
40023cf8:	ebfffef6 	bl	400238d8 <CyU3PI2cReleaseLock>
40023cfc:	e3a00054 	mov	r0, #84	; 0x54
40023d00:	eaffff94 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023d04:	e3570000 	cmp	r7, #0
40023d08:	0a000004 	beq	40023d20 <CyU3PI2cTransmitBytes+0x1ec>
40023d0c:	e59d000c 	ldr	r0, [sp, #12]
40023d10:	e2401001 	sub	r1, r0, #1
40023d14:	e3500000 	cmp	r0, #0
40023d18:	e58d100c 	str	r1, [sp, #12]
40023d1c:	1affffaf 	bne	40023be0 <CyU3PI2cTransmitBytes+0xac>
40023d20:	e1a00000 	nop			; (mov r0, r0)
40023d24:	e357004a 	cmp	r7, #74	; 0x4a
40023d28:	1a000007 	bne	40023d4c <CyU3PI2cTransmitBytes+0x218>
40023d2c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023d30:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023d34:	e31b0040 	tst	fp, #64	; 0x40
40023d38:	0a000000 	beq	40023d40 <CyU3PI2cTransmitBytes+0x20c>
40023d3c:	e3a07045 	mov	r7, #69	; 0x45
40023d40:	e31b0080 	tst	fp, #128	; 0x80
40023d44:	0a000000 	beq	40023d4c <CyU3PI2cTransmitBytes+0x218>
40023d48:	e3a07055 	mov	r7, #85	; 0x55
40023d4c:	ebfffee1 	bl	400238d8 <CyU3PI2cReleaseLock>
40023d50:	e1a00007 	mov	r0, r7
40023d54:	eaffff7f 	b	40023b58 <CyU3PI2cTransmitBytes+0x24>
40023d58:	40031380 	.word	0x40031380
40023d5c:	4003137c 	.word	0x4003137c
40023d60:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023d64 <CyU3PRegisterI2cCallBack>:
40023d64:	e59f1004 	ldr	r1, [pc, #4]	; 40023d70 <CyU3PRegisterI2cCallBack+0xc>
40023d68:	e5810000 	str	r0, [r1]
40023d6c:	e12fff1e 	bx	lr
40023d70:	40031388 	.word	0x40031388

Disassembly of section i.MyI2cSendCommand:

40023d74 <MyI2cSendCommand>:
40023d74:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023d78:	e1a04000 	mov	r4, r0
40023d7c:	e1a06001 	mov	r6, r1
40023d80:	e1a07002 	mov	r7, r2
40023d84:	e3a00000 	mov	r0, #0
40023d88:	e59f1108 	ldr	r1, [pc, #264]	; 40023e98 <MyI2cSendCommand+0x124>
40023d8c:	e5810000 	str	r0, [r1]
40023d90:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023d94:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023d98:	e3100202 	tst	r0, #536870912	; 0x20000000
40023d9c:	0a000006 	beq	40023dbc <MyI2cSendCommand+0x48>
40023da0:	e3a00000 	mov	r0, #0
40023da4:	ebfffd69 	bl	40023350 <CyU3PI2cErrorRecovery>
40023da8:	e1a05000 	mov	r5, r0
40023dac:	e3550000 	cmp	r5, #0
40023db0:	0a000001 	beq	40023dbc <MyI2cSendCommand+0x48>
40023db4:	e1a00005 	mov	r0, r5
40023db8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023dbc:	e59f80d8 	ldr	r8, [pc, #216]	; 40023e9c <MyI2cSendCommand+0x128>
40023dc0:	e1a00000 	nop			; (mov r0, r0)
40023dc4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023dc8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023dcc:	e3100203 	tst	r0, #805306368	; 0x30000000
40023dd0:	0a000002 	beq	40023de0 <MyI2cSendCommand+0x6c>
40023dd4:	e1b00008 	movs	r0, r8
40023dd8:	e2488001 	sub	r8, r8, #1
40023ddc:	1afffff8 	bne	40023dc4 <MyI2cSendCommand+0x50>
40023de0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023de4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023de8:	e3100203 	tst	r0, #805306368	; 0x30000000
40023dec:	0a000001 	beq	40023df8 <MyI2cSendCommand+0x84>
40023df0:	e3a00045 	mov	r0, #69	; 0x45
40023df4:	eaffffef 	b	40023db8 <MyI2cSendCommand+0x44>
40023df8:	e3a00000 	mov	r0, #0
40023dfc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e00:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023e04:	e5d42008 	ldrb	r2, [r4, #8]
40023e08:	e1a01004 	mov	r1, r4
40023e0c:	e1a0000d 	mov	r0, sp
40023e10:	ebff7eaf 	bl	400038d4 <CyU3PMemCopy>
40023e14:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e18:	e59d0000 	ldr	r0, [sp]
40023e1c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023e20:	e59d0004 	ldr	r0, [sp, #4]
40023e24:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023e28:	e3a00000 	mov	r0, #0
40023e2c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023e30:	e3e00000 	mvn	r0, #0
40023e34:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023e38:	e3a00d07 	mov	r0, #448	; 0x1c0
40023e3c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023e40:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e44:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023e48:	e1d400ba 	ldrh	r0, [r4, #10]
40023e4c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023e50:	e3570000 	cmp	r7, #0
40023e54:	0a000004 	beq	40023e6c <MyI2cSendCommand+0xf8>
40023e58:	e5d40008 	ldrb	r0, [r4, #8]
40023e5c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023e60:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023e64:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023e68:	ea000003 	b	40023e7c <MyI2cSendCommand+0x108>
40023e6c:	e5d40008 	ldrb	r0, [r4, #8]
40023e70:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023e74:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e78:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023e7c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e80:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023e84:	e3800010 	orr	r0, r0, #16
40023e88:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e8c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023e90:	e3a00000 	mov	r0, #0
40023e94:	eaffffc7 	b	40023db8 <MyI2cSendCommand+0x44>
40023e98:	4003138c 	.word	0x4003138c
40023e9c:	00007fff 	.word	0x00007fff
